{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/rocketchat:tap-i18n/lib/tap_i18n/tap_i18n-common.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/rocketchat:tap-i18n/lib/tap_i18n/tap_i18n-common.coffee","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/rocketchat:tap-i18n/lib/tap_i18n/tap_i18n-common.coffee","passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/rocketchat:tap-i18n/lib/tap_i18n/tap_i18n-common.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/rocketchat:tap-i18n/lib/tap_i18n/tap_i18n-common.coffee"}},"code":"module.export({\n  TAPi18nBase: () => TAPi18nBase\n});\nlet TAPi18next;\nmodule.link(\"../tap_i18next/tap_i18next-1.7.3.js\", {\n  default(v) {\n    TAPi18next = v;\n  }\n\n}, 0);\nlet globals;\nmodule.link(\"./globals\", {\n  globals(v) {\n    globals = v;\n  }\n\n}, 1);\nvar fallback_language;\nfallback_language = globals.fallback_language;\nTAPi18next.init({\n  resStore: {},\n  fallbackLng: globals.fallback_language,\n  useCookie: false\n});\n\nvar TAPi18nBase = function () {\n  class TAPi18nBase extends EventEmitter {\n    constructor() {\n      super();\n      this._fallback_language = fallback_language;\n      this._language_changed_tracker = new Tracker.Dependency();\n      this._loaded_languages = [fallback_language]; // stores the loaded languages, the fallback language is loaded automatically\n\n      this.conf = null; // If conf isn't null we assume that tap:i18n is enabled for the project.\n      // We assume conf is valid, we sterilize and validate it during the build process.\n\n      this.packages = {}; // Stores the packages' package-tap.i18n jsons\n\n      this.languages_names = {}; // Stores languages that we've found languages files for in the project dir.\n      // format:\n      // {\n      //    lang_tag: [lang_name_in_english, lang_name_in_local_language]\n      // }\n\n      this.translations = {}; // Stores the packages/project translations - Server side only\n      // fallback_language translations are not stored here\n\n      if (Meteor.isClient) {\n        Session.set(this._loaded_lang_session_key, null);\n        this._languageSpecificTranslators = {};\n        this._languageSpecificTranslatorsTrackers = {};\n      }\n\n      if (Meteor.isServer) {\n        this.server_translators = {};\n        Meteor.startup(() => {\n          // If tap-i18n is enabled for that project\n          if (this._enabled()) {\n            return this._registerHTTPMethod();\n          }\n        });\n      }\n\n      this.__ = this._getPackageI18nextProxy(globals.project_translations_domain);\n      TAPi18next.setLng(fallback_language);\n    }\n\n    _enable(conf) {\n      // tap:i18n gets enabled for a project once a conf file is set for it.\n      // It can be either a conf object that was set by project-tap.i18n file or\n      // a default conf, which is being added if the project has lang files\n      // (*.i18n.json) but not project-tap.i18n\n      this.conf = conf;\n      return this._onceEnabled();\n    }\n\n    _onceEnabled() {} // The arch specific code can use this for procedures that should be performed once\n    // tap:i18n gets enabled (project conf file is being set)\n\n\n    _enabled() {\n      // read the comment of @conf\n      return this.conf != null;\n    }\n\n    _getPackageDomain(package_name) {\n      return package_name.replace(/:/g, \"-\");\n    }\n\n    addResourceBundle(lang_tag, package_name, translations) {\n      return TAPi18next.addResourceBundle(lang_tag, this._getPackageDomain(package_name), translations);\n    }\n\n    _getSpecificLangTranslator(lang) {\n      var current_lang, translator;\n      current_lang = TAPi18next.lng();\n      translator = null;\n      TAPi18next.setLng(lang, {\n        fixLng: true\n      }, lang_translator => {\n        return translator = lang_translator;\n      }); // Restore i18next lang that had been changed in the process of generating\n      // lang specific translator\n\n      TAPi18next.setLng(current_lang);\n      return translator;\n    }\n\n    _getProjectLanguages() {\n      // Return an array of languages available for the current project\n      if (this._enabled()) {\n        if (_.isArray(this.conf.supported_languages)) {\n          return _.union([this._fallback_language], this.conf.supported_languages);\n        } else {\n          // If supported_languages is null, all the languages we found\n          // translations files to in the project level are considered supported.\n          // We use the @.languages_names array to tell which languages we found\n          // since for every i18n.json file we found in the project level we add\n          // an entry for its language to @.languages_names in the build process.\n          // We also know for certain that when tap-i18n is enabled the fallback\n          // lang is in @.languages_names\n          return _.keys(this.languages_names);\n        }\n      } else {\n        return [this._fallback_language];\n      }\n    }\n\n    getLanguages() {\n      var i, lang_tag, languages, len, ref;\n\n      if (!this._enabled()) {\n        return null;\n      }\n\n      languages = {};\n      ref = this._getProjectLanguages();\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        lang_tag = ref[i];\n        languages[lang_tag] = {\n          name: this.languages_names[lang_tag][1],\n          en: this.languages_names[lang_tag][0]\n        };\n      }\n\n      return languages;\n    }\n\n    _loadLangFileObject(language_tag, data) {\n      var package_keys, package_name, ref, results;\n      results = [];\n\n      for (package_name in data) {\n        package_keys = data[package_name]; // Translations that are added by loadTranslations() have higher priority\n\n        package_keys = _.extend({}, package_keys, ((ref = this._loadTranslations_cache[language_tag]) != null ? ref[package_name] : void 0) || {});\n        results.push(this.addResourceBundle(language_tag, package_name, package_keys));\n      }\n\n      return results;\n    }\n\n    loadTranslations(translations, namespace) {\n      var language_tag, project_languages, results, translation_keys;\n      project_languages = this._getProjectLanguages();\n      results = [];\n\n      for (language_tag in translations) {\n        translation_keys = translations[language_tag];\n\n        if (this._loadTranslations_cache[language_tag] == null) {\n          this._loadTranslations_cache[language_tag] = {};\n        }\n\n        if (this._loadTranslations_cache[language_tag][namespace] == null) {\n          this._loadTranslations_cache[language_tag][namespace] = {};\n        }\n\n        _.extend(this._loadTranslations_cache[language_tag][namespace], translation_keys);\n\n        this.addResourceBundle(language_tag, namespace, translation_keys);\n\n        if (Meteor.isClient && this.getLanguage() === language_tag) {\n          // Retranslate if session language updated\n          results.push(this._language_changed_tracker.changed());\n        } else {\n          results.push(void 0);\n        }\n      }\n\n      return results;\n    }\n\n  }\n\n  ;\n  TAPi18nBase.prototype._loaded_lang_session_key = \"TAPi18n::loaded_lang\";\n  TAPi18nBase.prototype._loadTranslations_cache = {};\n  return TAPi18nBase;\n}.call(this);","map":{"version":3,"sources":["packages/rocketchat:tap-i18n/lib/tap_i18n/tap_i18n-common.coffee"],"names":["module","export","TAPi18nBase","TAPi18next","link","default","v","globals","fallback_language","init","resStore","fallbackLng","useCookie","EventEmitter","constructor","_fallback_language","_language_changed_tracker","Tracker","Dependency","_loaded_languages","conf","packages","languages_names","translations","Meteor","isClient","Session","set","_loaded_lang_session_key","_languageSpecificTranslators","_languageSpecificTranslatorsTrackers","isServer","server_translators","startup","_enabled","_registerHTTPMethod","__","_getPackageI18nextProxy","project_translations_domain","setLng","_enable","_onceEnabled","_getPackageDomain","package_name","replace","addResourceBundle","lang_tag","_getSpecificLangTranslator","lang","current_lang","translator","lng","fixLng","lang_translator","_getProjectLanguages","_","isArray","supported_languages","union","keys","getLanguages","i","languages","len","ref","length","name","en","_loadLangFileObject","language_tag","data","package_keys","results","extend","_loadTranslations_cache","push","loadTranslations","namespace","project_languages","translation_keys","getLanguage","changed","prototype","call"],"mappings":"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","sourcesContent":["var fallback_language;\n\nimport TAPi18next from '../tap_i18next/tap_i18next-1.7.3.js';\n\nimport {\n  globals\n} from './globals';\n\nfallback_language = globals.fallback_language;\n\nTAPi18next.init({\n  resStore: {},\n  fallbackLng: globals.fallback_language,\n  useCookie: false\n});\n\nexport var TAPi18nBase = (function() {\n  class TAPi18nBase extends EventEmitter {\n    constructor() {\n      super();\n      this._fallback_language = fallback_language;\n      this._language_changed_tracker = new Tracker.Dependency;\n      this._loaded_languages = [fallback_language]; // stores the loaded languages, the fallback language is loaded automatically\n      this.conf = null; // If conf isn't null we assume that tap:i18n is enabled for the project.\n      // We assume conf is valid, we sterilize and validate it during the build process.\n      this.packages = {}; // Stores the packages' package-tap.i18n jsons\n      this.languages_names = {}; // Stores languages that we've found languages files for in the project dir.\n      // format:\n      // {\n      //    lang_tag: [lang_name_in_english, lang_name_in_local_language]\n      // }\n      this.translations = {}; // Stores the packages/project translations - Server side only\n      // fallback_language translations are not stored here\n      if (Meteor.isClient) {\n        Session.set(this._loaded_lang_session_key, null);\n        this._languageSpecificTranslators = {};\n        this._languageSpecificTranslatorsTrackers = {};\n      }\n      if (Meteor.isServer) {\n        this.server_translators = {};\n        Meteor.startup(() => {\n          // If tap-i18n is enabled for that project\n          if (this._enabled()) {\n            return this._registerHTTPMethod();\n          }\n        });\n      }\n      this.__ = this._getPackageI18nextProxy(globals.project_translations_domain);\n      TAPi18next.setLng(fallback_language);\n    }\n\n    _enable(conf) {\n      // tap:i18n gets enabled for a project once a conf file is set for it.\n      // It can be either a conf object that was set by project-tap.i18n file or\n      // a default conf, which is being added if the project has lang files\n      // (*.i18n.json) but not project-tap.i18n\n      this.conf = conf;\n      return this._onceEnabled();\n    }\n\n    _onceEnabled() {}\n\n    // The arch specific code can use this for procedures that should be performed once\n    // tap:i18n gets enabled (project conf file is being set)\n    _enabled() {\n      // read the comment of @conf\n      return this.conf != null;\n    }\n\n    _getPackageDomain(package_name) {\n      return package_name.replace(/:/g, \"-\");\n    }\n\n    addResourceBundle(lang_tag, package_name, translations) {\n      return TAPi18next.addResourceBundle(lang_tag, this._getPackageDomain(package_name), translations);\n    }\n\n    _getSpecificLangTranslator(lang) {\n      var current_lang, translator;\n      current_lang = TAPi18next.lng();\n      translator = null;\n      TAPi18next.setLng(lang, {\n        fixLng: true\n      }, (lang_translator) => {\n        return translator = lang_translator;\n      });\n      // Restore i18next lang that had been changed in the process of generating\n      // lang specific translator\n      TAPi18next.setLng(current_lang);\n      return translator;\n    }\n\n    _getProjectLanguages() {\n      // Return an array of languages available for the current project\n      if (this._enabled()) {\n        if (_.isArray(this.conf.supported_languages)) {\n          return _.union([this._fallback_language], this.conf.supported_languages);\n        } else {\n          // If supported_languages is null, all the languages we found\n          // translations files to in the project level are considered supported.\n          // We use the @.languages_names array to tell which languages we found\n          // since for every i18n.json file we found in the project level we add\n          // an entry for its language to @.languages_names in the build process.\n\n          // We also know for certain that when tap-i18n is enabled the fallback\n          // lang is in @.languages_names\n          return _.keys(this.languages_names);\n        }\n      } else {\n        return [this._fallback_language];\n      }\n    }\n\n    getLanguages() {\n      var i, lang_tag, languages, len, ref;\n      if (!this._enabled()) {\n        return null;\n      }\n      languages = {};\n      ref = this._getProjectLanguages();\n      for (i = 0, len = ref.length; i < len; i++) {\n        lang_tag = ref[i];\n        languages[lang_tag] = {\n          name: this.languages_names[lang_tag][1],\n          en: this.languages_names[lang_tag][0]\n        };\n      }\n      return languages;\n    }\n\n    _loadLangFileObject(language_tag, data) {\n      var package_keys, package_name, ref, results;\n      results = [];\n      for (package_name in data) {\n        package_keys = data[package_name];\n        // Translations that are added by loadTranslations() have higher priority\n        package_keys = _.extend({}, package_keys, ((ref = this._loadTranslations_cache[language_tag]) != null ? ref[package_name] : void 0) || {});\n        results.push(this.addResourceBundle(language_tag, package_name, package_keys));\n      }\n      return results;\n    }\n\n    loadTranslations(translations, namespace) {\n      var language_tag, project_languages, results, translation_keys;\n      project_languages = this._getProjectLanguages();\n      results = [];\n      for (language_tag in translations) {\n        translation_keys = translations[language_tag];\n        if (this._loadTranslations_cache[language_tag] == null) {\n          this._loadTranslations_cache[language_tag] = {};\n        }\n        if (this._loadTranslations_cache[language_tag][namespace] == null) {\n          this._loadTranslations_cache[language_tag][namespace] = {};\n        }\n        _.extend(this._loadTranslations_cache[language_tag][namespace], translation_keys);\n        this.addResourceBundle(language_tag, namespace, translation_keys);\n        if (Meteor.isClient && this.getLanguage() === language_tag) {\n          // Retranslate if session language updated\n          results.push(this._language_changed_tracker.changed());\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    }\n\n  };\n\n  TAPi18nBase.prototype._loaded_lang_session_key = \"TAPi18n::loaded_lang\";\n\n  TAPi18nBase.prototype._loadTranslations_cache = {};\n\n  return TAPi18nBase;\n\n}).call(this);\n"]},"sourceType":"script","hash":"29d5c8706a19277361a9666eb04c7fa1db509097"}
