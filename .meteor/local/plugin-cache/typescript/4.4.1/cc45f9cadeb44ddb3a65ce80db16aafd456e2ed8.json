{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/livechat.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/rooms/roomTypes/livechat.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/livechat.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/livechat.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/livechat.ts"],"names":[],"mappings":"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","sourcesContent":["import { Session } from 'meteor/session';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { LivechatInquiry } from '../../../../app/livechat/client/collections/LivechatInquiry';\nimport { ChatRoom, ChatSubscription } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/lib/getAvatarURL';\nimport type { IOmnichannelRoom } from '../../../../definition/IRoom';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast, ValueOf } from '../../../../definition/utils';\nimport { getLivechatRoomType } from '../../../../lib/rooms/roomTypes/livechat';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const LivechatRoomType = getLivechatRoomType(roomCoordinator);\n\nroomCoordinator.add(LivechatRoomType, {\n\tallowRoomSettingChange(_room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tallowMemberAction(_room, action) {\n\t\treturn ([RoomMemberActions.INVITE, RoomMemberActions.JOIN] as Array<ValueOf<typeof RoomMemberActions>>).includes(action);\n\t},\n\n\troomName(room) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\topenCustomProfileTab(instance, room, username) {\n\t\tconst omniRoom = room as IOmnichannelRoom;\n\t\tif (!omniRoom?.v || (omniRoom.v as any).username !== username) {\n\t\t\treturn false;\n\t\t}\n\n\t\tinstance.tabBar.openUserInfo();\n\t\treturn true;\n\t},\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t},\n\n\tcondition() {\n\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t},\n\n\tgetAvatarPath(room) {\n\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t},\n\n\tgetUserStatus(rid) {\n\t\tconst room = Session.get(`roomData${rid}`);\n\t\tif (room) {\n\t\t\treturn room.v && room.v.status;\n\t\t}\n\t\tconst inquiry = LivechatInquiry.findOne({ rid });\n\t\treturn inquiry?.v?.status;\n\t},\n\n\tfindRoom(identifier) {\n\t\treturn ChatRoom.findOne({ _id: identifier });\n\t},\n\n\tisLivechatRoom() {\n\t\treturn true;\n\t},\n\n\tcanSendMessage(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1 } });\n\t\treturn Boolean(room?.open);\n\t},\n\n\treadOnly(rid, _user) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1, servedBy: 1 } });\n\t\tif (!room || !room.open) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\treturn !subscription;\n\t},\n} as AtLeast<IRoomTypeClientDirectives, 'roomName'>);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/livechat.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/rooms/roomTypes/livechat.ts"}},"code":"module.export({\n  LivechatRoomType: () => LivechatRoomType\n});\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 0);\nlet hasPermission;\nmodule.link(\"../../../../app/authorization/client\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 1);\nlet LivechatInquiry;\nmodule.link(\"../../../../app/livechat/client/collections/LivechatInquiry\", {\n  LivechatInquiry(v) {\n    LivechatInquiry = v;\n  }\n\n}, 2);\nlet ChatRoom, ChatSubscription;\nmodule.link(\"../../../../app/models/client\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  },\n\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet getAvatarURL;\nmodule.link(\"../../../../app/utils/lib/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n\n}, 5);\nlet RoomSettingsEnum, RoomMemberActions, UiTextContext;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n\n  UiTextContext(v) {\n    UiTextContext = v;\n  }\n\n}, 6);\nlet getLivechatRoomType;\nmodule.link(\"../../../../lib/rooms/roomTypes/livechat\", {\n  getLivechatRoomType(v) {\n    getLivechatRoomType = v;\n  }\n\n}, 7);\nlet roomCoordinator;\nmodule.link(\"../roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 8);\nconst LivechatRoomType = getLivechatRoomType(roomCoordinator);\nroomCoordinator.add(LivechatRoomType, {\n  allowRoomSettingChange(_room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n\n      default:\n        return true;\n    }\n  },\n\n  allowMemberAction(_room, action) {\n    return [RoomMemberActions.INVITE, RoomMemberActions.JOIN].includes(action);\n  },\n\n  roomName(room) {\n    return room.name || room.fname || room.label;\n  },\n\n  openCustomProfileTab(instance, room, username) {\n    const omniRoom = room;\n\n    if (!(omniRoom !== null && omniRoom !== void 0 && omniRoom.v) || omniRoom.v.username !== username) {\n      return false;\n    }\n\n    instance.tabBar.openUserInfo();\n    return true;\n  },\n\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Livechat_Warning';\n\n      case UiTextContext.LEAVE_WARNING:\n        return 'Hide_Livechat_Warning';\n\n      default:\n        return '';\n    }\n  },\n\n  condition() {\n    return settings.get('Livechat_enabled') && hasPermission('view-l-room');\n  },\n\n  getAvatarPath(room) {\n    return getAvatarURL({\n      username: \"@\".concat(this.roomName(room))\n    }) || '';\n  },\n\n  getUserStatus(rid) {\n    var _inquiry$v;\n\n    const room = Session.get(\"roomData\".concat(rid));\n\n    if (room) {\n      return room.v && room.v.status;\n    }\n\n    const inquiry = LivechatInquiry.findOne({\n      rid\n    });\n    return inquiry === null || inquiry === void 0 ? void 0 : (_inquiry$v = inquiry.v) === null || _inquiry$v === void 0 ? void 0 : _inquiry$v.status;\n  },\n\n  findRoom(identifier) {\n    return ChatRoom.findOne({\n      _id: identifier\n    });\n  },\n\n  isLivechatRoom() {\n    return true;\n  },\n\n  canSendMessage(rid) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        open: 1\n      }\n    });\n    return Boolean(room === null || room === void 0 ? void 0 : room.open);\n  },\n\n  readOnly(rid, _user) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        open: 1,\n        servedBy: 1\n      }\n    });\n\n    if (!room || !room.open) {\n      return true;\n    }\n\n    const subscription = ChatSubscription.findOne({\n      rid\n    });\n    return !subscription;\n  }\n\n});","map":{"version":3,"sources":["client/lib/rooms/roomTypes/livechat.ts"],"names":[],"mappings":"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","sourcesContent":["import { Session } from 'meteor/session';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { LivechatInquiry } from '../../../../app/livechat/client/collections/LivechatInquiry';\nimport { ChatRoom, ChatSubscription } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/lib/getAvatarURL';\nimport type { IOmnichannelRoom } from '../../../../definition/IRoom';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast, ValueOf } from '../../../../definition/utils';\nimport { getLivechatRoomType } from '../../../../lib/rooms/roomTypes/livechat';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const LivechatRoomType = getLivechatRoomType(roomCoordinator);\n\nroomCoordinator.add(LivechatRoomType, {\n\tallowRoomSettingChange(_room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tallowMemberAction(_room, action) {\n\t\treturn ([RoomMemberActions.INVITE, RoomMemberActions.JOIN] as Array<ValueOf<typeof RoomMemberActions>>).includes(action);\n\t},\n\n\troomName(room) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\topenCustomProfileTab(instance, room, username) {\n\t\tconst omniRoom = room as IOmnichannelRoom;\n\t\tif (!omniRoom?.v || (omniRoom.v as any).username !== username) {\n\t\t\treturn false;\n\t\t}\n\n\t\tinstance.tabBar.openUserInfo();\n\t\treturn true;\n\t},\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t},\n\n\tcondition() {\n\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t},\n\n\tgetAvatarPath(room) {\n\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t},\n\n\tgetUserStatus(rid) {\n\t\tconst room = Session.get(`roomData${rid}`);\n\t\tif (room) {\n\t\t\treturn room.v && room.v.status;\n\t\t}\n\t\tconst inquiry = LivechatInquiry.findOne({ rid });\n\t\treturn inquiry?.v?.status;\n\t},\n\n\tfindRoom(identifier) {\n\t\treturn ChatRoom.findOne({ _id: identifier });\n\t},\n\n\tisLivechatRoom() {\n\t\treturn true;\n\t},\n\n\tcanSendMessage(rid) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1 } });\n\t\treturn Boolean(room?.open);\n\t},\n\n\treadOnly(rid, _user) {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1, servedBy: 1 } });\n\t\tif (!room || !room.open) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\treturn !subscription;\n\t},\n} as AtLeast<IRoomTypeClientDirectives, 'roomName'>);\n"],"sourceRoot":""},"sourceType":"module","hash":"cc45f9cadeb44ddb3a65ce80db16aafd456e2ed8"}
