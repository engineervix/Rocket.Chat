{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/minimongo/query.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/minimongo/query.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/minimongo/query.ts","inputSourceMap":{"version":3,"file":"client/lib/minimongo/query.ts","sourceRoot":"","sources":["client/lib/minimongo/query.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { compareBSONValues, getBSONType } from './bson';\nimport { equals, flatSome, isObject, some } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport { BSONType, FieldExpression, Query } from './types';\n\nconst isArrayOfFields = <T>(values: unknown[]): values is T[] =>\n\tvalues.every((value) => ['number', 'string', 'symbol'].includes(typeof value));\n\nconst $in = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tlet index: Record<T, T> | null = null;\n\tif (isArrayOfFields<T>(operand)) {\n\t\tindex = {} as Record<T, T>;\n\t\tfor (const operandElement of operand) {\n\t\t\tindex[operandElement] = operandElement;\n\t\t}\n\t}\n\n\treturn (value: T): boolean =>\n\t\tsome(value, (x) => {\n\t\t\tif (typeof x === 'string' && index !== null) {\n\t\t\t\treturn !!index[x];\n\t\t\t}\n\n\t\t\treturn operand.some((operandElement) => equals(operandElement, x));\n\t\t});\n};\n\nconst $nin = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tconst isIn = $in(operand, undefined);\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !isIn(value);\n\t};\n};\n\nconst $all =\n\t<T>(operand: T[], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn operand.every((operandElement) => value.some((valueElement) => equals(operandElement, valueElement)));\n\t};\n\nconst $lt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) < 0);\n\nconst $lte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) <= 0);\n\nconst $gt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) > 0);\n\nconst $gte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) >= 0);\n\nconst $ne =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\t!some(value, (x) => equals(x, operand));\n\nconst $exists =\n\t<T>(operand: boolean, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\toperand === (value !== undefined);\n\nconst $mod =\n\t<T>([divisor, remainder]: [number, number], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => Number(x) % divisor === remainder);\n\nconst $size =\n\t<T>(operand: number, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tArray.isArray(value) && operand === value.length;\n\nconst $type =\n\t<T>(operand: BSONType, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => getBSONType(x) === operand);\n\t};\n\nconst $regex = <T>(operand: string | RegExp, options: string): ((value: T) => boolean) => {\n\tlet regex: RegExp;\n\n\tif (options !== undefined) {\n\t\tconst regexSource = operand instanceof RegExp ? operand.source : operand;\n\t\tregex = new RegExp(regexSource, options);\n\t} else if (!(operand instanceof RegExp)) {\n\t\tregex = new RegExp(operand);\n\t}\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n};\n\nconst $elemMatch = <T>(operand: Query<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileDocumentSelector(operand);\n\n\treturn (value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn value.some((x) => matcher(x));\n\t};\n};\n\nconst $not = <T>(operand: FieldExpression<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileValueSelector(operand);\n\treturn (value: T): boolean => !matcher(value);\n};\n\nconst dummyOperator =\n\t<T>(_operand: unknown, _options: undefined): ((value: T) => boolean) =>\n\t(_value: T): boolean =>\n\t\ttrue;\n\nconst $options = dummyOperator;\nconst $near = dummyOperator;\nconst $geoIntersects = dummyOperator;\n\nconst valueOperators = {\n\t$in,\n\t$nin,\n\t$all,\n\t$lt,\n\t$lte,\n\t$gt,\n\t$gte,\n\t$ne,\n\t$exists,\n\t$mod,\n\t$size,\n\t$type,\n\t$regex,\n\t$elemMatch,\n\t$not,\n\t$options,\n\t$near,\n\t$geoIntersects,\n} as const;\n\nconst $and = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => f(doc));\n};\n\nconst $or = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.some((f) => f(doc));\n};\n\nconst $nor = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => !f(doc));\n};\n\nconst $where = <T>(selectorValue: string | Function): ((doc: T) => boolean) => {\n\tconst fn = selectorValue instanceof Function ? selectorValue : Function(`return ${selectorValue}`);\n\treturn (doc: T): boolean => !!fn.call(doc);\n};\n\nconst logicalOperators = {\n\t$and,\n\t$or,\n\t$nor,\n\t$where,\n} as const;\n\nconst isValueOperator = (operator: string): operator is keyof typeof valueOperators => operator in valueOperators;\n\nconst isLogicalOperator = (operator: string): operator is keyof typeof logicalOperators => operator in logicalOperators;\n\nconst hasValueOperators = <T>(valueSelector: FieldExpression<T>): boolean =>\n\tObject.keys(valueSelector).every((key) => key.slice(0, 1) === '$');\n\nconst compileUndefinedOrNullSelector =\n\t<T>(): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === undefined || x === null);\n\nconst compilePrimitiveSelector =\n\t<T>(primitive: T) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === primitive);\n\nconst compileRegexSelector =\n\t<T>(regex: RegExp) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n\nconst compileArraySelector =\n\t<T>(expected: T) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn some(value, (x) => equals(expected, x));\n\t};\n\nconst compileValueOperatorsSelector = <T>(expression: FieldExpression<T>): ((value: T) => boolean) => {\n\tconst operatorFunctions: ((value: T) => boolean)[] = [];\n\tfor (const operator of Object.keys(expression) as (keyof FieldExpression<T>)[]) {\n\t\tif (!isValueOperator(operator)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst operand = expression[operator];\n\t\tconst operation = valueOperators[operator] as unknown as (operand: unknown, options: unknown) => (value: T) => boolean;\n\t\toperatorFunctions.push(operation(operand, expression.$options));\n\t}\n\treturn (value: T): boolean => operatorFunctions.every((f) => f(value));\n};\n\nconst compileValueSelector = <T>(valueSelector: FieldExpression<T>[keyof FieldExpression<T>]): ((value: T) => boolean) => {\n\tif (valueSelector === undefined || valueSelector === null) {\n\t\treturn compileUndefinedOrNullSelector();\n\t}\n\n\tif (!isObject(valueSelector)) {\n\t\treturn compilePrimitiveSelector(valueSelector as T);\n\t}\n\n\tif (valueSelector instanceof RegExp) {\n\t\treturn compileRegexSelector(valueSelector);\n\t}\n\n\tif (Array.isArray(valueSelector)) {\n\t\treturn compileArraySelector(valueSelector as unknown as T);\n\t}\n\n\tif (hasValueOperators<T>(valueSelector)) {\n\t\treturn compileValueOperatorsSelector(valueSelector);\n\t}\n\n\treturn (value: T): boolean => flatSome(value, (x) => equals(valueSelector, x as unknown as object));\n};\n\nexport const compileDocumentSelector = <T>(docSelector: Query<T> | FieldExpression<T>['$where'][]): ((doc: T) => boolean) => {\n\tconst perKeySelectors = Object.entries(docSelector).map(([key, subSelector]) => {\n\t\tif (subSelector === undefined) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tif (isLogicalOperator(key)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '$and':\n\t\t\t\t\treturn $and(subSelector);\n\n\t\t\t\tcase '$or':\n\t\t\t\t\treturn $or(subSelector);\n\n\t\t\t\tcase '$nor':\n\t\t\t\t\treturn $nor(subSelector);\n\n\t\t\t\tcase '$where':\n\t\t\t\t\treturn $where(subSelector);\n\t\t\t}\n\t\t}\n\n\t\tconst lookUpByIndex = createLookupFunction(key);\n\t\tconst valueSelectorFunc = compileValueSelector(subSelector);\n\t\treturn (doc: T): boolean => {\n\t\t\tconst branchValues = lookUpByIndex(doc);\n\t\t\treturn branchValues.some(valueSelectorFunc);\n\t\t};\n\t});\n\n\treturn (doc: T): boolean => perKeySelectors.every((f) => f(doc));\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/minimongo/query.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/minimongo/query.ts"}},"code":"var _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\n\nvar _createForOfIteratorHelperLoose;\n\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 1);\n\nvar _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 2);\nmodule.export({\n  compileDocumentSelector: function () {\n    return compileDocumentSelector;\n  }\n});\nvar compareBSONValues, getBSONType;\nmodule.link(\"./bson\", {\n  compareBSONValues: function (v) {\n    compareBSONValues = v;\n  },\n  getBSONType: function (v) {\n    getBSONType = v;\n  }\n}, 0);\nvar equals, flatSome, isObject, some;\nmodule.link(\"./comparisons\", {\n  equals: function (v) {\n    equals = v;\n  },\n  flatSome: function (v) {\n    flatSome = v;\n  },\n  isObject: function (v) {\n    isObject = v;\n  },\n  some: function (v) {\n    some = v;\n  }\n}, 1);\nvar createLookupFunction;\nmodule.link(\"./lookups\", {\n  createLookupFunction: function (v) {\n    createLookupFunction = v;\n  }\n}, 2);\n\nvar isArrayOfFields = function (values) {\n  return values.every(function (value) {\n    return ['number', 'string', 'symbol'].includes(_typeof(value));\n  });\n};\n\nvar $in = function (operand, _options) {\n  var index = null;\n\n  if (isArrayOfFields(operand)) {\n    index = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(operand), _step; !(_step = _iterator()).done;) {\n      var operandElement = _step.value;\n      index[operandElement] = operandElement;\n    }\n  }\n\n  return function (value) {\n    return some(value, function (x) {\n      if (typeof x === 'string' && index !== null) {\n        return !!index[x];\n      }\n\n      return operand.some(function (operandElement) {\n        return equals(operandElement, x);\n      });\n    });\n  };\n};\n\nvar $nin = function (operand, _options) {\n  var isIn = $in(operand, undefined);\n  return function (value) {\n    if (value === undefined) {\n      return true;\n    }\n\n    return !isIn(value);\n  };\n};\n\nvar $all = function (operand, _options) {\n  return function (value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n\n    return operand.every(function (operandElement) {\n      return value.some(function (valueElement) {\n        return equals(operandElement, valueElement);\n      });\n    });\n  };\n};\n\nvar $lt = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) < 0;\n    });\n  };\n};\n\nvar $lte = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) <= 0;\n    });\n  };\n};\n\nvar $gt = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) > 0;\n    });\n  };\n};\n\nvar $gte = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) >= 0;\n    });\n  };\n};\n\nvar $ne = function (operand, _options) {\n  return function (value) {\n    return !some(value, function (x) {\n      return equals(x, operand);\n    });\n  };\n};\n\nvar $exists = function (operand, _options) {\n  return function (value) {\n    return operand === (value !== undefined);\n  };\n};\n\nvar $mod = function (_ref, _options) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      divisor = _ref2[0],\n      remainder = _ref2[1];\n\n  return function (value) {\n    return flatSome(value, function (x) {\n      return Number(x) % divisor === remainder;\n    });\n  };\n};\n\nvar $size = function (operand, _options) {\n  return function (value) {\n    return Array.isArray(value) && operand === value.length;\n  };\n};\n\nvar $type = function (operand, _options) {\n  return function (value) {\n    if (value === undefined) {\n      return false;\n    }\n\n    return flatSome(value, function (x) {\n      return getBSONType(x) === operand;\n    });\n  };\n};\n\nvar $regex = function (operand, options) {\n  var regex;\n\n  if (options !== undefined) {\n    var regexSource = operand instanceof RegExp ? operand.source : operand;\n    regex = new RegExp(regexSource, options);\n  } else if (!(operand instanceof RegExp)) {\n    regex = new RegExp(operand);\n  }\n\n  return function (value) {\n    if (value === undefined) {\n      return false;\n    }\n\n    return flatSome(value, function (x) {\n      return regex.test(String(x));\n    });\n  };\n};\n\nvar $elemMatch = function (operand, _options) {\n  var matcher = compileDocumentSelector(operand);\n  return function (value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n\n    return value.some(function (x) {\n      return matcher(x);\n    });\n  };\n};\n\nvar $not = function (operand, _options) {\n  var matcher = compileValueSelector(operand);\n  return function (value) {\n    return !matcher(value);\n  };\n};\n\nvar dummyOperator = function (_operand, _options) {\n  return function (_value) {\n    return true;\n  };\n};\n\nvar $options = dummyOperator;\nvar $near = dummyOperator;\nvar $geoIntersects = dummyOperator;\nvar valueOperators = {\n  $in: $in,\n  $nin: $nin,\n  $all: $all,\n  $lt: $lt,\n  $lte: $lte,\n  $gt: $gt,\n  $gte: $gte,\n  $ne: $ne,\n  $exists: $exists,\n  $mod: $mod,\n  $size: $size,\n  $type: $type,\n  $regex: $regex,\n  $elemMatch: $elemMatch,\n  $not: $not,\n  $options: $options,\n  $near: $near,\n  $geoIntersects: $geoIntersects\n};\n\nvar $and = function (subSelector) {\n  var subSelectorFunctions = subSelector.map(compileDocumentSelector);\n  return function (doc) {\n    return subSelectorFunctions.every(function (f) {\n      return f(doc);\n    });\n  };\n};\n\nvar $or = function (subSelector) {\n  var subSelectorFunctions = subSelector.map(compileDocumentSelector);\n  return function (doc) {\n    return subSelectorFunctions.some(function (f) {\n      return f(doc);\n    });\n  };\n};\n\nvar $nor = function (subSelector) {\n  var subSelectorFunctions = subSelector.map(compileDocumentSelector);\n  return function (doc) {\n    return subSelectorFunctions.every(function (f) {\n      return !f(doc);\n    });\n  };\n};\n\nvar $where = function (selectorValue) {\n  var fn = selectorValue instanceof Function ? selectorValue : Function(\"return \" + selectorValue);\n  return function (doc) {\n    return !!fn.call(doc);\n  };\n};\n\nvar logicalOperators = {\n  $and: $and,\n  $or: $or,\n  $nor: $nor,\n  $where: $where\n};\n\nvar isValueOperator = function (operator) {\n  return operator in valueOperators;\n};\n\nvar isLogicalOperator = function (operator) {\n  return operator in logicalOperators;\n};\n\nvar hasValueOperators = function (valueSelector) {\n  return Object.keys(valueSelector).every(function (key) {\n    return key.slice(0, 1) === '$';\n  });\n};\n\nvar compileUndefinedOrNullSelector = function () {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return x === undefined || x === null;\n    });\n  };\n};\n\nvar compilePrimitiveSelector = function (primitive) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return x === primitive;\n    });\n  };\n};\n\nvar compileRegexSelector = function (regex) {\n  return function (value) {\n    if (value === undefined) {\n      return false;\n    }\n\n    return flatSome(value, function (x) {\n      return regex.test(String(x));\n    });\n  };\n};\n\nvar compileArraySelector = function (expected) {\n  return function (value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n\n    return some(value, function (x) {\n      return equals(expected, x);\n    });\n  };\n};\n\nvar compileValueOperatorsSelector = function (expression) {\n  var operatorFunctions = [];\n\n  for (var _i = 0, _Object$keys = Object.keys(expression); _i < _Object$keys.length; _i++) {\n    var operator = _Object$keys[_i];\n\n    if (!isValueOperator(operator)) {\n      continue;\n    }\n\n    var operand = expression[operator];\n    var operation = valueOperators[operator];\n    operatorFunctions.push(operation(operand, expression.$options));\n  }\n\n  return function (value) {\n    return operatorFunctions.every(function (f) {\n      return f(value);\n    });\n  };\n};\n\nvar compileValueSelector = function (valueSelector) {\n  if (valueSelector === undefined || valueSelector === null) {\n    return compileUndefinedOrNullSelector();\n  }\n\n  if (!isObject(valueSelector)) {\n    return compilePrimitiveSelector(valueSelector);\n  }\n\n  if (valueSelector instanceof RegExp) {\n    return compileRegexSelector(valueSelector);\n  }\n\n  if (Array.isArray(valueSelector)) {\n    return compileArraySelector(valueSelector);\n  }\n\n  if (hasValueOperators(valueSelector)) {\n    return compileValueOperatorsSelector(valueSelector);\n  }\n\n  return function (value) {\n    return flatSome(value, function (x) {\n      return equals(valueSelector, x);\n    });\n  };\n};\n\nvar compileDocumentSelector = function (docSelector) {\n  var perKeySelectors = Object.entries(docSelector).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        subSelector = _ref4[1];\n\n    if (subSelector === undefined) {\n      return function () {\n        return true;\n      };\n    }\n\n    if (isLogicalOperator(key)) {\n      switch (key) {\n        case '$and':\n          return $and(subSelector);\n\n        case '$or':\n          return $or(subSelector);\n\n        case '$nor':\n          return $nor(subSelector);\n\n        case '$where':\n          return $where(subSelector);\n      }\n    }\n\n    var lookUpByIndex = createLookupFunction(key);\n    var valueSelectorFunc = compileValueSelector(subSelector);\n    return function (doc) {\n      var branchValues = lookUpByIndex(doc);\n      return branchValues.some(valueSelectorFunc);\n    };\n  });\n  return function (doc) {\n    return perKeySelectors.every(function (f) {\n      return f(doc);\n    });\n  };\n};","map":{"version":3,"sources":["client/lib/minimongo/query.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { compareBSONValues, getBSONType } from './bson';\nimport { equals, flatSome, isObject, some } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport { BSONType, FieldExpression, Query } from './types';\n\nconst isArrayOfFields = <T>(values: unknown[]): values is T[] =>\n\tvalues.every((value) => ['number', 'string', 'symbol'].includes(typeof value));\n\nconst $in = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tlet index: Record<T, T> | null = null;\n\tif (isArrayOfFields<T>(operand)) {\n\t\tindex = {} as Record<T, T>;\n\t\tfor (const operandElement of operand) {\n\t\t\tindex[operandElement] = operandElement;\n\t\t}\n\t}\n\n\treturn (value: T): boolean =>\n\t\tsome(value, (x) => {\n\t\t\tif (typeof x === 'string' && index !== null) {\n\t\t\t\treturn !!index[x];\n\t\t\t}\n\n\t\t\treturn operand.some((operandElement) => equals(operandElement, x));\n\t\t});\n};\n\nconst $nin = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tconst isIn = $in(operand, undefined);\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !isIn(value);\n\t};\n};\n\nconst $all =\n\t<T>(operand: T[], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn operand.every((operandElement) => value.some((valueElement) => equals(operandElement, valueElement)));\n\t};\n\nconst $lt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) < 0);\n\nconst $lte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) <= 0);\n\nconst $gt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) > 0);\n\nconst $gte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) >= 0);\n\nconst $ne =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\t!some(value, (x) => equals(x, operand));\n\nconst $exists =\n\t<T>(operand: boolean, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\toperand === (value !== undefined);\n\nconst $mod =\n\t<T>([divisor, remainder]: [number, number], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => Number(x) % divisor === remainder);\n\nconst $size =\n\t<T>(operand: number, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tArray.isArray(value) && operand === value.length;\n\nconst $type =\n\t<T>(operand: BSONType, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => getBSONType(x) === operand);\n\t};\n\nconst $regex = <T>(operand: string | RegExp, options: string): ((value: T) => boolean) => {\n\tlet regex: RegExp;\n\n\tif (options !== undefined) {\n\t\tconst regexSource = operand instanceof RegExp ? operand.source : operand;\n\t\tregex = new RegExp(regexSource, options);\n\t} else if (!(operand instanceof RegExp)) {\n\t\tregex = new RegExp(operand);\n\t}\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n};\n\nconst $elemMatch = <T>(operand: Query<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileDocumentSelector(operand);\n\n\treturn (value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn value.some((x) => matcher(x));\n\t};\n};\n\nconst $not = <T>(operand: FieldExpression<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileValueSelector(operand);\n\treturn (value: T): boolean => !matcher(value);\n};\n\nconst dummyOperator =\n\t<T>(_operand: unknown, _options: undefined): ((value: T) => boolean) =>\n\t(_value: T): boolean =>\n\t\ttrue;\n\nconst $options = dummyOperator;\nconst $near = dummyOperator;\nconst $geoIntersects = dummyOperator;\n\nconst valueOperators = {\n\t$in,\n\t$nin,\n\t$all,\n\t$lt,\n\t$lte,\n\t$gt,\n\t$gte,\n\t$ne,\n\t$exists,\n\t$mod,\n\t$size,\n\t$type,\n\t$regex,\n\t$elemMatch,\n\t$not,\n\t$options,\n\t$near,\n\t$geoIntersects,\n} as const;\n\nconst $and = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => f(doc));\n};\n\nconst $or = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.some((f) => f(doc));\n};\n\nconst $nor = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => !f(doc));\n};\n\nconst $where = <T>(selectorValue: string | Function): ((doc: T) => boolean) => {\n\tconst fn = selectorValue instanceof Function ? selectorValue : Function(`return ${selectorValue}`);\n\treturn (doc: T): boolean => !!fn.call(doc);\n};\n\nconst logicalOperators = {\n\t$and,\n\t$or,\n\t$nor,\n\t$where,\n} as const;\n\nconst isValueOperator = (operator: string): operator is keyof typeof valueOperators => operator in valueOperators;\n\nconst isLogicalOperator = (operator: string): operator is keyof typeof logicalOperators => operator in logicalOperators;\n\nconst hasValueOperators = <T>(valueSelector: FieldExpression<T>): boolean =>\n\tObject.keys(valueSelector).every((key) => key.slice(0, 1) === '$');\n\nconst compileUndefinedOrNullSelector =\n\t<T>(): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === undefined || x === null);\n\nconst compilePrimitiveSelector =\n\t<T>(primitive: T) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === primitive);\n\nconst compileRegexSelector =\n\t<T>(regex: RegExp) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n\nconst compileArraySelector =\n\t<T>(expected: T) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn some(value, (x) => equals(expected, x));\n\t};\n\nconst compileValueOperatorsSelector = <T>(expression: FieldExpression<T>): ((value: T) => boolean) => {\n\tconst operatorFunctions: ((value: T) => boolean)[] = [];\n\tfor (const operator of Object.keys(expression) as (keyof FieldExpression<T>)[]) {\n\t\tif (!isValueOperator(operator)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst operand = expression[operator];\n\t\tconst operation = valueOperators[operator] as unknown as (operand: unknown, options: unknown) => (value: T) => boolean;\n\t\toperatorFunctions.push(operation(operand, expression.$options));\n\t}\n\treturn (value: T): boolean => operatorFunctions.every((f) => f(value));\n};\n\nconst compileValueSelector = <T>(valueSelector: FieldExpression<T>[keyof FieldExpression<T>]): ((value: T) => boolean) => {\n\tif (valueSelector === undefined || valueSelector === null) {\n\t\treturn compileUndefinedOrNullSelector();\n\t}\n\n\tif (!isObject(valueSelector)) {\n\t\treturn compilePrimitiveSelector(valueSelector as T);\n\t}\n\n\tif (valueSelector instanceof RegExp) {\n\t\treturn compileRegexSelector(valueSelector);\n\t}\n\n\tif (Array.isArray(valueSelector)) {\n\t\treturn compileArraySelector(valueSelector as unknown as T);\n\t}\n\n\tif (hasValueOperators<T>(valueSelector)) {\n\t\treturn compileValueOperatorsSelector(valueSelector);\n\t}\n\n\treturn (value: T): boolean => flatSome(value, (x) => equals(valueSelector, x as unknown as object));\n};\n\nexport const compileDocumentSelector = <T>(docSelector: Query<T> | FieldExpression<T>['$where'][]): ((doc: T) => boolean) => {\n\tconst perKeySelectors = Object.entries(docSelector).map(([key, subSelector]) => {\n\t\tif (subSelector === undefined) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tif (isLogicalOperator(key)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '$and':\n\t\t\t\t\treturn $and(subSelector);\n\n\t\t\t\tcase '$or':\n\t\t\t\t\treturn $or(subSelector);\n\n\t\t\t\tcase '$nor':\n\t\t\t\t\treturn $nor(subSelector);\n\n\t\t\t\tcase '$where':\n\t\t\t\t\treturn $where(subSelector);\n\t\t\t}\n\t\t}\n\n\t\tconst lookUpByIndex = createLookupFunction(key);\n\t\tconst valueSelectorFunc = compileValueSelector(subSelector);\n\t\treturn (doc: T): boolean => {\n\t\t\tconst branchValues = lookUpByIndex(doc);\n\t\t\treturn branchValues.some(valueSelectorFunc);\n\t\t};\n\t});\n\n\treturn (doc: T): boolean => perKeySelectors.every((f) => f(doc));\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"1a6766a734e44d62f3226d1a1c038ea15e3ce845"}
