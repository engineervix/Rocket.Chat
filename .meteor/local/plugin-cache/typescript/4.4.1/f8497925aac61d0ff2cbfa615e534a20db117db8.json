{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/settings/client/lib/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/settings/client/lib/settings.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/settings/client/lib/settings.ts","inputSourceMap":{"version":3,"file":"app/settings/client/lib/settings.ts","sourceRoot":"","sources":["app/settings/client/lib/settings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAEpD,OAAO,EAAE,8BAA8B,EAAE,MAAM,gEAAgE,CAAC;AAChH,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAGlD,MAAM,QAAS,SAAQ,YAAY;IAClC,gBAAgB,GAAG,8BAA8B,CAAC,GAAG,EAAE,CAAC;IAExD,UAAU,GAAG,8BAA8B,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;IAE7D,IAAI,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;IAEpC,GAAG,CAAC,GAAoB,EAAE,GAAG,IAAQ;QACpC,IAAI,GAAG,YAAY,MAAM,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAC/C;QACD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACxE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEO,kBAAkB,CAAC,MAA4C,EAAE,WAAoB;QAC5F,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,IAAI;QACH,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;YAC9B,KAAK,EAAE,CAAC,MAA4C,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC;YACrG,OAAO,EAAE,CAAC,MAA4C,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC;YACvG,OAAO,EAAE,CAAC,MAAuB,EAAE,EAAE;gBACpC,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAC/C,CAAC;SACD,CAAC,CAAC;QACH,WAAW,GAAG,KAAK,CAAC;IACrB,CAAC;CACD;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAEvC,QAAQ,CAAC,IAAI,EAAE,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { PublicSettingsCachedCollection } from '../../../../client/lib/settings/PublicSettingsCachedCollection';\nimport { SettingsBase } from '../../lib/settings';\nimport { SettingValue } from '../../../../definition/ISetting';\n\nclass Settings extends SettingsBase {\n\tcachedCollection = PublicSettingsCachedCollection.get();\n\n\tcollection = PublicSettingsCachedCollection.get().collection;\n\n\tdict = new ReactiveDict('settings');\n\n\tget(_id: string | RegExp, ...args: []): any {\n\t\tif (_id instanceof RegExp) {\n\t\t\tthrow new Error('RegExp Settings.get(RegExp)');\n\t\t}\n\t\tif (args.length > 0) {\n\t\t\tthrow new Error('settings.get(String, callback) only works on backend');\n\t\t}\n\t\treturn this.dict.get(_id);\n\t}\n\n\tprivate _storeSettingValue(record: { _id: string; value: SettingValue }, initialLoad: boolean): void {\n\t\tMeteor.settings[record._id] = record.value;\n\t\tthis.dict.set(record._id, record.value);\n\t\tthis.load(record._id, record.value, initialLoad);\n\t}\n\n\tinit(): void {\n\t\tlet initialLoad = true;\n\t\tthis.collection.find().observe({\n\t\t\tadded: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tchanged: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tremoved: (record: { _id: string }) => {\n\t\t\t\tdelete Meteor.settings[record._id];\n\t\t\t\tthis.dict.set(record._id, null);\n\t\t\t\tthis.load(record._id, undefined, initialLoad);\n\t\t\t},\n\t\t});\n\t\tinitialLoad = false;\n\t}\n}\n\nexport const settings = new Settings();\n\nsettings.init();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/settings/client/lib/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/settings/client/lib/settings.ts"}},"code":"module.export({\n  settings: () => settings\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict(v) {\n    ReactiveDict = v;\n  }\n\n}, 1);\nlet PublicSettingsCachedCollection;\nmodule.link(\"../../../../client/lib/settings/PublicSettingsCachedCollection\", {\n  PublicSettingsCachedCollection(v) {\n    PublicSettingsCachedCollection = v;\n  }\n\n}, 2);\nlet SettingsBase;\nmodule.link(\"../../lib/settings\", {\n  SettingsBase(v) {\n    SettingsBase = v;\n  }\n\n}, 3);\n\nclass Settings extends SettingsBase {\n  constructor() {\n    super(...arguments);\n    this.cachedCollection = PublicSettingsCachedCollection.get();\n    this.collection = PublicSettingsCachedCollection.get().collection;\n    this.dict = new ReactiveDict('settings');\n  }\n\n  get(_id) {\n    if (_id instanceof RegExp) {\n      throw new Error('RegExp Settings.get(RegExp)');\n    }\n\n    if ((arguments.length <= 1 ? 0 : arguments.length - 1) > 0) {\n      throw new Error('settings.get(String, callback) only works on backend');\n    }\n\n    return this.dict.get(_id);\n  }\n\n  _storeSettingValue(record, initialLoad) {\n    Meteor.settings[record._id] = record.value;\n    this.dict.set(record._id, record.value);\n    this.load(record._id, record.value, initialLoad);\n  }\n\n  init() {\n    let initialLoad = true;\n    this.collection.find().observe({\n      added: record => this._storeSettingValue(record, initialLoad),\n      changed: record => this._storeSettingValue(record, initialLoad),\n      removed: record => {\n        delete Meteor.settings[record._id];\n        this.dict.set(record._id, null);\n        this.load(record._id, undefined, initialLoad);\n      }\n    });\n    initialLoad = false;\n  }\n\n}\n\nconst settings = new Settings();\nsettings.init();","map":{"version":3,"sources":["app/settings/client/lib/settings.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,QAAQ,EAAA,MAAA;AAAd,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,8BAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gEAAA,EAAA;AAAA,EAAA,8BAAA,CAAA,CAAA,EAAA;AAAA,IAAA,8BAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAOvC,MAAM,QAAN,SAAuB,YAAvB,CAAmC;AAAA;AAAA;AAAA,SAClC,gBADkC,GACf,8BAA8B,CAAC,GAA/B,EADe;AAAA,SAGlC,UAHkC,GAGrB,8BAA8B,CAAC,GAA/B,GAAqC,UAHhB;AAAA,SAKlC,IALkC,GAK3B,IAAI,YAAJ,CAAiB,UAAjB,CAL2B;AAAA;;AAOlC,EAAA,GAAG,CAAC,GAAD,EAAkC;AACpC,QAAI,GAAG,YAAY,MAAnB,EAA2B;AAC1B,YAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACA;;AACD,QAAI,qDAAc,CAAlB,EAAqB;AACpB,YAAM,IAAI,KAAJ,CAAU,sDAAV,CAAN;AACA;;AACD,WAAO,KAAK,IAAL,CAAU,GAAV,CAAc,GAAd,CAAP;AACA;;AAEO,EAAA,kBAAkB,CAAC,MAAD,EAA+C,WAA/C,EAAmE;AAC5F,IAAA,MAAM,CAAC,QAAP,CAAgB,MAAM,CAAC,GAAvB,IAA8B,MAAM,CAAC,KAArC;AACA,SAAK,IAAL,CAAU,GAAV,CAAc,MAAM,CAAC,GAArB,EAA0B,MAAM,CAAC,KAAjC;AACA,SAAK,IAAL,CAAU,MAAM,CAAC,GAAjB,EAAsB,MAAM,CAAC,KAA7B,EAAoC,WAApC;AACA;;AAED,EAAA,IAAI,GAAA;AACH,QAAI,WAAW,GAAG,IAAlB;AACA,SAAK,UAAL,CAAgB,IAAhB,GAAuB,OAAvB,CAA+B;AAC9B,MAAA,KAAK,EAAG,MAAD,IAAkD,KAAK,kBAAL,CAAwB,MAAxB,EAAgC,WAAhC,CAD3B;AAE9B,MAAA,OAAO,EAAG,MAAD,IAAkD,KAAK,kBAAL,CAAwB,MAAxB,EAAgC,WAAhC,CAF7B;AAG9B,MAAA,OAAO,EAAG,MAAD,IAA4B;AACpC,eAAO,MAAM,CAAC,QAAP,CAAgB,MAAM,CAAC,GAAvB,CAAP;AACA,aAAK,IAAL,CAAU,GAAV,CAAc,MAAM,CAAC,GAArB,EAA0B,IAA1B;AACA,aAAK,IAAL,CAAU,MAAM,CAAC,GAAjB,EAAsB,SAAtB,EAAiC,WAAjC;AACA;AAP6B,KAA/B;AASA,IAAA,WAAW,GAAG,KAAd;AACA;;AAnCiC;;AAsC5B,MAAM,QAAQ,GAAG,IAAI,QAAJ,EAAjB;AAEP,QAAQ,CAAC,IAAT","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { PublicSettingsCachedCollection } from '../../../../client/lib/settings/PublicSettingsCachedCollection';\nimport { SettingsBase } from '../../lib/settings';\nimport { SettingValue } from '../../../../definition/ISetting';\n\nclass Settings extends SettingsBase {\n\tcachedCollection = PublicSettingsCachedCollection.get();\n\n\tcollection = PublicSettingsCachedCollection.get().collection;\n\n\tdict = new ReactiveDict('settings');\n\n\tget(_id: string | RegExp, ...args: []): any {\n\t\tif (_id instanceof RegExp) {\n\t\t\tthrow new Error('RegExp Settings.get(RegExp)');\n\t\t}\n\t\tif (args.length > 0) {\n\t\t\tthrow new Error('settings.get(String, callback) only works on backend');\n\t\t}\n\t\treturn this.dict.get(_id);\n\t}\n\n\tprivate _storeSettingValue(record: { _id: string; value: SettingValue }, initialLoad: boolean): void {\n\t\tMeteor.settings[record._id] = record.value;\n\t\tthis.dict.set(record._id, record.value);\n\t\tthis.load(record._id, record.value, initialLoad);\n\t}\n\n\tinit(): void {\n\t\tlet initialLoad = true;\n\t\tthis.collection.find().observe({\n\t\t\tadded: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tchanged: (record: { _id: string; value: SettingValue }) => this._storeSettingValue(record, initialLoad),\n\t\t\tremoved: (record: { _id: string }) => {\n\t\t\t\tdelete Meteor.settings[record._id];\n\t\t\t\tthis.dict.set(record._id, null);\n\t\t\t\tthis.load(record._id, undefined, initialLoad);\n\t\t\t},\n\t\t});\n\t\tinitialLoad = false;\n\t}\n}\n\nexport const settings = new Settings();\n\nsettings.init();\n"],"sourceRoot":""},"sourceType":"module","hash":"f8497925aac61d0ff2cbfa615e534a20db117db8"}
