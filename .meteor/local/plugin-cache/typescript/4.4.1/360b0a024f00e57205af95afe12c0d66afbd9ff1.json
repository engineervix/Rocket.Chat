{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/actionButtons/lib/applyButtonFilters.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-message/client/actionButtons/lib/applyButtonFilters.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/actionButtons/lib/applyButtonFilters.ts","inputSourceMap":{"version":3,"file":"app/ui-message/client/actionButtons/lib/applyButtonFilters.ts","sourceRoot":"","sources":["app/ui-message/client/actionButtons/lib/applyButtonFilters.ts"],"names":[],"mappings":"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","sourcesContent":["/* Style disabled as having some arrow functions in one-line hurts readability */\n/* eslint-disable arrow-body-style */\n\nimport { Meteor } from 'meteor/meteor';\nimport { IUIActionButton, RoomTypeFilter } from '@rocket.chat/apps-engine/definition/ui';\n\nimport { hasAtLeastOnePermission, hasPermission, hasRole, hasAnyRole } from '../../../../authorization/client';\nimport {\n\tIRoom,\n\tisDirectMessageRoom,\n\tisMultipleDirectMessageRoom,\n\tisOmnichannelRoom,\n\tisPrivateDiscussion,\n\tisPrivateTeamRoom,\n\tisPublicDiscussion,\n\tisPublicTeamRoom,\n} from '../../../../../definition/IRoom';\n\nexport const applyAuthFilter = (button: IUIActionButton, room?: IRoom): boolean => {\n\tconst { hasAllPermissions, hasOnePermission, hasAllRoles, hasOneRole } = button.when || {};\n\n\tconst userId = Meteor.userId();\n\n\tconst hasAllPermissionsResult = hasAllPermissions ? hasPermission(hasAllPermissions) : true;\n\tconst hasOnePermissionResult = hasOnePermission ? hasAtLeastOnePermission(hasOnePermission) : true;\n\tconst hasAllRolesResult = hasAllRoles ? !!userId && hasAllRoles.every((role) => hasRole(userId, role, room?._id)) : true;\n\tconst hasOneRoleResult = hasOneRole ? !!userId && hasAnyRole(userId, hasOneRole, room?._id) : true;\n\n\treturn hasAllPermissionsResult && hasOnePermissionResult && hasAllRolesResult && hasOneRoleResult;\n};\n\nconst enumToFilter: { [k in RoomTypeFilter]: (room: IRoom) => boolean } = {\n\t[RoomTypeFilter.PUBLIC_CHANNEL]: (room) => room.t === 'c',\n\t[RoomTypeFilter.PRIVATE_CHANNEL]: (room) => room.t === 'p',\n\t[RoomTypeFilter.PUBLIC_TEAM]: isPublicTeamRoom,\n\t[RoomTypeFilter.PRIVATE_TEAM]: isPrivateTeamRoom,\n\t[RoomTypeFilter.PUBLIC_DISCUSSION]: isPublicDiscussion,\n\t[RoomTypeFilter.PRIVATE_DISCUSSION]: isPrivateDiscussion,\n\t[RoomTypeFilter.DIRECT]: isDirectMessageRoom,\n\t[RoomTypeFilter.DIRECT_MULTIPLE]: isMultipleDirectMessageRoom,\n\t[RoomTypeFilter.LIVE_CHAT]: isOmnichannelRoom,\n};\n\nexport const applyRoomFilter = (button: IUIActionButton, room: IRoom): boolean => {\n\tconst { roomTypes } = button.when || {};\n\treturn !roomTypes || roomTypes.some((filter): boolean => enumToFilter[filter]?.(room));\n};\n\nexport const applyButtonFilters = (button: IUIActionButton, room?: IRoom): boolean => {\n\treturn applyAuthFilter(button, room) && (!room || applyRoomFilter(button, room));\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/actionButtons/lib/applyButtonFilters.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-message/client/actionButtons/lib/applyButtonFilters.ts"}},"code":"module.export({\n  applyAuthFilter: () => applyAuthFilter,\n  applyRoomFilter: () => applyRoomFilter,\n  applyButtonFilters: () => applyButtonFilters\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet RoomTypeFilter;\nmodule.link(\"@rocket.chat/apps-engine/definition/ui\", {\n  RoomTypeFilter(v) {\n    RoomTypeFilter = v;\n  }\n\n}, 1);\nlet hasAtLeastOnePermission, hasPermission, hasRole, hasAnyRole;\nmodule.link(\"../../../../authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  hasRole(v) {\n    hasRole = v;\n  },\n\n  hasAnyRole(v) {\n    hasAnyRole = v;\n  }\n\n}, 2);\nlet isDirectMessageRoom, isMultipleDirectMessageRoom, isOmnichannelRoom, isPrivateDiscussion, isPrivateTeamRoom, isPublicDiscussion, isPublicTeamRoom;\nmodule.link(\"../../../../../definition/IRoom\", {\n  isDirectMessageRoom(v) {\n    isDirectMessageRoom = v;\n  },\n\n  isMultipleDirectMessageRoom(v) {\n    isMultipleDirectMessageRoom = v;\n  },\n\n  isOmnichannelRoom(v) {\n    isOmnichannelRoom = v;\n  },\n\n  isPrivateDiscussion(v) {\n    isPrivateDiscussion = v;\n  },\n\n  isPrivateTeamRoom(v) {\n    isPrivateTeamRoom = v;\n  },\n\n  isPublicDiscussion(v) {\n    isPublicDiscussion = v;\n  },\n\n  isPublicTeamRoom(v) {\n    isPublicTeamRoom = v;\n  }\n\n}, 3);\n\nconst applyAuthFilter = (button, room) => {\n  const {\n    hasAllPermissions,\n    hasOnePermission,\n    hasAllRoles,\n    hasOneRole\n  } = button.when || {};\n  const userId = Meteor.userId();\n  const hasAllPermissionsResult = hasAllPermissions ? hasPermission(hasAllPermissions) : true;\n  const hasOnePermissionResult = hasOnePermission ? hasAtLeastOnePermission(hasOnePermission) : true;\n  const hasAllRolesResult = hasAllRoles ? !!userId && hasAllRoles.every(role => hasRole(userId, role, room === null || room === void 0 ? void 0 : room._id)) : true;\n  const hasOneRoleResult = hasOneRole ? !!userId && hasAnyRole(userId, hasOneRole, room === null || room === void 0 ? void 0 : room._id) : true;\n  return hasAllPermissionsResult && hasOnePermissionResult && hasAllRolesResult && hasOneRoleResult;\n};\n\nconst enumToFilter = {\n  [RoomTypeFilter.PUBLIC_CHANNEL]: room => room.t === 'c',\n  [RoomTypeFilter.PRIVATE_CHANNEL]: room => room.t === 'p',\n  [RoomTypeFilter.PUBLIC_TEAM]: isPublicTeamRoom,\n  [RoomTypeFilter.PRIVATE_TEAM]: isPrivateTeamRoom,\n  [RoomTypeFilter.PUBLIC_DISCUSSION]: isPublicDiscussion,\n  [RoomTypeFilter.PRIVATE_DISCUSSION]: isPrivateDiscussion,\n  [RoomTypeFilter.DIRECT]: isDirectMessageRoom,\n  [RoomTypeFilter.DIRECT_MULTIPLE]: isMultipleDirectMessageRoom,\n  [RoomTypeFilter.LIVE_CHAT]: isOmnichannelRoom\n};\n\nconst applyRoomFilter = (button, room) => {\n  const {\n    roomTypes\n  } = button.when || {};\n  return !roomTypes || roomTypes.some(filter => {\n    var _enumToFilter$filter;\n\n    return (_enumToFilter$filter = enumToFilter[filter]) === null || _enumToFilter$filter === void 0 ? void 0 : _enumToFilter$filter.call(enumToFilter, room);\n  });\n};\n\nconst applyButtonFilters = (button, room) => {\n  return applyAuthFilter(button, room) && (!room || applyRoomFilter(button, room));\n};","map":{"version":3,"sources":["app/ui-message/client/actionButtons/lib/applyButtonFilters.ts"],"names":[],"mappings":"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","sourcesContent":["/* Style disabled as having some arrow functions in one-line hurts readability */\n/* eslint-disable arrow-body-style */\n\nimport { Meteor } from 'meteor/meteor';\nimport { IUIActionButton, RoomTypeFilter } from '@rocket.chat/apps-engine/definition/ui';\n\nimport { hasAtLeastOnePermission, hasPermission, hasRole, hasAnyRole } from '../../../../authorization/client';\nimport {\n\tIRoom,\n\tisDirectMessageRoom,\n\tisMultipleDirectMessageRoom,\n\tisOmnichannelRoom,\n\tisPrivateDiscussion,\n\tisPrivateTeamRoom,\n\tisPublicDiscussion,\n\tisPublicTeamRoom,\n} from '../../../../../definition/IRoom';\n\nexport const applyAuthFilter = (button: IUIActionButton, room?: IRoom): boolean => {\n\tconst { hasAllPermissions, hasOnePermission, hasAllRoles, hasOneRole } = button.when || {};\n\n\tconst userId = Meteor.userId();\n\n\tconst hasAllPermissionsResult = hasAllPermissions ? hasPermission(hasAllPermissions) : true;\n\tconst hasOnePermissionResult = hasOnePermission ? hasAtLeastOnePermission(hasOnePermission) : true;\n\tconst hasAllRolesResult = hasAllRoles ? !!userId && hasAllRoles.every((role) => hasRole(userId, role, room?._id)) : true;\n\tconst hasOneRoleResult = hasOneRole ? !!userId && hasAnyRole(userId, hasOneRole, room?._id) : true;\n\n\treturn hasAllPermissionsResult && hasOnePermissionResult && hasAllRolesResult && hasOneRoleResult;\n};\n\nconst enumToFilter: { [k in RoomTypeFilter]: (room: IRoom) => boolean } = {\n\t[RoomTypeFilter.PUBLIC_CHANNEL]: (room) => room.t === 'c',\n\t[RoomTypeFilter.PRIVATE_CHANNEL]: (room) => room.t === 'p',\n\t[RoomTypeFilter.PUBLIC_TEAM]: isPublicTeamRoom,\n\t[RoomTypeFilter.PRIVATE_TEAM]: isPrivateTeamRoom,\n\t[RoomTypeFilter.PUBLIC_DISCUSSION]: isPublicDiscussion,\n\t[RoomTypeFilter.PRIVATE_DISCUSSION]: isPrivateDiscussion,\n\t[RoomTypeFilter.DIRECT]: isDirectMessageRoom,\n\t[RoomTypeFilter.DIRECT_MULTIPLE]: isMultipleDirectMessageRoom,\n\t[RoomTypeFilter.LIVE_CHAT]: isOmnichannelRoom,\n};\n\nexport const applyRoomFilter = (button: IUIActionButton, room: IRoom): boolean => {\n\tconst { roomTypes } = button.when || {};\n\treturn !roomTypes || roomTypes.some((filter): boolean => enumToFilter[filter]?.(room));\n};\n\nexport const applyButtonFilters = (button: IUIActionButton, room?: IRoom): boolean => {\n\treturn applyAuthFilter(button, room) && (!room || applyRoomFilter(button, room));\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"360b0a024f00e57205af95afe12c0d66afbd9ff1"}
