{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/userRoles.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/userRoles.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/userRoles.ts","inputSourceMap":{"version":3,"file":"client/startup/userRoles.ts","sourceRoot":"","sources":["client/startup/userRoles.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { UserRoles, RoomRoles, ChatMessage } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { IRocketChatRecord } from '../../definition/IRocketChatRecord';\nimport { IRole, IUser } from '../../definition/IUser';\nimport { handleError } from '../lib/utils/handleError';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (Meteor.userId()) {\n\t\t\tMeteor.call('getUserRoles', (error: Error, results: IRocketChatRecord[]) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn handleError(error);\n\t\t\t\t}\n\n\t\t\t\tfor (const record of results) {\n\t\t\t\t\tUserRoles.upsert({ _id: record._id }, record);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tNotifications.onLogged(\n\t\t\t\t'roles-change',\n\t\t\t\t(role: { type: 'added' | 'removed' | 'changed'; _id: IRole['_id']; u: Partial<IUser>; scope: IRole['scope'] }) => {\n\t\t\t\t\tif (role.type === 'added') {\n\t\t\t\t\t\tif (role.scope) {\n\t\t\t\t\t\t\tRoomRoles.upsert({ 'rid': role.scope, 'u._id': role.u._id }, { $setOnInsert: { u: role.u }, $addToSet: { roles: role._id } });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUserRoles.upsert({ _id: role.u._id }, { $addToSet: { roles: role._id }, $set: { username: role.u.username } });\n\t\t\t\t\t\t\tChatMessage.update({ 'u._id': role.u._id }, { $addToSet: { roles: role._id } }, { multi: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (role.type === 'removed') {\n\t\t\t\t\t\tif (role.scope) {\n\t\t\t\t\t\t\tRoomRoles.update({ 'rid': role.scope, 'u._id': role.u._id }, { $pull: { roles: role._id } });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUserRoles.update({ _id: role.u._id }, { $pull: { roles: role._id } });\n\t\t\t\t\t\t\tChatMessage.update({ 'u._id': role.u._id }, { $pull: { roles: role._id } }, { multi: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (role.type === 'changed') {\n\t\t\t\t\t\tChatMessage.update({ roles: role._id }, { $inc: { rerender: 1 } }, { multi: true });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/userRoles.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/userRoles.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 1);\nlet UserRoles, RoomRoles, ChatMessage;\nmodule.link(\"../../app/models/client\", {\n  UserRoles(v) {\n    UserRoles = v;\n  },\n\n  RoomRoles(v) {\n    RoomRoles = v;\n  },\n\n  ChatMessage(v) {\n    ChatMessage = v;\n  }\n\n}, 2);\nlet Notifications;\nmodule.link(\"../../app/notifications/client\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 3);\nlet handleError;\nmodule.link(\"../lib/utils/handleError\", {\n  handleError(v) {\n    handleError = v;\n  }\n\n}, 4);\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    if (Meteor.userId()) {\n      Meteor.call('getUserRoles', (error, results) => {\n        if (error) {\n          return handleError(error);\n        }\n\n        for (const record of results) {\n          UserRoles.upsert({\n            _id: record._id\n          }, record);\n        }\n      });\n      Notifications.onLogged('roles-change', role => {\n        if (role.type === 'added') {\n          if (role.scope) {\n            RoomRoles.upsert({\n              'rid': role.scope,\n              'u._id': role.u._id\n            }, {\n              $setOnInsert: {\n                u: role.u\n              },\n              $addToSet: {\n                roles: role._id\n              }\n            });\n          } else {\n            UserRoles.upsert({\n              _id: role.u._id\n            }, {\n              $addToSet: {\n                roles: role._id\n              },\n              $set: {\n                username: role.u.username\n              }\n            });\n            ChatMessage.update({\n              'u._id': role.u._id\n            }, {\n              $addToSet: {\n                roles: role._id\n              }\n            }, {\n              multi: true\n            });\n          }\n\n          return;\n        }\n\n        if (role.type === 'removed') {\n          if (role.scope) {\n            RoomRoles.update({\n              'rid': role.scope,\n              'u._id': role.u._id\n            }, {\n              $pull: {\n                roles: role._id\n              }\n            });\n          } else {\n            UserRoles.update({\n              _id: role.u._id\n            }, {\n              $pull: {\n                roles: role._id\n              }\n            });\n            ChatMessage.update({\n              'u._id': role.u._id\n            }, {\n              $pull: {\n                roles: role._id\n              }\n            }, {\n              multi: true\n            });\n          }\n\n          return;\n        }\n\n        if (role.type === 'changed') {\n          ChatMessage.update({\n            roles: role._id\n          }, {\n            $inc: {\n              rerender: 1\n            }\n          }, {\n            multi: true\n          });\n        }\n      });\n    }\n  });\n});","map":{"version":3,"sources":["client/startup/userRoles.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { UserRoles, RoomRoles, ChatMessage } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { IRocketChatRecord } from '../../definition/IRocketChatRecord';\nimport { IRole, IUser } from '../../definition/IUser';\nimport { handleError } from '../lib/utils/handleError';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (Meteor.userId()) {\n\t\t\tMeteor.call('getUserRoles', (error: Error, results: IRocketChatRecord[]) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn handleError(error);\n\t\t\t\t}\n\n\t\t\t\tfor (const record of results) {\n\t\t\t\t\tUserRoles.upsert({ _id: record._id }, record);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tNotifications.onLogged(\n\t\t\t\t'roles-change',\n\t\t\t\t(role: { type: 'added' | 'removed' | 'changed'; _id: IRole['_id']; u: Partial<IUser>; scope: IRole['scope'] }) => {\n\t\t\t\t\tif (role.type === 'added') {\n\t\t\t\t\t\tif (role.scope) {\n\t\t\t\t\t\t\tRoomRoles.upsert({ 'rid': role.scope, 'u._id': role.u._id }, { $setOnInsert: { u: role.u }, $addToSet: { roles: role._id } });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUserRoles.upsert({ _id: role.u._id }, { $addToSet: { roles: role._id }, $set: { username: role.u.username } });\n\t\t\t\t\t\t\tChatMessage.update({ 'u._id': role.u._id }, { $addToSet: { roles: role._id } }, { multi: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (role.type === 'removed') {\n\t\t\t\t\t\tif (role.scope) {\n\t\t\t\t\t\t\tRoomRoles.update({ 'rid': role.scope, 'u._id': role.u._id }, { $pull: { roles: role._id } });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUserRoles.update({ _id: role.u._id }, { $pull: { roles: role._id } });\n\t\t\t\t\t\t\tChatMessage.update({ 'u._id': role.u._id }, { $pull: { roles: role._id } }, { multi: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (role.type === 'changed') {\n\t\t\t\t\t\tChatMessage.update({ roles: role._id }, { $inc: { rerender: 1 } }, { multi: true });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"e4ab3a332a39042ab81f785ac0ea3697600ab502"}
