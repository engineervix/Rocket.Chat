{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/voip.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/rooms/roomTypes/voip.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/voip.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/voip.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/voip.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AACrE,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,iCAAiC,CAAC;AAC3D,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AAGtE,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,MAAM,CAAC,MAAM,YAAY,GAAG,eAAe,CAAC,eAAe,CAAC,CAAC;AAE7D,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE;IACjC,QAAQ,CAAC,IAAI;QACZ,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAK,IAAY,CAAC,KAAK,CAAC;IACvD,CAAC;IAED,SAAS;QACR,OAAO,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,aAAa,CAAC,aAAa,CAAC,CAAC;IACzE,CAAC;IAED,aAAa,CAAC,IAAI;QACjB,OAAO,YAAY,CAAC,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;IACpE,CAAC;IAED,QAAQ,CAAC,UAAU;QAClB,OAAO,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,cAAc,CAAC,IAAI;QAClB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,QAAQ,CAAC,IAAI,EAAE,KAAK;QACnB,OAAO,IAAI,CAAC;IACb,CAAC;CACiD,CAAC,CAAC","sourcesContent":["import { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/lib/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast } from '../../../../definition/utils';\nimport { getVoipRoomType } from '../../../../lib/rooms/roomTypes/voip';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const VoipRoomType = getVoipRoomType(roomCoordinator);\n\nroomCoordinator.add(VoipRoomType, {\n\troomName(room) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\tcondition() {\n\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t},\n\n\tgetAvatarPath(room) {\n\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t},\n\n\tfindRoom(identifier) {\n\t\treturn ChatRoom.findOne({ _id: identifier });\n\t},\n\n\tcanSendMessage(_rid) {\n\t\treturn false;\n\t},\n\n\treadOnly(_rid, _user) {\n\t\treturn true;\n\t},\n} as AtLeast<IRoomTypeClientDirectives, 'roomName'>);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/voip.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/rooms/roomTypes/voip.ts"}},"code":"module.export({\n  VoipRoomType: () => VoipRoomType\n});\nlet hasPermission;\nmodule.link(\"../../../../app/authorization/client\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 0);\nlet ChatRoom;\nmodule.link(\"../../../../app/models/client\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\nlet getAvatarURL;\nmodule.link(\"../../../../app/utils/lib/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n\n}, 3);\nlet getVoipRoomType;\nmodule.link(\"../../../../lib/rooms/roomTypes/voip\", {\n  getVoipRoomType(v) {\n    getVoipRoomType = v;\n  }\n\n}, 4);\nlet roomCoordinator;\nmodule.link(\"../roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 5);\nconst VoipRoomType = getVoipRoomType(roomCoordinator);\nroomCoordinator.add(VoipRoomType, {\n  roomName(room) {\n    return room.name || room.fname || room.label;\n  },\n\n  condition() {\n    return settings.get('Livechat_enabled') && hasPermission('view-l-room');\n  },\n\n  getAvatarPath(room) {\n    return getAvatarURL({\n      username: \"@\".concat(this.roomName(room))\n    }) || '';\n  },\n\n  findRoom(identifier) {\n    return ChatRoom.findOne({\n      _id: identifier\n    });\n  },\n\n  canSendMessage(_rid) {\n    return false;\n  },\n\n  readOnly(_rid, _user) {\n    return true;\n  }\n\n});","map":{"version":3,"sources":["client/lib/rooms/roomTypes/voip.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,YAAe,EAAA,MAAM;AAArB,CAAT;AAA8B,IAAA,aAAA;AAAA,MAAuC,CAAA,IAAvC,CAAuC,sCAAvC,EAAuC;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAvC,EAAuC,CAAvC;AAAuC,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAS9D,MAAM,YAAY,GAAG,eAAe,CAAC,eAAD,CAApC;AAEP,eAAe,CAAC,GAAhB,CAAoB,YAApB,EAAkC;AACjC,EAAA,QAAQ,CAAC,IAAD,EAAK;AACZ,WAAO,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,KAAlB,IAA4B,IAAY,CAAC,KAAhD;AACA,GAHgC;;AAKjC,EAAA,SAAS,GAAA;AACR,WAAO,QAAQ,CAAC,GAAT,CAAa,kBAAb,KAAoC,aAAa,CAAC,aAAD,CAAxD;AACA,GAPgC;;AASjC,EAAA,aAAa,CAAC,IAAD,EAAK;AACjB,WAAO,YAAY,CAAC;AAAE,MAAA,QAAQ,aAAM,KAAK,QAAL,CAAc,IAAd,CAAN;AAAV,KAAD,CAAZ,IAAyD,EAAhE;AACA,GAXgC;;AAajC,EAAA,QAAQ,CAAC,UAAD,EAAW;AAClB,WAAO,QAAQ,CAAC,OAAT,CAAiB;AAAE,MAAA,GAAG,EAAE;AAAP,KAAjB,CAAP;AACA,GAfgC;;AAiBjC,EAAA,cAAc,CAAC,IAAD,EAAK;AAClB,WAAO,KAAP;AACA,GAnBgC;;AAqBjC,EAAA,QAAQ,CAAC,IAAD,EAAO,KAAP,EAAY;AACnB,WAAO,IAAP;AACA;;AAvBgC,CAAlC","sourcesContent":["import { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/lib/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast } from '../../../../definition/utils';\nimport { getVoipRoomType } from '../../../../lib/rooms/roomTypes/voip';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const VoipRoomType = getVoipRoomType(roomCoordinator);\n\nroomCoordinator.add(VoipRoomType, {\n\troomName(room) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\tcondition() {\n\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t},\n\n\tgetAvatarPath(room) {\n\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t},\n\n\tfindRoom(identifier) {\n\t\treturn ChatRoom.findOne({ _id: identifier });\n\t},\n\n\tcanSendMessage(_rid) {\n\t\treturn false;\n\t},\n\n\treadOnly(_rid, _user) {\n\t\treturn true;\n\t},\n} as AtLeast<IRoomTypeClientDirectives, 'roomName'>);\n"],"sourceRoot":""},"sourceType":"module","hash":"8ff821e019168348574d5f14c93fcfaf6c8aec2d"}
