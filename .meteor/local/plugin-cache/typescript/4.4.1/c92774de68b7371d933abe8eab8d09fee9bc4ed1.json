{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/authorization/lib/AuthorizationUtils.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/authorization/lib/AuthorizationUtils.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/authorization/lib/AuthorizationUtils.ts","inputSourceMap":{"version":3,"file":"app/authorization/lib/AuthorizationUtils.ts","sourceRoot":"","sources":["app/authorization/lib/AuthorizationUtils.ts"],"names":[],"mappings":"AAAA,MAAM,yBAAyB,GAAG,IAAI,GAAG,EAAE,CAAC;AAE5C,MAAM,CAAC,MAAM,kBAAkB,GAAG;IACjC,MAAM,CAAC,0BAA0B,CAAC,MAAc,EAAE,IAAc;QAC/D,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,IAAI,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC3C,yBAAyB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;SACjD;QAED,MAAM,KAAK,GAAG,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpD,KAAK,MAAM,YAAY,IAAI,IAAI,EAAE;YAChC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACxB;IACF,CAAC;IAED,MAAM,CAAC,6BAA6B,CAAC,YAAoB,EAAE,MAAc;QACxE,IAAI,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC3C,OAAO,KAAK,CAAC;SACb;QAED,MAAM,KAAK,GAAG,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YAC1B,OAAO,KAAK,CAAC;SACb;QAED,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,iCAAiC,CAAC,YAAoB,EAAE,QAAkB;QAChF,IAAI,CAAC,QAAQ,IAAI,CAAC,YAAY,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;SACjC;QAED,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;YAC9B,IAAI,IAAI,CAAC,6BAA6B,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE;gBAC7D,OAAO,IAAI,CAAC;aACZ;SACD;QAED,OAAO,KAAK,CAAC;IACd,CAAC;CACD,CAAC","sourcesContent":["const restrictedRolePermissions = new Map();\n\nexport const AuthorizationUtils = class {\n\tstatic addRolePermissionWhiteList(roleId: string, list: string[]): void {\n\t\tif (!roleId) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tif (!list) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tif (!restrictedRolePermissions.has(roleId)) {\n\t\t\trestrictedRolePermissions.set(roleId, new Set());\n\t\t}\n\n\t\tconst rules = restrictedRolePermissions.get(roleId);\n\n\t\tfor (const permissionId of list) {\n\t\t\trules.add(permissionId);\n\t\t}\n\t}\n\n\tstatic isPermissionRestrictedForRole(permissionId: string, roleId: string): boolean {\n\t\tif (!roleId || !permissionId) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tif (!restrictedRolePermissions.has(roleId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst rules = restrictedRolePermissions.get(roleId);\n\t\tif (!rules || !rules.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !rules.has(permissionId);\n\t}\n\n\tstatic isPermissionRestrictedForRoleList(permissionId: string, roleList: string[]): boolean {\n\t\tif (!roleList || !permissionId) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tfor (const roleId of roleList) {\n\t\t\tif (this.isPermissionRestrictedForRole(permissionId, roleId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/authorization/lib/AuthorizationUtils.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/lib/AuthorizationUtils.ts"}},"code":"module.export({\n  AuthorizationUtils: () => AuthorizationUtils\n});\nconst restrictedRolePermissions = new Map();\nconst AuthorizationUtils = class {\n  static addRolePermissionWhiteList(roleId, list) {\n    if (!roleId) {\n      throw new Error('invalid-param');\n    }\n\n    if (!list) {\n      throw new Error('invalid-param');\n    }\n\n    if (!restrictedRolePermissions.has(roleId)) {\n      restrictedRolePermissions.set(roleId, new Set());\n    }\n\n    const rules = restrictedRolePermissions.get(roleId);\n\n    for (const permissionId of list) {\n      rules.add(permissionId);\n    }\n  }\n\n  static isPermissionRestrictedForRole(permissionId, roleId) {\n    if (!roleId || !permissionId) {\n      throw new Error('invalid-param');\n    }\n\n    if (!restrictedRolePermissions.has(roleId)) {\n      return false;\n    }\n\n    const rules = restrictedRolePermissions.get(roleId);\n\n    if (!rules || !rules.size) {\n      return false;\n    }\n\n    return !rules.has(permissionId);\n  }\n\n  static isPermissionRestrictedForRoleList(permissionId, roleList) {\n    if (!roleList || !permissionId) {\n      throw new Error('invalid-param');\n    }\n\n    for (const roleId of roleList) {\n      if (this.isPermissionRestrictedForRole(permissionId, roleId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n};","map":{"version":3,"sources":["app/authorization/lib/AuthorizationUtils.ts"],"names":[],"mappings":"AAAA,MAAM,CAAA,MAAN,CAAM;AAAA,EAAA,kBAAyB,EAAG,MAAI;AAAhC,CAAN;AAAA,MAAM,yBAAyB,GAAG,IAAI,GAAJ,EAAlC;AAEO,MAAM,kBAAkB,GAAG,MAAA;AACA,SAA1B,0BAA0B,CAAC,MAAD,EAAiB,IAAjB,EAA+B;AAC/D,QAAI,CAAC,MAAL,EAAa;AACZ,YAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACA;;AAED,QAAI,CAAC,IAAL,EAAW;AACV,YAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACA;;AAED,QAAI,CAAC,yBAAyB,CAAC,GAA1B,CAA8B,MAA9B,CAAL,EAA4C;AAC3C,MAAA,yBAAyB,CAAC,GAA1B,CAA8B,MAA9B,EAAsC,IAAI,GAAJ,EAAtC;AACA;;AAED,UAAM,KAAK,GAAG,yBAAyB,CAAC,GAA1B,CAA8B,MAA9B,CAAd;;AAEA,SAAK,MAAM,YAAX,IAA2B,IAA3B,EAAiC;AAChC,MAAA,KAAK,CAAC,GAAN,CAAU,YAAV;AACA;AACD;;AAEmC,SAA7B,6BAA6B,CAAC,YAAD,EAAuB,MAAvB,EAAqC;AACxE,QAAI,CAAC,MAAD,IAAW,CAAC,YAAhB,EAA8B;AAC7B,YAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACA;;AAED,QAAI,CAAC,yBAAyB,CAAC,GAA1B,CAA8B,MAA9B,CAAL,EAA4C;AAC3C,aAAO,KAAP;AACA;;AAED,UAAM,KAAK,GAAG,yBAAyB,CAAC,GAA1B,CAA8B,MAA9B,CAAd;;AACA,QAAI,CAAC,KAAD,IAAU,CAAC,KAAK,CAAC,IAArB,EAA2B;AAC1B,aAAO,KAAP;AACA;;AAED,WAAO,CAAC,KAAK,CAAC,GAAN,CAAU,YAAV,CAAR;AACA;;AAEuC,SAAjC,iCAAiC,CAAC,YAAD,EAAuB,QAAvB,EAAyC;AAChF,QAAI,CAAC,QAAD,IAAa,CAAC,YAAlB,EAAgC;AAC/B,YAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACA;;AAED,SAAK,MAAM,MAAX,IAAqB,QAArB,EAA+B;AAC9B,UAAI,KAAK,6BAAL,CAAmC,YAAnC,EAAiD,MAAjD,CAAJ,EAA8D;AAC7D,eAAO,IAAP;AACA;AACD;;AAED,WAAO,KAAP;AACA;;AAlDgC,CAA3B","sourcesContent":["const restrictedRolePermissions = new Map();\n\nexport const AuthorizationUtils = class {\n\tstatic addRolePermissionWhiteList(roleId: string, list: string[]): void {\n\t\tif (!roleId) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tif (!list) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tif (!restrictedRolePermissions.has(roleId)) {\n\t\t\trestrictedRolePermissions.set(roleId, new Set());\n\t\t}\n\n\t\tconst rules = restrictedRolePermissions.get(roleId);\n\n\t\tfor (const permissionId of list) {\n\t\t\trules.add(permissionId);\n\t\t}\n\t}\n\n\tstatic isPermissionRestrictedForRole(permissionId: string, roleId: string): boolean {\n\t\tif (!roleId || !permissionId) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tif (!restrictedRolePermissions.has(roleId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst rules = restrictedRolePermissions.get(roleId);\n\t\tif (!rules || !rules.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !rules.has(permissionId);\n\t}\n\n\tstatic isPermissionRestrictedForRoleList(permissionId: string, roleList: string[]): boolean {\n\t\tif (!roleList || !permissionId) {\n\t\t\tthrow new Error('invalid-param');\n\t\t}\n\n\t\tfor (const roleId of roleList) {\n\t\t\tif (this.isPermissionRestrictedForRole(permissionId, roleId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"c92774de68b7371d933abe8eab8d09fee9bc4ed1"}
