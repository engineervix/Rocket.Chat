{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/Stream.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/voip/Stream.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/Stream.ts","inputSourceMap":{"version":3,"file":"client/lib/voip/Stream.ts","sourceRoot":"","sources":["client/lib/voip/Stream.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;AAEH,MAAM,CAAC,OAAO,OAAO,MAAM;IAClB,WAAW,CAA0B;IAErC,qBAAqB,CAA+B;IAE5D,YAAY,WAAwB;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAChC,CAAC;IACD;;;;OAIG;IAEK,UAAU;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC;QAC7C,IAAI,MAAM,EAAE;YACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;aACjB;SACD;IACF,CAAC;IAED;;;OAGG;IAEH,YAAY,CAAC,QAAa;QACzB,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED;;;OAGG;IAEH,cAAc,CAAC,QAAa;QAC3B,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED;;;OAGG;IAEH,IAAI,CAAC,SAA2B;QAC/B,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC/B,sEAAsE;YACtE,mCAAmC;YACnC,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;YACnC,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC;SAC5C;QACD,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;IACxC,CAAC;IACD;;;;;OAKG;IAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,SAAS,GAAG,KAAK;QACtC,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,WAAW,EAAE;YACnD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/C,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YACxD,IAAI,QAAQ,EAAE;gBACb,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;oBACxD,MAAM,KAAK,CAAC;gBACb,CAAC,CAAC,CAAC;aACH;YACD,IAAI,SAAS,EAAE;gBACd,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC;aACtC;SACD;IACF,CAAC;IAED;;;OAGG;IACH,KAAK;QACJ,IAAI,CAAC,qBAAqB,EAAE,KAAK,EAAE,CAAC;IACrC,CAAC;IAED;;;;;;;OAOG;IAEH,KAAK;QACJ,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,WAAW,EAAE;YACnD,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;YACnC,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC;YAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAC7B;IACF,CAAC;CACD","sourcesContent":["/**\n * This class is used for stream manipulation.\n * @remarks\n * This class wraps up browser media stream and HTMLMedia element\n * and takes care of rendering the media on a given element.\n * This provides enough abstraction so that the higher level\n * classes do not need to know about the browser specificities for\n * media.\n * This will also provide stream related functionalities such as\n * mixing of 2 streams in to 2, adding/removing tracks, getting a track information\n * detecting voice energy etc. Which will be implemented as when needed\n */\n\nexport default class Stream {\n\tprivate mediaStream: MediaStream | undefined;\n\n\tprivate renderingMediaElement: HTMLMediaElement | undefined;\n\n\tconstructor(mediaStream: MediaStream) {\n\t\tthis.mediaStream = mediaStream;\n\t}\n\t/**\n\t * Called for stopping the tracks in a given stream.\n\t * @remarks\n\t * All the tracks from a given stream will be stopped.\n\t */\n\n\tprivate stopTracks(): void {\n\t\tconst tracks = this.mediaStream?.getTracks();\n\t\tif (tracks) {\n\t\t\tfor (let i = 0; i < tracks?.length; i++) {\n\t\t\t\ttracks[i].stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called for setting the callback when the track gets added\n\t * @remarks\n\t */\n\n\tonTrackAdded(callBack: any): void {\n\t\tthis.mediaStream?.onaddtrack?.(callBack);\n\t}\n\n\t/**\n\t * Called for setting the callback when the track gets removed\n\t * @remarks\n\t */\n\n\tonTrackRemoved(callBack: any): void {\n\t\tthis.mediaStream?.onremovetrack?.(callBack);\n\t}\n\n\t/**\n\t * Called for initializing the class\n\t * @remarks\n\t */\n\n\tinit(rmElement: HTMLMediaElement): void {\n\t\tif (this.renderingMediaElement) {\n\t\t\t// Someone already has setup the stream and initializing it once again\n\t\t\t// Clear the existing stream object\n\t\t\tthis.renderingMediaElement.pause();\n\t\t\tthis.renderingMediaElement.srcObject = null;\n\t\t}\n\t\tthis.renderingMediaElement = rmElement;\n\t}\n\t/**\n\t * Called for playing the stream\n\t * @remarks\n\t * Plays the stream on media element. Stream will be autoplayed and muted based on the settings.\n\t * throws and error if the play fails.\n\t */\n\n\tplay(autoPlay = true, muteAudio = false): void {\n\t\tif (this.renderingMediaElement && this.mediaStream) {\n\t\t\tthis.renderingMediaElement.autoplay = autoPlay;\n\t\t\tthis.renderingMediaElement.srcObject = this.mediaStream;\n\t\t\tif (autoPlay) {\n\t\t\t\tthis.renderingMediaElement.play().catch((error: Error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (muteAudio) {\n\t\t\t\tthis.renderingMediaElement.volume = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called for pausing the stream\n\t * @remarks\n\t */\n\tpause(): void {\n\t\tthis.renderingMediaElement?.pause();\n\t}\n\n\t/**\n\t * Called for clearing the streams and media element.\n\t * @remarks\n\t * This function stops the media element play, clears the srcObject\n\t * stops all the tracks in the stream and sets media stream to undefined.\n\t * This function ususally gets called when call ends or to clear the previous stream\n\t * when the stream is switched to another stream.\n\t */\n\n\tclear(): void {\n\t\tif (this.renderingMediaElement && this.mediaStream) {\n\t\t\tthis.renderingMediaElement.pause();\n\t\t\tthis.renderingMediaElement.srcObject = null;\n\t\t\tthis.stopTracks();\n\t\t\tthis.mediaStream = undefined;\n\t\t}\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/Stream.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/voip/Stream.ts"}},"code":"module.export({\n  \"default\": function () {\n    return Stream;\n  }\n});\n\nvar Stream = /*#__PURE__*/function () {\n  function Stream(mediaStream) {\n    this.mediaStream = void 0;\n    this.renderingMediaElement = void 0;\n    this.mediaStream = mediaStream;\n  }\n  /**\n   * Called for stopping the tracks in a given stream.\n   * @remarks\n   * All the tracks from a given stream will be stopped.\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.stopTracks = function () {\n    function stopTracks() {\n      var _this$mediaStream;\n\n      var tracks = (_this$mediaStream = this.mediaStream) === null || _this$mediaStream === void 0 ? void 0 : _this$mediaStream.getTracks();\n\n      if (tracks) {\n        for (var i = 0; i < (tracks === null || tracks === void 0 ? void 0 : tracks.length); i++) {\n          tracks[i].stop();\n        }\n      }\n    }\n\n    return stopTracks;\n  }()\n  /**\n   * Called for setting the callback when the track gets added\n   * @remarks\n   */\n  ;\n\n  _proto.onTrackAdded = function () {\n    function onTrackAdded(callBack) {\n      var _this$mediaStream2, _this$mediaStream2$on;\n\n      (_this$mediaStream2 = this.mediaStream) === null || _this$mediaStream2 === void 0 ? void 0 : (_this$mediaStream2$on = _this$mediaStream2.onaddtrack) === null || _this$mediaStream2$on === void 0 ? void 0 : _this$mediaStream2$on.call(_this$mediaStream2, callBack);\n    }\n\n    return onTrackAdded;\n  }()\n  /**\n   * Called for setting the callback when the track gets removed\n   * @remarks\n   */\n  ;\n\n  _proto.onTrackRemoved = function () {\n    function onTrackRemoved(callBack) {\n      var _this$mediaStream3, _this$mediaStream3$on;\n\n      (_this$mediaStream3 = this.mediaStream) === null || _this$mediaStream3 === void 0 ? void 0 : (_this$mediaStream3$on = _this$mediaStream3.onremovetrack) === null || _this$mediaStream3$on === void 0 ? void 0 : _this$mediaStream3$on.call(_this$mediaStream3, callBack);\n    }\n\n    return onTrackRemoved;\n  }()\n  /**\n   * Called for initializing the class\n   * @remarks\n   */\n  ;\n\n  _proto.init = function () {\n    function init(rmElement) {\n      if (this.renderingMediaElement) {\n        // Someone already has setup the stream and initializing it once again\n        // Clear the existing stream object\n        this.renderingMediaElement.pause();\n        this.renderingMediaElement.srcObject = null;\n      }\n\n      this.renderingMediaElement = rmElement;\n    }\n\n    return init;\n  }()\n  /**\n   * Called for playing the stream\n   * @remarks\n   * Plays the stream on media element. Stream will be autoplayed and muted based on the settings.\n   * throws and error if the play fails.\n   */\n  ;\n\n  _proto.play = function () {\n    function play() {\n      var autoPlay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var muteAudio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.renderingMediaElement && this.mediaStream) {\n        this.renderingMediaElement.autoplay = autoPlay;\n        this.renderingMediaElement.srcObject = this.mediaStream;\n\n        if (autoPlay) {\n          this.renderingMediaElement.play().catch(function (error) {\n            throw error;\n          });\n        }\n\n        if (muteAudio) {\n          this.renderingMediaElement.volume = 0;\n        }\n      }\n    }\n\n    return play;\n  }()\n  /**\n   * Called for pausing the stream\n   * @remarks\n   */\n  ;\n\n  _proto.pause = function () {\n    function pause() {\n      var _this$renderingMediaE;\n\n      (_this$renderingMediaE = this.renderingMediaElement) === null || _this$renderingMediaE === void 0 ? void 0 : _this$renderingMediaE.pause();\n    }\n\n    return pause;\n  }()\n  /**\n   * Called for clearing the streams and media element.\n   * @remarks\n   * This function stops the media element play, clears the srcObject\n   * stops all the tracks in the stream and sets media stream to undefined.\n   * This function ususally gets called when call ends or to clear the previous stream\n   * when the stream is switched to another stream.\n   */\n  ;\n\n  _proto.clear = function () {\n    function clear() {\n      if (this.renderingMediaElement && this.mediaStream) {\n        this.renderingMediaElement.pause();\n        this.renderingMediaElement.srcObject = null;\n        this.stopTracks();\n        this.mediaStream = undefined;\n      }\n    }\n\n    return clear;\n  }();\n\n  return Stream;\n}();","map":{"version":3,"sources":["client/lib/voip/Stream.ts"],"names":[],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,aAAA,YAAA;AAAA,WAAA,MAAA;AAAA;AAAA,CAAA;;IAaqB,M;AAKpB,kBAAY,WAAZ,EAAoC;AAAA,SAJ5B,WAI4B;AAAA,SAF5B,qBAE4B;AACnC,SAAK,WAAL,GAAmB,WAAnB;AACA;AACD;;;;AAIG;;;;;SAEK,U;AAAA,0BAAU;AAAA;;AACjB,UAAM,MAAM,wBAAG,KAAK,WAAR,sDAAG,kBAAkB,SAAlB,EAAf;;AACA,UAAI,MAAJ,EAAY;AACX,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAG,MAAH,aAAG,MAAH,uBAAG,MAAM,CAAE,MAAX,CAAjB,EAAoC,CAAC,EAArC,EAAyC;AACxC,UAAA,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV;AACA;AACD;AACD;;;;AAED;;;AAGG;;;SAEH,Y;AAAA,0BAAa,QAAb,EAA0B;AAAA;;AACzB,iCAAK,WAAL,mGAAkB,UAAlB,yGAA+B,QAA/B;AACA;;;;AAED;;;AAGG;;;SAEH,c;AAAA,4BAAe,QAAf,EAA4B;AAAA;;AAC3B,iCAAK,WAAL,mGAAkB,aAAlB,yGAAkC,QAAlC;AACA;;;;AAED;;;AAGG;;;SAEH,I;AAAA,kBAAK,SAAL,EAAgC;AAC/B,UAAI,KAAK,qBAAT,EAAgC;AAC/B;AACA;AACA,aAAK,qBAAL,CAA2B,KAA3B;AACA,aAAK,qBAAL,CAA2B,SAA3B,GAAuC,IAAvC;AACA;;AACD,WAAK,qBAAL,GAA6B,SAA7B;AACA;;;;AACD;;;;;AAKG;;;SAEH,I;AAAA,oBAAuC;AAAA,UAAlC,QAAkC,uEAAvB,IAAuB;AAAA,UAAjB,SAAiB,uEAAL,KAAK;;AACtC,UAAI,KAAK,qBAAL,IAA8B,KAAK,WAAvC,EAAoD;AACnD,aAAK,qBAAL,CAA2B,QAA3B,GAAsC,QAAtC;AACA,aAAK,qBAAL,CAA2B,SAA3B,GAAuC,KAAK,WAA5C;;AACA,YAAI,QAAJ,EAAc;AACb,eAAK,qBAAL,CAA2B,IAA3B,GAAkC,KAAlC,CAAwC,UAAC,KAAD,EAAiB;AACxD,kBAAM,KAAN;AACA,WAFD;AAGA;;AACD,YAAI,SAAJ,EAAe;AACd,eAAK,qBAAL,CAA2B,MAA3B,GAAoC,CAApC;AACA;AACD;AACD;;;;AAED;;;AAGG;;;SACH,K;AAAA,qBAAK;AAAA;;AACJ,oCAAK,qBAAL,gFAA4B,KAA5B;AACA;;;;AAED;;;;;;;AAOG;;;SAEH,K;AAAA,qBAAK;AACJ,UAAI,KAAK,qBAAL,IAA8B,KAAK,WAAvC,EAAoD;AACnD,aAAK,qBAAL,CAA2B,KAA3B;AACA,aAAK,qBAAL,CAA2B,SAA3B,GAAuC,IAAvC;AACA,aAAK,UAAL;AACA,aAAK,WAAL,GAAmB,SAAnB;AACA;AACD","sourcesContent":["/**\n * This class is used for stream manipulation.\n * @remarks\n * This class wraps up browser media stream and HTMLMedia element\n * and takes care of rendering the media on a given element.\n * This provides enough abstraction so that the higher level\n * classes do not need to know about the browser specificities for\n * media.\n * This will also provide stream related functionalities such as\n * mixing of 2 streams in to 2, adding/removing tracks, getting a track information\n * detecting voice energy etc. Which will be implemented as when needed\n */\n\nexport default class Stream {\n\tprivate mediaStream: MediaStream | undefined;\n\n\tprivate renderingMediaElement: HTMLMediaElement | undefined;\n\n\tconstructor(mediaStream: MediaStream) {\n\t\tthis.mediaStream = mediaStream;\n\t}\n\t/**\n\t * Called for stopping the tracks in a given stream.\n\t * @remarks\n\t * All the tracks from a given stream will be stopped.\n\t */\n\n\tprivate stopTracks(): void {\n\t\tconst tracks = this.mediaStream?.getTracks();\n\t\tif (tracks) {\n\t\t\tfor (let i = 0; i < tracks?.length; i++) {\n\t\t\t\ttracks[i].stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called for setting the callback when the track gets added\n\t * @remarks\n\t */\n\n\tonTrackAdded(callBack: any): void {\n\t\tthis.mediaStream?.onaddtrack?.(callBack);\n\t}\n\n\t/**\n\t * Called for setting the callback when the track gets removed\n\t * @remarks\n\t */\n\n\tonTrackRemoved(callBack: any): void {\n\t\tthis.mediaStream?.onremovetrack?.(callBack);\n\t}\n\n\t/**\n\t * Called for initializing the class\n\t * @remarks\n\t */\n\n\tinit(rmElement: HTMLMediaElement): void {\n\t\tif (this.renderingMediaElement) {\n\t\t\t// Someone already has setup the stream and initializing it once again\n\t\t\t// Clear the existing stream object\n\t\t\tthis.renderingMediaElement.pause();\n\t\t\tthis.renderingMediaElement.srcObject = null;\n\t\t}\n\t\tthis.renderingMediaElement = rmElement;\n\t}\n\t/**\n\t * Called for playing the stream\n\t * @remarks\n\t * Plays the stream on media element. Stream will be autoplayed and muted based on the settings.\n\t * throws and error if the play fails.\n\t */\n\n\tplay(autoPlay = true, muteAudio = false): void {\n\t\tif (this.renderingMediaElement && this.mediaStream) {\n\t\t\tthis.renderingMediaElement.autoplay = autoPlay;\n\t\t\tthis.renderingMediaElement.srcObject = this.mediaStream;\n\t\t\tif (autoPlay) {\n\t\t\t\tthis.renderingMediaElement.play().catch((error: Error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (muteAudio) {\n\t\t\t\tthis.renderingMediaElement.volume = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called for pausing the stream\n\t * @remarks\n\t */\n\tpause(): void {\n\t\tthis.renderingMediaElement?.pause();\n\t}\n\n\t/**\n\t * Called for clearing the streams and media element.\n\t * @remarks\n\t * This function stops the media element play, clears the srcObject\n\t * stops all the tracks in the stream and sets media stream to undefined.\n\t * This function ususally gets called when call ends or to clear the previous stream\n\t * when the stream is switched to another stream.\n\t */\n\n\tclear(): void {\n\t\tif (this.renderingMediaElement && this.mediaStream) {\n\t\t\tthis.renderingMediaElement.pause();\n\t\t\tthis.renderingMediaElement.srcObject = null;\n\t\t\tthis.stopTracks();\n\t\t\tthis.mediaStream = undefined;\n\t\t}\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"bf01b0efc38937809bd1910f62c1cd9e2f6a22ec"}
