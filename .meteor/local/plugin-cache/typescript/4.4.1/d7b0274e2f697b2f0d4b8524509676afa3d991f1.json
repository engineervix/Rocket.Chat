{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/lists/FilesList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/lists/FilesList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/lists/FilesList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/FilesList.ts","sourceRoot":"","sources":["client/lib/lists/FilesList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAU5C,MAAM,mBAAmB,GAAG,CAAC,OAAiB,EAAE,GAAoB,EAA2B,EAAE,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,OAAO,CAAC;AAE1I,MAAM,OAAO,SAAU,SAAQ,WAAW;IACd;IAA3B,YAA2B,QAA0B;QACpD,KAAK,EAAE,CAAC;QADkB,aAAQ,GAAR,QAAQ,CAAkB;IAErD,CAAC;IAED,IAAW,OAAO;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,aAAa,CAAC,OAAyB;QAC7C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;IACd,CAAC;IAES,MAAM,CAAC,OAAiB;QACjC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;YACvC,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAES,OAAO,CAAC,CAAW,EAAE,CAAW;QACzC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;IAC9D,CAAC;CACD","sourcesContent":["import type { IMessage } from '../../../definition/IMessage';\nimport { MessageList } from './MessageList';\n\ntype FilesMessage = Omit<IMessage, 'rid'> & Required<Pick<IMessage, 'rid'>>;\n\nexport type FilesListOptions = {\n\trid: IMessage['rid'];\n\ttype: string;\n\ttext: string;\n};\n\nconst isFileMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is FilesMessage => message.rid === rid && 'rid' in message;\n\nexport class FilesList extends MessageList {\n\tpublic constructor(private _options: FilesListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): FilesListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: FilesListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IMessage): boolean {\n\t\tconst { rid } = this._options;\n\n\t\tif (!isFileMessageInRoom(message, rid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected compare(a: IMessage, b: IMessage): number {\n\t\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/lists/FilesList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/lists/FilesList.ts"}},"code":"module.export({\n  FilesList: () => FilesList\n});\nlet MessageList;\nmodule.link(\"./MessageList\", {\n  MessageList(v) {\n    MessageList = v;\n  }\n\n}, 0);\n\nconst isFileMessageInRoom = (message, rid) => message.rid === rid && 'rid' in message;\n\nclass FilesList extends MessageList {\n  constructor(_options) {\n    super();\n    this._options = void 0;\n    this._options = _options;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  updateFilters(options) {\n    this._options = options;\n    this.clear();\n  }\n\n  filter(message) {\n    const {\n      rid\n    } = this._options;\n\n    if (!isFileMessageInRoom(message, rid)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  compare(a, b) {\n    var _b$tlm, _a$tlm;\n\n    return ((_b$tlm = b.tlm) !== null && _b$tlm !== void 0 ? _b$tlm : b.ts).getTime() - ((_a$tlm = a.tlm) !== null && _a$tlm !== void 0 ? _a$tlm : a.ts).getTime();\n  }\n\n}","map":{"version":3,"sources":["client/lib/lists/FilesList.ts"],"names":[],"mappings":"AACA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,SAAa,EAAA,MAAM;AAAnB,CAAT;AAA4B,IAAgB,WAAhB;AAAgB,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAU5C,MAAM,mBAAmB,GAAG,CAAC,OAAD,EAAoB,GAApB,KAAsE,OAAO,CAAC,GAAR,KAAgB,GAAhB,IAAuB,SAAS,OAAlI;;AAEM,MAAO,SAAP,SAAyB,WAAzB,CAAoC;AACzC,EAAA,WAAA,CAA2B,QAA3B,EAAqD;AACpD;AADoD,SAA1B,QAA0B;AAA1B,SAAA,QAAA,GAAA,QAAA;AAE1B;;AAEiB,MAAP,OAAO,GAAA;AACjB,WAAO,KAAK,QAAZ;AACA;;AAEM,EAAA,aAAa,CAAC,OAAD,EAA0B;AAC7C,SAAK,QAAL,GAAgB,OAAhB;AACA,SAAK,KAAL;AACA;;AAES,EAAA,MAAM,CAAC,OAAD,EAAkB;AACjC,UAAM;AAAE,MAAA;AAAF,QAAU,KAAK,QAArB;;AAEA,QAAI,CAAC,mBAAmB,CAAC,OAAD,EAAU,GAAV,CAAxB,EAAwC;AACvC,aAAO,KAAP;AACA;;AAED,WAAO,IAAP;AACA;;AAES,EAAA,OAAO,CAAC,CAAD,EAAc,CAAd,EAAyB;AAAA;;AACzC,WAAO,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,KAA4B,WAAC,CAAC,CAAC,GAAH,2CAAU,CAAC,CAAC,EAAZ,EAAgB,OAAhB,EAAnC;AACA;;AA1BwC","sourcesContent":["import type { IMessage } from '../../../definition/IMessage';\nimport { MessageList } from './MessageList';\n\ntype FilesMessage = Omit<IMessage, 'rid'> & Required<Pick<IMessage, 'rid'>>;\n\nexport type FilesListOptions = {\n\trid: IMessage['rid'];\n\ttype: string;\n\ttext: string;\n};\n\nconst isFileMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is FilesMessage => message.rid === rid && 'rid' in message;\n\nexport class FilesList extends MessageList {\n\tpublic constructor(private _options: FilesListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): FilesListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: FilesListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IMessage): boolean {\n\t\tconst { rid } = this._options;\n\n\t\tif (!isFileMessageInRoom(message, rid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected compare(a: IMessage, b: IMessage): number {\n\t\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"d7b0274e2f697b2f0d4b8524509676afa3d991f1"}
