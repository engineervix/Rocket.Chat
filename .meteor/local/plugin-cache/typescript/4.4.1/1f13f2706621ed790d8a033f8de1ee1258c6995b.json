{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useEndpointAction.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/useEndpointAction.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useEndpointAction.ts","inputSourceMap":{"version":3,"file":"client/hooks/useEndpointAction.ts","sourceRoot":"","sources":["client/hooks/useEndpointAction.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAIpC,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AACxD,OAAO,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAC;AAE3E,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAChC,MAAe,EACf,IAAW,EACX,SAAwE,EAEvE,EACD,cAAuB,EAC0D,EAAE;IACnF,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3C,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IAEvD,OAAO,WAAW,CAAC,KAAK,IAAI,EAAE;QAC7B,IAAI;YACH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC;YAEpC,IAAI,cAAc,EAAE;gBACnB,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;aACnE;YAED,OAAO,IAAI,CAAC;SACZ;QAAC,OAAO,KAAK,EAAE;YACf,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAChE,MAAM,KAAK,CAAC;SACZ;IACF,CAAC,EAAE,CAAC,oBAAoB,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC","sourcesContent":["import { useCallback } from 'react';\n\nimport { Serialized } from '../../definition/Serialized';\nimport { MatchPathPattern, Method, OperationParams, OperationResult, PathFor } from '../../definition/rest';\nimport { useEndpoint } from '../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\n\nexport const useEndpointAction = <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\tmethod: TMethod,\n\tpath: TPath,\n\tparams: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>> = {} as Serialized<\n\t\tOperationParams<TMethod, MatchPathPattern<TPath>>\n\t>,\n\tsuccessMessage?: string,\n): (() => Promise<Serialized<OperationResult<TMethod, MatchPathPattern<TPath>>>>) => {\n\tconst sendData = useEndpoint(method, path);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useCallback(async () => {\n\t\ttry {\n\t\t\tconst data = await sendData(params);\n\n\t\t\tif (successMessage) {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t}\n\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: String(error) });\n\t\t\tthrow error;\n\t\t}\n\t}, [dispatchToastMessage, params, sendData, successMessage]);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useEndpointAction.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useEndpointAction.ts"}},"code":"module.export({\n  useEndpointAction: () => useEndpointAction\n});\nlet useCallback;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 0);\nlet useEndpoint;\nmodule.link(\"../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 1);\nlet useToastMessageDispatch;\nmodule.link(\"../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 2);\n\nconst useEndpointAction = function (method, path) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let successMessage = arguments.length > 3 ? arguments[3] : undefined;\n  const sendData = useEndpoint(method, path);\n  const dispatchToastMessage = useToastMessageDispatch();\n  return useCallback(async () => {\n    try {\n      const data = await sendData(params);\n\n      if (successMessage) {\n        dispatchToastMessage({\n          type: 'success',\n          message: successMessage\n        });\n      }\n\n      return data;\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: String(error)\n      });\n      throw error;\n    }\n  }, [dispatchToastMessage, params, sendData, successMessage]);\n};","map":{"version":3,"sources":["client/hooks/useEndpointAction.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,iBAAmB,EAAA,MAAQ;AAA3B,CAAT;AAAoC,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAO7B,MAAM,iBAAiB,GAAG,UAChC,MADgC,EAEhC,IAFgC,EAOmD;AAAA,MAJnF,MAImF,uEAJX,EAIW;AAAA,MADnF,cACmF;AACnF,QAAM,QAAQ,GAAG,WAAW,CAAC,MAAD,EAAS,IAAT,CAA5B;AACA,QAAM,oBAAoB,GAAG,uBAAuB,EAApD;AAEA,SAAO,WAAW,CAAC,YAAW;AAC7B,QAAI;AACH,YAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,MAAD,CAA3B;;AAEA,UAAI,cAAJ,EAAoB;AACnB,QAAA,oBAAoB,CAAC;AAAE,UAAA,IAAI,EAAE,SAAR;AAAmB,UAAA,OAAO,EAAE;AAA5B,SAAD,CAApB;AACA;;AAED,aAAO,IAAP;AACA,KARD,CAQE,OAAO,KAAP,EAAc;AACf,MAAA,oBAAoB,CAAC;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,OAAO,EAAE,MAAM,CAAC,KAAD;AAAhC,OAAD,CAApB;AACA,YAAM,KAAN;AACA;AACD,GAbiB,EAaf,CAAC,oBAAD,EAAuB,MAAvB,EAA+B,QAA/B,EAAyC,cAAzC,CAbe,CAAlB;AAcA,CAzBM","sourcesContent":["import { useCallback } from 'react';\n\nimport { Serialized } from '../../definition/Serialized';\nimport { MatchPathPattern, Method, OperationParams, OperationResult, PathFor } from '../../definition/rest';\nimport { useEndpoint } from '../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\n\nexport const useEndpointAction = <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\tmethod: TMethod,\n\tpath: TPath,\n\tparams: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>> = {} as Serialized<\n\t\tOperationParams<TMethod, MatchPathPattern<TPath>>\n\t>,\n\tsuccessMessage?: string,\n): (() => Promise<Serialized<OperationResult<TMethod, MatchPathPattern<TPath>>>>) => {\n\tconst sendData = useEndpoint(method, path);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useCallback(async () => {\n\t\ttry {\n\t\t\tconst data = await sendData(params);\n\n\t\t\tif (successMessage) {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t}\n\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: String(error) });\n\t\t\tthrow error;\n\t\t}\n\t}, [dispatchToastMessage, params, sendData, successMessage]);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"1f13f2706621ed790d8a033f8de1ee1258c6995b"}
