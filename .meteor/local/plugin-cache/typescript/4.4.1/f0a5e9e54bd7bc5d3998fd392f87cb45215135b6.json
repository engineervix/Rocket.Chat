{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts","inputSourceMap":{"version":3,"file":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts","sourceRoot":"","sources":["client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,SAAS,EAAE,MAAM,iCAAiC,CAAC;AAE5D,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAM,SAAQ,OAAO;IACrD,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;IAElC;QACC,KAAK,EAAE,CAAC;IACT,CAAC;IAEM,GAAG,CAAC,KAAa,EAAE,IAAY;QACrC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;YACpB,OAAO;SACP;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,EAAE;YACvC,OAAO,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC;SAC1B;QACD,SAAS,CAAC,GAAG,CAAC,eAAe,KAAK,mBAAmB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClF,IAAI,CAAC,KAAK,CAAC,GAAG,CACb,GAAG,KAAK,IAAI,IAAI,EAAE,EAClB,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAC5B,WAAW,EAAE,CAAC,IAAI,CAAC;gBACnB,SAAS,EAAE,4BAA4B;gBACvC,YAAY,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;aAC7C,CAAC;iBACA,OAAO,CAAC,MAAM,EAAE,eAAe,KAAK,IAAI,IAAI,GAAG,CAAC;iBAChD,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAChC,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;CACD,CAAC,EAAE,CAAC;AAEL,eAAe,mBAAmB,CAAC","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport DOMPurify from 'dompurify';\n\nimport { APIClient } from '../../../../../app/utils/client';\n\nconst OmnichannelRoomIcon = new (class extends Emitter {\n\ticons = new Map<string, string>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic get(appId: string, icon: string): string | undefined {\n\t\tif (!appId || !icon) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.icons.has(`${appId}-${icon}`)) {\n\t\t\treturn `${appId}-${icon}`;\n\t\t}\n\t\tAPIClient.get(`apps/public/${appId}/get-sidebar-icon`, { icon }).then((response) => {\n\t\t\tthis.icons.set(\n\t\t\t\t`${appId}-${icon}`,\n\t\t\t\tDOMPurify.sanitize(response, {\n\t\t\t\t\tFORBID_ATTR: ['id'],\n\t\t\t\t\tNAMESPACE: 'http://www.w3.org/2000/svg',\n\t\t\t\t\tUSE_PROFILES: { svg: true, svgFilters: true },\n\t\t\t\t})\n\t\t\t\t\t.replace(`<svg`, `<symbol id=\"${appId}-${icon}\"`)\n\t\t\t\t\t.replace(`</svg>`, '</symbol>'),\n\t\t\t);\n\t\t\tthis.emit('change');\n\t\t\tthis.emit(`${appId}-${icon}`);\n\t\t});\n\t}\n})();\n\nexport default OmnichannelRoomIcon;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts"}},"code":"let Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 0);\nlet DOMPurify;\nmodule.link(\"dompurify\", {\n  default(v) {\n    DOMPurify = v;\n  }\n\n}, 1);\nlet APIClient;\nmodule.link(\"../../../../../app/utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 2);\nconst OmnichannelRoomIcon = new class extends Emitter {\n  constructor() {\n    super();\n    this.icons = new Map();\n  }\n\n  get(appId, icon) {\n    if (!appId || !icon) {\n      return;\n    }\n\n    if (this.icons.has(\"\".concat(appId, \"-\").concat(icon))) {\n      return \"\".concat(appId, \"-\").concat(icon);\n    }\n\n    APIClient.get(\"apps/public/\".concat(appId, \"/get-sidebar-icon\"), {\n      icon\n    }).then(response => {\n      this.icons.set(\"\".concat(appId, \"-\").concat(icon), DOMPurify.sanitize(response, {\n        FORBID_ATTR: ['id'],\n        NAMESPACE: 'http://www.w3.org/2000/svg',\n        USE_PROFILES: {\n          svg: true,\n          svgFilters: true\n        }\n      }).replace(\"<svg\", \"<symbol id=\\\"\".concat(appId, \"-\").concat(icon, \"\\\"\")).replace(\"</svg>\", '</symbol>'));\n      this.emit('change');\n      this.emit(\"\".concat(appId, \"-\").concat(icon));\n    });\n  }\n\n}();\nmodule.exportDefault(OmnichannelRoomIcon);","map":{"version":3,"sources":["client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIcon.ts"],"names":[],"mappings":"AAAA,IAAA,OAAA;AAAS,MAAS,CAAA,IAAT,CAAe,sBAAf,EAAsC;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAtC,EAAsC,CAAtC;AAAsC,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAK/C,MAAM,mBAAmB,GAAG,IAAK,cAAc,OAAd,CAAqB;AAGrD,EAAA,WAAA,GAAA;AACC;AADD,SAFA,KAEA,GAFQ,IAAI,GAAJ,EAER;AAEC;;AAEM,EAAA,GAAG,CAAC,KAAD,EAAgB,IAAhB,EAA4B;AACrC,QAAI,CAAC,KAAD,IAAU,CAAC,IAAf,EAAqB;AACpB;AACA;;AACD,QAAI,KAAK,KAAL,CAAW,GAAX,WAAkB,KAAlB,cAA2B,IAA3B,EAAJ,EAAwC;AACvC,uBAAU,KAAV,cAAmB,IAAnB;AACA;;AACD,IAAA,SAAS,CAAC,GAAV,uBAA6B,KAA7B,wBAAuD;AAAE,MAAA;AAAF,KAAvD,EAAiE,IAAjE,CAAuE,QAAD,IAAa;AAClF,WAAK,KAAL,CAAW,GAAX,WACI,KADJ,cACa,IADb,GAEC,SAAS,CAAC,QAAV,CAAmB,QAAnB,EAA6B;AAC5B,QAAA,WAAW,EAAE,CAAC,IAAD,CADe;AAE5B,QAAA,SAAS,EAAE,4BAFiB;AAG5B,QAAA,YAAY,EAAE;AAAE,UAAA,GAAG,EAAE,IAAP;AAAa,UAAA,UAAU,EAAE;AAAzB;AAHc,OAA7B,EAKE,OALF,gCAKiC,KALjC,cAK0C,IAL1C,SAME,OANF,WAMoB,WANpB,CAFD;AAUA,WAAK,IAAL,CAAU,QAAV;AACA,WAAK,IAAL,WAAa,KAAb,cAAsB,IAAtB;AACA,KAbD;AAcA;;AA5BoD,CAA1B,EAA5B;AALA,MAAA,CAAO,aAAP,CAoCe,mBApCf","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport DOMPurify from 'dompurify';\n\nimport { APIClient } from '../../../../../app/utils/client';\n\nconst OmnichannelRoomIcon = new (class extends Emitter {\n\ticons = new Map<string, string>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic get(appId: string, icon: string): string | undefined {\n\t\tif (!appId || !icon) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.icons.has(`${appId}-${icon}`)) {\n\t\t\treturn `${appId}-${icon}`;\n\t\t}\n\t\tAPIClient.get(`apps/public/${appId}/get-sidebar-icon`, { icon }).then((response) => {\n\t\t\tthis.icons.set(\n\t\t\t\t`${appId}-${icon}`,\n\t\t\t\tDOMPurify.sanitize(response, {\n\t\t\t\t\tFORBID_ATTR: ['id'],\n\t\t\t\t\tNAMESPACE: 'http://www.w3.org/2000/svg',\n\t\t\t\t\tUSE_PROFILES: { svg: true, svgFilters: true },\n\t\t\t\t})\n\t\t\t\t\t.replace(`<svg`, `<symbol id=\"${appId}-${icon}\"`)\n\t\t\t\t\t.replace(`</svg>`, '</symbol>'),\n\t\t\t);\n\t\t\tthis.emit('change');\n\t\t\tthis.emit(`${appId}-${icon}`);\n\t\t});\n\t}\n})();\n\nexport default OmnichannelRoomIcon;\n"],"sourceRoot":""},"sourceType":"module","hash":"f0a5e9e54bd7bc5d3998fd392f87cb45215135b6"}
