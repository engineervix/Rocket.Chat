{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/e2e.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/e2e.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/e2e.ts","inputSourceMap":{"version":3,"file":"client/startup/e2e.ts","sourceRoot":"","sources":["client/startup/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { Subscriptions, Rooms } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { settings } from '../../app/settings/client';\nimport { IMessage } from '../../definition/IMessage';\nimport { IRoom } from '../../definition/IRoom';\nimport { ISubscription } from '../../definition/ISubscription';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\n\nconst handle = async (roomId: IRoom['_id'], keyId: string): Promise<void> => {\n\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\tif (!e2eRoom) {\n\t\treturn;\n\t}\n\n\te2eRoom.provideKeyToUser(keyId);\n};\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst adminEmbedded = isLayoutEmbedded() && FlowRouter.current().path.startsWith('/admin');\n\n\t\tif (!adminEmbedded && settings.get('E2E_Enable') && window.crypto) {\n\t\t\te2e.startClient();\n\t\t\te2e.enabled.set(true);\n\t\t} else {\n\t\t\te2e.enabled.set(false);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet observable: Meteor.LiveQueryHandle | null = null;\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\toffClientMessageReceived?.();\n\t\t\tNotifications.unUser('e2ekeyRequest', handle);\n\t\t\tobservable?.stop();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('e2ekeyRequest', handle);\n\n\t\tobservable = Subscriptions.find().observe({\n\t\t\tchanged: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(doc.rid);\n\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdoc.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\t\t// Cover private groups and direct messages\n\t\t\t\tif (!e2eRoom.isSupportedRoomType(doc.t)) {\n\t\t\t\t\te2eRoom.disable();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (doc.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!e2eRoom.isReady()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te2eRoom.decryptSubscription();\n\t\t\t},\n\t\t\tadded: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn e2e.getInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t\tremoved: (doc: ISubscription) => {\n\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t});\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom || !e2eRoom.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => Rooms.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\tconst msg = await e2eRoom.encrypt(message);\n\n\t\t\tmessage.msg = msg;\n\t\t\tmessage.t = 'e2e';\n\t\t\tmessage.e2e = 'pending';\n\t\t\treturn message;\n\t\t});\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/e2e.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/e2e.ts"}},"code":"let FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet e2e;\nmodule.link(\"../../app/e2e/client/rocketchat.e2e\", {\n  e2e(v) {\n    e2e = v;\n  }\n\n}, 3);\nlet Subscriptions, Rooms;\nmodule.link(\"../../app/models/client\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 4);\nlet Notifications;\nmodule.link(\"../../app/notifications/client\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet onClientBeforeSendMessage;\nmodule.link(\"../lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage(v) {\n    onClientBeforeSendMessage = v;\n  }\n\n}, 7);\nlet onClientMessageReceived;\nmodule.link(\"../lib/onClientMessageReceived\", {\n  onClientMessageReceived(v) {\n    onClientMessageReceived = v;\n  }\n\n}, 8);\nlet isLayoutEmbedded;\nmodule.link(\"../lib/utils/isLayoutEmbedded\", {\n  isLayoutEmbedded(v) {\n    isLayoutEmbedded = v;\n  }\n\n}, 9);\nlet waitUntilFind;\nmodule.link(\"../lib/utils/waitUntilFind\", {\n  waitUntilFind(v) {\n    waitUntilFind = v;\n  }\n\n}, 10);\n\nconst handle = async (roomId, keyId) => {\n  const e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\n  if (!e2eRoom) {\n    return;\n  }\n\n  e2eRoom.provideKeyToUser(keyId);\n};\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    if (!Meteor.userId()) {\n      return;\n    }\n\n    const adminEmbedded = isLayoutEmbedded() && FlowRouter.current().path.startsWith('/admin');\n\n    if (!adminEmbedded && settings.get('E2E_Enable') && window.crypto) {\n      e2e.startClient();\n      e2e.enabled.set(true);\n    } else {\n      e2e.enabled.set(false);\n      e2e.closeAlert();\n    }\n  });\n  let observable = null;\n  let offClientMessageReceived;\n  let offClientBeforeSendMessage;\n  Tracker.autorun(() => {\n    if (!e2e.isReady()) {\n      var _offClientMessageRece, _observable, _offClientBeforeSendM;\n\n      (_offClientMessageRece = offClientMessageReceived) === null || _offClientMessageRece === void 0 ? void 0 : _offClientMessageRece();\n      Notifications.unUser('e2ekeyRequest', handle);\n      (_observable = observable) === null || _observable === void 0 ? void 0 : _observable.stop();\n      (_offClientBeforeSendM = offClientBeforeSendMessage) === null || _offClientBeforeSendM === void 0 ? void 0 : _offClientBeforeSendM();\n      return;\n    }\n\n    Notifications.onUser('e2ekeyRequest', handle);\n    observable = Subscriptions.find().observe({\n      changed: async doc => {\n        if (!doc.encrypted && !doc.E2EKey) {\n          e2e.removeInstanceByRoomId(doc.rid);\n          return;\n        }\n\n        const e2eRoom = await e2e.getInstanceByRoomId(doc.rid);\n\n        if (!e2eRoom) {\n          return;\n        }\n\n        doc.encrypted ? e2eRoom.resume() : e2eRoom.pause(); // Cover private groups and direct messages\n\n        if (!e2eRoom.isSupportedRoomType(doc.t)) {\n          e2eRoom.disable();\n          return;\n        }\n\n        if (doc.E2EKey && e2eRoom.isWaitingKeys()) {\n          e2eRoom.keyReceived();\n          return;\n        }\n\n        if (!e2eRoom.isReady()) {\n          return;\n        }\n\n        e2eRoom.decryptSubscription();\n      },\n      added: async doc => {\n        if (!doc.encrypted && !doc.E2EKey) {\n          return;\n        }\n\n        return e2e.getInstanceByRoomId(doc.rid);\n      },\n      removed: doc => {\n        e2e.removeInstanceByRoomId(doc.rid);\n      }\n    });\n    offClientMessageReceived = onClientMessageReceived.use(async msg => {\n      const e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\n      if (!e2eRoom || !e2eRoom.shouldConvertReceivedMessages()) {\n        return msg;\n      }\n\n      return e2e.decryptMessage(msg);\n    }); // Encrypt messages before sending\n\n    offClientBeforeSendMessage = onClientBeforeSendMessage.use(async message => {\n      const e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n      if (!e2eRoom) {\n        return message;\n      }\n\n      const subscription = await waitUntilFind(() => Rooms.findOne({\n        _id: message.rid\n      }));\n      subscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n      const shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n      if (!shouldConvertSentMessages) {\n        return message;\n      } // Should encrypt this message.\n\n\n      const msg = await e2eRoom.encrypt(message);\n      message.msg = msg;\n      message.t = 'e2e';\n      message.e2e = 'pending';\n      return message;\n    });\n  });\n});","map":{"version":3,"sources":["client/startup/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { Subscriptions, Rooms } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { settings } from '../../app/settings/client';\nimport { IMessage } from '../../definition/IMessage';\nimport { IRoom } from '../../definition/IRoom';\nimport { ISubscription } from '../../definition/ISubscription';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\n\nconst handle = async (roomId: IRoom['_id'], keyId: string): Promise<void> => {\n\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\tif (!e2eRoom) {\n\t\treturn;\n\t}\n\n\te2eRoom.provideKeyToUser(keyId);\n};\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst adminEmbedded = isLayoutEmbedded() && FlowRouter.current().path.startsWith('/admin');\n\n\t\tif (!adminEmbedded && settings.get('E2E_Enable') && window.crypto) {\n\t\t\te2e.startClient();\n\t\t\te2e.enabled.set(true);\n\t\t} else {\n\t\t\te2e.enabled.set(false);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet observable: Meteor.LiveQueryHandle | null = null;\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\toffClientMessageReceived?.();\n\t\t\tNotifications.unUser('e2ekeyRequest', handle);\n\t\t\tobservable?.stop();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('e2ekeyRequest', handle);\n\n\t\tobservable = Subscriptions.find().observe({\n\t\t\tchanged: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(doc.rid);\n\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdoc.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\t\t// Cover private groups and direct messages\n\t\t\t\tif (!e2eRoom.isSupportedRoomType(doc.t)) {\n\t\t\t\t\te2eRoom.disable();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (doc.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!e2eRoom.isReady()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te2eRoom.decryptSubscription();\n\t\t\t},\n\t\t\tadded: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn e2e.getInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t\tremoved: (doc: ISubscription) => {\n\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t});\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom || !e2eRoom.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => Rooms.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\tconst msg = await e2eRoom.encrypt(message);\n\n\t\t\tmessage.msg = msg;\n\t\t\tmessage.t = 'e2e';\n\t\t\tmessage.e2e = 'pending';\n\t\t\treturn message;\n\t\t});\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"82619414f778052327371d919d8d55c9134b19dd"}
