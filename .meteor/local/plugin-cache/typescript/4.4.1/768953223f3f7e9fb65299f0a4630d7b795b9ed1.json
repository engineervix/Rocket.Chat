{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","inputSourceMap":{"version":3,"file":"client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","sourceRoot":"","sources":["client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACzC,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEhE,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AAEvE,OAAO,oBAAoB,MAAM,+FAA+F,CAAC;AACjI,OAAO,cAAc,MAAM,gEAAgE,CAAC;AAC5F,OAAO,kBAAkB,MAAM,oEAAoE,CAAC;AACpG,OAAO,gBAAgB,MAAM,kEAAkE,CAAC;AAChG,OAAO,oBAAoB,MAAM,sEAAsE,CAAC;AACxG,OAAO,eAAe,MAAM,iEAAiE,CAAC;AAC9F,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,iDAAiD,CAAC;AACzF,OAAO,EAAE,WAAW,EAAE,MAAM,yCAAyC,CAAC;AACtE,OAAO,EAAE,yBAAyB,EAAE,MAAM,+CAA+C,CAAC;AAC1F,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,0CAA0C,CAAC;AAClF,OAAO,EAAE,UAAU,EAAE,MAAM,4CAA4C,CAAC;AACxE,OAAO,EAAE,uBAAuB,EAAE,MAAM,iDAAiD,CAAC;AAC1F,OAAO,EAAE,cAAc,EAAE,MAAM,+CAA+C,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,MAAM,yCAAyC,CAAC;AACtE,OAAO,EAA4B,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAC1F,OAAO,EAAE,sBAAsB,EAAE,MAAM,kDAAkD,CAAC;AAE1F,MAAM,CAAC,MAAM,eAAe,GAAG,CAC9B,IAAsB,EAKrB,EAAE;IACH,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,OAAO,GAAG,sBAAsB,EAAE,CAAC;IACzC,MAAM,OAAO,GAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IAErI,MAAM,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAElE,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACrB,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IACxB,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;IAEzC,MAAM,cAAc,GAAG,WAAW,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;IAEpE,MAAM,eAAe,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QACrD,IAAI,CAAC,aAAa,EAAE;YACnB,OAAO;SACP;QAED,MAAM,EACL,OAAO,EAAE,EAAE,aAAa,EAAE,GAC1B,GAAG,MAAM,cAAc,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC;QAEvD,IAAI,aAAa,EAAE,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;YACtD,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SAChC;IACF,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,iBAAiB,IAAI,eAAe,EAAE,KAAK,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,CAAC;SACf;IACF,CAAC,EAAE,CAAC,eAAe,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEnD,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEjE,MAAM,gBAAgB,GAAG,WAAW,CAAC,GAAG,EAAE;QACzC,UAAU,EAAE,CAAC;QACb,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAEjB,MAAM,YAAY,GAAG,SAAS,CAAC,0BAA0B,CAAC,CAAC;IAE3D,MAAM,cAAc,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC7C,IAAI;YACH,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;YACxB,UAAU,EAAE,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAChC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;SACvB;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IAEpC,MAAM,iBAAiB,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAC;IAElE,MAAM,uBAAuB,GAAG,WAAW,CAC1C,KAAK,EAAE,KAAa,EAAE,OAAe,EAAE,EAAE;QACxC,IAAI;YACH,MAAM,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7C,UAAU,EAAE,CAAC;YACb,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YAC7B,oBAAoB,CAAC;gBACpB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,CAAC,CAAC,wCAAwC,CAAC;aACpD,CAAC,CAAC;SACH;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EACD,CAAC,UAAU,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,CAC7D,CAAC;IAEF,MAAM,cAAc,GAAG,SAAS,CAAC,yBAAyB,CAAC,CAAC;IAE5D,MAAM,oBAAoB,GAAG,WAAW,CACvC,KAAK,EAAE,KAAa,EAAE,OAAe,EAAE,KAAa,EAAE,EAAE;QACvD,IAAI;YACH,MAAM,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACjD,UAAU,EAAE,CAAC;SACb;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EACD,CAAC,UAAU,EAAE,GAAG,EAAE,cAAc,CAAC,CACjC,CAAC;IAEF,MAAM,iBAAiB,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAC;IAElE,MAAM,uBAAuB,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QACtD,IAAI;YACH,MAAM,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC7B,oBAAoB,CAAC;gBACpB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,CAAC,CAAC,+CAA+C,CAAC;aAC3D,CAAC,CAAC;YACH,UAAU,EAAE,CAAC;SACb;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EAAE,CAAC,UAAU,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAElE,MAAM,WAAW,GAAG,SAAS,CAAC,mBAAmB,CAAC,CAAC;IAEnD,MAAM,iBAAiB,GAAG,WAAW,CACpC,KAAK,EAAE,YAAqB,EAAE,MAAe,EAAE,OAAgB,EAAE,EAAE;QAClE,IAAI,YAAY,IAAI,MAAM,EAAE;YAC3B,OAAO;SACP;QACD,MAAM,YAAY,GAMd;YACH,MAAM,EAAE,GAAG;YACX,OAAO;YACP,YAAY,EAAE,IAAI;SAClB,CAAC;QAEF,IAAI,YAAY,EAAE;YACjB,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC;SACzC;QACD,IAAI,MAAM,EAAE;YACX,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;SAC7B;QAED,IAAI;YACH,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,sCAAsC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;aACvG;YACD,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YACrE,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,UAAU,EAAE,CAAC;SACb;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EACD,CAAC,UAAU,EAAE,oBAAoB,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,CACvD,CAAC;IAEF,MAAM,SAAS,GAAG,SAAS,CAAC,oBAAoB,CAAC,CAAC;IAElD,MAAM,WAAW,GAAG,WAAW,CAC9B,KAAK,EAAE,OAAe,EAAE,IAAc,EAAE,EAAE;QACzC,IAAI;YACH,MAAM,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5D,UAAU,EAAE,CAAC;YACb,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;SAClF;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EACD,CAAC,SAAS,EAAE,UAAU,EAAE,oBAAoB,EAAE,GAAG,EAAE,CAAC,CAAC,CACrD,CAAC;IAEF,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IAE/D,MAAM,gBAAgB,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC/C,IAAI;YACH,MAAM,UAAU,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;YAClC,UAAU,EAAE,CAAC;YACb,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC;SACnF;QAAC,OAAO,KAAU,EAAE;YACpB,WAAW,CAAC,KAAK,CAAC,CAAC;SACnB;IACF,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,EAAE,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC;IAE3D,MAAM,SAAS,GAAG,kBAAkB,CAAC,KAAK,EAAE,EAAU,EAAE,EAAE;QACzD,QAAQ,EAAE,EAAE;YACX,KAAK,gBAAgB,CAAC,SAAS;gBAC9B,QAAQ,CAAC,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC;gBACrF,MAAM;YACP,KAAK,gBAAgB,CAAC,UAAU;gBAC/B,MAAM,YAAY,GAAG,MAAM,eAAe,EAAE,CAAC;gBAE7C,IAAI,CAAC,YAAY,EAAE;oBAClB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC;oBACzF,MAAM;iBACN;gBAED,QAAQ,CACP,CAAC,eAAe,CACf,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,KAAK,CAAC,CAAC,YAAY,CAAC,CACpB,SAAS,CAAC,CAAC,uBAAuB,CAAC,CACnC,MAAM,CAAC,CAAC,oBAAoB,CAAC,CAC7B,SAAS,CAAC,CAAC,uBAAuB,CAAC,CACnC,QAAQ,CAAC,CAAC,UAAU,CAAC,EACpB,CACF,CAAC;gBACF,MAAM;YACP,KAAK,gBAAgB,CAAC,WAAW;gBAChC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC;gBAC/F,MAAM;YACP,KAAK,gBAAgB,CAAC,SAAS;gBAC9B,QAAQ,CACP,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CACnB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAG,CACrG,CAAC,CAAC,CAAC,CACH,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAG,CAChE,CACD,CAAC;gBACF,MAAM;YACP,KAAK,gBAAgB,CAAC,UAAU;gBAC/B,QAAQ,CAAC,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAG,CAAC,CAAC;gBAC/F,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAC3B,MAAM;YACP;gBACC,MAAM;SACP;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,sBAAsB,GAAG,yBAAyB,EAAE,CAAC;IAE3D,MAAM,mBAAmB,GAAG,UAAU,CAAC,+BAA+B,CAAC,CAAC;IAExE,MAAM,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAEnD,MAAM,QAAQ,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,KAAK,GAAG,IAAI,cAAc,CAAC,IAAI,IAAI,EAAE,WAAW,EAAE,CAAC,KAAK,gBAAgB,CAAC;IACpH,MAAM,YAAY,GAAG,CAAC,CAAC,sBAAsB,EAAE,WAAW,IAAI,IAAI,EAAE,CAAC,KAAK,SAAS,CAAC;IACpF,MAAM,eAAe,GAAG,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACjE,MAAM,iBAAiB,GAAG,aAAa,CAAC,kCAAkC,CAAC,CAAC;IAC5E,MAAM,YAAY,GAAG,aAAa,CAAC,qBAAqB,CAAC,CAAC;IAC1D,MAAM,kBAAkB,GAAG,aAAa,CAAC,4BAA4B,CAAC,CAAC;IACvE,MAAM,kBAAkB,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,IAAI,CAAE,IAAY,CAAC,WAAW,EAAE,KAAK,IAAI,mBAAmB,CAAC,CAAC;IAEvH,MAAM,oBAAoB,GAAG,CAAC,EAAU,EAAW,EAAE;QACpD,QAAQ,EAAE,EAAE;YACX,KAAK,gBAAgB,CAAC,SAAS;gBAC9B,OAAO,CAAC,CAAC,QAAQ,IAAI,YAAY,CAAC;YACnC,KAAK,gBAAgB,CAAC,WAAW;gBAChC,OAAO,CAAC,CAAC,QAAQ,IAAI,eAAe,CAAC;YACtC,KAAK,gBAAgB,CAAC,UAAU;gBAC/B,OAAO,iBAAiB,CAAC;YAC1B,KAAK,gBAAgB,CAAC,SAAS;gBAC9B,OAAO,CAAC,CAAC,QAAQ,IAAI,CAAC,YAAY,IAAI,kBAAkB,CAAC,CAAC;YAC3D,KAAK,gBAAgB,CAAC,UAAU;gBAC/B,OAAO,CAAC,CAAC,QAAQ,IAAI,kBAAkB,CAAC;YACzC;gBACC,MAAM;SACP;QACD,OAAO,KAAK,CAAC;IACd,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;IAE5E,MAAM,aAAa,GAAG,kBAAkB,CAAC,CAAC,CAAC,EAAE,EAAE;QAC9C,MAAM,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QACjE,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;QACrC,SAAS,CAAC,EAAE,CAAC,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE;QAC3C,SAAS,CAAC,EAAE,CAAC,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC;AACrD,CAAC,CAAC","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { RoomManager } from '../../../../../../../app/ui-utils/client';\nimport { IOmnichannelRoom } from '../../../../../../../definition/IRoom';\nimport PlaceChatOnHoldModal from '../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\nimport { usePermission, useRole } from '../../../../../../contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../../../contexts/ModalContext';\nimport { useOmnichannelRouteConfig } from '../../../../../../contexts/OmnichannelContext';\nimport { useEndpoint, useMethod } from '../../../../../../contexts/ServerContext';\nimport { useSetting } from '../../../../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../../../contexts/TranslationContext';\nimport { useUserId } from '../../../../../../contexts/UserContext';\nimport { handleError } from '../../../../../../lib/utils/handleError';\nimport { QuickActionsActionConfig, QuickActionsEnum } from '../../../../lib/QuickActions';\nimport { useQuickActionsContext } from '../../../../lib/QuickActions/QuickActionsContext';\n\nexport const useQuickActions = (\n\troom: IOmnichannelRoom,\n): {\n\tvisibleActions: QuickActionsActionConfig[];\n\tactionDefault: (e: unknown) => void;\n\tgetAction: (id: string) => void;\n} => {\n\tconst setModal = useSetModal();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst context = useQuickActionsContext();\n\tconst actions = (Array.from(context.actions.values()) as QuickActionsActionConfig[]).sort((a, b) => (a.order || 0) - (b.order || 0));\n\n\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\n\n\tconst visitorRoomId = room.v._id;\n\tconst rid = room._id;\n\tconst uid = useUserId();\n\tconst roomLastMessage = room.lastMessage;\n\n\tconst getVisitorInfo = useEndpoint('GET', 'livechat/visitors.info');\n\n\tconst getVisitorEmail = useMutableCallback(async () => {\n\t\tif (!visitorRoomId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tvisitor: { visitorEmails },\n\t\t} = await getVisitorInfo({ visitorId: visitorRoomId });\n\n\t\tif (visitorEmails?.length && visitorEmails[0].address) {\n\t\t\treturn visitorEmails[0].address;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (onHoldModalActive && roomLastMessage?.token) {\n\t\t\tsetModal(null);\n\t\t}\n\t}, [roomLastMessage, onHoldModalActive, setModal]);\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst closeOnHoldModal = useCallback(() => {\n\t\tcloseModal();\n\t\tsetOnHoldModalActive(false);\n\t}, [closeModal]);\n\n\tconst methodReturn = useMethod('livechat:returnAsInquiry');\n\n\tconst handleMoveChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait methodReturn(rid);\n\t\t\tcloseModal();\n\t\t\tSession.set('openedRoom', null);\n\t\t\tFlowRouter.go('/home');\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, methodReturn, rid]);\n\n\tconst requestTranscript = useMethod('livechat:requestTranscript');\n\n\tconst handleRequestTranscript = useCallback(\n\t\tasync (email: string, subject: string) => {\n\t\t\ttry {\n\t\t\t\tawait requestTranscript(rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t\tRoomManager.close(`l${rid}`);\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: t('Livechat_transcript_has_been_requested'),\n\t\t\t\t});\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, requestTranscript, rid, t],\n\t);\n\n\tconst sendTranscript = useMethod('livechat:sendTranscript');\n\n\tconst handleSendTranscript = useCallback(\n\t\tasync (email: string, subject: string, token: string) => {\n\t\t\ttry {\n\t\t\t\tawait sendTranscript(token, rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, rid, sendTranscript],\n\t);\n\n\tconst discardTranscript = useMethod('livechat:discardTranscript');\n\n\tconst handleDiscardTranscript = useCallback(async () => {\n\t\ttry {\n\t\t\tawait discardTranscript(rid);\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_request_has_been_canceled'),\n\t\t\t});\n\t\t\tcloseModal();\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, discardTranscript, dispatchToastMessage, rid, t]);\n\n\tconst forwardChat = useMethod('livechat:transfer');\n\n\tconst handleForwardChat = useCallback(\n\t\tasync (departmentId?: string, userId?: string, comment?: string) => {\n\t\t\tif (departmentId && userId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst transferData: {\n\t\t\t\troomId: string;\n\t\t\t\tclientAction: boolean;\n\t\t\t\tcomment?: string;\n\t\t\t\tdepartmentId?: string;\n\t\t\t\tuserId?: string;\n\t\t\t} = {\n\t\t\t\troomId: rid,\n\t\t\t\tcomment,\n\t\t\t\tclientAction: true,\n\t\t\t};\n\n\t\t\tif (departmentId) {\n\t\t\t\ttransferData.departmentId = departmentId;\n\t\t\t}\n\t\t\tif (userId) {\n\t\t\t\ttransferData.userId = userId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst result = await forwardChat(transferData);\n\t\t\t\tif (!result) {\n\t\t\t\t\tthrow new Error(departmentId ? t('error-no-agents-online-in-department') : t('error-forwarding-chat'));\n\t\t\t\t}\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\n\t\t\t\tFlowRouter.go('/');\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, forwardChat, rid, t],\n\t);\n\n\tconst closeChat = useMethod('livechat:closeRoom');\n\n\tconst handleClose = useCallback(\n\t\tasync (comment: string, tags: string[]) => {\n\t\t\ttry {\n\t\t\t\tawait closeChat(rid, comment, { clientAction: true, tags });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeChat, closeModal, dispatchToastMessage, rid, t],\n\t);\n\n\tconst onHoldChat = useEndpoint('POST', 'livechat/room.onHold');\n\n\tconst handleOnHoldChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait onHoldChat({ roomId: rid });\n\t\t\tcloseModal();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [onHoldChat, rid, closeModal, dispatchToastMessage, t]);\n\n\tconst openModal = useMutableCallback(async (id: string) => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\tsetModal(<ReturnChatQueueModal onMoveChat={handleMoveChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\tconst visitorEmail = await getVisitorEmail();\n\n\t\t\t\tif (!visitorEmail) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsetModal(\n\t\t\t\t\t<TranscriptModal\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\temail={visitorEmail}\n\t\t\t\t\t\tonRequest={handleRequestTranscript}\n\t\t\t\t\t\tonSend={handleSendTranscript}\n\t\t\t\t\t\tonDiscard={handleDiscardTranscript}\n\t\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\tsetModal(\n\t\t\t\t\troom.departmentId ? (\n\t\t\t\t\t\t<CloseChatModalData departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CloseChatModal onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\tsetModal(<PlaceChatOnHoldModal onOnHoldChat={handleOnHoldChat} onCancel={closeOnHoldModal} />);\n\t\t\t\tsetOnHoldModalActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\n\n\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n\n\tconst hasManagerRole = useRole('livechat-manager');\n\n\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole) && room?.lastMessage?.t !== 'livechat-close';\n\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\n\tconst canForwardGuest = usePermission('transfer-livechat-guest');\n\tconst canSendTranscript = usePermission('send-omnichannel-chat-transcript');\n\tconst canCloseRoom = usePermission('close-livechat-room');\n\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\n\tconst canPlaceChatOnHold = Boolean(!room.onHold && room.u && !(room as any).lastMessage?.token && manualOnHoldAllowed);\n\n\tconst hasPermissionButtons = (id: string): boolean => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\treturn !!roomOpen && canMoveQueue;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\treturn !!roomOpen && canForwardGuest;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\treturn canSendTranscript;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\treturn !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\treturn !!roomOpen && canPlaceChatOnHold;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst visibleActions = actions.filter(({ id }) => hasPermissionButtons(id));\n\n\tconst actionDefault = useMutableCallback((e) => {\n\t\tconst index = e.currentTarget.getAttribute('data-quick-actions');\n\t\tconst { id } = visibleActions[index];\n\t\topenModal(id);\n\t});\n\n\tconst getAction = useMutableCallback((id) => {\n\t\topenModal(id);\n\t});\n\n\treturn { visibleActions, actionDefault, getAction };\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx"}},"code":"module.export({\n  useQuickActions: () => useQuickActions\n});\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 0);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 1);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 2);\nlet React, useCallback, useState, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useState(v) {\n    useState = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  }\n\n}, 3);\nlet RoomManager;\nmodule.link(\"../../../../../../../app/ui-utils/client\", {\n  RoomManager(v) {\n    RoomManager = v;\n  }\n\n}, 4);\nlet PlaceChatOnHoldModal;\nmodule.link(\"../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal\", {\n  default(v) {\n    PlaceChatOnHoldModal = v;\n  }\n\n}, 5);\nlet CloseChatModal;\nmodule.link(\"../../../../../../components/Omnichannel/modals/CloseChatModal\", {\n  default(v) {\n    CloseChatModal = v;\n  }\n\n}, 6);\nlet CloseChatModalData;\nmodule.link(\"../../../../../../components/Omnichannel/modals/CloseChatModalData\", {\n  default(v) {\n    CloseChatModalData = v;\n  }\n\n}, 7);\nlet ForwardChatModal;\nmodule.link(\"../../../../../../components/Omnichannel/modals/ForwardChatModal\", {\n  default(v) {\n    ForwardChatModal = v;\n  }\n\n}, 8);\nlet ReturnChatQueueModal;\nmodule.link(\"../../../../../../components/Omnichannel/modals/ReturnChatQueueModal\", {\n  default(v) {\n    ReturnChatQueueModal = v;\n  }\n\n}, 9);\nlet TranscriptModal;\nmodule.link(\"../../../../../../components/Omnichannel/modals/TranscriptModal\", {\n  default(v) {\n    TranscriptModal = v;\n  }\n\n}, 10);\nlet usePermission, useRole;\nmodule.link(\"../../../../../../contexts/AuthorizationContext\", {\n  usePermission(v) {\n    usePermission = v;\n  },\n\n  useRole(v) {\n    useRole = v;\n  }\n\n}, 11);\nlet useSetModal;\nmodule.link(\"../../../../../../contexts/ModalContext\", {\n  useSetModal(v) {\n    useSetModal = v;\n  }\n\n}, 12);\nlet useOmnichannelRouteConfig;\nmodule.link(\"../../../../../../contexts/OmnichannelContext\", {\n  useOmnichannelRouteConfig(v) {\n    useOmnichannelRouteConfig = v;\n  }\n\n}, 13);\nlet useEndpoint, useMethod;\nmodule.link(\"../../../../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 14);\nlet useSetting;\nmodule.link(\"../../../../../../contexts/SettingsContext\", {\n  useSetting(v) {\n    useSetting = v;\n  }\n\n}, 15);\nlet useToastMessageDispatch;\nmodule.link(\"../../../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 16);\nlet useTranslation;\nmodule.link(\"../../../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 17);\nlet useUserId;\nmodule.link(\"../../../../../../contexts/UserContext\", {\n  useUserId(v) {\n    useUserId = v;\n  }\n\n}, 18);\nlet handleError;\nmodule.link(\"../../../../../../lib/utils/handleError\", {\n  handleError(v) {\n    handleError = v;\n  }\n\n}, 19);\nlet QuickActionsEnum;\nmodule.link(\"../../../../lib/QuickActions\", {\n  QuickActionsEnum(v) {\n    QuickActionsEnum = v;\n  }\n\n}, 20);\nlet useQuickActionsContext;\nmodule.link(\"../../../../lib/QuickActions/QuickActionsContext\", {\n  useQuickActionsContext(v) {\n    useQuickActionsContext = v;\n  }\n\n}, 21);\n\nconst useQuickActions = room => {\n  var _room$u, _room$lastMessage, _room$lastMessage2;\n\n  const setModal = useSetModal();\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const context = useQuickActionsContext();\n  const actions = Array.from(context.actions.values()).sort((a, b) => (a.order || 0) - (b.order || 0));\n  const [onHoldModalActive, setOnHoldModalActive] = useState(false);\n  const visitorRoomId = room.v._id;\n  const rid = room._id;\n  const uid = useUserId();\n  const roomLastMessage = room.lastMessage;\n  const getVisitorInfo = useEndpoint('GET', 'livechat/visitors.info');\n  const getVisitorEmail = useMutableCallback(async () => {\n    if (!visitorRoomId) {\n      return;\n    }\n\n    const {\n      visitor: {\n        visitorEmails\n      }\n    } = await getVisitorInfo({\n      visitorId: visitorRoomId\n    });\n\n    if (visitorEmails !== null && visitorEmails !== void 0 && visitorEmails.length && visitorEmails[0].address) {\n      return visitorEmails[0].address;\n    }\n  });\n  useEffect(() => {\n    if (onHoldModalActive && roomLastMessage !== null && roomLastMessage !== void 0 && roomLastMessage.token) {\n      setModal(null);\n    }\n  }, [roomLastMessage, onHoldModalActive, setModal]);\n  const closeModal = useCallback(() => setModal(null), [setModal]);\n  const closeOnHoldModal = useCallback(() => {\n    closeModal();\n    setOnHoldModalActive(false);\n  }, [closeModal]);\n  const methodReturn = useMethod('livechat:returnAsInquiry');\n  const handleMoveChat = useCallback(async () => {\n    try {\n      await methodReturn(rid);\n      closeModal();\n      Session.set('openedRoom', null);\n      FlowRouter.go('/home');\n    } catch (error) {\n      handleError(error);\n    }\n  }, [closeModal, methodReturn, rid]);\n  const requestTranscript = useMethod('livechat:requestTranscript');\n  const handleRequestTranscript = useCallback(async (email, subject) => {\n    try {\n      await requestTranscript(rid, email, subject);\n      closeModal();\n      RoomManager.close(\"l\".concat(rid));\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Livechat_transcript_has_been_requested')\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  }, [closeModal, dispatchToastMessage, requestTranscript, rid, t]);\n  const sendTranscript = useMethod('livechat:sendTranscript');\n  const handleSendTranscript = useCallback(async (email, subject, token) => {\n    try {\n      await sendTranscript(token, rid, email, subject);\n      closeModal();\n    } catch (error) {\n      handleError(error);\n    }\n  }, [closeModal, rid, sendTranscript]);\n  const discardTranscript = useMethod('livechat:discardTranscript');\n  const handleDiscardTranscript = useCallback(async () => {\n    try {\n      await discardTranscript(rid);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Livechat_transcript_request_has_been_canceled')\n      });\n      closeModal();\n    } catch (error) {\n      handleError(error);\n    }\n  }, [closeModal, discardTranscript, dispatchToastMessage, rid, t]);\n  const forwardChat = useMethod('livechat:transfer');\n  const handleForwardChat = useCallback(async (departmentId, userId, comment) => {\n    if (departmentId && userId) {\n      return;\n    }\n\n    const transferData = {\n      roomId: rid,\n      comment,\n      clientAction: true\n    };\n\n    if (departmentId) {\n      transferData.departmentId = departmentId;\n    }\n\n    if (userId) {\n      transferData.userId = userId;\n    }\n\n    try {\n      const result = await forwardChat(transferData);\n\n      if (!result) {\n        throw new Error(departmentId ? t('error-no-agents-online-in-department') : t('error-forwarding-chat'));\n      }\n\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Transferred')\n      });\n      FlowRouter.go('/');\n      closeModal();\n    } catch (error) {\n      handleError(error);\n    }\n  }, [closeModal, dispatchToastMessage, forwardChat, rid, t]);\n  const closeChat = useMethod('livechat:closeRoom');\n  const handleClose = useCallback(async (comment, tags) => {\n    try {\n      await closeChat(rid, comment, {\n        clientAction: true,\n        tags\n      });\n      closeModal();\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Chat_closed_successfully')\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  }, [closeChat, closeModal, dispatchToastMessage, rid, t]);\n  const onHoldChat = useEndpoint('POST', 'livechat/room.onHold');\n  const handleOnHoldChat = useCallback(async () => {\n    try {\n      await onHoldChat({\n        roomId: rid\n      });\n      closeModal();\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Chat_On_Hold_Successfully')\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  }, [onHoldChat, rid, closeModal, dispatchToastMessage, t]);\n  const openModal = useMutableCallback(async id => {\n    switch (id) {\n      case QuickActionsEnum.MoveQueue:\n        setModal( /*#__PURE__*/React.createElement(ReturnChatQueueModal, {\n          onMoveChat: handleMoveChat,\n          onCancel: closeModal\n        }));\n        break;\n\n      case QuickActionsEnum.Transcript:\n        const visitorEmail = await getVisitorEmail();\n\n        if (!visitorEmail) {\n          dispatchToastMessage({\n            type: 'error',\n            message: t('Customer_without_registered_email')\n          });\n          break;\n        }\n\n        setModal( /*#__PURE__*/React.createElement(TranscriptModal, {\n          room: room,\n          email: visitorEmail,\n          onRequest: handleRequestTranscript,\n          onSend: handleSendTranscript,\n          onDiscard: handleDiscardTranscript,\n          onCancel: closeModal\n        }));\n        break;\n\n      case QuickActionsEnum.ChatForward:\n        setModal( /*#__PURE__*/React.createElement(ForwardChatModal, {\n          room: room,\n          onForward: handleForwardChat,\n          onCancel: closeModal\n        }));\n        break;\n\n      case QuickActionsEnum.CloseChat:\n        setModal(room.departmentId ? /*#__PURE__*/React.createElement(CloseChatModalData, {\n          departmentId: room.departmentId,\n          onConfirm: handleClose,\n          onCancel: closeModal\n        }) : /*#__PURE__*/React.createElement(CloseChatModal, {\n          onConfirm: handleClose,\n          onCancel: closeModal\n        }));\n        break;\n\n      case QuickActionsEnum.OnHoldChat:\n        setModal( /*#__PURE__*/React.createElement(PlaceChatOnHoldModal, {\n          onOnHoldChat: handleOnHoldChat,\n          onCancel: closeOnHoldModal\n        }));\n        setOnHoldModalActive(true);\n        break;\n\n      default:\n        break;\n    }\n  });\n  const omnichannelRouteConfig = useOmnichannelRouteConfig();\n  const manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n  const hasManagerRole = useRole('livechat-manager');\n  const roomOpen = (room === null || room === void 0 ? void 0 : room.open) && (((_room$u = room.u) === null || _room$u === void 0 ? void 0 : _room$u._id) === uid || hasManagerRole) && (room === null || room === void 0 ? void 0 : (_room$lastMessage = room.lastMessage) === null || _room$lastMessage === void 0 ? void 0 : _room$lastMessage.t) !== 'livechat-close';\n  const canMoveQueue = !!(omnichannelRouteConfig !== null && omnichannelRouteConfig !== void 0 && omnichannelRouteConfig.returnQueue) && (room === null || room === void 0 ? void 0 : room.u) !== undefined;\n  const canForwardGuest = usePermission('transfer-livechat-guest');\n  const canSendTranscript = usePermission('send-omnichannel-chat-transcript');\n  const canCloseRoom = usePermission('close-livechat-room');\n  const canCloseOthersRoom = usePermission('close-others-livechat-room');\n  const canPlaceChatOnHold = Boolean(!room.onHold && room.u && !((_room$lastMessage2 = room.lastMessage) !== null && _room$lastMessage2 !== void 0 && _room$lastMessage2.token) && manualOnHoldAllowed);\n\n  const hasPermissionButtons = id => {\n    switch (id) {\n      case QuickActionsEnum.MoveQueue:\n        return !!roomOpen && canMoveQueue;\n\n      case QuickActionsEnum.ChatForward:\n        return !!roomOpen && canForwardGuest;\n\n      case QuickActionsEnum.Transcript:\n        return canSendTranscript;\n\n      case QuickActionsEnum.CloseChat:\n        return !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\n      case QuickActionsEnum.OnHoldChat:\n        return !!roomOpen && canPlaceChatOnHold;\n\n      default:\n        break;\n    }\n\n    return false;\n  };\n\n  const visibleActions = actions.filter(_ref => {\n    let {\n      id\n    } = _ref;\n    return hasPermissionButtons(id);\n  });\n  const actionDefault = useMutableCallback(e => {\n    const index = e.currentTarget.getAttribute('data-quick-actions');\n    const {\n      id\n    } = visibleActions[index];\n    openModal(id);\n  });\n  const getAction = useMutableCallback(id => {\n    openModal(id);\n  });\n  return {\n    visibleActions,\n    actionDefault,\n    getAction\n  };\n};","map":{"version":3,"sources":["client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { RoomManager } from '../../../../../../../app/ui-utils/client';\nimport { IOmnichannelRoom } from '../../../../../../../definition/IRoom';\nimport PlaceChatOnHoldModal from '../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\nimport { usePermission, useRole } from '../../../../../../contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../../../contexts/ModalContext';\nimport { useOmnichannelRouteConfig } from '../../../../../../contexts/OmnichannelContext';\nimport { useEndpoint, useMethod } from '../../../../../../contexts/ServerContext';\nimport { useSetting } from '../../../../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../../../contexts/TranslationContext';\nimport { useUserId } from '../../../../../../contexts/UserContext';\nimport { handleError } from '../../../../../../lib/utils/handleError';\nimport { QuickActionsActionConfig, QuickActionsEnum } from '../../../../lib/QuickActions';\nimport { useQuickActionsContext } from '../../../../lib/QuickActions/QuickActionsContext';\n\nexport const useQuickActions = (\n\troom: IOmnichannelRoom,\n): {\n\tvisibleActions: QuickActionsActionConfig[];\n\tactionDefault: (e: unknown) => void;\n\tgetAction: (id: string) => void;\n} => {\n\tconst setModal = useSetModal();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst context = useQuickActionsContext();\n\tconst actions = (Array.from(context.actions.values()) as QuickActionsActionConfig[]).sort((a, b) => (a.order || 0) - (b.order || 0));\n\n\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\n\n\tconst visitorRoomId = room.v._id;\n\tconst rid = room._id;\n\tconst uid = useUserId();\n\tconst roomLastMessage = room.lastMessage;\n\n\tconst getVisitorInfo = useEndpoint('GET', 'livechat/visitors.info');\n\n\tconst getVisitorEmail = useMutableCallback(async () => {\n\t\tif (!visitorRoomId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tvisitor: { visitorEmails },\n\t\t} = await getVisitorInfo({ visitorId: visitorRoomId });\n\n\t\tif (visitorEmails?.length && visitorEmails[0].address) {\n\t\t\treturn visitorEmails[0].address;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (onHoldModalActive && roomLastMessage?.token) {\n\t\t\tsetModal(null);\n\t\t}\n\t}, [roomLastMessage, onHoldModalActive, setModal]);\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst closeOnHoldModal = useCallback(() => {\n\t\tcloseModal();\n\t\tsetOnHoldModalActive(false);\n\t}, [closeModal]);\n\n\tconst methodReturn = useMethod('livechat:returnAsInquiry');\n\n\tconst handleMoveChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait methodReturn(rid);\n\t\t\tcloseModal();\n\t\t\tSession.set('openedRoom', null);\n\t\t\tFlowRouter.go('/home');\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, methodReturn, rid]);\n\n\tconst requestTranscript = useMethod('livechat:requestTranscript');\n\n\tconst handleRequestTranscript = useCallback(\n\t\tasync (email: string, subject: string) => {\n\t\t\ttry {\n\t\t\t\tawait requestTranscript(rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t\tRoomManager.close(`l${rid}`);\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: t('Livechat_transcript_has_been_requested'),\n\t\t\t\t});\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, requestTranscript, rid, t],\n\t);\n\n\tconst sendTranscript = useMethod('livechat:sendTranscript');\n\n\tconst handleSendTranscript = useCallback(\n\t\tasync (email: string, subject: string, token: string) => {\n\t\t\ttry {\n\t\t\t\tawait sendTranscript(token, rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, rid, sendTranscript],\n\t);\n\n\tconst discardTranscript = useMethod('livechat:discardTranscript');\n\n\tconst handleDiscardTranscript = useCallback(async () => {\n\t\ttry {\n\t\t\tawait discardTranscript(rid);\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_request_has_been_canceled'),\n\t\t\t});\n\t\t\tcloseModal();\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [closeModal, discardTranscript, dispatchToastMessage, rid, t]);\n\n\tconst forwardChat = useMethod('livechat:transfer');\n\n\tconst handleForwardChat = useCallback(\n\t\tasync (departmentId?: string, userId?: string, comment?: string) => {\n\t\t\tif (departmentId && userId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst transferData: {\n\t\t\t\troomId: string;\n\t\t\t\tclientAction: boolean;\n\t\t\t\tcomment?: string;\n\t\t\t\tdepartmentId?: string;\n\t\t\t\tuserId?: string;\n\t\t\t} = {\n\t\t\t\troomId: rid,\n\t\t\t\tcomment,\n\t\t\t\tclientAction: true,\n\t\t\t};\n\n\t\t\tif (departmentId) {\n\t\t\t\ttransferData.departmentId = departmentId;\n\t\t\t}\n\t\t\tif (userId) {\n\t\t\t\ttransferData.userId = userId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst result = await forwardChat(transferData);\n\t\t\t\tif (!result) {\n\t\t\t\t\tthrow new Error(departmentId ? t('error-no-agents-online-in-department') : t('error-forwarding-chat'));\n\t\t\t\t}\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\n\t\t\t\tFlowRouter.go('/');\n\t\t\t\tcloseModal();\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, forwardChat, rid, t],\n\t);\n\n\tconst closeChat = useMethod('livechat:closeRoom');\n\n\tconst handleClose = useCallback(\n\t\tasync (comment: string, tags: string[]) => {\n\t\t\ttry {\n\t\t\t\tawait closeChat(rid, comment, { clientAction: true, tags });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\n\t\t\t} catch (error: any) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t},\n\t\t[closeChat, closeModal, dispatchToastMessage, rid, t],\n\t);\n\n\tconst onHoldChat = useEndpoint('POST', 'livechat/room.onHold');\n\n\tconst handleOnHoldChat = useCallback(async () => {\n\t\ttry {\n\t\t\tawait onHoldChat({ roomId: rid });\n\t\t\tcloseModal();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\n\t\t} catch (error: any) {\n\t\t\thandleError(error);\n\t\t}\n\t}, [onHoldChat, rid, closeModal, dispatchToastMessage, t]);\n\n\tconst openModal = useMutableCallback(async (id: string) => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\tsetModal(<ReturnChatQueueModal onMoveChat={handleMoveChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\tconst visitorEmail = await getVisitorEmail();\n\n\t\t\t\tif (!visitorEmail) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsetModal(\n\t\t\t\t\t<TranscriptModal\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\temail={visitorEmail}\n\t\t\t\t\t\tonRequest={handleRequestTranscript}\n\t\t\t\t\t\tonSend={handleSendTranscript}\n\t\t\t\t\t\tonDiscard={handleDiscardTranscript}\n\t\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\tsetModal(\n\t\t\t\t\troom.departmentId ? (\n\t\t\t\t\t\t<CloseChatModalData departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CloseChatModal onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\tsetModal(<PlaceChatOnHoldModal onOnHoldChat={handleOnHoldChat} onCancel={closeOnHoldModal} />);\n\t\t\t\tsetOnHoldModalActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\n\n\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n\n\tconst hasManagerRole = useRole('livechat-manager');\n\n\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole) && room?.lastMessage?.t !== 'livechat-close';\n\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\n\tconst canForwardGuest = usePermission('transfer-livechat-guest');\n\tconst canSendTranscript = usePermission('send-omnichannel-chat-transcript');\n\tconst canCloseRoom = usePermission('close-livechat-room');\n\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\n\tconst canPlaceChatOnHold = Boolean(!room.onHold && room.u && !(room as any).lastMessage?.token && manualOnHoldAllowed);\n\n\tconst hasPermissionButtons = (id: string): boolean => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\treturn !!roomOpen && canMoveQueue;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\treturn !!roomOpen && canForwardGuest;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\treturn canSendTranscript;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\treturn !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\treturn !!roomOpen && canPlaceChatOnHold;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst visibleActions = actions.filter(({ id }) => hasPermissionButtons(id));\n\n\tconst actionDefault = useMutableCallback((e) => {\n\t\tconst index = e.currentTarget.getAttribute('data-quick-actions');\n\t\tconst { id } = visibleActions[index];\n\t\topenModal(id);\n\t});\n\n\tconst getAction = useMutableCallback((id) => {\n\t\topenModal(id);\n\t});\n\n\treturn { visibleActions, actionDefault, getAction };\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"768953223f3f7e9fb65299f0a4630d7b795b9ed1"}
