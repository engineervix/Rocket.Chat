{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/MarkdownText.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/components/MarkdownText.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/MarkdownText.tsx","inputSourceMap":{"version":3,"file":"client/components/MarkdownText.tsx","sourceRoot":"","sources":["client/components/MarkdownText.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport dompurify from 'dompurify';\nimport marked from 'marked';\nimport React, { ComponentProps, FC, useMemo } from 'react';\n\nimport { renderMessageEmoji } from '../lib/utils/renderMessageEmoji';\n\ntype MarkdownTextParams = {\n\tcontent: string;\n\tvariant: 'inline' | 'inlineWithoutBreaks' | 'document';\n\tpreserveHtml: boolean;\n\tparseEmoji: boolean;\n\twithTruncatedText: boolean;\n} & ComponentProps<typeof Box>;\n\nconst documentRenderer = new marked.Renderer();\nconst inlineRenderer = new marked.Renderer();\nconst inlineWithoutBreaks = new marked.Renderer();\n\nmarked.InlineLexer.rules.gfm = {\n\t...marked.InlineLexer.rules.gfm,\n\tstrong: /^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n\tem: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n};\n\nconst linkMarked = (href: string | null, _title: string | null, text: string): string =>\n\t`<a href=\"${href}\" target=\"_blank\" rel=\"nofollow\">${text}</a> `;\nconst paragraphMarked = (text: string): string => text;\nconst brMarked = (): string => ' ';\nconst listItemMarked = (text: string): string => {\n\tconst cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n\treturn `<li>${cleanText}</li>`;\n};\nconst horizontalRuleMarked = (): string => '';\n\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\n\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\n\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\n\nconst defaultOptions = {\n\tgfm: true,\n\theaderIds: false,\n};\n\nconst options = {\n\t...defaultOptions,\n\trenderer: documentRenderer,\n};\n\nconst inlineOptions = {\n\t...defaultOptions,\n\trenderer: inlineRenderer,\n};\n\nconst inlineWithoutBreaksOptions = {\n\t...defaultOptions,\n\trenderer: inlineWithoutBreaks,\n};\n\nconst MarkdownText: FC<Partial<MarkdownTextParams>> = ({\n\tcontent,\n\tvariant = 'document',\n\twithTruncatedText = false,\n\tpreserveHtml = false,\n\tparseEmoji = false,\n\t...props\n}) => {\n\tconst sanitizer = dompurify.sanitize;\n\n\tlet markedOptions: {};\n\n\tswitch (variant) {\n\t\tcase 'inline':\n\t\t\tmarkedOptions = inlineOptions;\n\t\t\tbreak;\n\t\tcase 'inlineWithoutBreaks':\n\t\t\tmarkedOptions = inlineWithoutBreaksOptions;\n\t\t\tbreak;\n\t\tcase 'document':\n\t\tdefault:\n\t\t\tmarkedOptions = options;\n\t}\n\n\tconst __html = useMemo(() => {\n\t\tconst html = ((): any => {\n\t\t\tif (content && typeof content === 'string') {\n\t\t\t\tconst markedHtml = marked(new Option(content).innerHTML, markedOptions);\n\n\t\t\t\tif (parseEmoji) {\n\t\t\t\t\t// We are using the old emoji parser here. This could come\n\t\t\t\t\t// with additional processing use, but is the workaround available right now.\n\t\t\t\t\t// Should be replaced in the future with the new parser.\n\t\t\t\t\treturn renderMessageEmoji({ html: markedHtml });\n\t\t\t\t}\n\n\t\t\t\treturn markedHtml;\n\t\t\t}\n\t\t})();\n\n\t\treturn preserveHtml ? html : html && sanitizer(html, { ADD_ATTR: ['target'] });\n\t}, [content, preserveHtml, sanitizer, markedOptions, parseEmoji]);\n\n\treturn __html ? (\n\t\t<Box\n\t\t\tdangerouslySetInnerHTML={{ __html }}\n\t\t\twithTruncatedText={withTruncatedText}\n\t\t\twithRichContent={variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true}\n\t\t\t{...props}\n\t\t/>\n\t) : null;\n};\n\nexport default MarkdownText;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/MarkdownText.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/MarkdownText.tsx"}},"code":"var _excluded = [\"content\", \"variant\", \"withTruncatedText\", \"preserveHtml\", \"parseEmoji\"];\n\nvar _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 0);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nvar Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box: function (v) {\n    Box = v;\n  }\n}, 0);\nvar dompurify;\nmodule.link(\"dompurify\", {\n  \"default\": function (v) {\n    dompurify = v;\n  }\n}, 1);\nvar marked;\nmodule.link(\"marked\", {\n  \"default\": function (v) {\n    marked = v;\n  }\n}, 2);\nvar React, useMemo;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 3);\nvar renderMessageEmoji;\nmodule.link(\"../lib/utils/renderMessageEmoji\", {\n  renderMessageEmoji: function (v) {\n    renderMessageEmoji = v;\n  }\n}, 4);\nvar documentRenderer = new marked.Renderer();\nvar inlineRenderer = new marked.Renderer();\nvar inlineWithoutBreaks = new marked.Renderer();\nmarked.InlineLexer.rules.gfm = _objectSpread(_objectSpread({}, marked.InlineLexer.rules.gfm), {}, {\n  strong: /^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  em: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/\n});\n\nvar linkMarked = function (href, _title, text) {\n  return \"<a href=\\\"\" + href + \"\\\" target=\\\"_blank\\\" rel=\\\"nofollow\\\">\" + text + \"</a> \";\n};\n\nvar paragraphMarked = function (text) {\n  return text;\n};\n\nvar brMarked = function () {\n  return ' ';\n};\n\nvar listItemMarked = function (text) {\n  var cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n  return \"<li>\" + cleanText + \"</li>\";\n};\n\nvar horizontalRuleMarked = function () {\n  return '';\n};\n\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\nvar defaultOptions = {\n  gfm: true,\n  headerIds: false\n};\n\nvar options = _objectSpread(_objectSpread({}, defaultOptions), {}, {\n  renderer: documentRenderer\n});\n\nvar inlineOptions = _objectSpread(_objectSpread({}, defaultOptions), {}, {\n  renderer: inlineRenderer\n});\n\nvar inlineWithoutBreaksOptions = _objectSpread(_objectSpread({}, defaultOptions), {}, {\n  renderer: inlineWithoutBreaks\n});\n\nvar MarkdownText = function (_ref) {\n  var content = _ref.content,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'document' : _ref$variant,\n      _ref$withTruncatedTex = _ref.withTruncatedText,\n      withTruncatedText = _ref$withTruncatedTex === void 0 ? false : _ref$withTruncatedTex,\n      _ref$preserveHtml = _ref.preserveHtml,\n      preserveHtml = _ref$preserveHtml === void 0 ? false : _ref$preserveHtml,\n      _ref$parseEmoji = _ref.parseEmoji,\n      parseEmoji = _ref$parseEmoji === void 0 ? false : _ref$parseEmoji,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var sanitizer = dompurify.sanitize;\n  var markedOptions;\n\n  switch (variant) {\n    case 'inline':\n      markedOptions = inlineOptions;\n      break;\n\n    case 'inlineWithoutBreaks':\n      markedOptions = inlineWithoutBreaksOptions;\n      break;\n\n    case 'document':\n    default:\n      markedOptions = options;\n  }\n\n  var __html = useMemo(function () {\n    var html = function () {\n      if (content && typeof content === 'string') {\n        var markedHtml = marked(new Option(content).innerHTML, markedOptions);\n\n        if (parseEmoji) {\n          // We are using the old emoji parser here. This could come\n          // with additional processing use, but is the workaround available right now.\n          // Should be replaced in the future with the new parser.\n          return renderMessageEmoji({\n            html: markedHtml\n          });\n        }\n\n        return markedHtml;\n      }\n    }();\n\n    return preserveHtml ? html : html && sanitizer(html, {\n      ADD_ATTR: ['target']\n    });\n  }, [content, preserveHtml, sanitizer, markedOptions, parseEmoji]);\n\n  return __html ? /*#__PURE__*/React.createElement(Box, _extends({\n    dangerouslySetInnerHTML: {\n      __html: __html\n    },\n    withTruncatedText: withTruncatedText,\n    withRichContent: variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true\n  }, props)) : null;\n};\n\nmodule.exportDefault(MarkdownText);","map":{"version":3,"sources":["client/components/MarkdownText.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport dompurify from 'dompurify';\nimport marked from 'marked';\nimport React, { ComponentProps, FC, useMemo } from 'react';\n\nimport { renderMessageEmoji } from '../lib/utils/renderMessageEmoji';\n\ntype MarkdownTextParams = {\n\tcontent: string;\n\tvariant: 'inline' | 'inlineWithoutBreaks' | 'document';\n\tpreserveHtml: boolean;\n\tparseEmoji: boolean;\n\twithTruncatedText: boolean;\n} & ComponentProps<typeof Box>;\n\nconst documentRenderer = new marked.Renderer();\nconst inlineRenderer = new marked.Renderer();\nconst inlineWithoutBreaks = new marked.Renderer();\n\nmarked.InlineLexer.rules.gfm = {\n\t...marked.InlineLexer.rules.gfm,\n\tstrong: /^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n\tem: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n};\n\nconst linkMarked = (href: string | null, _title: string | null, text: string): string =>\n\t`<a href=\"${href}\" target=\"_blank\" rel=\"nofollow\">${text}</a> `;\nconst paragraphMarked = (text: string): string => text;\nconst brMarked = (): string => ' ';\nconst listItemMarked = (text: string): string => {\n\tconst cleanText = text.replace(/<p.*?>|<\\/p>/gi, '');\n\treturn `<li>${cleanText}</li>`;\n};\nconst horizontalRuleMarked = (): string => '';\n\ndocumentRenderer.link = linkMarked;\ndocumentRenderer.listitem = listItemMarked;\n\ninlineRenderer.link = linkMarked;\ninlineRenderer.paragraph = paragraphMarked;\ninlineRenderer.listitem = listItemMarked;\ninlineRenderer.hr = horizontalRuleMarked;\n\ninlineWithoutBreaks.link = linkMarked;\ninlineWithoutBreaks.paragraph = paragraphMarked;\ninlineWithoutBreaks.br = brMarked;\ninlineWithoutBreaks.listitem = listItemMarked;\ninlineWithoutBreaks.hr = horizontalRuleMarked;\n\nconst defaultOptions = {\n\tgfm: true,\n\theaderIds: false,\n};\n\nconst options = {\n\t...defaultOptions,\n\trenderer: documentRenderer,\n};\n\nconst inlineOptions = {\n\t...defaultOptions,\n\trenderer: inlineRenderer,\n};\n\nconst inlineWithoutBreaksOptions = {\n\t...defaultOptions,\n\trenderer: inlineWithoutBreaks,\n};\n\nconst MarkdownText: FC<Partial<MarkdownTextParams>> = ({\n\tcontent,\n\tvariant = 'document',\n\twithTruncatedText = false,\n\tpreserveHtml = false,\n\tparseEmoji = false,\n\t...props\n}) => {\n\tconst sanitizer = dompurify.sanitize;\n\n\tlet markedOptions: {};\n\n\tswitch (variant) {\n\t\tcase 'inline':\n\t\t\tmarkedOptions = inlineOptions;\n\t\t\tbreak;\n\t\tcase 'inlineWithoutBreaks':\n\t\t\tmarkedOptions = inlineWithoutBreaksOptions;\n\t\t\tbreak;\n\t\tcase 'document':\n\t\tdefault:\n\t\t\tmarkedOptions = options;\n\t}\n\n\tconst __html = useMemo(() => {\n\t\tconst html = ((): any => {\n\t\t\tif (content && typeof content === 'string') {\n\t\t\t\tconst markedHtml = marked(new Option(content).innerHTML, markedOptions);\n\n\t\t\t\tif (parseEmoji) {\n\t\t\t\t\t// We are using the old emoji parser here. This could come\n\t\t\t\t\t// with additional processing use, but is the workaround available right now.\n\t\t\t\t\t// Should be replaced in the future with the new parser.\n\t\t\t\t\treturn renderMessageEmoji({ html: markedHtml });\n\t\t\t\t}\n\n\t\t\t\treturn markedHtml;\n\t\t\t}\n\t\t})();\n\n\t\treturn preserveHtml ? html : html && sanitizer(html, { ADD_ATTR: ['target'] });\n\t}, [content, preserveHtml, sanitizer, markedOptions, parseEmoji]);\n\n\treturn __html ? (\n\t\t<Box\n\t\t\tdangerouslySetInnerHTML={{ __html }}\n\t\t\twithTruncatedText={withTruncatedText}\n\t\t\twithRichContent={variant === 'inlineWithoutBreaks' ? 'inlineWithoutBreaks' : true}\n\t\t\t{...props}\n\t\t/>\n\t) : null;\n};\n\nexport default MarkdownText;\n"],"sourceRoot":""},"sourceType":"module","hash":"f4779c365339fd8d1c5218b026e00e8ab62f1db4"}
