{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/Helper.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/voip/Helper.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/Helper.ts","inputSourceMap":{"version":3,"file":"client/lib/voip/Helper.ts","sourceRoot":"","sources":["client/lib/voip/Helper.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,yBAAyB,CAAC;AAEpE,sDAAsD;AACtD,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,MAAe,EAAE,OAAgB,EAAE,SAAgC;IAChH,MAAM,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC;IAC9C,IAAI,CAAC,CAAC,yBAAyB,YAAY,yBAAyB,CAAC,EAAE;QACtE,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;KACpG;IACD,MAAM,EAAE,cAAc,EAAE,GAAG,yBAAyB,CAAC;IACrD,IAAI,CAAC,cAAc,EAAE;QACpB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC3C;IACD,IAAI,YAAY,GAAG,IAAI,CAAC;IACxB,IAAI,SAAS,KAAK,QAAQ,EAAE;QAC3B,YAAY,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC;KAC3C;SAAM,IAAI,SAAS,KAAK,UAAU,EAAE;QACpC,YAAY,GAAG,cAAc,CAAC,YAAY,EAAE,CAAC;KAC7C;IACD,IAAI,YAAY,EAAE;QACjB,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAC/B,IAAI,MAAM,CAAC,KAAK,EAAE;gBACjB,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aAC9B;QACF,CAAC,CAAC,CAAC;KACH;AACF,CAAC","sourcesContent":["import { Session } from 'sip.js';\nimport { SessionDescriptionHandler } from 'sip.js/lib/platform/web';\n\n/** Helper function to enable/disable media tracks. */\nexport async function toggleMediaStreamTracks(enable: boolean, session: Session, direction: 'sender' | 'receiver'): Promise<void> {\n\tconst { sessionDescriptionHandler } = session;\n\tif (!(sessionDescriptionHandler instanceof SessionDescriptionHandler)) {\n\t\tthrow new Error(\"Session's session description handler not instance of SessionDescriptionHandler.\");\n\t}\n\tconst { peerConnection } = sessionDescriptionHandler;\n\tif (!peerConnection) {\n\t\tthrow new Error('Peer connection closed.');\n\t}\n\tlet mediaStreams = null;\n\tif (direction === 'sender') {\n\t\tmediaStreams = peerConnection.getSenders();\n\t} else if (direction === 'receiver') {\n\t\tmediaStreams = peerConnection.getReceivers();\n\t}\n\tif (mediaStreams) {\n\t\tmediaStreams.forEach((stream) => {\n\t\t\tif (stream.track) {\n\t\t\t\tstream.track.enabled = enable;\n\t\t\t}\n\t\t});\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/Helper.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/voip/Helper.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  toggleMediaStreamTracks: function () {\n    return toggleMediaStreamTracks;\n  }\n});\nvar SessionDescriptionHandler;\nmodule.link(\"sip.js/lib/platform/web\", {\n  SessionDescriptionHandler: function (v) {\n    SessionDescriptionHandler = v;\n  }\n}, 0);\n\nfunction toggleMediaStreamTracks(enable, session, direction) {\n  var sessionDescriptionHandler, peerConnection, mediaStreams;\n  return _regeneratorRuntime.async(function () {\n    function toggleMediaStreamTracks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sessionDescriptionHandler = session.sessionDescriptionHandler;\n\n            if (sessionDescriptionHandler instanceof SessionDescriptionHandler) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Session's session description handler not instance of SessionDescriptionHandler.\");\n\n          case 3:\n            peerConnection = sessionDescriptionHandler.peerConnection;\n\n            if (peerConnection) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('Peer connection closed.');\n\n          case 6:\n            mediaStreams = null;\n\n            if (direction === 'sender') {\n              mediaStreams = peerConnection.getSenders();\n            } else if (direction === 'receiver') {\n              mediaStreams = peerConnection.getReceivers();\n            }\n\n            if (mediaStreams) {\n              mediaStreams.forEach(function (stream) {\n                if (stream.track) {\n                  stream.track.enabled = enable;\n                }\n              });\n            }\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }\n\n    return toggleMediaStreamTracks$;\n  }(), null, null, null, Promise);\n}","map":{"version":3,"sources":["client/lib/voip/Helper.ts"],"names":[],"mappings":"AACA,IAAA,mBAAA;;AAAS,MAAA,CAAA,IAAA,CAA2B,4BAA3B,EAAiC;AAAA,EAAA,OAA0B,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;AAA1B,CAAjC,EAA2D,CAA3D;AAAT,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,uBAA2B,EAAA,YAAM;AAAA,WAAA,uBAAA;AAA0B;AAA3D,CAAT;AAAoE,IAAA,yBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,yBAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,yBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAG7D,SAAe,uBAAf,CAAuC,MAAvC,EAAwD,OAAxD,EAA0E,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,YAAA,yBADF,GACgC,OADhC,CACE,yBADF;;AAAA,gBAEA,yBAAyB,YAAY,yBAFrC;AAAA;AAAA;AAAA;;AAAA,kBAGC,IAAI,KAAJ,CAAU,kFAAV,CAHD;;AAAA;AAKE,YAAA,cALF,GAKqB,yBALrB,CAKE,cALF;;AAAA,gBAMD,cANC;AAAA;AAAA;AAAA;;AAAA,kBAOC,IAAI,KAAJ,CAAU,yBAAV,CAPD;;AAAA;AASF,YAAA,YATE,GASa,IATb;;AAUN,gBAAI,SAAS,KAAK,QAAlB,EAA4B;AAC3B,cAAA,YAAY,GAAG,cAAc,CAAC,UAAf,EAAf;AACA,aAFD,MAEO,IAAI,SAAS,KAAK,UAAlB,EAA8B;AACpC,cAAA,YAAY,GAAG,cAAc,CAAC,YAAf,EAAf;AACA;;AACD,gBAAI,YAAJ,EAAkB;AACjB,cAAA,YAAY,CAAC,OAAb,CAAqB,UAAC,MAAD,EAAW;AAC/B,oBAAI,MAAM,CAAC,KAAX,EAAkB;AACjB,kBAAA,MAAM,CAAC,KAAP,CAAa,OAAb,GAAuB,MAAvB;AACA;AACD,eAJD;AAKA;;AArBK;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA","sourcesContent":["import { Session } from 'sip.js';\nimport { SessionDescriptionHandler } from 'sip.js/lib/platform/web';\n\n/** Helper function to enable/disable media tracks. */\nexport async function toggleMediaStreamTracks(enable: boolean, session: Session, direction: 'sender' | 'receiver'): Promise<void> {\n\tconst { sessionDescriptionHandler } = session;\n\tif (!(sessionDescriptionHandler instanceof SessionDescriptionHandler)) {\n\t\tthrow new Error(\"Session's session description handler not instance of SessionDescriptionHandler.\");\n\t}\n\tconst { peerConnection } = sessionDescriptionHandler;\n\tif (!peerConnection) {\n\t\tthrow new Error('Peer connection closed.');\n\t}\n\tlet mediaStreams = null;\n\tif (direction === 'sender') {\n\t\tmediaStreams = peerConnection.getSenders();\n\t} else if (direction === 'receiver') {\n\t\tmediaStreams = peerConnection.getReceivers();\n\t}\n\tif (mediaStreams) {\n\t\tmediaStreams.forEach((stream) => {\n\t\t\tif (stream.track) {\n\t\t\t\tstream.track.enabled = enable;\n\t\t\t}\n\t\t});\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"3a622ce0efc2dfe396a4f6de02fb20be4ba34289"}
