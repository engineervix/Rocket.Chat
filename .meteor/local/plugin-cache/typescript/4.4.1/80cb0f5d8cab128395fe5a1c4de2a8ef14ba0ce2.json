{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/EditableSettingsContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/contexts/EditableSettingsContext.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/EditableSettingsContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/EditableSettingsContext.ts","sourceRoot":"","sources":["client/contexts/EditableSettingsContext.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAE,eAAe,EAA6B,MAAM,kBAAkB,CAAC;AAuB9E,MAAM,CAAC,MAAM,uBAAuB,GAAG,aAAa,CAA+B;IAClF,oBAAoB,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5B,eAAe,EAAE,GAAc,EAAE,CAAC,SAAS;QAC3C,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;IACF,qBAAqB,EAAE,GAAG,EAAE,CAAC,CAAC;QAC7B,eAAe,EAAE,GAAuB,EAAE,CAAC,EAAE;QAC7C,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;IACF,kBAAkB,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1B,eAAe,EAAE,GAAkB,EAAE,CAAC,EAAE;QACxC,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;IACF,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC;QACtB,eAAe,EAAE,GAAY,EAAE,CAAC,EAAE;QAClC,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;IACF,QAAQ,EAAE,GAAG,EAAE,CAAC,SAAS;CACzB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,GAAc,EAAgC,EAAE;IAClF,MAAM,EAAE,oBAAoB,EAAE,GAAG,UAAU,CAAC,uBAAuB,CAAC,CAAC;IAErE,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3F,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,KAAoC,EAAsB,EAAE;IAC/F,MAAM,EAAE,qBAAqB,EAAE,GAAG,UAAU,CAAC,uBAAuB,CAAC,CAAC;IACtE,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,qBAAqB,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;IACvG,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gCAAgC,GAAG,CAAC,GAAc,EAAE,GAAW,EAAiB,EAAE;IAC9F,MAAM,EAAE,kBAAkB,EAAE,GAAG,UAAU,CAAC,uBAAuB,CAAC,CAAC;IAEnE,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACjG,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,GAAc,EAAW,EAAE;IACvE,MAAM,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,uBAAuB,CAAC,CAAC;IAE/D,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;IAC/E,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAAqD,EAAE,CACjG,UAAU,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC","sourcesContent":["import { createContext, useContext, useMemo } from 'react';\nimport { useSubscription, Subscription, Unsubscribe } from 'use-subscription';\n\nimport { ISettingBase, SectionName, SettingId, GroupId, TabId } from '../../definition/ISetting';\nimport { SettingsContextQuery } from './SettingsContext';\n\nexport interface IEditableSetting extends ISettingBase {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n}\n\nexport type EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (_id: SettingId) => Subscription<IEditableSetting | undefined>;\n\treadonly queryEditableSettings: (query: EditableSettingsContextQuery) => Subscription<IEditableSetting[]>;\n\treadonly queryGroupSections: (_id: GroupId, tab?: TabId) => Subscription<SectionName[]>;\n\treadonly queryGroupTabs: (_id: GroupId) => Subscription<TabId[]>;\n\treadonly dispatch: (changes: Partial<IEditableSetting>[]) => void;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tqueryEditableSettings: () => ({\n\t\tgetCurrentValue: (): IEditableSetting[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tqueryGroupSections: () => ({\n\t\tgetCurrentValue: (): SectionName[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tqueryGroupTabs: () => ({\n\t\tgetCurrentValue: (): TabId[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tdispatch: () => undefined,\n});\n\nexport const useEditableSetting = (_id: SettingId): IEditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst subscription = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): IEditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst subscription = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst subscription = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst subscription = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<IEditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/EditableSettingsContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/contexts/EditableSettingsContext.ts"}},"code":"module.export({\n  EditableSettingsContext: function () {\n    return EditableSettingsContext;\n  },\n  useEditableSetting: function () {\n    return useEditableSetting;\n  },\n  useEditableSettings: function () {\n    return useEditableSettings;\n  },\n  useEditableSettingsGroupSections: function () {\n    return useEditableSettingsGroupSections;\n  },\n  useEditableSettingsGroupTabs: function () {\n    return useEditableSettingsGroupTabs;\n  },\n  useEditableSettingsDispatch: function () {\n    return useEditableSettingsDispatch;\n  }\n});\nvar createContext, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext: function (v) {\n    createContext = v;\n  },\n  useContext: function (v) {\n    useContext = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 0);\nvar useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription: function (v) {\n    useSubscription = v;\n  }\n}, 1);\nvar EditableSettingsContext = /*#__PURE__*/createContext({\n  queryEditableSetting: function () {\n    return {\n      getCurrentValue: function () {\n        return undefined;\n      },\n      subscribe: function () {\n        return function () {\n          return undefined;\n        };\n      }\n    };\n  },\n  queryEditableSettings: function () {\n    return {\n      getCurrentValue: function () {\n        return [];\n      },\n      subscribe: function () {\n        return function () {\n          return undefined;\n        };\n      }\n    };\n  },\n  queryGroupSections: function () {\n    return {\n      getCurrentValue: function () {\n        return [];\n      },\n      subscribe: function () {\n        return function () {\n          return undefined;\n        };\n      }\n    };\n  },\n  queryGroupTabs: function () {\n    return {\n      getCurrentValue: function () {\n        return [];\n      },\n      subscribe: function () {\n        return function () {\n          return undefined;\n        };\n      }\n    };\n  },\n  dispatch: function () {\n    return undefined;\n  }\n});\n\nvar useEditableSetting = function (_id) {\n  var _useContext = useContext(EditableSettingsContext),\n      queryEditableSetting = _useContext.queryEditableSetting;\n\n  var subscription = useMemo(function () {\n    return queryEditableSetting(_id);\n  }, [queryEditableSetting, _id]);\n  return useSubscription(subscription);\n};\n\nvar useEditableSettings = function (query) {\n  var _useContext2 = useContext(EditableSettingsContext),\n      queryEditableSettings = _useContext2.queryEditableSettings;\n\n  var subscription = useMemo(function () {\n    return queryEditableSettings(query !== null && query !== void 0 ? query : {});\n  }, [queryEditableSettings, query]);\n  return useSubscription(subscription);\n};\n\nvar useEditableSettingsGroupSections = function (_id, tab) {\n  var _useContext3 = useContext(EditableSettingsContext),\n      queryGroupSections = _useContext3.queryGroupSections;\n\n  var subscription = useMemo(function () {\n    return queryGroupSections(_id, tab);\n  }, [queryGroupSections, _id, tab]);\n  return useSubscription(subscription);\n};\n\nvar useEditableSettingsGroupTabs = function (_id) {\n  var _useContext4 = useContext(EditableSettingsContext),\n      queryGroupTabs = _useContext4.queryGroupTabs;\n\n  var subscription = useMemo(function () {\n    return queryGroupTabs(_id);\n  }, [queryGroupTabs, _id]);\n  return useSubscription(subscription);\n};\n\nvar useEditableSettingsDispatch = function () {\n  return useContext(EditableSettingsContext).dispatch;\n};","map":{"version":3,"sources":["client/contexts/EditableSettingsContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { createContext, useContext, useMemo } from 'react';\nimport { useSubscription, Subscription, Unsubscribe } from 'use-subscription';\n\nimport { ISettingBase, SectionName, SettingId, GroupId, TabId } from '../../definition/ISetting';\nimport { SettingsContextQuery } from './SettingsContext';\n\nexport interface IEditableSetting extends ISettingBase {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n}\n\nexport type EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (_id: SettingId) => Subscription<IEditableSetting | undefined>;\n\treadonly queryEditableSettings: (query: EditableSettingsContextQuery) => Subscription<IEditableSetting[]>;\n\treadonly queryGroupSections: (_id: GroupId, tab?: TabId) => Subscription<SectionName[]>;\n\treadonly queryGroupTabs: (_id: GroupId) => Subscription<TabId[]>;\n\treadonly dispatch: (changes: Partial<IEditableSetting>[]) => void;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tqueryEditableSettings: () => ({\n\t\tgetCurrentValue: (): IEditableSetting[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tqueryGroupSections: () => ({\n\t\tgetCurrentValue: (): SectionName[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tqueryGroupTabs: () => ({\n\t\tgetCurrentValue: (): TabId[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tdispatch: () => undefined,\n});\n\nexport const useEditableSetting = (_id: SettingId): IEditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst subscription = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): IEditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst subscription = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst subscription = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst subscription = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSubscription(subscription);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<IEditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"],"sourceRoot":""},"sourceType":"module","hash":"80cb0f5d8cab128395fe5a1c4de2a8ef14ba0ce2"}
