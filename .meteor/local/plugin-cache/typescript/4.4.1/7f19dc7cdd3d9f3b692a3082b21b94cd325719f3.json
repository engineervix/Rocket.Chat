{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/hooks/useMembersList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/hooks/useMembersList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/hooks/useMembersList.ts","inputSourceMap":{"version":3,"file":"client/views/hooks/useMembersList.ts","sourceRoot":"","sources":["client/views/hooks/useMembersList.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAGvD,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAC3D,OAAO,EAAE,uBAAuB,EAAE,MAAM,2CAA2C,CAAC;AACpF,OAAO,EAAE,qBAAqB,EAAE,MAAM,mCAAmC,CAAC;AAC1E,OAAO,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AAUtD,MAAM,mBAAmB,GAAG;IAC3B,CAAC,EAAE,YAAY;IACf,CAAC,EAAE,gBAAgB;IACnB,CAAC,EAAE,kBAAkB;CACZ,CAAC;AAEX,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,OAA2B,EAM1B,EAAE;IACH,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,EAAE,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7E,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAS,CAAC,CAAC;IAC9E,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,UAAU,EAAS,CAAC,EAAE,EAAE,CAAC,CAAC;IAE9E,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,UAAU,CAAC;YAC3C,MAAM,EAAE,OAAO,CAAC,GAAG;YACnB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG;YACV,GAAG,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC;YAC/D,GAAG,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,IAAI,EAAE,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;SACzD,CAAC,CAAC;QAEH,OAAO;YACN,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,OAAY,EAAE,EAAE;gBACnC,OAAO,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAClD,OAAO,OAAO,CAAC;YAChB,CAAC,CAAC;YACF,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,UAAU,EAAE,OAAO,CAAC,CACrB,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAClE,WAAW,EACX,SAAS,EACT,OAAO,CAAC,GAAG,EAAE;QACZ,MAAM,aAAa,GAAG,SAAS,CAAC,sBAAsB,CAAC,CAAC;QACxD,OAAO,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAChE,CAAC,EAAE,EAAE,CAAC,CACN,CAAC;IAEF,OAAO;QACN,MAAM;QACN,WAAW;QACX,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { IUser } from '../../../definition/IUser';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../lib/lists/RecordList';\nimport { getConfig } from '../../lib/utils/getConfig';\n\ntype MembersListOptions = {\n\trid: string;\n\ttype: 'all' | 'online';\n\tlimit: number;\n\tdebouncedText: string;\n\troomType: 'd' | 'p' | 'c';\n};\n\nconst endpointsByRoomType = {\n\td: 'im.members',\n\tp: 'groups.members',\n\tc: 'channels.members',\n} as const;\n\nexport const useMembersList = (\n\toptions: MembersListOptions,\n): {\n\tmembersList: RecordList<IUser>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst getMembers = useEndpoint('GET', endpointsByRoomType[options.roomType]);\n\tconst [membersList, setMembersList] = useState(() => new RecordList<IUser>());\n\tconst reload = useCallback(() => setMembersList(new RecordList<IUser>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { members, total } = await getMembers({\n\t\t\t\troomId: options.rid,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\t...(options.debouncedText && { filter: options.debouncedText }),\n\t\t\t\t...(options.type !== 'all' && { status: [options.type] }),\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: members.map((members: any) => {\n\t\t\t\t\tmembers._updatedAt = new Date(members._updatedAt);\n\t\t\t\t\treturn members;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getMembers, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tmembersList,\n\t\tfetchData,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('teamsChannelListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tmembersList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/hooks/useMembersList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/hooks/useMembersList.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  useMembersList: () => useMembersList\n});\nlet useCallback, useMemo, useState;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 0);\nlet useEndpoint;\nmodule.link(\"../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 1);\nlet useScrollableRecordList;\nmodule.link(\"../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n\n}, 2);\nlet useComponentDidUpdate;\nmodule.link(\"../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n\n}, 3);\nlet RecordList;\nmodule.link(\"../../lib/lists/RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n\n}, 4);\nlet getConfig;\nmodule.link(\"../../lib/utils/getConfig\", {\n  getConfig(v) {\n    getConfig = v;\n  }\n\n}, 5);\nconst endpointsByRoomType = {\n  d: 'im.members',\n  p: 'groups.members',\n  c: 'channels.members'\n};\n\nconst useMembersList = options => {\n  const getMembers = useEndpoint('GET', endpointsByRoomType[options.roomType]);\n  const [membersList, setMembersList] = useState(() => new RecordList());\n  const reload = useCallback(() => setMembersList(new RecordList()), []);\n  useComponentDidUpdate(() => {\n    options && reload();\n  }, [options, reload]);\n  const fetchData = useCallback(async (start, end) => {\n    const {\n      members,\n      total\n    } = await getMembers(_objectSpread(_objectSpread({\n      roomId: options.rid,\n      offset: start,\n      count: end\n    }, options.debouncedText && {\n      filter: options.debouncedText\n    }), options.type !== 'all' && {\n      status: [options.type]\n    }));\n    return {\n      items: members.map(members => {\n        members._updatedAt = new Date(members._updatedAt);\n        return members;\n      }),\n      itemCount: total\n    };\n  }, [getMembers, options]);\n  const {\n    loadMoreItems,\n    initialItemCount\n  } = useScrollableRecordList(membersList, fetchData, useMemo(() => {\n    const filesListSize = getConfig('teamsChannelListSize');\n    return filesListSize ? parseInt(filesListSize, 10) : undefined;\n  }, []));\n  return {\n    reload,\n    membersList,\n    loadMoreItems,\n    initialItemCount\n  };\n};","map":{"version":3,"sources":["client/views/hooks/useMembersList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { IUser } from '../../../definition/IUser';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../lib/lists/RecordList';\nimport { getConfig } from '../../lib/utils/getConfig';\n\ntype MembersListOptions = {\n\trid: string;\n\ttype: 'all' | 'online';\n\tlimit: number;\n\tdebouncedText: string;\n\troomType: 'd' | 'p' | 'c';\n};\n\nconst endpointsByRoomType = {\n\td: 'im.members',\n\tp: 'groups.members',\n\tc: 'channels.members',\n} as const;\n\nexport const useMembersList = (\n\toptions: MembersListOptions,\n): {\n\tmembersList: RecordList<IUser>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst getMembers = useEndpoint('GET', endpointsByRoomType[options.roomType]);\n\tconst [membersList, setMembersList] = useState(() => new RecordList<IUser>());\n\tconst reload = useCallback(() => setMembersList(new RecordList<IUser>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { members, total } = await getMembers({\n\t\t\t\troomId: options.rid,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\t...(options.debouncedText && { filter: options.debouncedText }),\n\t\t\t\t...(options.type !== 'all' && { status: [options.type] }),\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: members.map((members: any) => {\n\t\t\t\t\tmembers._updatedAt = new Date(members._updatedAt);\n\t\t\t\t\treturn members;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getMembers, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tmembersList,\n\t\tfetchData,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('teamsChannelListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tmembersList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"7f19dc7cdd3d9f3b692a3082b21b94cd325719f3"}
