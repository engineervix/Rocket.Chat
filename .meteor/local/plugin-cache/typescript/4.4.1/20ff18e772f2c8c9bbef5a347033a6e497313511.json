{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/private.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/rooms/roomTypes/private.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/private.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/private.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/private.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getAvatarURL } from '../../../../app/utils/lib/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast } from '../../../../definition/utils';\nimport { getPrivateRoomType } from '../../../../lib/rooms/roomTypes/private';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const PrivateRoomType = getPrivateRoomType(roomCoordinator);\n\nroomCoordinator.add(PrivateRoomType, {\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.BROADCAST:\n\t\t\t\treturn Boolean(room.broadcast);\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\treturn !room.broadcast;\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\treturn Boolean(!room.broadcast && room.ro);\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tallowMemberAction(_room, action) {\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\troomName(roomData) {\n\t\tif (roomData.prid) {\n\t\t\treturn roomData.fname;\n\t\t}\n\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\treturn roomData.fname || roomData.name;\n\t\t}\n\n\t\treturn roomData.name;\n\t},\n\n\tisGroupChat(_room) {\n\t\treturn true;\n\t},\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Group_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Leave_Group_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t},\n\n\tcondition() {\n\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\treturn groupByType && hasPermission('view-p-room');\n\t},\n\n\tgetAvatarPath(room) {\n\t\treturn getAvatarURL({ roomId: room._id, cache: room.avatarETag }) as string;\n\t},\n\n\tgetIcon(room) {\n\t\tif (room.prid) {\n\t\t\treturn 'discussion';\n\t\t}\n\t\tif (room.teamMain) {\n\t\t\treturn 'team-lock';\n\t\t}\n\n\t\treturn PrivateRoomType.icon;\n\t},\n\n\tfindRoom(identifier) {\n\t\tconst query = {\n\t\t\tt: 'p',\n\t\t\tname: identifier,\n\t\t};\n\n\t\treturn ChatRoom.findOne(query);\n\t},\n} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomTypes/private.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/rooms/roomTypes/private.ts"}},"code":"module.export({\n  PrivateRoomType: () => PrivateRoomType\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet hasPermission;\nmodule.link(\"../../../../app/authorization/client\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 1);\nlet ChatRoom;\nmodule.link(\"../../../../app/models/client\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet getUserPreference;\nmodule.link(\"../../../../app/utils/client\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n\n}, 4);\nlet getAvatarURL;\nmodule.link(\"../../../../app/utils/lib/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n\n}, 5);\nlet RoomSettingsEnum, RoomMemberActions, UiTextContext;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n\n  UiTextContext(v) {\n    UiTextContext = v;\n  }\n\n}, 6);\nlet getPrivateRoomType;\nmodule.link(\"../../../../lib/rooms/roomTypes/private\", {\n  getPrivateRoomType(v) {\n    getPrivateRoomType = v;\n  }\n\n}, 7);\nlet roomCoordinator;\nmodule.link(\"../roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 8);\nconst PrivateRoomType = getPrivateRoomType(roomCoordinator);\nroomCoordinator.add(PrivateRoomType, {\n  allowRoomSettingChange(room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n\n      case RoomSettingsEnum.BROADCAST:\n        return Boolean(room.broadcast);\n\n      case RoomSettingsEnum.READ_ONLY:\n        return !room.broadcast;\n\n      case RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n        return Boolean(!room.broadcast && room.ro);\n\n      case RoomSettingsEnum.E2E:\n        return settings.get('E2E_Enable') === true;\n\n      case RoomSettingsEnum.SYSTEM_MESSAGES:\n      default:\n        return true;\n    }\n  },\n\n  allowMemberAction(_room, action) {\n    switch (action) {\n      case RoomMemberActions.BLOCK:\n        return false;\n\n      default:\n        return true;\n    }\n  },\n\n  roomName(roomData) {\n    if (roomData.prid) {\n      return roomData.fname;\n    }\n\n    if (settings.get('UI_Allow_room_names_with_special_chars')) {\n      return roomData.fname || roomData.name;\n    }\n\n    return roomData.name;\n  },\n\n  isGroupChat(_room) {\n    return true;\n  },\n\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Group_Warning';\n\n      case UiTextContext.LEAVE_WARNING:\n        return 'Leave_Group_Warning';\n\n      default:\n        return '';\n    }\n  },\n\n  condition() {\n    const groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n    return groupByType && hasPermission('view-p-room');\n  },\n\n  getAvatarPath(room) {\n    return getAvatarURL({\n      roomId: room._id,\n      cache: room.avatarETag\n    });\n  },\n\n  getIcon(room) {\n    if (room.prid) {\n      return 'discussion';\n    }\n\n    if (room.teamMain) {\n      return 'team-lock';\n    }\n\n    return PrivateRoomType.icon;\n  },\n\n  findRoom(identifier) {\n    const query = {\n      t: 'p',\n      name: identifier\n    };\n    return ChatRoom.findOne(query);\n  }\n\n});","map":{"version":3,"sources":["client/lib/rooms/roomTypes/private.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,eAAQ,EAAA,MAAA;AAAd,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,EAAA,iBAAA,EAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAahC,MAAM,eAAe,GAAG,kBAAkB,CAAC,eAAD,CAA1C;AAEP,eAAe,CAAC,GAAhB,CAAoB,eAApB,EAAqC;AACpC,EAAA,sBAAsB,CAAC,IAAD,EAAO,OAAP,EAAc;AACnC,YAAQ,OAAR;AACC,WAAK,gBAAgB,CAAC,SAAtB;AACC,eAAO,KAAP;;AACD,WAAK,gBAAgB,CAAC,SAAtB;AACC,eAAO,OAAO,CAAC,IAAI,CAAC,SAAN,CAAd;;AACD,WAAK,gBAAgB,CAAC,SAAtB;AACC,eAAO,CAAC,IAAI,CAAC,SAAb;;AACD,WAAK,gBAAgB,CAAC,oBAAtB;AACC,eAAO,OAAO,CAAC,CAAC,IAAI,CAAC,SAAN,IAAmB,IAAI,CAAC,EAAzB,CAAd;;AACD,WAAK,gBAAgB,CAAC,GAAtB;AACC,eAAO,QAAQ,CAAC,GAAT,CAAa,YAAb,MAA+B,IAAtC;;AACD,WAAK,gBAAgB,CAAC,eAAtB;AACA;AACC,eAAO,IAAP;AAbF;AAeA,GAjBmC;;AAmBpC,EAAA,iBAAiB,CAAC,KAAD,EAAQ,MAAR,EAAc;AAC9B,YAAQ,MAAR;AACC,WAAK,iBAAiB,CAAC,KAAvB;AACC,eAAO,KAAP;;AACD;AACC,eAAO,IAAP;AAJF;AAMA,GA1BmC;;AA4BpC,EAAA,QAAQ,CAAC,QAAD,EAAS;AAChB,QAAI,QAAQ,CAAC,IAAb,EAAmB;AAClB,aAAO,QAAQ,CAAC,KAAhB;AACA;;AACD,QAAI,QAAQ,CAAC,GAAT,CAAa,wCAAb,CAAJ,EAA4D;AAC3D,aAAO,QAAQ,CAAC,KAAT,IAAkB,QAAQ,CAAC,IAAlC;AACA;;AAED,WAAO,QAAQ,CAAC,IAAhB;AACA,GArCmC;;AAuCpC,EAAA,WAAW,CAAC,KAAD,EAAM;AAChB,WAAO,IAAP;AACA,GAzCmC;;AA2CpC,EAAA,SAAS,CAAC,OAAD,EAAQ;AAChB,YAAQ,OAAR;AACC,WAAK,aAAa,CAAC,YAAnB;AACC,eAAO,oBAAP;;AACD,WAAK,aAAa,CAAC,aAAnB;AACC,eAAO,qBAAP;;AACD;AACC,eAAO,EAAP;AANF;AAQA,GApDmC;;AAsDpC,EAAA,SAAS,GAAA;AACR,UAAM,WAAW,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAP,EAAD,EAAkB,oBAAlB,CAArC;AACA,WAAO,WAAW,IAAI,aAAa,CAAC,aAAD,CAAnC;AACA,GAzDmC;;AA2DpC,EAAA,aAAa,CAAC,IAAD,EAAK;AACjB,WAAO,YAAY,CAAC;AAAE,MAAA,MAAM,EAAE,IAAI,CAAC,GAAf;AAAoB,MAAA,KAAK,EAAE,IAAI,CAAC;AAAhC,KAAD,CAAnB;AACA,GA7DmC;;AA+DpC,EAAA,OAAO,CAAC,IAAD,EAAK;AACX,QAAI,IAAI,CAAC,IAAT,EAAe;AACd,aAAO,YAAP;AACA;;AACD,QAAI,IAAI,CAAC,QAAT,EAAmB;AAClB,aAAO,WAAP;AACA;;AAED,WAAO,eAAe,CAAC,IAAvB;AACA,GAxEmC;;AA0EpC,EAAA,QAAQ,CAAC,UAAD,EAAW;AAClB,UAAM,KAAK,GAAG;AACb,MAAA,CAAC,EAAE,GADU;AAEb,MAAA,IAAI,EAAE;AAFO,KAAd;AAKA,WAAO,QAAQ,CAAC,OAAT,CAAiB,KAAjB,CAAP;AACA;;AAjFmC,CAArC","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getAvatarURL } from '../../../../app/utils/lib/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast } from '../../../../definition/utils';\nimport { getPrivateRoomType } from '../../../../lib/rooms/roomTypes/private';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const PrivateRoomType = getPrivateRoomType(roomCoordinator);\n\nroomCoordinator.add(PrivateRoomType, {\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.BROADCAST:\n\t\t\t\treturn Boolean(room.broadcast);\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\treturn !room.broadcast;\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\treturn Boolean(!room.broadcast && room.ro);\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tallowMemberAction(_room, action) {\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\troomName(roomData) {\n\t\tif (roomData.prid) {\n\t\t\treturn roomData.fname;\n\t\t}\n\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\treturn roomData.fname || roomData.name;\n\t\t}\n\n\t\treturn roomData.name;\n\t},\n\n\tisGroupChat(_room) {\n\t\treturn true;\n\t},\n\n\tgetUiText(context) {\n\t\tswitch (context) {\n\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\treturn 'Hide_Group_Warning';\n\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\treturn 'Leave_Group_Warning';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t},\n\n\tcondition() {\n\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\treturn groupByType && hasPermission('view-p-room');\n\t},\n\n\tgetAvatarPath(room) {\n\t\treturn getAvatarURL({ roomId: room._id, cache: room.avatarETag }) as string;\n\t},\n\n\tgetIcon(room) {\n\t\tif (room.prid) {\n\t\t\treturn 'discussion';\n\t\t}\n\t\tif (room.teamMain) {\n\t\t\treturn 'team-lock';\n\t\t}\n\n\t\treturn PrivateRoomType.icon;\n\t},\n\n\tfindRoom(identifier) {\n\t\tconst query = {\n\t\t\tt: 'p',\n\t\t\tname: identifier,\n\t\t};\n\n\t\treturn ChatRoom.findOne(query);\n\t},\n} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>);\n"],"sourceRoot":""},"sourceType":"module","hash":"20ff18e772f2c8c9bbef5a347033a6e497313511"}
