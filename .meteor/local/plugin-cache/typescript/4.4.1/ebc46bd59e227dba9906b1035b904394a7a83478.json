{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/hooks/useTagsList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"ee/client/hooks/useTagsList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/hooks/useTagsList.ts","inputSourceMap":{"version":3,"file":"ee/client/hooks/useTagsList.ts","sourceRoot":"","sources":["ee/client/hooks/useTagsList.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,WAAW,EAAE,MAAM,wCAAwC,CAAC;AACrE,OAAO,EAAE,uBAAuB,EAAE,MAAM,qDAAqD,CAAC;AAC9F,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAC;AACpF,OAAO,EAAE,UAAU,EAAE,MAAM,sCAAsC,CAAC;AAOlE,MAAM,CAAC,MAAM,WAAW,GAAG,CAC1B,OAAwB,EAMvB,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAsB,CAAC,CAAC;IACvF,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAsB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEzF,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;IAEzD,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,CAAC;YACrC,IAAI,EAAE,OAAO,CAAC,MAAM;YACpB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;SAClB,CAAC,CAAC;QACH,OAAO;YACN,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC5B,GAAG,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC1C,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;gBACrB,GAAG,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;gBAChD,OAAO,GAAG,CAAC;YACZ,CAAC,CAAC;YACF,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CACzB,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,MAAM;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { useEndpoint } from '../../../client/contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../client/hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../client/hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../client/lib/lists/RecordList';\nimport { ILivechatTagRecord } from '../../../definition/ILivechatTagRecord';\n\ntype TagsListOptions = {\n\tfilter: string;\n};\n\nexport const useTagsList = (\n\toptions: TagsListOptions,\n): {\n\titemsList: RecordList<ILivechatTagRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatTagRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatTagRecord>()), []);\n\n\tconst getTags = useEndpoint('GET', 'livechat/tags.list');\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { tags, total } = await getTags({\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: tags.map((tag: any) => {\n\t\t\t\t\ttag._updatedAt = new Date(tag._updatedAt);\n\t\t\t\t\ttag.label = tag.name;\n\t\t\t\t\ttag.value = { value: tag._id, label: tag.name };\n\t\t\t\t\treturn tag;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getTags, options.filter],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/hooks/useTagsList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/client/hooks/useTagsList.ts"}},"code":"module.export({\n  useTagsList: () => useTagsList\n});\nlet useCallback, useState;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 0);\nlet useEndpoint;\nmodule.link(\"../../../client/contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 1);\nlet useScrollableRecordList;\nmodule.link(\"../../../client/hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n\n}, 2);\nlet useComponentDidUpdate;\nmodule.link(\"../../../client/hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n\n}, 3);\nlet RecordList;\nmodule.link(\"../../../client/lib/lists/RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n\n}, 4);\n\nconst useTagsList = options => {\n  const [itemsList, setItemsList] = useState(() => new RecordList());\n  const reload = useCallback(() => setItemsList(new RecordList()), []);\n  const getTags = useEndpoint('GET', 'livechat/tags.list');\n  useComponentDidUpdate(() => {\n    options && reload();\n  }, [options, reload]);\n  const fetchData = useCallback(async (start, end) => {\n    const {\n      tags,\n      total\n    } = await getTags({\n      text: options.filter,\n      offset: start,\n      count: end + start\n    });\n    return {\n      items: tags.map(tag => {\n        tag._updatedAt = new Date(tag._updatedAt);\n        tag.label = tag.name;\n        tag.value = {\n          value: tag._id,\n          label: tag.name\n        };\n        return tag;\n      }),\n      itemCount: total\n    };\n  }, [getTags, options.filter]);\n  const {\n    loadMoreItems,\n    initialItemCount\n  } = useScrollableRecordList(itemsList, fetchData, 25);\n  return {\n    reload,\n    itemsList,\n    loadMoreItems,\n    initialItemCount\n  };\n};","map":{"version":3,"sources":["ee/client/hooks/useTagsList.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,WAAa,EAAA,MAAQ;AAArB,CAAT;AAA6C,IAAC,WAAD,EAAC,QAAD;AAAC,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qDAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,qBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6CAAA,EAAA;AAAA,EAAA,qBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAYvC,MAAM,WAAW,GACvB,OAD0B,IAOvB;AACH,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,MAAM,IAAI,UAAJ,EAAP,CAA1C;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,MAAM,YAAY,CAAC,IAAI,UAAJ,EAAD,CAAnB,EAA2D,EAA3D,CAA1B;AAEA,QAAM,OAAO,GAAG,WAAW,CAAC,KAAD,EAAQ,oBAAR,CAA3B;AAEA,EAAA,qBAAqB,CAAC,MAAK;AAC1B,IAAA,OAAO,IAAI,MAAM,EAAjB;AACA,GAFoB,EAElB,CAAC,OAAD,EAAU,MAAV,CAFkB,CAArB;AAIA,QAAM,SAAS,GAAG,WAAW,CAC5B,OAAO,KAAP,EAAc,GAAd,KAAqB;AACpB,UAAM;AAAE,MAAA,IAAF;AAAQ,MAAA;AAAR,QAAkB,MAAM,OAAO,CAAC;AACrC,MAAA,IAAI,EAAE,OAAO,CAAC,MADuB;AAErC,MAAA,MAAM,EAAE,KAF6B;AAGrC,MAAA,KAAK,EAAE,GAAG,GAAG;AAHwB,KAAD,CAArC;AAKA,WAAO;AACN,MAAA,KAAK,EAAE,IAAI,CAAC,GAAL,CAAU,GAAD,IAAa;AAC5B,QAAA,GAAG,CAAC,UAAJ,GAAiB,IAAI,IAAJ,CAAS,GAAG,CAAC,UAAb,CAAjB;AACA,QAAA,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,IAAhB;AACA,QAAA,GAAG,CAAC,KAAJ,GAAY;AAAE,UAAA,KAAK,EAAE,GAAG,CAAC,GAAb;AAAkB,UAAA,KAAK,EAAE,GAAG,CAAC;AAA7B,SAAZ;AACA,eAAO,GAAP;AACA,OALM,CADD;AAON,MAAA,SAAS,EAAE;AAPL,KAAP;AASA,GAhB2B,EAiB5B,CAAC,OAAD,EAAU,OAAO,CAAC,MAAlB,CAjB4B,CAA7B;AAoBA,QAAM;AAAE,IAAA,aAAF;AAAiB,IAAA;AAAjB,MAAsC,uBAAuB,CAAC,SAAD,EAAY,SAAZ,EAAuB,EAAvB,CAAnE;AAEA,SAAO;AACN,IAAA,MADM;AAEN,IAAA,SAFM;AAGN,IAAA,aAHM;AAIN,IAAA;AAJM,GAAP;AAMA,CA7CM","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { useEndpoint } from '../../../client/contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../client/hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../client/hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../client/lib/lists/RecordList';\nimport { ILivechatTagRecord } from '../../../definition/ILivechatTagRecord';\n\ntype TagsListOptions = {\n\tfilter: string;\n};\n\nexport const useTagsList = (\n\toptions: TagsListOptions,\n): {\n\titemsList: RecordList<ILivechatTagRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatTagRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatTagRecord>()), []);\n\n\tconst getTags = useEndpoint('GET', 'livechat/tags.list');\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { tags, total } = await getTags({\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: tags.map((tag: any) => {\n\t\t\t\t\ttag._updatedAt = new Date(tag._updatedAt);\n\t\t\t\t\ttag.label = tag.name;\n\t\t\t\t\ttag.value = { value: tag._id, label: tag.name };\n\t\t\t\t\treturn tag;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getTags, options.filter],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"ebc46bd59e227dba9906b1035b904394a7a83478"}
