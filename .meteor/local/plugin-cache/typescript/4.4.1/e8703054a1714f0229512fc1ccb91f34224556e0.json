{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/hooks/useUpgradeTabParams.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/hooks/useUpgradeTabParams.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/hooks/useUpgradeTabParams.ts","inputSourceMap":{"version":3,"file":"client/views/hooks/useUpgradeTabParams.ts","sourceRoot":"","sources":["client/views/hooks/useUpgradeTabParams.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,OAAO,EAAqB,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AACtF,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAE5D,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAiG,EAAE;IACrI,MAAM,qBAAqB,GAAG,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;IAC7E,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;IACvD,MAAM,sBAAsB,GAAG,UAAU,CAAC,2BAA2B,CAAY,CAAC;IAElF,MAAM,EAAE,IAAI,EAAE,sBAAsB,EAAE,GAAG,QAAQ,CAAC,CAAC,oBAAoB,CAAC,EAAE,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC,CAAC;IACzG,MAAM,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,EAAE;QAC7F,OAAO,EAAE,CAAC,CAAC,sBAAsB;KACjC,CAAC,CAAC;IAEH,MAAM,EAAE,kBAAkB,EAAE,GAAG,sBAAsB,IAAI,EAAE,CAAC;IAC5D,MAAM,EAAE,QAAQ,EAAE,GAAG,oBAAoB,IAAI,EAAE,CAAC;IAEhD,MAAM,UAAU,GAAG,kBAAkB,EAAE,mBAAmB,IAAI,KAAK,CAAC;IACpE,MAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACpD,MAAM,gBAAgB,GAAG,sBAAsB,IAAI,KAAK,CAAC;IAEzD,MAAM,YAAY,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC/D,MAAM,OAAO,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC;IACpE,MAAM,cAAc,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC;IAClF,MAAM,YAAY,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAEjH,MAAM,cAAc,GAAG,iBAAiB,CAAC;QACxC,UAAU;QACV,eAAe;QACf,gBAAgB;QAChB,OAAO;QACP,cAAc;KACd,CAAC,CAAC;IAEH,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC;AACzE,CAAC,CAAC","sourcesContent":["import { format } from 'date-fns';\nimport { useQuery } from 'react-query';\n\nimport { UpgradeTabVariant, getUpgradeTabType } from '../../../lib/getUpgradeTabType';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useSetting } from '../../contexts/SettingsContext';\n\nexport const useUpgradeTabParams = (): { tabType: UpgradeTabVariant | false; trialEndDate: string | undefined; isLoading: boolean } => {\n\tconst getRegistrationStatus = useEndpoint('GET', 'cloud.registrationStatus');\n\tconst getLicenses = useEndpoint('GET', 'licenses.get');\n\tconst cloudWorkspaceHadTrial = useSetting('Cloud_Workspace_Had_Trial') as boolean;\n\n\tconst { data: registrationStatusData } = useQuery(['registrationStatus'], () => getRegistrationStatus());\n\tconst { data: getValidLicensesData, isSuccess } = useQuery(['licences'], () => getLicenses(), {\n\t\tenabled: !!registrationStatusData,\n\t});\n\n\tconst { registrationStatus } = registrationStatusData ?? {};\n\tconst { licenses } = getValidLicensesData ?? {};\n\n\tconst registered = registrationStatus?.workspaceRegistered ?? false;\n\tconst hasValidLicense = (licenses?.length ?? 0) > 0;\n\tconst hadExpiredTrials = cloudWorkspaceHadTrial ?? false;\n\n\tconst trialLicense = licenses?.find(({ meta }) => meta?.trial);\n\tconst isTrial = licenses?.every(({ meta }) => meta?.trial) ?? false;\n\tconst hasGoldLicense = licenses?.some(({ tag }) => tag?.name === 'Gold') ?? false;\n\tconst trialEndDate = trialLicense?.meta ? format(new Date(trialLicense.meta.trialEnd), 'yyyy-MM-dd') : undefined;\n\n\tconst upgradeTabType = getUpgradeTabType({\n\t\tregistered,\n\t\thasValidLicense,\n\t\thadExpiredTrials,\n\t\tisTrial,\n\t\thasGoldLicense,\n\t});\n\n\treturn { tabType: upgradeTabType, trialEndDate, isLoading: !isSuccess };\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/hooks/useUpgradeTabParams.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/hooks/useUpgradeTabParams.ts"}},"code":"module.export({\n  useUpgradeTabParams: function () {\n    return useUpgradeTabParams;\n  }\n});\nvar format;\nmodule.link(\"date-fns\", {\n  format: function (v) {\n    format = v;\n  }\n}, 0);\nvar useQuery;\nmodule.link(\"react-query\", {\n  useQuery: function (v) {\n    useQuery = v;\n  }\n}, 1);\nvar getUpgradeTabType;\nmodule.link(\"../../../lib/getUpgradeTabType\", {\n  getUpgradeTabType: function (v) {\n    getUpgradeTabType = v;\n  }\n}, 2);\nvar useEndpoint;\nmodule.link(\"../../contexts/ServerContext\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 3);\nvar useSetting;\nmodule.link(\"../../contexts/SettingsContext\", {\n  useSetting: function (v) {\n    useSetting = v;\n  }\n}, 4);\n\nvar useUpgradeTabParams = function () {\n  var _registrationStatus$w, _licenses$length, _licenses$every, _licenses$some;\n\n  var getRegistrationStatus = useEndpoint('GET', 'cloud.registrationStatus');\n  var getLicenses = useEndpoint('GET', 'licenses.get');\n  var cloudWorkspaceHadTrial = useSetting('Cloud_Workspace_Had_Trial');\n\n  var _useQuery = useQuery(['registrationStatus'], function () {\n    return getRegistrationStatus();\n  }),\n      registrationStatusData = _useQuery.data;\n\n  var _useQuery2 = useQuery(['licences'], function () {\n    return getLicenses();\n  }, {\n    enabled: !!registrationStatusData\n  }),\n      getValidLicensesData = _useQuery2.data,\n      isSuccess = _useQuery2.isSuccess;\n\n  var _ref = registrationStatusData !== null && registrationStatusData !== void 0 ? registrationStatusData : {},\n      registrationStatus = _ref.registrationStatus;\n\n  var _ref2 = getValidLicensesData !== null && getValidLicensesData !== void 0 ? getValidLicensesData : {},\n      licenses = _ref2.licenses;\n\n  var registered = (_registrationStatus$w = registrationStatus === null || registrationStatus === void 0 ? void 0 : registrationStatus.workspaceRegistered) !== null && _registrationStatus$w !== void 0 ? _registrationStatus$w : false;\n  var hasValidLicense = ((_licenses$length = licenses === null || licenses === void 0 ? void 0 : licenses.length) !== null && _licenses$length !== void 0 ? _licenses$length : 0) > 0;\n  var hadExpiredTrials = cloudWorkspaceHadTrial !== null && cloudWorkspaceHadTrial !== void 0 ? cloudWorkspaceHadTrial : false;\n  var trialLicense = licenses === null || licenses === void 0 ? void 0 : licenses.find(function (_ref3) {\n    var meta = _ref3.meta;\n    return meta === null || meta === void 0 ? void 0 : meta.trial;\n  });\n  var isTrial = (_licenses$every = licenses === null || licenses === void 0 ? void 0 : licenses.every(function (_ref4) {\n    var meta = _ref4.meta;\n    return meta === null || meta === void 0 ? void 0 : meta.trial;\n  })) !== null && _licenses$every !== void 0 ? _licenses$every : false;\n  var hasGoldLicense = (_licenses$some = licenses === null || licenses === void 0 ? void 0 : licenses.some(function (_ref5) {\n    var tag = _ref5.tag;\n    return (tag === null || tag === void 0 ? void 0 : tag.name) === 'Gold';\n  })) !== null && _licenses$some !== void 0 ? _licenses$some : false;\n  var trialEndDate = trialLicense !== null && trialLicense !== void 0 && trialLicense.meta ? format(new Date(trialLicense.meta.trialEnd), 'yyyy-MM-dd') : undefined;\n  var upgradeTabType = getUpgradeTabType({\n    registered: registered,\n    hasValidLicense: hasValidLicense,\n    hadExpiredTrials: hadExpiredTrials,\n    isTrial: isTrial,\n    hasGoldLicense: hasGoldLicense\n  });\n  return {\n    tabType: upgradeTabType,\n    trialEndDate: trialEndDate,\n    isLoading: !isSuccess\n  };\n};","map":{"version":3,"sources":["client/views/hooks/useUpgradeTabParams.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,mBAAmB,EAAA,YAAA;AAAA,WAAA,mBAAA;AAAA;AAAzB,CAAT;AAAkC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AAAA,EAAA,QAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,iBAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAO3B,IAAM,mBAAmB,GAAG,YAAmG;AAAA;;AACrI,MAAM,qBAAqB,GAAG,WAAW,CAAC,KAAD,EAAQ,0BAAR,CAAzC;AACA,MAAM,WAAW,GAAG,WAAW,CAAC,KAAD,EAAQ,cAAR,CAA/B;AACA,MAAM,sBAAsB,GAAG,UAAU,CAAC,2BAAD,CAAzC;;AAEA,kBAAyC,QAAQ,CAAC,CAAC,oBAAD,CAAD,EAAyB;AAAA,WAAM,qBAAqB,EAA3B;AAAA,GAAzB,CAAjD;AAAA,MAAc,sBAAd,aAAQ,IAAR;;AACA,mBAAkD,QAAQ,CAAC,CAAC,UAAD,CAAD,EAAe;AAAA,WAAM,WAAW,EAAjB;AAAA,GAAf,EAAoC;AAC7F,IAAA,OAAO,EAAE,CAAC,CAAC;AADkF,GAApC,CAA1D;AAAA,MAAc,oBAAd,cAAQ,IAAR;AAAA,MAAoC,SAApC,cAAoC,SAApC;;AAIA,aAA+B,sBAA/B,aAA+B,sBAA/B,cAA+B,sBAA/B,GAAyD,EAAzD;AAAA,MAAQ,kBAAR,QAAQ,kBAAR;;AACA,cAAqB,oBAArB,aAAqB,oBAArB,cAAqB,oBAArB,GAA6C,EAA7C;AAAA,MAAQ,QAAR,SAAQ,QAAR;;AAEA,MAAM,UAAU,4BAAG,kBAAH,aAAG,kBAAH,uBAAG,kBAAkB,CAAE,mBAAvB,yEAA8C,KAA9D;AACA,MAAM,eAAe,GAAG,qBAAC,QAAD,aAAC,QAAD,uBAAC,QAAQ,CAAE,MAAX,+DAAqB,CAArB,IAA0B,CAAlD;AACA,MAAM,gBAAgB,GAAG,sBAAH,aAAG,sBAAH,cAAG,sBAAH,GAA6B,KAAnD;AAEA,MAAM,YAAY,GAAG,QAAH,aAAG,QAAH,uBAAG,QAAQ,CAAE,IAAV,CAAe;AAAA,QAAG,IAAH,SAAG,IAAH;AAAA,WAAc,IAAd,aAAc,IAAd,uBAAc,IAAI,CAAE,KAApB;AAAA,GAAf,CAArB;AACA,MAAM,OAAO,sBAAG,QAAH,aAAG,QAAH,uBAAG,QAAQ,CAAE,KAAV,CAAgB;AAAA,QAAG,IAAH,SAAG,IAAH;AAAA,WAAc,IAAd,aAAc,IAAd,uBAAc,IAAI,CAAE,KAApB;AAAA,GAAhB,CAAH,6DAAiD,KAA9D;AACA,MAAM,cAAc,qBAAG,QAAH,aAAG,QAAH,uBAAG,QAAQ,CAAE,IAAV,CAAe;AAAA,QAAG,GAAH,SAAG,GAAH;AAAA,WAAa,CAAA,GAAG,SAAH,IAAA,GAAG,WAAH,YAAA,GAAG,CAAE,IAAL,MAAc,MAA3B;AAAA,GAAf,CAAH,2DAAwD,KAA5E;AACA,MAAM,YAAY,GAAG,YAAY,SAAZ,IAAA,YAAY,WAAZ,IAAA,YAAY,CAAE,IAAd,GAAqB,MAAM,CAAC,IAAI,IAAJ,CAAS,YAAY,CAAC,IAAb,CAAkB,QAA3B,CAAD,EAAuC,YAAvC,CAA3B,GAAkF,SAAvG;AAEA,MAAM,cAAc,GAAG,iBAAiB,CAAC;AACxC,IAAA,UAAU,EAAV,UADwC;AAExC,IAAA,eAAe,EAAf,eAFwC;AAGxC,IAAA,gBAAgB,EAAhB,gBAHwC;AAIxC,IAAA,OAAO,EAAP,OAJwC;AAKxC,IAAA,cAAc,EAAd;AALwC,GAAD,CAAxC;AAQA,SAAO;AAAE,IAAA,OAAO,EAAE,cAAX;AAA2B,IAAA,YAAY,EAAZ,YAA3B;AAAyC,IAAA,SAAS,EAAE,CAAC;AAArD,GAAP;AACA,CA/BM","sourcesContent":["import { format } from 'date-fns';\nimport { useQuery } from 'react-query';\n\nimport { UpgradeTabVariant, getUpgradeTabType } from '../../../lib/getUpgradeTabType';\nimport { useEndpoint } from '../../contexts/ServerContext';\nimport { useSetting } from '../../contexts/SettingsContext';\n\nexport const useUpgradeTabParams = (): { tabType: UpgradeTabVariant | false; trialEndDate: string | undefined; isLoading: boolean } => {\n\tconst getRegistrationStatus = useEndpoint('GET', 'cloud.registrationStatus');\n\tconst getLicenses = useEndpoint('GET', 'licenses.get');\n\tconst cloudWorkspaceHadTrial = useSetting('Cloud_Workspace_Had_Trial') as boolean;\n\n\tconst { data: registrationStatusData } = useQuery(['registrationStatus'], () => getRegistrationStatus());\n\tconst { data: getValidLicensesData, isSuccess } = useQuery(['licences'], () => getLicenses(), {\n\t\tenabled: !!registrationStatusData,\n\t});\n\n\tconst { registrationStatus } = registrationStatusData ?? {};\n\tconst { licenses } = getValidLicensesData ?? {};\n\n\tconst registered = registrationStatus?.workspaceRegistered ?? false;\n\tconst hasValidLicense = (licenses?.length ?? 0) > 0;\n\tconst hadExpiredTrials = cloudWorkspaceHadTrial ?? false;\n\n\tconst trialLicense = licenses?.find(({ meta }) => meta?.trial);\n\tconst isTrial = licenses?.every(({ meta }) => meta?.trial) ?? false;\n\tconst hasGoldLicense = licenses?.some(({ tag }) => tag?.name === 'Gold') ?? false;\n\tconst trialEndDate = trialLicense?.meta ? format(new Date(trialLicense.meta.trialEnd), 'yyyy-MM-dd') : undefined;\n\n\tconst upgradeTabType = getUpgradeTabType({\n\t\tregistered,\n\t\thasValidLicense,\n\t\thadExpiredTrials,\n\t\tisTrial,\n\t\thasGoldLicense,\n\t});\n\n\treturn { tabType: upgradeTabType, trialEndDate, isLoading: !isSuccess };\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"e8703054a1714f0229512fc1ccb91f34224556e0"}
