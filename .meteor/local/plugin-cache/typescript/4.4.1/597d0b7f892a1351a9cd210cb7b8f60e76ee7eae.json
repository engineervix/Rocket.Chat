{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/presence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/presence.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/presence.ts","inputSourceMap":{"version":3,"file":"client/lib/presence.ts","sourceRoot":"","sources":["client/lib/presence.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter, EventHandlerOf } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { APIClient } from '../../app/utils/client';\nimport { IUser } from '../../definition/IUser';\nimport { UserStatus } from '../../definition/UserStatus';\n\nexport const STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY];\n\ntype InternalEvents = {\n\tremove: IUser['_id'];\n\treset: undefined;\n\trestart: undefined;\n};\n\ntype ExternalEvents = {\n\t[key: string]: UserPresence | undefined;\n};\n\ntype Events = InternalEvents & ExternalEvents;\n\nconst emitter = new Emitter<Events>();\n\nconst store = new Map<string, UserPresence>();\n\nexport type UserPresence = Pick<IUser, '_id' | 'username' | 'name' | 'status' | 'utcOffset' | 'statusText' | 'avatarETag'>;\n\ntype UsersPresencePayload = {\n\tusers: UserPresence[];\n\tfull: boolean;\n};\n\nconst isUid = (eventType: keyof Events): eventType is UserPresence['_id'] =>\n\tBoolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\n\nconst uids = new Set<UserPresence['_id']>();\n\nconst update: EventHandlerOf<ExternalEvents, string> = (update) => {\n\tif (update?._id) {\n\t\tstore.set(update._id, update);\n\t\tuids.delete(update._id);\n\t}\n};\n\nconst notify = (presence: UserPresence): void => {\n\tif (presence._id) {\n\t\tupdate(presence);\n\t\temitter.emit(presence._id, presence);\n\t}\n};\n\nconst getPresence = ((): ((uid: UserPresence['_id']) => void) => {\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tconst deletedUids = new Set<UserPresence['_id']>();\n\n\tconst fetch = (delay = 500): void => {\n\t\ttimer && clearTimeout(timer);\n\t\ttimer = setTimeout(async () => {\n\t\t\tconst currentUids = new Set(uids);\n\t\t\tuids.clear();\n\n\t\t\tconst ids = Array.from(currentUids);\n\t\t\tconst removed = Array.from(deletedUids);\n\n\t\t\tMeteor.subscribe('stream-user-presence', '', {\n\t\t\t\t...(ids.length > 0 && { added: Array.from(currentUids) }),\n\t\t\t\t...(removed.length && { removed: Array.from(deletedUids) }),\n\t\t\t});\n\n\t\t\tdeletedUids.clear();\n\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tids: [...currentUids],\n\t\t\t\t};\n\n\t\t\t\tconst { users } = (await APIClient.v1.get('users.presence', params)) as UsersPresencePayload;\n\n\t\t\t\tusers.forEach((user) => {\n\t\t\t\t\tif (!store.has(user._id)) {\n\t\t\t\t\t\tnotify(user);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUids.delete(user._id);\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.forEach((uid) => {\n\t\t\t\t\tnotify({ _id: uid, status: UserStatus.OFFLINE });\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.clear();\n\t\t\t} catch {\n\t\t\t\tfetch(delay + delay);\n\t\t\t} finally {\n\t\t\t\tcurrentUids.forEach((item) => uids.add(item));\n\t\t\t}\n\t\t}, delay);\n\t};\n\n\tconst get = (uid: UserPresence['_id']): void => {\n\t\tuids.add(uid);\n\t\tfetch();\n\t};\n\tconst stop = (uid: UserPresence['_id']): void => {\n\t\tdeletedUids.add(uid);\n\t\tfetch();\n\t};\n\temitter.on('remove', (uid) => {\n\t\tif (emitter.has(uid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.delete(uid);\n\t\tstop(uid);\n\t});\n\n\temitter.on('reset', () => {\n\t\temitter\n\t\t\t.events()\n\t\t\t.filter(isUid)\n\t\t\t.forEach((uid) => {\n\t\t\t\temitter.emit(uid, undefined);\n\t\t\t});\n\t\temitter.once('restart', () => {\n\t\t\temitter.events().filter(isUid).forEach(get);\n\t\t});\n\t});\n\n\treturn get;\n})();\n\nconst listen = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\temitter.on(uid, handler);\n\n\tconst user = store.has(uid) && store.get(uid);\n\tif (user) {\n\t\treturn;\n\t}\n\n\tgetPresence(uid);\n};\n\nconst stop = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tsetTimeout(() => {\n\t\temitter.off(uid, handler);\n\t\temitter.emit('remove', uid);\n\t}, 5000);\n};\n\nconst reset = (): void => {\n\tstore.clear();\n\temitter.emit('reset');\n};\n\nconst restart = (): void => {\n\temitter.emit('restart');\n};\n\nconst get = async (uid: UserPresence['_id']): Promise<UserPresence | undefined> =>\n\tnew Promise((resolve) => {\n\t\tconst user = store.has(uid) && store.get(uid);\n\t\tif (user) {\n\t\t\treturn resolve(user);\n\t\t}\n\n\t\tconst callback: EventHandlerOf<ExternalEvents, UserPresence['_id']> = (args): void => {\n\t\t\tresolve(args);\n\t\t\tstop(uid, callback);\n\t\t};\n\t\tlisten(uid, callback);\n\t});\n\nexport const Presence = {\n\tlisten,\n\tstop,\n\treset,\n\trestart,\n\tnotify,\n\tstore,\n\tget,\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/presence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/presence.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _toConsumableArray;\n\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nmodule.export({\n  STATUS_MAP: function () {\n    return STATUS_MAP;\n  },\n  Presence: function () {\n    return Presence;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar APIClient;\nmodule.link(\"../../app/utils/client\", {\n  APIClient: function (v) {\n    APIClient = v;\n  }\n}, 2);\nvar UserStatus;\nmodule.link(\"../../definition/UserStatus\", {\n  UserStatus: function (v) {\n    UserStatus = v;\n  }\n}, 3);\nvar STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY];\nvar emitter = new Emitter();\nvar store = new Map();\n\nvar isUid = function (eventType) {\n  return Boolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\n};\n\nvar uids = new Set();\n\nvar update = function (update) {\n  if (update !== null && update !== void 0 && update._id) {\n    store.set(update._id, update);\n    uids.delete(update._id);\n  }\n};\n\nvar notify = function (presence) {\n  if (presence._id) {\n    update(presence);\n    emitter.emit(presence._id, presence);\n  }\n};\n\nvar getPresence = function () {\n  var timer;\n  var deletedUids = new Set();\n\n  var fetch = function () {\n    var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n    timer && clearTimeout(timer);\n    timer = setTimeout(function () {\n      function _callee() {\n        var currentUids, ids, removed, params, _await$APIClient$v1$g, users;\n\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  currentUids = new Set(uids);\n                  uids.clear();\n                  ids = Array.from(currentUids);\n                  removed = Array.from(deletedUids);\n                  Meteor.subscribe('stream-user-presence', '', _objectSpread(_objectSpread({}, ids.length > 0 && {\n                    added: Array.from(currentUids)\n                  }), removed.length && {\n                    removed: Array.from(deletedUids)\n                  }));\n                  deletedUids.clear();\n\n                  if (!(ids.length === 0)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 8:\n                  _context.prev = 8;\n                  params = {\n                    ids: _toConsumableArray(currentUids)\n                  };\n                  _context.next = 12;\n                  return _regeneratorRuntime.awrap(APIClient.v1.get('users.presence', params));\n\n                case 12:\n                  _await$APIClient$v1$g = _context.sent;\n                  users = _await$APIClient$v1$g.users;\n                  users.forEach(function (user) {\n                    if (!store.has(user._id)) {\n                      notify(user);\n                    }\n\n                    currentUids.delete(user._id);\n                  });\n                  currentUids.forEach(function (uid) {\n                    notify({\n                      _id: uid,\n                      status: UserStatus.OFFLINE\n                    });\n                  });\n                  currentUids.clear();\n                  _context.next = 22;\n                  break;\n\n                case 19:\n                  _context.prev = 19;\n                  _context.t0 = _context[\"catch\"](8);\n                  fetch(delay + delay);\n\n                case 22:\n                  _context.prev = 22;\n                  currentUids.forEach(function (item) {\n                    return uids.add(item);\n                  });\n                  return _context.finish(22);\n\n                case 25:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }\n\n          return _callee$;\n        }(), null, null, [[8, 19, 22, 25]], Promise);\n      }\n\n      return _callee;\n    }(), delay);\n  };\n\n  var get = function (uid) {\n    uids.add(uid);\n    fetch();\n  };\n\n  var stop = function (uid) {\n    deletedUids.add(uid);\n    fetch();\n  };\n\n  emitter.on('remove', function (uid) {\n    if (emitter.has(uid)) {\n      return;\n    }\n\n    store.delete(uid);\n    stop(uid);\n  });\n  emitter.on('reset', function () {\n    emitter.events().filter(isUid).forEach(function (uid) {\n      emitter.emit(uid, undefined);\n    });\n    emitter.once('restart', function () {\n      emitter.events().filter(isUid).forEach(get);\n    });\n  });\n  return get;\n}();\n\nvar listen = function (uid, handler) {\n  if (!uid) {\n    return;\n  }\n\n  emitter.on(uid, handler);\n  var user = store.has(uid) && store.get(uid);\n\n  if (user) {\n    return;\n  }\n\n  getPresence(uid);\n};\n\nvar stop = function (uid, handler) {\n  setTimeout(function () {\n    emitter.off(uid, handler);\n    emitter.emit('remove', uid);\n  }, 5000);\n};\n\nvar reset = function () {\n  store.clear();\n  emitter.emit('reset');\n};\n\nvar restart = function () {\n  emitter.emit('restart');\n};\n\nvar get = function () {\n  function _callee2(uid) {\n    return _regeneratorRuntime.async(function () {\n      function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                var user = store.has(uid) && store.get(uid);\n\n                if (user) {\n                  return resolve(user);\n                }\n\n                var callback = function (args) {\n                  resolve(args);\n                  stop(uid, callback);\n                };\n\n                listen(uid, callback);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }\n\n      return _callee2$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee2;\n}();\n\nvar Presence = {\n  listen: listen,\n  stop: stop,\n  reset: reset,\n  restart: restart,\n  notify: notify,\n  store: store,\n  get: get\n};","map":{"version":3,"sources":["client/lib/presence.ts"],"names":[],"mappings":"AAAA,IAAA,mBAAA;;AAAwC,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAuB;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;AAAA,CAAvB,EAAuB,CAAvB;;AAAuB,IAAA,kBAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,aAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAA/D,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,UAA+B,EAAA,YAAA;AAAA,WAAA,UAAA;AAAuB,GAAtD;AAAsD,EAAA,QAAA,EAAA,YAAA;AAAA,WAAA,QAAA;AAAA;AAAtD,CAAT;AAA+D,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAOxD,IAAM,UAAU,GAAG,CAAC,UAAU,CAAC,OAAZ,EAAqB,UAAU,CAAC,MAAhC,EAAwC,UAAU,CAAC,IAAnD,EAAyD,UAAU,CAAC,IAApE,CAAnB;AAcP,IAAM,OAAO,GAAG,IAAI,OAAJ,EAAhB;AAEA,IAAM,KAAK,GAAG,IAAI,GAAJ,EAAd;;AASA,IAAM,KAAK,GAAG,UAAC,SAAD;AAAA,SACb,OAAO,CAAC,SAAD,CAAP,IAAsB,OAAO,SAAP,KAAqB,QAA3C,IAAuD,CAAC,CAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAA+B,QAA/B,CAAwC,SAAxC,CAD3C;AAAA,CAAd;;AAGA,IAAM,IAAI,GAAG,IAAI,GAAJ,EAAb;;AAEA,IAAM,MAAM,GAA2C,UAAC,MAAD,EAAW;AACjE,MAAI,MAAJ,aAAI,MAAJ,eAAI,MAAM,CAAE,GAAZ,EAAiB;AAChB,IAAA,KAAK,CAAC,GAAN,CAAU,MAAM,CAAC,GAAjB,EAAsB,MAAtB;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,MAAM,CAAC,GAAnB;AACA;AACD,CALD;;AAOA,IAAM,MAAM,GAAG,UAAC,QAAD,EAAiC;AAC/C,MAAI,QAAQ,CAAC,GAAb,EAAkB;AACjB,IAAA,MAAM,CAAC,QAAD,CAAN;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,QAAQ,CAAC,GAAtB,EAA2B,QAA3B;AACA;AACD,CALD;;AAOA,IAAM,WAAW,GAAI,YAA2C;AAC/D,MAAI,KAAJ;AAEA,MAAM,WAAW,GAAG,IAAI,GAAJ,EAApB;;AAEA,MAAM,KAAK,GAAG,YAAsB;AAAA,QAArB,KAAqB,uEAAb,GAAa;AACnC,IAAA,KAAK,IAAI,YAAY,CAAC,KAAD,CAArB;AACA,IAAA,KAAK,GAAG,UAAU;AAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,kBAAA,WADY,GACE,IAAI,GAAJ,CAAQ,IAAR,CADF;AAElB,kBAAA,IAAI,CAAC,KAAL;AAEM,kBAAA,GAJY,GAIN,KAAK,CAAC,IAAN,CAAW,WAAX,CAJM;AAKZ,kBAAA,OALY,GAKF,KAAK,CAAC,IAAN,CAAW,WAAX,CALE;AAOlB,kBAAA,MAAM,CAAC,SAAP,CAAiB,sBAAjB,EAAyC,EAAzC,kCACK,GAAG,CAAC,MAAJ,GAAa,CAAb,IAAkB;AAAE,oBAAA,KAAK,EAAE,KAAK,CAAC,IAAN,CAAW,WAAX;AAAT,mBADvB,GAEK,OAAO,CAAC,MAAR,IAAkB;AAAE,oBAAA,OAAO,EAAE,KAAK,CAAC,IAAN,CAAW,WAAX;AAAX,mBAFvB;AAKA,kBAAA,WAAW,CAAC,KAAZ;;AAZkB,wBAcd,GAAG,CAAC,MAAJ,KAAe,CAdD;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAmBX,kBAAA,MAnBW,GAmBF;AACd,oBAAA,GAAG,qBAAM,WAAN;AADW,mBAnBE;AAAA;AAAA,mDAuBQ,SAAS,CAAC,EAAV,CAAa,GAAb,CAAiB,gBAAjB,EAAmC,MAAnC,CAvBR;;AAAA;AAAA;AAuBT,kBAAA,KAvBS,yBAuBT,KAvBS;AAyBjB,kBAAA,KAAK,CAAC,OAAN,CAAc,UAAC,IAAD,EAAS;AACtB,wBAAI,CAAC,KAAK,CAAC,GAAN,CAAU,IAAI,CAAC,GAAf,CAAL,EAA0B;AACzB,sBAAA,MAAM,CAAC,IAAD,CAAN;AACA;;AACD,oBAAA,WAAW,CAAC,MAAZ,CAAmB,IAAI,CAAC,GAAxB;AACA,mBALD;AAOA,kBAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,GAAD,EAAQ;AAC3B,oBAAA,MAAM,CAAC;AAAE,sBAAA,GAAG,EAAE,GAAP;AAAY,sBAAA,MAAM,EAAE,UAAU,CAAC;AAA/B,qBAAD,CAAN;AACA,mBAFD;AAIA,kBAAA,WAAW,CAAC,KAAZ;AApCiB;AAAA;;AAAA;AAAA;AAAA;AAsCjB,kBAAA,KAAK,CAAC,KAAK,GAAG,KAAT,CAAL;;AAtCiB;AAAA;AAwCjB,kBAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,IAAD;AAAA,2BAAU,IAAI,CAAC,GAAL,CAAS,IAAT,CAAV;AAAA,mBAApB;AAxCiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAD;AAAA,SA0Cf,KA1Ce,CAAlB;AA2CA,GA7CD;;AA+CA,MAAM,GAAG,GAAG,UAAC,GAAD,EAAmC;AAC9C,IAAA,IAAI,CAAC,GAAL,CAAS,GAAT;AACA,IAAA,KAAK;AACL,GAHD;;AAIA,MAAM,IAAI,GAAG,UAAC,GAAD,EAAmC;AAC/C,IAAA,WAAW,CAAC,GAAZ,CAAgB,GAAhB;AACA,IAAA,KAAK;AACL,GAHD;;AAIA,EAAA,OAAO,CAAC,EAAR,CAAW,QAAX,EAAqB,UAAC,GAAD,EAAQ;AAC5B,QAAI,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAJ,EAAsB;AACrB;AACA;;AAED,IAAA,KAAK,CAAC,MAAN,CAAa,GAAb;AACA,IAAA,IAAI,CAAC,GAAD,CAAJ;AACA,GAPD;AASA,EAAA,OAAO,CAAC,EAAR,CAAW,OAAX,EAAoB,YAAK;AACxB,IAAA,OAAO,CACL,MADF,GAEE,MAFF,CAES,KAFT,EAGE,OAHF,CAGU,UAAC,GAAD,EAAQ;AAChB,MAAA,OAAO,CAAC,IAAR,CAAa,GAAb,EAAkB,SAAlB;AACA,KALF;AAMA,IAAA,OAAO,CAAC,IAAR,CAAa,SAAb,EAAwB,YAAK;AAC5B,MAAA,OAAO,CAAC,MAAR,GAAiB,MAAjB,CAAwB,KAAxB,EAA+B,OAA/B,CAAuC,GAAvC;AACA,KAFD;AAGA,GAVD;AAYA,SAAO,GAAP;AACA,CAlFmB,EAApB;;AAoFA,IAAM,MAAM,GAAG,UAAC,GAAD,EAA2B,OAA3B,EAAgH;AAC9H,MAAI,CAAC,GAAL,EAAU;AACT;AACA;;AACD,EAAA,OAAO,CAAC,EAAR,CAAW,GAAX,EAAgB,OAAhB;AAEA,MAAM,IAAI,GAAG,KAAK,CAAC,GAAN,CAAU,GAAV,KAAkB,KAAK,CAAC,GAAN,CAAU,GAAV,CAA/B;;AACA,MAAI,IAAJ,EAAU;AACT;AACA;;AAED,EAAA,WAAW,CAAC,GAAD,CAAX;AACA,CAZD;;AAcA,IAAM,IAAI,GAAG,UAAC,GAAD,EAA2B,OAA3B,EAAgH;AAC5H,EAAA,UAAU,CAAC,YAAK;AACf,IAAA,OAAO,CAAC,GAAR,CAAY,GAAZ,EAAiB,OAAjB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,QAAb,EAAuB,GAAvB;AACA,GAHS,EAGP,IAHO,CAAV;AAIA,CALD;;AAOA,IAAM,KAAK,GAAG,YAAW;AACxB,EAAA,KAAK,CAAC,KAAN;AACA,EAAA,OAAO,CAAC,IAAR,CAAa,OAAb;AACA,CAHD;;AAKA,IAAM,OAAO,GAAG,YAAW;AAC1B,EAAA,OAAO,CAAC,IAAR,CAAa,SAAb;AACA,CAFD;;AAIA,IAAM,GAAG;AAAG,oBAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACX,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AACvB,oBAAM,IAAI,GAAG,KAAK,CAAC,GAAN,CAAU,GAAV,KAAkB,KAAK,CAAC,GAAN,CAAU,GAAV,CAA/B;;AACA,oBAAI,IAAJ,EAAU;AACT,yBAAO,OAAO,CAAC,IAAD,CAAd;AACA;;AAED,oBAAM,QAAQ,GAAwD,UAAC,IAAD,EAAe;AACpF,kBAAA,OAAO,CAAC,IAAD,CAAP;AACA,kBAAA,IAAI,CAAC,GAAD,EAAM,QAAN,CAAJ;AACA,iBAHD;;AAIA,gBAAA,MAAM,CAAC,GAAD,EAAM,QAAN,CAAN;AACA,eAXD,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAH;AAAA,GAAT;;AAcO,IAAM,QAAQ,GAAG;AACvB,EAAA,MAAM,EAAN,MADuB;AAEvB,EAAA,IAAI,EAAJ,IAFuB;AAGvB,EAAA,KAAK,EAAL,KAHuB;AAIvB,EAAA,OAAO,EAAP,OAJuB;AAKvB,EAAA,MAAM,EAAN,MALuB;AAMvB,EAAA,KAAK,EAAL,KANuB;AAOvB,EAAA,GAAG,EAAH;AAPuB,CAAjB","sourcesContent":["import { Emitter, EventHandlerOf } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { APIClient } from '../../app/utils/client';\nimport { IUser } from '../../definition/IUser';\nimport { UserStatus } from '../../definition/UserStatus';\n\nexport const STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY];\n\ntype InternalEvents = {\n\tremove: IUser['_id'];\n\treset: undefined;\n\trestart: undefined;\n};\n\ntype ExternalEvents = {\n\t[key: string]: UserPresence | undefined;\n};\n\ntype Events = InternalEvents & ExternalEvents;\n\nconst emitter = new Emitter<Events>();\n\nconst store = new Map<string, UserPresence>();\n\nexport type UserPresence = Pick<IUser, '_id' | 'username' | 'name' | 'status' | 'utcOffset' | 'statusText' | 'avatarETag'>;\n\ntype UsersPresencePayload = {\n\tusers: UserPresence[];\n\tfull: boolean;\n};\n\nconst isUid = (eventType: keyof Events): eventType is UserPresence['_id'] =>\n\tBoolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\n\nconst uids = new Set<UserPresence['_id']>();\n\nconst update: EventHandlerOf<ExternalEvents, string> = (update) => {\n\tif (update?._id) {\n\t\tstore.set(update._id, update);\n\t\tuids.delete(update._id);\n\t}\n};\n\nconst notify = (presence: UserPresence): void => {\n\tif (presence._id) {\n\t\tupdate(presence);\n\t\temitter.emit(presence._id, presence);\n\t}\n};\n\nconst getPresence = ((): ((uid: UserPresence['_id']) => void) => {\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tconst deletedUids = new Set<UserPresence['_id']>();\n\n\tconst fetch = (delay = 500): void => {\n\t\ttimer && clearTimeout(timer);\n\t\ttimer = setTimeout(async () => {\n\t\t\tconst currentUids = new Set(uids);\n\t\t\tuids.clear();\n\n\t\t\tconst ids = Array.from(currentUids);\n\t\t\tconst removed = Array.from(deletedUids);\n\n\t\t\tMeteor.subscribe('stream-user-presence', '', {\n\t\t\t\t...(ids.length > 0 && { added: Array.from(currentUids) }),\n\t\t\t\t...(removed.length && { removed: Array.from(deletedUids) }),\n\t\t\t});\n\n\t\t\tdeletedUids.clear();\n\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tids: [...currentUids],\n\t\t\t\t};\n\n\t\t\t\tconst { users } = (await APIClient.v1.get('users.presence', params)) as UsersPresencePayload;\n\n\t\t\t\tusers.forEach((user) => {\n\t\t\t\t\tif (!store.has(user._id)) {\n\t\t\t\t\t\tnotify(user);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUids.delete(user._id);\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.forEach((uid) => {\n\t\t\t\t\tnotify({ _id: uid, status: UserStatus.OFFLINE });\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.clear();\n\t\t\t} catch {\n\t\t\t\tfetch(delay + delay);\n\t\t\t} finally {\n\t\t\t\tcurrentUids.forEach((item) => uids.add(item));\n\t\t\t}\n\t\t}, delay);\n\t};\n\n\tconst get = (uid: UserPresence['_id']): void => {\n\t\tuids.add(uid);\n\t\tfetch();\n\t};\n\tconst stop = (uid: UserPresence['_id']): void => {\n\t\tdeletedUids.add(uid);\n\t\tfetch();\n\t};\n\temitter.on('remove', (uid) => {\n\t\tif (emitter.has(uid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.delete(uid);\n\t\tstop(uid);\n\t});\n\n\temitter.on('reset', () => {\n\t\temitter\n\t\t\t.events()\n\t\t\t.filter(isUid)\n\t\t\t.forEach((uid) => {\n\t\t\t\temitter.emit(uid, undefined);\n\t\t\t});\n\t\temitter.once('restart', () => {\n\t\t\temitter.events().filter(isUid).forEach(get);\n\t\t});\n\t});\n\n\treturn get;\n})();\n\nconst listen = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\temitter.on(uid, handler);\n\n\tconst user = store.has(uid) && store.get(uid);\n\tif (user) {\n\t\treturn;\n\t}\n\n\tgetPresence(uid);\n};\n\nconst stop = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tsetTimeout(() => {\n\t\temitter.off(uid, handler);\n\t\temitter.emit('remove', uid);\n\t}, 5000);\n};\n\nconst reset = (): void => {\n\tstore.clear();\n\temitter.emit('reset');\n};\n\nconst restart = (): void => {\n\temitter.emit('restart');\n};\n\nconst get = async (uid: UserPresence['_id']): Promise<UserPresence | undefined> =>\n\tnew Promise((resolve) => {\n\t\tconst user = store.has(uid) && store.get(uid);\n\t\tif (user) {\n\t\t\treturn resolve(user);\n\t\t}\n\n\t\tconst callback: EventHandlerOf<ExternalEvents, UserPresence['_id']> = (args): void => {\n\t\t\tresolve(args);\n\t\t\tstop(uid, callback);\n\t\t};\n\t\tlisten(uid, callback);\n\t});\n\nexport const Presence = {\n\tlisten,\n\tstop,\n\treset,\n\trestart,\n\tnotify,\n\tstore,\n\tget,\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"597d0b7f892a1351a9cd210cb7b8f60e76ee7eae"}
