{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/SettingsContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/contexts/SettingsContext.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/SettingsContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/SettingsContext.ts","sourceRoot":"","sources":["client/contexts/SettingsContext.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACxE,OAAO,EAAE,eAAe,EAA6B,MAAM,kBAAkB,CAAC;AAmB9E,MAAM,CAAC,MAAM,eAAe,GAAG,aAAa,CAAuB;IAClE,gBAAgB,EAAE,KAAK;IACvB,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC;QACpB,eAAe,EAAE,GAAc,EAAE,CAAC,SAAS;QAC3C,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;IACF,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC;QACrB,eAAe,EAAE,GAAe,EAAE,CAAC,EAAE;QACrC,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;IACF,QAAQ,EAAE,KAAK,IAAI,EAAE,CAAC,SAAS;CAC/B,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,8BAA8B,GAAG,GAAY,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC;AAE1G,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAAY,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;AAEhG,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,GAAc,EAAwB,EAAE;IAC3E,MAAM,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC;IACrD,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3E,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,GAAc,EAAuB,EAAE,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;AAEnG,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAA4B,EAAc,EAAE;IACvE,MAAM,EAAE,aAAa,EAAE,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC;IACtD,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;IACvF,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAsD,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC;AAEjI,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAA8B,GAAc,EAAiC,EAAE;IAChH,MAAM,QAAQ,GAAG,mBAAmB,EAAE,CAAC;IACvC,OAAO,WAAW,CAAC,CAAC,KAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;AAC/E,CAAC,CAAC","sourcesContent":["import { createContext, useCallback, useContext, useMemo } from 'react';\nimport { useSubscription, Subscription, Unsubscribe } from 'use-subscription';\n\nimport { SettingId, ISetting, GroupId, SectionName, TabId } from '../../definition/ISetting';\n\nexport type SettingsContextQuery = {\n\treadonly _id?: SettingId[];\n\treadonly group?: GroupId;\n\treadonly section?: SectionName;\n\treadonly tab?: TabId;\n};\n\nexport type SettingsContextValue = {\n\treadonly hasPrivateAccess: boolean;\n\treadonly isLoading: boolean;\n\treadonly querySetting: (_id: SettingId) => Subscription<ISetting | undefined>;\n\treadonly querySettings: (query: SettingsContextQuery) => Subscription<ISetting[]>;\n\treadonly dispatch: (changes: Partial<ISetting>[]) => Promise<void>;\n};\n\nexport const SettingsContext = createContext<SettingsContextValue>({\n\thasPrivateAccess: false,\n\tisLoading: false,\n\tquerySetting: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tquerySettings: () => ({\n\t\tgetCurrentValue: (): ISetting[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tdispatch: async () => undefined,\n});\n\nexport const useIsPrivilegedSettingsContext = (): boolean => useContext(SettingsContext).hasPrivateAccess;\n\nexport const useIsSettingsContextLoading = (): boolean => useContext(SettingsContext).isLoading;\n\nexport const useSettingStructure = (_id: SettingId): ISetting | undefined => {\n\tconst { querySetting } = useContext(SettingsContext);\n\tconst subscription = useMemo(() => querySetting(_id), [querySetting, _id]);\n\treturn useSubscription(subscription);\n};\n\nexport const useSetting = (_id: SettingId): unknown | undefined => useSettingStructure(_id)?.value;\n\nexport const useSettings = (query?: SettingsContextQuery): ISetting[] => {\n\tconst { querySettings } = useContext(SettingsContext);\n\tconst subscription = useMemo(() => querySettings(query ?? {}), [querySettings, query]);\n\treturn useSubscription(subscription);\n};\n\nexport const useSettingsDispatch = (): ((changes: Partial<ISetting>[]) => Promise<void>) => useContext(SettingsContext).dispatch;\n\nexport const useSettingSetValue = <T extends ISetting['value']>(_id: SettingId): ((value: T) => Promise<void>) => {\n\tconst dispatch = useSettingsDispatch();\n\treturn useCallback((value: T) => dispatch([{ _id, value }]), [dispatch, _id]);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/SettingsContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/contexts/SettingsContext.ts"}},"code":"module.export({\n  SettingsContext: () => SettingsContext,\n  useIsPrivilegedSettingsContext: () => useIsPrivilegedSettingsContext,\n  useIsSettingsContextLoading: () => useIsSettingsContextLoading,\n  useSettingStructure: () => useSettingStructure,\n  useSetting: () => useSetting,\n  useSettings: () => useSettings,\n  useSettingsDispatch: () => useSettingsDispatch,\n  useSettingSetValue: () => useSettingSetValue\n});\nlet createContext, useCallback, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useContext(v) {\n    useContext = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 0);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 1);\nconst SettingsContext = /*#__PURE__*/createContext({\n  hasPrivateAccess: false,\n  isLoading: false,\n  querySetting: () => ({\n    getCurrentValue: () => undefined,\n    subscribe: () => () => undefined\n  }),\n  querySettings: () => ({\n    getCurrentValue: () => [],\n    subscribe: () => () => undefined\n  }),\n  dispatch: async () => undefined\n});\n\nconst useIsPrivilegedSettingsContext = () => useContext(SettingsContext).hasPrivateAccess;\n\nconst useIsSettingsContextLoading = () => useContext(SettingsContext).isLoading;\n\nconst useSettingStructure = _id => {\n  const {\n    querySetting\n  } = useContext(SettingsContext);\n  const subscription = useMemo(() => querySetting(_id), [querySetting, _id]);\n  return useSubscription(subscription);\n};\n\nconst useSetting = _id => {\n  var _useSettingStructure;\n\n  return (_useSettingStructure = useSettingStructure(_id)) === null || _useSettingStructure === void 0 ? void 0 : _useSettingStructure.value;\n};\n\nconst useSettings = query => {\n  const {\n    querySettings\n  } = useContext(SettingsContext);\n  const subscription = useMemo(() => querySettings(query !== null && query !== void 0 ? query : {}), [querySettings, query]);\n  return useSubscription(subscription);\n};\n\nconst useSettingsDispatch = () => useContext(SettingsContext).dispatch;\n\nconst useSettingSetValue = _id => {\n  const dispatch = useSettingsDispatch();\n  return useCallback(value => dispatch([{\n    _id,\n    value\n  }]), [dispatch, _id]);\n};","map":{"version":3,"sources":["client/contexts/SettingsContext.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,eAAe,EAAA,MAAW,eAA1B;AAAwC,EAAA,8BAAuB,EAAA,MAAA,8BAA/D;AAA+D,EAAA,2BAAA,EAAA,MAAA,2BAA/D;AAA+D,EAAA,mBAAA,EAAA,MAAA,mBAA/D;AAA+D,EAAA,UAAA,EAAA,MAAA,UAA/D;AAA+D,EAAA,WAAA,EAAA,MAAA,WAA/D;AAA+D,EAAA,mBAAA,EAAA,MAAA,mBAA/D;AAA+D,EAAA,kBAAA,EAAA,MAAA;AAA/D,CAAT;AAAwE,IAAA,aAAA,EAAA,WAAA,EAAA,UAAA,EAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAoBjE,MAAM,eAAe,gBAAG,aAAa,CAAuB;AAClE,EAAA,gBAAgB,EAAE,KADgD;AAElE,EAAA,SAAS,EAAE,KAFuD;AAGlE,EAAA,YAAY,EAAE,OAAO;AACpB,IAAA,eAAe,EAAE,MAAiB,SADd;AAEpB,IAAA,SAAS,EAAE,MAAmB,MAAY;AAFtB,GAAP,CAHoD;AAOlE,EAAA,aAAa,EAAE,OAAO;AACrB,IAAA,eAAe,EAAE,MAAkB,EADd;AAErB,IAAA,SAAS,EAAE,MAAmB,MAAY;AAFrB,GAAP,CAPmD;AAWlE,EAAA,QAAQ,EAAE,YAAY;AAX4C,CAAvB,CAArC;;AAcA,MAAM,8BAA8B,GAAG,MAAe,UAAU,CAAC,eAAD,CAAV,CAA4B,gBAAlF;;AAEA,MAAM,2BAA2B,GAAG,MAAe,UAAU,CAAC,eAAD,CAAV,CAA4B,SAA/E;;AAEA,MAAM,mBAAmB,GAAI,GAAD,IAAyC;AAC3E,QAAM;AAAE,IAAA;AAAF,MAAmB,UAAU,CAAC,eAAD,CAAnC;AACA,QAAM,YAAY,GAAG,OAAO,CAAC,MAAM,YAAY,CAAC,GAAD,CAAnB,EAA0B,CAAC,YAAD,EAAe,GAAf,CAA1B,CAA5B;AACA,SAAO,eAAe,CAAC,YAAD,CAAtB;AACA,CAJM;;AAMA,MAAM,UAAU,GAAI,GAAD;AAAA;;AAAA,iCAAyC,mBAAmB,CAAC,GAAD,CAA5D,yDAAyC,qBAA0B,KAAnE;AAAA,CAAnB;;AAEA,MAAM,WAAW,GAAI,KAAD,IAA6C;AACvE,QAAM;AAAE,IAAA;AAAF,MAAoB,UAAU,CAAC,eAAD,CAApC;AACA,QAAM,YAAY,GAAG,OAAO,CAAC,MAAM,aAAa,CAAC,KAAD,aAAC,KAAD,cAAC,KAAD,GAAU,EAAV,CAApB,EAAmC,CAAC,aAAD,EAAgB,KAAhB,CAAnC,CAA5B;AACA,SAAO,eAAe,CAAC,YAAD,CAAtB;AACA,CAJM;;AAMA,MAAM,mBAAmB,GAAG,MAAyD,UAAU,CAAC,eAAD,CAAV,CAA4B,QAAjH;;AAEA,MAAM,kBAAkB,GAAiC,GAA9B,IAA+E;AAChH,QAAM,QAAQ,GAAG,mBAAmB,EAApC;AACA,SAAO,WAAW,CAAE,KAAD,IAAc,QAAQ,CAAC,CAAC;AAAE,IAAA,GAAF;AAAO,IAAA;AAAP,GAAD,CAAD,CAAvB,EAA2C,CAAC,QAAD,EAAW,GAAX,CAA3C,CAAlB;AACA,CAHM","sourcesContent":["import { createContext, useCallback, useContext, useMemo } from 'react';\nimport { useSubscription, Subscription, Unsubscribe } from 'use-subscription';\n\nimport { SettingId, ISetting, GroupId, SectionName, TabId } from '../../definition/ISetting';\n\nexport type SettingsContextQuery = {\n\treadonly _id?: SettingId[];\n\treadonly group?: GroupId;\n\treadonly section?: SectionName;\n\treadonly tab?: TabId;\n};\n\nexport type SettingsContextValue = {\n\treadonly hasPrivateAccess: boolean;\n\treadonly isLoading: boolean;\n\treadonly querySetting: (_id: SettingId) => Subscription<ISetting | undefined>;\n\treadonly querySettings: (query: SettingsContextQuery) => Subscription<ISetting[]>;\n\treadonly dispatch: (changes: Partial<ISetting>[]) => Promise<void>;\n};\n\nexport const SettingsContext = createContext<SettingsContextValue>({\n\thasPrivateAccess: false,\n\tisLoading: false,\n\tquerySetting: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tquerySettings: () => ({\n\t\tgetCurrentValue: (): ISetting[] => [],\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n\tdispatch: async () => undefined,\n});\n\nexport const useIsPrivilegedSettingsContext = (): boolean => useContext(SettingsContext).hasPrivateAccess;\n\nexport const useIsSettingsContextLoading = (): boolean => useContext(SettingsContext).isLoading;\n\nexport const useSettingStructure = (_id: SettingId): ISetting | undefined => {\n\tconst { querySetting } = useContext(SettingsContext);\n\tconst subscription = useMemo(() => querySetting(_id), [querySetting, _id]);\n\treturn useSubscription(subscription);\n};\n\nexport const useSetting = (_id: SettingId): unknown | undefined => useSettingStructure(_id)?.value;\n\nexport const useSettings = (query?: SettingsContextQuery): ISetting[] => {\n\tconst { querySettings } = useContext(SettingsContext);\n\tconst subscription = useMemo(() => querySettings(query ?? {}), [querySettings, query]);\n\treturn useSubscription(subscription);\n};\n\nexport const useSettingsDispatch = (): ((changes: Partial<ISetting>[]) => Promise<void>) => useContext(SettingsContext).dispatch;\n\nexport const useSettingSetValue = <T extends ISetting['value']>(_id: SettingId): ((value: T) => Promise<void>) => {\n\tconst dispatch = useSettingsDispatch();\n\treturn useCallback((value: T) => dispatch([{ _id, value }]), [dispatch, _id]);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"47cf50ccecf10d69df3ff6291fb293b059af3ce1"}
