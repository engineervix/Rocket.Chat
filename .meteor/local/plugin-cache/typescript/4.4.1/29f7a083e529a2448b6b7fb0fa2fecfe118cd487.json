{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/banners.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/banners.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/banners.ts","inputSourceMap":{"version":3,"file":"client/startup/banners.ts","sourceRoot":"","sources":["client/startup/banners.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAW,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAEnE,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAC;AAE1C,MAAM,mBAAmB,GAAG,KAAK,IAAmB,EAAE;IACrD,MAAM,QAAQ,GAET,MAAM,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE;QACtC,QAAQ,EAAE,cAAc,CAAC,GAAG;KAC5B,CAAC,CAAC;IAEH,KAAK,MAAM,MAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;QACtC,OAAO,CAAC,IAAI,CAAC;YACZ,GAAG,MAAM,CAAC,IAAI;YACd,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG;SACxC,CAAC,CAAC;KACH;AACF,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,KAAK,EAAE,KAA2B,EAAiB,EAAE;IACzE,MAAM,QAAQ,GAET,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,KAAK,CAAC,QAAQ,EAAE,EAAE;QACxD,QAAQ,EAAE,cAAc,CAAC,GAAG;KAC5B,CAAC,CAAC;IAEH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE;QAC7B,OAAO,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACzC;IAED,KAAK,MAAM,MAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;QACtC,OAAO,CAAC,IAAI,CAAC;YACZ,GAAG,MAAM,CAAC,IAAI;YACd,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG;SACxC,CAAC,CAAC;KACH;AACF,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,GAAiB,EAAE;IACvC,mBAAmB,EAAE,CAAC;IAEtB,aAAa,CAAC,QAAQ,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;IAEvD,OAAO,GAAS,EAAE;QACjB,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrC,OAAO,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,IAAI,cAAsC,CAAC;IAE3C,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;QACpB,cAAc,EAAE,EAAE,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;YACrB,OAAO;SACP;QAED,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Notifications } from '../../app/notifications/client';\nimport { APIClient } from '../../app/utils/client';\nimport { IBanner, BannerPlatform } from '../../definition/IBanner';\nimport { Serialized } from '../../definition/Serialized';\nimport * as banners from '../lib/banners';\n\nconst fetchInitialBanners = async (): Promise<void> => {\n\tconst response: Serialized<{\n\t\tbanners: IBanner[];\n\t}> = await APIClient.get('v1/banners', {\n\t\tplatform: BannerPlatform.Web,\n\t});\n\n\tfor (const banner of response.banners) {\n\t\tbanners.open({\n\t\t\t...banner.view,\n\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t});\n\t}\n};\n\nconst handleBanner = async (event: { bannerId: string }): Promise<void> => {\n\tconst response: Serialized<{\n\t\tbanners: IBanner[];\n\t}> = await APIClient.get(`v1/banners/${event.bannerId}`, {\n\t\tplatform: BannerPlatform.Web,\n\t});\n\n\tif (!response.banners.length) {\n\t\treturn banners.closeById(event.bannerId);\n\t}\n\n\tfor (const banner of response.banners) {\n\t\tbanners.open({\n\t\t\t...banner.view,\n\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t});\n\t}\n};\n\nconst watchBanners = (): (() => void) => {\n\tfetchInitialBanners();\n\n\tNotifications.onLogged('banner-changed', handleBanner);\n\n\treturn (): void => {\n\t\tNotifications.unLogged(handleBanner);\n\t\tbanners.clear();\n\t};\n};\n\nMeteor.startup(() => {\n\tlet unwatchBanners: () => void | undefined;\n\n\tTracker.autorun(() => {\n\t\tunwatchBanners?.();\n\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tunwatchBanners = Tracker.nonreactive(watchBanners);\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/banners.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/banners.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 1);\nlet Notifications;\nmodule.link(\"../../app/notifications/client\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 2);\nlet APIClient;\nmodule.link(\"../../app/utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 3);\nlet BannerPlatform;\nmodule.link(\"../../definition/IBanner\", {\n  BannerPlatform(v) {\n    BannerPlatform = v;\n  }\n\n}, 4);\nlet banners;\nmodule.link(\"../lib/banners\", {\n  \"*\"(v) {\n    banners = v;\n  }\n\n}, 5);\n\nconst fetchInitialBanners = async () => {\n  const response = await APIClient.get('v1/banners', {\n    platform: BannerPlatform.Web\n  });\n\n  for (const banner of response.banners) {\n    banners.open(_objectSpread(_objectSpread({}, banner.view), {}, {\n      viewId: banner.view.viewId || banner._id\n    }));\n  }\n};\n\nconst handleBanner = async event => {\n  const response = await APIClient.get(\"v1/banners/\".concat(event.bannerId), {\n    platform: BannerPlatform.Web\n  });\n\n  if (!response.banners.length) {\n    return banners.closeById(event.bannerId);\n  }\n\n  for (const banner of response.banners) {\n    banners.open(_objectSpread(_objectSpread({}, banner.view), {}, {\n      viewId: banner.view.viewId || banner._id\n    }));\n  }\n};\n\nconst watchBanners = () => {\n  fetchInitialBanners();\n  Notifications.onLogged('banner-changed', handleBanner);\n  return () => {\n    Notifications.unLogged(handleBanner);\n    banners.clear();\n  };\n};\n\nMeteor.startup(() => {\n  let unwatchBanners;\n  Tracker.autorun(() => {\n    var _unwatchBanners;\n\n    (_unwatchBanners = unwatchBanners) === null || _unwatchBanners === void 0 ? void 0 : _unwatchBanners();\n\n    if (!Meteor.userId()) {\n      return;\n    }\n\n    unwatchBanners = Tracker.nonreactive(watchBanners);\n  });\n});","map":{"version":3,"sources":["client/startup/banners.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Notifications } from '../../app/notifications/client';\nimport { APIClient } from '../../app/utils/client';\nimport { IBanner, BannerPlatform } from '../../definition/IBanner';\nimport { Serialized } from '../../definition/Serialized';\nimport * as banners from '../lib/banners';\n\nconst fetchInitialBanners = async (): Promise<void> => {\n\tconst response: Serialized<{\n\t\tbanners: IBanner[];\n\t}> = await APIClient.get('v1/banners', {\n\t\tplatform: BannerPlatform.Web,\n\t});\n\n\tfor (const banner of response.banners) {\n\t\tbanners.open({\n\t\t\t...banner.view,\n\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t});\n\t}\n};\n\nconst handleBanner = async (event: { bannerId: string }): Promise<void> => {\n\tconst response: Serialized<{\n\t\tbanners: IBanner[];\n\t}> = await APIClient.get(`v1/banners/${event.bannerId}`, {\n\t\tplatform: BannerPlatform.Web,\n\t});\n\n\tif (!response.banners.length) {\n\t\treturn banners.closeById(event.bannerId);\n\t}\n\n\tfor (const banner of response.banners) {\n\t\tbanners.open({\n\t\t\t...banner.view,\n\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t});\n\t}\n};\n\nconst watchBanners = (): (() => void) => {\n\tfetchInitialBanners();\n\n\tNotifications.onLogged('banner-changed', handleBanner);\n\n\treturn (): void => {\n\t\tNotifications.unLogged(handleBanner);\n\t\tbanners.clear();\n\t};\n};\n\nMeteor.startup(() => {\n\tlet unwatchBanners: () => void | undefined;\n\n\tTracker.autorun(() => {\n\t\tunwatchBanners?.();\n\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tunwatchBanners = Tracker.nonreactive(watchBanners);\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"29f7a083e529a2448b6b7fb0fa2fecfe118cd487"}
