{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx","inputSourceMap":{"version":3,"file":"client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx","sourceRoot":"","sources":["client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AutoComplete, Box, Icon, Option, Options, Chip, AutoCompleteProps } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport React, { FC, memo, useCallback, useMemo, useState } from 'react';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { Serialized } from '../../../../../../definition/Serialized';\nimport RoomAvatar from '../../../../../components/avatar/RoomAvatar';\nimport { useEndpointData } from '../../../../../hooks/useEndpointData';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\n\ntype RoomsInputProps = {\n\tvalue: Serialized<IRoom>[];\n\tonChange: (value: Serialized<IRoom>, action: 'remove' | undefined) => void;\n};\n\n// TODO: Make AutoComplete accept arbitrary kinds of values\nconst useRoomsAutoComplete = (\n\tname: string,\n): {\n\trooms: Record<IRoom['_id'], Serialized<IRoom>>;\n\toptions: AutoCompleteProps['options'];\n} => {\n\tconst params = useMemo(\n\t\t() => ({\n\t\t\tname,\n\t\t}),\n\t\t[name],\n\t);\n\tconst { value: data } = useEndpointData('rooms.autocomplete.availableForTeams', params);\n\n\tconst options = useMemo<AutoCompleteProps['options']>(() => {\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn data.items.map((room: Serialized<IRoom>) => ({\n\t\t\tlabel: roomCoordinator.getRoomName(room.t, { _id: room._id, name: room.name, fname: room.fname, prid: room.prid }),\n\t\t\tvalue: room._id,\n\t\t}));\n\t}, [data]);\n\n\tconst rooms = useMemo<Record<IRoom['_id'], Serialized<IRoom>>>(\n\t\t() =>\n\t\t\tdata?.items.reduce((obj, room) => {\n\t\t\t\tobj[room._id] = room;\n\t\t\t\treturn obj;\n\t\t\t}, {} as Record<IRoom['_id'], Serialized<IRoom>>) ?? {},\n\t\t[data],\n\t);\n\n\treturn {\n\t\toptions,\n\t\trooms,\n\t};\n};\n\nconst RoomsInput: FC<RoomsInputProps> = ({ onChange, ...props }) => {\n\tconst [filter, setFilter] = useState('');\n\tconst { rooms, options } = useRoomsAutoComplete(useDebouncedValue(filter, 1000));\n\n\tconst onClickSelected = useCallback(\n\t\t(e) => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\n\t\t\tonChange(rooms[e.currentTarget.value], 'remove');\n\t\t},\n\t\t[onChange, rooms],\n\t);\n\n\tconst handleChange = useCallback<AutoCompleteProps['onChange']>(\n\t\t(value, action: 'remove' | undefined) => {\n\t\t\tonChange(rooms[value as string], action);\n\t\t},\n\t\t[onChange, rooms],\n\t);\n\n\tconst renderSelected = useCallback<FC<{ value?: IRoom[] }>>(\n\t\t({ value: selected }) => (\n\t\t\t<>\n\t\t\t\t{selected?.map((room) => (\n\t\t\t\t\t<Chip key={room._id} height='x20' value={room._id} onClick={onClickSelected} mie='x4'>\n\t\t\t\t\t\t<Icon name={room.t === 'c' ? 'hash' : 'hashtag-lock'} size='x12' />\n\t\t\t\t\t\t<Box is='span' margin='none' mis='x4'>\n\t\t\t\t\t\t\t{room.name}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Chip>\n\t\t\t\t))}\n\t\t\t</>\n\t\t),\n\t\t[onClickSelected],\n\t);\n\n\tconst renderItem = useCallback<FC<{ value: IRoom['_id'] }>>(\n\t\t({ value: rid, ...props }) => (\n\t\t\t<Option key={rooms[rid]._id} {...props} avatar={<RoomAvatar room={rooms[rid]} size={Options.AvatarSize} />} />\n\t\t),\n\t\t[rooms],\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\toptions={options}\n\t\t\trenderSelected={renderSelected}\n\t\t\trenderItem={renderItem}\n\t\t\tsetFilter={setFilter}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n\nexport default memo(RoomsInput);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx"}},"code":"var _excluded = [\"onChange\"],\n    _excluded2 = [\"value\"];\n\nvar _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 0);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 2);\nvar AutoComplete, Box, Icon, Option, Options, Chip;\nmodule.link(\"@rocket.chat/fuselage\", {\n  AutoComplete: function (v) {\n    AutoComplete = v;\n  },\n  Box: function (v) {\n    Box = v;\n  },\n  Icon: function (v) {\n    Icon = v;\n  },\n  Option: function (v) {\n    Option = v;\n  },\n  Options: function (v) {\n    Options = v;\n  },\n  Chip: function (v) {\n    Chip = v;\n  }\n}, 0);\nvar useDebouncedValue;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue: function (v) {\n    useDebouncedValue = v;\n  }\n}, 1);\nvar React, memo, useCallback, useMemo, useState;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  memo: function (v) {\n    memo = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 2);\nvar RoomAvatar;\nmodule.link(\"../../../../../components/avatar/RoomAvatar\", {\n  \"default\": function (v) {\n    RoomAvatar = v;\n  }\n}, 3);\nvar useEndpointData;\nmodule.link(\"../../../../../hooks/useEndpointData\", {\n  useEndpointData: function (v) {\n    useEndpointData = v;\n  }\n}, 4);\nvar roomCoordinator;\nmodule.link(\"../../../../../lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 5);\n\n// TODO: Make AutoComplete accept arbitrary kinds of values\nvar useRoomsAutoComplete = function (name) {\n  var params = useMemo(function () {\n    return {\n      name: name\n    };\n  }, [name]);\n\n  var _useEndpointData = useEndpointData('rooms.autocomplete.availableForTeams', params),\n      data = _useEndpointData.value;\n\n  var options = useMemo(function () {\n    if (!data) {\n      return [];\n    }\n\n    return data.items.map(function (room) {\n      return {\n        label: roomCoordinator.getRoomName(room.t, {\n          _id: room._id,\n          name: room.name,\n          fname: room.fname,\n          prid: room.prid\n        }),\n        value: room._id\n      };\n    });\n  }, [data]);\n  var rooms = useMemo(function () {\n    var _data$items$reduce;\n\n    return (_data$items$reduce = data === null || data === void 0 ? void 0 : data.items.reduce(function (obj, room) {\n      obj[room._id] = room;\n      return obj;\n    }, {})) !== null && _data$items$reduce !== void 0 ? _data$items$reduce : {};\n  }, [data]);\n  return {\n    options: options,\n    rooms: rooms\n  };\n};\n\nvar RoomsInput = function (_ref) {\n  var onChange = _ref.onChange,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      filter = _useState2[0],\n      setFilter = _useState2[1];\n\n  var _useRoomsAutoComplete = useRoomsAutoComplete(useDebouncedValue(filter, 1000)),\n      rooms = _useRoomsAutoComplete.rooms,\n      options = _useRoomsAutoComplete.options;\n\n  var onClickSelected = useCallback(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    onChange(rooms[e.currentTarget.value], 'remove');\n  }, [onChange, rooms]);\n  var handleChange = useCallback(function (value, action) {\n    onChange(rooms[value], action);\n  }, [onChange, rooms]);\n  var renderSelected = useCallback(function (_ref2) {\n    var selected = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, selected === null || selected === void 0 ? void 0 : selected.map(function (room) {\n      return /*#__PURE__*/React.createElement(Chip, {\n        key: room._id,\n        height: \"x20\",\n        value: room._id,\n        onClick: onClickSelected,\n        mie: \"x4\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: room.t === 'c' ? 'hash' : 'hashtag-lock',\n        size: \"x12\"\n      }), /*#__PURE__*/React.createElement(Box, {\n        is: \"span\",\n        margin: \"none\",\n        mis: \"x4\"\n      }, room.name));\n    }));\n  }, [onClickSelected]);\n  var renderItem = useCallback(function (_ref3) {\n    var rid = _ref3.value,\n        props = _objectWithoutProperties(_ref3, _excluded2);\n\n    return /*#__PURE__*/React.createElement(Option, _extends({\n      key: rooms[rid]._id\n    }, props, {\n      avatar: /*#__PURE__*/React.createElement(RoomAvatar, {\n        room: rooms[rid],\n        size: Options.AvatarSize\n      })\n    }));\n  }, [rooms]);\n  return /*#__PURE__*/React.createElement(AutoComplete, _extends({}, props, {\n    filter: filter,\n    options: options,\n    renderSelected: renderSelected,\n    renderItem: renderItem,\n    setFilter: setFilter,\n    onChange: handleChange\n  }));\n};\n\nmodule.exportDefault( /*#__PURE__*/memo(RoomsInput));","map":{"version":3,"sources":["client/views/teams/contextualBar/channels/AddExistingModal/RoomsInput.tsx"],"names":[],"mappings":";;;AAAA,IAAA,QAAA;;AAAS,MAAA,CAAA,IAAA,CAAc,gCAAd,EAAmE;AAAA,EAAA,OAAM,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,QAAwB,GAAA,CAAxB;AAAwB;AAA9B,CAAnE,EAAiG,CAAjG;;AAAiG,IAAA,cAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,wBAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,gDAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,wBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAA1G,IAAA,YAAA,EAAS,GAAT,EAAqB,IAArB,EAA0B,MAA1B,EAAgC,OAAhC,EAAwC,IAAxC;AAA0C,MAAS,CAAA,IAAT,CAAkC,uBAAlC,EAAwC;AAAA,EAAA,YAAwB,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA,GAAxB;AAAwB,EAAA,GAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA,GAAxB;AAAwB,EAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA,GAAxB;AAAwB,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA,GAAxB;AAAwB,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAxB;AAAwB,EAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;AAAxB,CAAxC,EAAgE,CAAhE;AAAgE,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,iBAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,IAAA,EAAA,WAAA,EAAA,OAAA,EAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,aAAA,UAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,IAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,QAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6CAAA,EAAA;AAAA,aAAA,UAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAe1G;AACA,IAAM,oBAAoB,GAAG,UAC5B,IAD4B,EAKzB;AACH,MAAM,MAAM,GAAG,OAAO,CACrB;AAAA,WAAO;AACN,MAAA,IAAI,EAAJ;AADM,KAAP;AAAA,GADqB,EAIrB,CAAC,IAAD,CAJqB,CAAtB;;AAMA,yBAAwB,eAAe,CAAC,sCAAD,EAAyC,MAAzC,CAAvC;AAAA,MAAe,IAAf,oBAAQ,KAAR;;AAEA,MAAM,OAAO,GAAG,OAAO,CAA+B,YAAK;AAC1D,QAAI,CAAC,IAAL,EAAW;AACV,aAAO,EAAP;AACA;;AAED,WAAO,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,UAAC,IAAD;AAAA,aAA8B;AACnD,QAAA,KAAK,EAAE,eAAe,CAAC,WAAhB,CAA4B,IAAI,CAAC,CAAjC,EAAoC;AAAE,UAAA,GAAG,EAAE,IAAI,CAAC,GAAZ;AAAiB,UAAA,IAAI,EAAE,IAAI,CAAC,IAA5B;AAAkC,UAAA,KAAK,EAAE,IAAI,CAAC,KAA9C;AAAqD,UAAA,IAAI,EAAE,IAAI,CAAC;AAAhE,SAApC,CAD4C;AAEnD,QAAA,KAAK,EAAE,IAAI,CAAC;AAFuC,OAA9B;AAAA,KAAf,CAAP;AAIA,GATsB,EASpB,CAAC,IAAD,CAToB,CAAvB;AAWA,MAAM,KAAK,GAAG,OAAO,CACpB;AAAA;;AAAA,iCACC,IADD,aACC,IADD,uBACC,IAAI,CAAE,KAAN,CAAY,MAAZ,CAAmB,UAAC,GAAD,EAAM,IAAN,EAAc;AAChC,MAAA,GAAG,CAAC,IAAI,CAAC,GAAN,CAAH,GAAgB,IAAhB;AACA,aAAO,GAAP;AACA,KAHD,EAGG,EAHH,CADD,mEAIsD,EAJtD;AAAA,GADoB,EAMpB,CAAC,IAAD,CANoB,CAArB;AASA,SAAO;AACN,IAAA,OAAO,EAAP,OADM;AAEN,IAAA,KAAK,EAAL;AAFM,GAAP;AAIA,CAtCD;;AAwCA,IAAM,UAAU,GAAwB,gBAA2B;AAAA,MAAxB,QAAwB,QAAxB,QAAwB;AAAA,MAAX,KAAW;;AAClE,kBAA4B,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAO,MAAP;AAAA,MAAe,SAAf;;AACA,8BAA2B,oBAAoB,CAAC,iBAAiB,CAAC,MAAD,EAAS,IAAT,CAAlB,CAA/C;AAAA,MAAQ,KAAR,yBAAQ,KAAR;AAAA,MAAe,OAAf,yBAAe,OAAf;;AAEA,MAAM,eAAe,GAAG,WAAW,CAClC,UAAC,CAAD,EAAM;AACL,IAAA,CAAC,CAAC,eAAF;AACA,IAAA,CAAC,CAAC,cAAF;AAEA,IAAA,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,aAAF,CAAgB,KAAjB,CAAN,EAA+B,QAA/B,CAAR;AACA,GANiC,EAOlC,CAAC,QAAD,EAAW,KAAX,CAPkC,CAAnC;AAUA,MAAM,YAAY,GAAG,WAAW,CAC/B,UAAC,KAAD,EAAQ,MAAR,EAAwC;AACvC,IAAA,QAAQ,CAAC,KAAK,CAAC,KAAD,CAAN,EAAyB,MAAzB,CAAR;AACA,GAH8B,EAI/B,CAAC,QAAD,EAAW,KAAX,CAJ+B,CAAhC;AAOA,MAAM,cAAc,GAAG,WAAW,CACjC;AAAA,QAAU,QAAV,SAAG,KAAH;AAAA,wBACC,0CACE,QADF,aACE,QADF,uBACE,QAAQ,CAAE,GAAV,CAAc,UAAC,IAAD;AAAA,0BACd,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,IAAI,CAAC,GAAhB;AAAqB,QAAA,MAAM,EAAC,KAA5B;AAAkC,QAAA,KAAK,EAAE,IAAI,CAAC,GAA9C;AAAmD,QAAA,OAAO,EAAE,eAA5D;AAA6E,QAAA,GAAG,EAAC;AAAjF,sBACC,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,IAAI,CAAC,CAAL,KAAW,GAAX,GAAiB,MAAjB,GAA0B,cAAtC;AAAsD,QAAA,IAAI,EAAC;AAA3D,QADD,eAEC,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,MAAM,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAC;AAAjC,SACE,IAAI,CAAC,IADP,CAFD,CADc;AAAA,KAAd,CADF,CADD;AAAA,GADiC,EAajC,CAAC,eAAD,CAbiC,CAAlC;AAgBA,MAAM,UAAU,GAAG,WAAW,CAC7B;AAAA,QAAU,GAAV,SAAG,KAAH;AAAA,QAAkB,KAAlB;;AAAA,wBACC,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,KAAK,CAAC,GAAD,CAAL,CAAW;AAAxB,OAAiC,KAAjC;AAAwC,MAAA,MAAM,eAAE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAK,CAAC,GAAD,CAAvB;AAA8B,QAAA,IAAI,EAAE,OAAO,CAAC;AAA5C;AAAhD,OADD;AAAA,GAD6B,EAI7B,CAAC,KAAD,CAJ6B,CAA9B;AAOA,sBACC,oBAAC,YAAD,eACK,KADL;AAEC,IAAA,MAAM,EAAE,MAFT;AAGC,IAAA,OAAO,EAAE,OAHV;AAIC,IAAA,cAAc,EAAE,cAJjB;AAKC,IAAA,UAAU,EAAE,UALb;AAMC,IAAA,SAAS,EAAE,SANZ;AAOC,IAAA,QAAQ,EAAE;AAPX,KADD;AAWA,CAvDD;;AAxDA,MAAA,CAAO,aAAP,eAiHe,IAAI,CAAC,UAAD,CAjHnB","sourcesContent":["import { AutoComplete, Box, Icon, Option, Options, Chip, AutoCompleteProps } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport React, { FC, memo, useCallback, useMemo, useState } from 'react';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { Serialized } from '../../../../../../definition/Serialized';\nimport RoomAvatar from '../../../../../components/avatar/RoomAvatar';\nimport { useEndpointData } from '../../../../../hooks/useEndpointData';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\n\ntype RoomsInputProps = {\n\tvalue: Serialized<IRoom>[];\n\tonChange: (value: Serialized<IRoom>, action: 'remove' | undefined) => void;\n};\n\n// TODO: Make AutoComplete accept arbitrary kinds of values\nconst useRoomsAutoComplete = (\n\tname: string,\n): {\n\trooms: Record<IRoom['_id'], Serialized<IRoom>>;\n\toptions: AutoCompleteProps['options'];\n} => {\n\tconst params = useMemo(\n\t\t() => ({\n\t\t\tname,\n\t\t}),\n\t\t[name],\n\t);\n\tconst { value: data } = useEndpointData('rooms.autocomplete.availableForTeams', params);\n\n\tconst options = useMemo<AutoCompleteProps['options']>(() => {\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn data.items.map((room: Serialized<IRoom>) => ({\n\t\t\tlabel: roomCoordinator.getRoomName(room.t, { _id: room._id, name: room.name, fname: room.fname, prid: room.prid }),\n\t\t\tvalue: room._id,\n\t\t}));\n\t}, [data]);\n\n\tconst rooms = useMemo<Record<IRoom['_id'], Serialized<IRoom>>>(\n\t\t() =>\n\t\t\tdata?.items.reduce((obj, room) => {\n\t\t\t\tobj[room._id] = room;\n\t\t\t\treturn obj;\n\t\t\t}, {} as Record<IRoom['_id'], Serialized<IRoom>>) ?? {},\n\t\t[data],\n\t);\n\n\treturn {\n\t\toptions,\n\t\trooms,\n\t};\n};\n\nconst RoomsInput: FC<RoomsInputProps> = ({ onChange, ...props }) => {\n\tconst [filter, setFilter] = useState('');\n\tconst { rooms, options } = useRoomsAutoComplete(useDebouncedValue(filter, 1000));\n\n\tconst onClickSelected = useCallback(\n\t\t(e) => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\n\t\t\tonChange(rooms[e.currentTarget.value], 'remove');\n\t\t},\n\t\t[onChange, rooms],\n\t);\n\n\tconst handleChange = useCallback<AutoCompleteProps['onChange']>(\n\t\t(value, action: 'remove' | undefined) => {\n\t\t\tonChange(rooms[value as string], action);\n\t\t},\n\t\t[onChange, rooms],\n\t);\n\n\tconst renderSelected = useCallback<FC<{ value?: IRoom[] }>>(\n\t\t({ value: selected }) => (\n\t\t\t<>\n\t\t\t\t{selected?.map((room) => (\n\t\t\t\t\t<Chip key={room._id} height='x20' value={room._id} onClick={onClickSelected} mie='x4'>\n\t\t\t\t\t\t<Icon name={room.t === 'c' ? 'hash' : 'hashtag-lock'} size='x12' />\n\t\t\t\t\t\t<Box is='span' margin='none' mis='x4'>\n\t\t\t\t\t\t\t{room.name}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Chip>\n\t\t\t\t))}\n\t\t\t</>\n\t\t),\n\t\t[onClickSelected],\n\t);\n\n\tconst renderItem = useCallback<FC<{ value: IRoom['_id'] }>>(\n\t\t({ value: rid, ...props }) => (\n\t\t\t<Option key={rooms[rid]._id} {...props} avatar={<RoomAvatar room={rooms[rid]} size={Options.AvatarSize} />} />\n\t\t),\n\t\t[rooms],\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\toptions={options}\n\t\t\trenderSelected={renderSelected}\n\t\t\trenderItem={renderItem}\n\t\t\tsetFilter={setFilter}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n\nexport default memo(RoomsInput);\n"],"sourceRoot":""},"sourceType":"module","hash":"13f5688f81fca660b4e164eaacd40f345771a98b"}
