{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/prependReplies.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/utils/prependReplies.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/prependReplies.ts","inputSourceMap":{"version":3,"file":"client/lib/utils/prependReplies.ts","sourceRoot":"","sources":["client/lib/utils/prependReplies.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,gDAAgD,CAAC;AAI/E,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,GAAW,EAAE,UAAsB,EAAE,EAAE,OAAO,GAAG,KAAK,EAAmB,EAAE;IAC/G,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAE1F,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG,CAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;QACrC,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACxD,MAAM,IAAI,GAAiB,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEpE,IAAI,KAAK,GAAG,OAAO,SAAS,GAAG,CAAC;QAChC,IAAI,IAAI,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,IAAI,OAAO,EAAE;YAC1D,KAAK,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC3B;QAED,OAAO,KAAK,CAAC;IACd,CAAC,CAAC,CACF,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Rooms, Users } from '../../../app/models/client';\nimport { MessageAction } from '../../../app/ui-utils/client/lib/MessageAction';\nimport { IMessage } from '../../../definition/IMessage';\nimport { IRoom } from '../../../definition/IRoom';\n\nexport const prependReplies = async (msg: string, replies: IMessage[] = [], mention = false): Promise<string> => {\n\tconst { username } = Users.findOne({ _id: Meteor.userId() }, { fields: { username: 1 } });\n\n\tconst chunks = await Promise.all(\n\t\treplies.map(async ({ _id, rid, u }) => {\n\t\t\tconst permalink = await MessageAction.getPermaLink(_id);\n\t\t\tconst room: IRoom | null = Rooms.findOne(rid, { fields: { t: 1 } });\n\n\t\t\tlet chunk = `[ ](${permalink})`;\n\t\t\tif (room?.t === 'd' && u.username !== username && mention) {\n\t\t\t\tchunk += ` @${u.username}`;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}),\n\t);\n\n\tchunks.push(msg);\n\treturn chunks.join(' ');\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/prependReplies.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/utils/prependReplies.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  prependReplies: function () {\n    return prependReplies;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Rooms, Users;\nmodule.link(\"../../../app/models/client\", {\n  Rooms: function (v) {\n    Rooms = v;\n  },\n  Users: function (v) {\n    Users = v;\n  }\n}, 1);\nvar MessageAction;\nmodule.link(\"../../../app/ui-utils/client/lib/MessageAction\", {\n  MessageAction: function (v) {\n    MessageAction = v;\n  }\n}, 2);\n\nvar prependReplies = function () {\n  function _callee2(msg) {\n    var replies,\n        mention,\n        _Users$findOne,\n        username,\n        chunks,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.async(function () {\n      function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              replies = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : [];\n              mention = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : false;\n              _Users$findOne = Users.findOne({\n                _id: Meteor.userId()\n              }, {\n                fields: {\n                  username: 1\n                }\n              }), username = _Users$findOne.username;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Promise.all(replies.map(function () {\n                function _callee(_ref) {\n                  var _id, rid, u, permalink, room, chunk;\n\n                  return _regeneratorRuntime.async(function () {\n                    function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _id = _ref._id, rid = _ref.rid, u = _ref.u;\n                            _context.next = 3;\n                            return _regeneratorRuntime.awrap(MessageAction.getPermaLink(_id));\n\n                          case 3:\n                            permalink = _context.sent;\n                            room = Rooms.findOne(rid, {\n                              fields: {\n                                t: 1\n                              }\n                            });\n                            chunk = \"[ ](\" + permalink + \")\";\n\n                            if ((room === null || room === void 0 ? void 0 : room.t) === 'd' && u.username !== username && mention) {\n                              chunk += \" @\" + u.username;\n                            }\n\n                            return _context.abrupt(\"return\", chunk);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }\n\n                    return _callee$;\n                  }(), null, null, null, Promise);\n                }\n\n                return _callee;\n              }())));\n\n            case 5:\n              chunks = _context2.sent;\n              chunks.push(msg);\n              return _context2.abrupt(\"return\", chunks.join(' '));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }\n\n      return _callee2$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee2;\n}();","map":{"version":3,"sources":["client/lib/utils/prependReplies.ts"],"names":[],"mappings":"AAAA,IAAA,mBAAA;;AAAuB,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAgB;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;AAAA,CAAhB,EAAgB,CAAhB;AAAvB,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,cAAQ,EAAA,YAAgB;AAAA,WAAA,cAAA;AAAA;AAA9B,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,KAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,KAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gDAAA,EAAA;AAAA,EAAA,aAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAOhC,IAAM,cAAc;AAAG,oBAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoB,cAAA,OAApB,8DAA0C,EAA1C;AAA8C,cAAA,OAA9C,8DAAwD,KAAxD;AAAA,+BACR,KAAK,CAAC,OAAN,CAAc;AAAE,gBAAA,GAAG,EAAE,MAAM,CAAC,MAAP;AAAP,eAAd,EAAwC;AAAE,gBAAA,MAAM,EAAE;AAAE,kBAAA,QAAQ,EAAE;AAAZ;AAAV,eAAxC,CADQ,EACrB,QADqB,kBACrB,QADqB;AAAA;AAAA,+CAGR,OAAO,CAAC,GAAR,CACpB,OAAO,CAAC,GAAR;AAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAS,4BAAA,GAAT,QAAS,GAAT,EAAc,GAAd,QAAc,GAAd,EAAmB,CAAnB,QAAmB,CAAnB;AAAA;AAAA,6DACa,aAAa,CAAC,YAAd,CAA2B,GAA3B,CADb;;AAAA;AACL,4BAAA,SADK;AAEL,4BAAA,IAFK,GAEgB,KAAK,CAAC,OAAN,CAAc,GAAd,EAAmB;AAAE,8BAAA,MAAM,EAAE;AAAE,gCAAA,CAAC,EAAE;AAAL;AAAV,6BAAnB,CAFhB;AAIP,4BAAA,KAJO,YAIQ,SAJR;;AAKX,gCAAI,CAAA,IAAI,SAAJ,IAAA,IAAI,WAAJ,YAAA,IAAI,CAAE,CAAN,MAAY,GAAZ,IAAmB,CAAC,CAAC,QAAF,KAAe,QAAlC,IAA8C,OAAlD,EAA2D;AAC1D,8BAAA,KAAK,WAAS,CAAC,CAAC,QAAhB;AACA;;AAPU,6DASJ,KATI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAZ;AAAA,kBADoB,CAHQ;;AAAA;AAGvB,cAAA,MAHuB;AAiB7B,cAAA,MAAM,CAAC,IAAP,CAAY,GAAZ;AAjB6B,gDAkBtB,MAAM,CAAC,IAAP,CAAY,GAAZ,CAlBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAH;AAAA,GAApB","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Rooms, Users } from '../../../app/models/client';\nimport { MessageAction } from '../../../app/ui-utils/client/lib/MessageAction';\nimport { IMessage } from '../../../definition/IMessage';\nimport { IRoom } from '../../../definition/IRoom';\n\nexport const prependReplies = async (msg: string, replies: IMessage[] = [], mention = false): Promise<string> => {\n\tconst { username } = Users.findOne({ _id: Meteor.userId() }, { fields: { username: 1 } });\n\n\tconst chunks = await Promise.all(\n\t\treplies.map(async ({ _id, rid, u }) => {\n\t\t\tconst permalink = await MessageAction.getPermaLink(_id);\n\t\t\tconst room: IRoom | null = Rooms.findOne(rid, { fields: { t: 1 } });\n\n\t\t\tlet chunk = `[ ](${permalink})`;\n\t\t\tif (room?.t === 'd' && u.username !== username && mention) {\n\t\t\t\tchunk += ` @${u.username}`;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}),\n\t);\n\n\tchunks.push(msg);\n\treturn chunks.join(' ');\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"db1dc51b5d8522c9c4c9c3509832f4538727f940"}
