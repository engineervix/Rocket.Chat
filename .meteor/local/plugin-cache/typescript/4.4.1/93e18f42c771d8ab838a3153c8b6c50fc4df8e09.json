{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/settings/groups/LDAPGroupPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/admin/settings/groups/LDAPGroupPage.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/settings/groups/LDAPGroupPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/settings/groups/LDAPGroupPage.tsx","sourceRoot":"","sources":["client/views/admin/settings/groups/LDAPGroupPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Button, Box, TextInput, Field } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { FormEvent, memo, useMemo } from 'react';\n\nimport type { ISetting } from '../../../../../definition/ISetting';\nimport GenericModal from '../../../../components/GenericModal';\nimport { useEditableSettings } from '../../../../contexts/EditableSettingsContext';\nimport { useSetModal } from '../../../../contexts/ModalContext';\nimport { useEndpoint } from '../../../../contexts/ServerContext';\nimport { useSetting } from '../../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport TabbedGroupPage from './TabbedGroupPage';\n\nfunction LDAPGroupPage({ _id, ...group }: ISetting): JSX.Element {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst testConnection = useEndpoint('POST', 'ldap.testConnection');\n\tconst syncNow = useEndpoint('POST', 'ldap.syncNow');\n\tconst testSearch = useEndpoint('POST', 'ldap.testSearch');\n\tconst ldapEnabled = useSetting('LDAP_Enable');\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal());\n\n\tconst editableSettings = useEditableSettings(\n\t\tuseMemo(\n\t\t\t() => ({\n\t\t\t\tgroup: _id,\n\t\t\t}),\n\t\t\t[_id],\n\t\t),\n\t);\n\n\tconst changed = useMemo(() => editableSettings.some(({ changed }) => changed), [editableSettings]);\n\n\tconst handleTestConnectionButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst { message } = await testConnection();\n\t\t\tdispatchToastMessage({ type: 'success', message: t(message) });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSyncNowButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tconst confirmSync = async (): Promise<void> => {\n\t\t\t\tcloseModal();\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await syncNow();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Sync')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Execute_Synchronization_Now')}\n\t\t\t\t\tonConfirm={confirmSync}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t{t('LDAP_Sync_Now_Description')}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSearchTestButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tlet username = '';\n\t\t\tconst handleChangeUsername = (event: FormEvent<HTMLInputElement>): void => {\n\t\t\t\tusername = event.currentTarget.value;\n\t\t\t};\n\n\t\t\tconst confirmSearch = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await testSearch({ username });\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Search')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Test_LDAP_Search')}\n\t\t\t\t\tonConfirm={confirmSearch}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t<Field.Label>{t('LDAP_Username_To_Search')}</Field.Label>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<TextInput onChange={handleChangeUsername} />\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<TabbedGroupPage\n\t\t\t_id={_id}\n\t\t\t{...group}\n\t\t\theaderButtons={\n\t\t\t\t<>\n\t\t\t\t\t<Button children={t('Test_Connection')} disabled={!ldapEnabled || changed} onClick={handleTestConnectionButtonClick} />\n\t\t\t\t\t<Button children={t('Test_LDAP_Search')} disabled={!ldapEnabled || changed} onClick={handleSearchTestButtonClick} />\n\t\t\t\t\t<Button children={t('LDAP_Sync_Now')} disabled={!ldapEnabled || changed} onClick={handleSyncNowButtonClick} />\n\t\t\t\t\t<Button is='a' href='https://go.rocket.chat/i/ldap-docs' target='_blank'>\n\t\t\t\t\t\t{t('LDAP_Documentation')}\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default memo(LDAPGroupPage);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/settings/groups/LDAPGroupPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/settings/groups/LDAPGroupPage.tsx"}},"code":"var _excluded = [\"_id\"];\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 1);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 2);\nvar Button, Box, TextInput, Field;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Box: function (v) {\n    Box = v;\n  },\n  TextInput: function (v) {\n    TextInput = v;\n  },\n  Field: function (v) {\n    Field = v;\n  }\n}, 0);\nvar useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  }\n}, 1);\nvar React, memo, useMemo;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  memo: function (v) {\n    memo = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 2);\nvar GenericModal;\nmodule.link(\"../../../../components/GenericModal\", {\n  \"default\": function (v) {\n    GenericModal = v;\n  }\n}, 3);\nvar useEditableSettings;\nmodule.link(\"../../../../contexts/EditableSettingsContext\", {\n  useEditableSettings: function (v) {\n    useEditableSettings = v;\n  }\n}, 4);\nvar useSetModal;\nmodule.link(\"../../../../contexts/ModalContext\", {\n  useSetModal: function (v) {\n    useSetModal = v;\n  }\n}, 5);\nvar useEndpoint;\nmodule.link(\"../../../../contexts/ServerContext\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 6);\nvar useSetting;\nmodule.link(\"../../../../contexts/SettingsContext\", {\n  useSetting: function (v) {\n    useSetting = v;\n  }\n}, 7);\nvar useToastMessageDispatch;\nmodule.link(\"../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  }\n}, 8);\nvar useTranslation;\nmodule.link(\"../../../../contexts/TranslationContext\", {\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 9);\nvar TabbedGroupPage;\nmodule.link(\"./TabbedGroupPage\", {\n  \"default\": function (v) {\n    TabbedGroupPage = v;\n  }\n}, 10);\n\nfunction LDAPGroupPage(_ref) {\n  var _id = _ref._id,\n      group = _objectWithoutProperties(_ref, _excluded);\n\n  var t = useTranslation();\n  var dispatchToastMessage = useToastMessageDispatch();\n  var testConnection = useEndpoint('POST', 'ldap.testConnection');\n  var syncNow = useEndpoint('POST', 'ldap.syncNow');\n  var testSearch = useEndpoint('POST', 'ldap.testSearch');\n  var ldapEnabled = useSetting('LDAP_Enable');\n  var setModal = useSetModal();\n  var closeModal = useMutableCallback(function () {\n    return setModal();\n  });\n  var editableSettings = useEditableSettings(useMemo(function () {\n    return {\n      group: _id\n    };\n  }, [_id]));\n  var changed = useMemo(function () {\n    return editableSettings.some(function (_ref2) {\n      var changed = _ref2.changed;\n      return changed;\n    });\n  }, [editableSettings]);\n\n  var handleTestConnectionButtonClick = function () {\n    function _callee() {\n      var _await$testConnection, message;\n\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(testConnection());\n\n              case 3:\n                _await$testConnection = _context.sent;\n                message = _await$testConnection.message;\n                dispatchToastMessage({\n                  type: 'success',\n                  message: t(message)\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, [[0, 8]], Promise);\n    }\n\n    return _callee;\n  }();\n\n  var handleSyncNowButtonClick = function () {\n    function _callee3() {\n      var confirmSync;\n      return _regeneratorRuntime.async(function () {\n        function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(testConnection());\n\n              case 3:\n                confirmSync = function () {\n                  function _callee2() {\n                    var _await$syncNow, message;\n\n                    return _regeneratorRuntime.async(function () {\n                      function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              closeModal();\n                              _context2.prev = 1;\n                              _context2.next = 4;\n                              return _regeneratorRuntime.awrap(syncNow());\n\n                            case 4:\n                              _await$syncNow = _context2.sent;\n                              message = _await$syncNow.message;\n                              dispatchToastMessage({\n                                type: 'success',\n                                message: t(message)\n                              });\n                              _context2.next = 12;\n                              break;\n\n                            case 9:\n                              _context2.prev = 9;\n                              _context2.t0 = _context2[\"catch\"](1);\n                              dispatchToastMessage({\n                                type: 'error',\n                                message: _context2.t0\n                              });\n\n                            case 12:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }\n\n                      return _callee2$;\n                    }(), null, null, [[1, 9]], Promise);\n                  }\n\n                  return _callee2;\n                }();\n\n                setModal( /*#__PURE__*/React.createElement(GenericModal, {\n                  variant: \"info\",\n                  confirmText: t('Sync'),\n                  cancelText: t('Cancel'),\n                  title: t('Execute_Synchronization_Now'),\n                  onConfirm: confirmSync,\n                  onClose: closeModal\n                }, t('LDAP_Sync_Now_Description')));\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context3.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return _callee3$;\n      }(), null, null, [[0, 7]], Promise);\n    }\n\n    return _callee3;\n  }();\n\n  var handleSearchTestButtonClick = function () {\n    function _callee5() {\n      var username, handleChangeUsername, confirmSearch;\n      return _regeneratorRuntime.async(function () {\n        function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return _regeneratorRuntime.awrap(testConnection());\n\n              case 3:\n                username = '';\n\n                handleChangeUsername = function (event) {\n                  username = event.currentTarget.value;\n                };\n\n                confirmSearch = function () {\n                  function _callee4() {\n                    var _await$testSearch, message;\n\n                    return _regeneratorRuntime.async(function () {\n                      function _callee4$(_context4) {\n                        while (1) {\n                          switch (_context4.prev = _context4.next) {\n                            case 0:\n                              _context4.prev = 0;\n                              _context4.next = 3;\n                              return _regeneratorRuntime.awrap(testSearch({\n                                username: username\n                              }));\n\n                            case 3:\n                              _await$testSearch = _context4.sent;\n                              message = _await$testSearch.message;\n                              dispatchToastMessage({\n                                type: 'success',\n                                message: t(message)\n                              });\n                              _context4.next = 11;\n                              break;\n\n                            case 8:\n                              _context4.prev = 8;\n                              _context4.t0 = _context4[\"catch\"](0);\n                              dispatchToastMessage({\n                                type: 'error',\n                                message: _context4.t0\n                              });\n\n                            case 11:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }\n                      }\n\n                      return _callee4$;\n                    }(), null, null, [[0, 8]], Promise);\n                  }\n\n                  return _callee4;\n                }();\n\n                setModal( /*#__PURE__*/React.createElement(GenericModal, {\n                  variant: \"info\",\n                  confirmText: t('Search'),\n                  cancelText: t('Cancel'),\n                  title: t('Test_LDAP_Search'),\n                  onConfirm: confirmSearch,\n                  onClose: closeModal\n                }, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Box, {\n                  display: \"flex\"\n                }, /*#__PURE__*/React.createElement(Field.Label, null, t('LDAP_Username_To_Search'))), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n                  onChange: handleChangeUsername\n                })))));\n                _context5.next = 12;\n                break;\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](0);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context5.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }\n\n        return _callee5$;\n      }(), null, null, [[0, 9]], Promise);\n    }\n\n    return _callee5;\n  }();\n\n  return /*#__PURE__*/React.createElement(TabbedGroupPage, _extends({\n    _id: _id\n  }, group, {\n    headerButtons: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      children: t('Test_Connection'),\n      disabled: !ldapEnabled || changed,\n      onClick: handleTestConnectionButtonClick\n    }), /*#__PURE__*/React.createElement(Button, {\n      children: t('Test_LDAP_Search'),\n      disabled: !ldapEnabled || changed,\n      onClick: handleSearchTestButtonClick\n    }), /*#__PURE__*/React.createElement(Button, {\n      children: t('LDAP_Sync_Now'),\n      disabled: !ldapEnabled || changed,\n      onClick: handleSyncNowButtonClick\n    }), /*#__PURE__*/React.createElement(Button, {\n      is: \"a\",\n      href: \"https://go.rocket.chat/i/ldap-docs\",\n      target: \"_blank\"\n    }, t('LDAP_Documentation')))\n  }));\n}\n\nmodule.exportDefault( /*#__PURE__*/memo(LDAPGroupPage));","map":{"version":3,"sources":["client/views/admin/settings/groups/LDAPGroupPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Button, Box, TextInput, Field } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { FormEvent, memo, useMemo } from 'react';\n\nimport type { ISetting } from '../../../../../definition/ISetting';\nimport GenericModal from '../../../../components/GenericModal';\nimport { useEditableSettings } from '../../../../contexts/EditableSettingsContext';\nimport { useSetModal } from '../../../../contexts/ModalContext';\nimport { useEndpoint } from '../../../../contexts/ServerContext';\nimport { useSetting } from '../../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport TabbedGroupPage from './TabbedGroupPage';\n\nfunction LDAPGroupPage({ _id, ...group }: ISetting): JSX.Element {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst testConnection = useEndpoint('POST', 'ldap.testConnection');\n\tconst syncNow = useEndpoint('POST', 'ldap.syncNow');\n\tconst testSearch = useEndpoint('POST', 'ldap.testSearch');\n\tconst ldapEnabled = useSetting('LDAP_Enable');\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal());\n\n\tconst editableSettings = useEditableSettings(\n\t\tuseMemo(\n\t\t\t() => ({\n\t\t\t\tgroup: _id,\n\t\t\t}),\n\t\t\t[_id],\n\t\t),\n\t);\n\n\tconst changed = useMemo(() => editableSettings.some(({ changed }) => changed), [editableSettings]);\n\n\tconst handleTestConnectionButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst { message } = await testConnection();\n\t\t\tdispatchToastMessage({ type: 'success', message: t(message) });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSyncNowButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tconst confirmSync = async (): Promise<void> => {\n\t\t\t\tcloseModal();\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await syncNow();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Sync')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Execute_Synchronization_Now')}\n\t\t\t\t\tonConfirm={confirmSync}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t{t('LDAP_Sync_Now_Description')}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSearchTestButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tlet username = '';\n\t\t\tconst handleChangeUsername = (event: FormEvent<HTMLInputElement>): void => {\n\t\t\t\tusername = event.currentTarget.value;\n\t\t\t};\n\n\t\t\tconst confirmSearch = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await testSearch({ username });\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Search')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Test_LDAP_Search')}\n\t\t\t\t\tonConfirm={confirmSearch}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t<Field.Label>{t('LDAP_Username_To_Search')}</Field.Label>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<TextInput onChange={handleChangeUsername} />\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<TabbedGroupPage\n\t\t\t_id={_id}\n\t\t\t{...group}\n\t\t\theaderButtons={\n\t\t\t\t<>\n\t\t\t\t\t<Button children={t('Test_Connection')} disabled={!ldapEnabled || changed} onClick={handleTestConnectionButtonClick} />\n\t\t\t\t\t<Button children={t('Test_LDAP_Search')} disabled={!ldapEnabled || changed} onClick={handleSearchTestButtonClick} />\n\t\t\t\t\t<Button children={t('LDAP_Sync_Now')} disabled={!ldapEnabled || changed} onClick={handleSyncNowButtonClick} />\n\t\t\t\t\t<Button is='a' href='https://go.rocket.chat/i/ldap-docs' target='_blank'>\n\t\t\t\t\t\t{t('LDAP_Documentation')}\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default memo(LDAPGroupPage);\n"],"sourceRoot":""},"sourceType":"module","hash":"93e18f42c771d8ab838a3153c8b6c50fc4df8e09"}
