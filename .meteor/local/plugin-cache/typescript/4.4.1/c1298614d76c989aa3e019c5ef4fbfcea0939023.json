{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,MAAM,MAAM,0CAA0C,CAAC;AAC9D,OAAO,KAAuB,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAIzC,OAAO,WAAW,MAAM,uCAAuC,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,uCAAuC,CAAC;AACrE,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,UAAU,MAAM,cAAc,CAAC;AACtC,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAEpD,MAAM,kBAAkB,GAAG,CAAC,KAAyD,EAAgB,EAAE;IACtG,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxC,MAAM,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC;IAEtC,MAAM,YAAY,GAAG,GAAG,CAAA;;;;;;;;;;;;;;sBAcH,MAAM,CAAC,KAAK;EAChC,CAAC;IAEF,IAAI,cAAc,EAAE;QACnB,OAAO,YAAY,CAClB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAC5B;IAAA,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAC9C;IAAA,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAG,CAC7E;GAAA,EAAE,GAAG,CAAC,EACN,YAAY,CAAC,cAAc,CAAC,CAC5B,CAAC;KACF;IAED,OAAO,CACN,EACC;GAAA,CAAC,WAAW,CAAC,iBAAiB,CAC7B;IAAA,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAC/C;GAAA,EAAE,WAAW,CAAC,iBAAiB,CAC/B;GAAA,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAC9B,CAAC,WAAW,CAAC,MAAM,CAClB;KAAA,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAC3C;IAAA,EAAE,WAAW,CAAC,MAAM,CAAC,CACrB,CACF;EAAA,GAAG,CACH,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import { css } from '@rocket.chat/css-in-js';\nimport { Box } from '@rocket.chat/fuselage';\nimport colors from '@rocket.chat/fuselage-tokens/colors.json';\nimport React, { ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { IUser } from '../../../../../../definition/IUser';\nimport VerticalBar from '../../../../../components/VerticalBar';\nimport { createAnchor } from '../../../../../lib/utils/createAnchor';\nimport { useWebRTC } from '../../../hooks/useWebRTC';\nimport UserWebRTC from './UserWebRTC';\nimport UserWebRTCButtons from './UserWebRTCButtons';\n\nconst UserWebRTCWithData = (props: { rid: IRoom['_id']; peerName: IUser['username'] }): ReactElement => {\n\tconst webRTCData = useWebRTC(props.rid);\n\tconst { overlayEnabled } = webRTCData;\n\n\tconst videoOverlay = css`\n\t\tposition: fixed;\n\t\tz-index: 1000;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\n\t\tdisplay: flex;\n\t\toverflow-y: auto;\n\t\tflex-direction: column;\n\n\t\tpadding: var(--default-small-padding);\n\n\t\tbackground-color: ${colors.white};\n\t`;\n\n\tif (overlayEnabled) {\n\t\treturn createPortal(\n\t\t\t<Box className={videoOverlay}>\n\t\t\t\t<UserWebRTC {...props} webRTCData={webRTCData} />\n\t\t\t\t{webRTCData.isVideoActive() && <UserWebRTCButtons webRTCData={webRTCData} />}\n\t\t\t</Box>,\n\t\t\tcreateAnchor('react-webrtc'),\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<VerticalBar.ScrollableContent>\n\t\t\t\t<UserWebRTC {...props} webRTCData={webRTCData} />\n\t\t\t</VerticalBar.ScrollableContent>\n\t\t\t{webRTCData.isVideoActive() && (\n\t\t\t\t<VerticalBar.Footer>\n\t\t\t\t\t<UserWebRTCButtons webRTCData={webRTCData} />\n\t\t\t\t</VerticalBar.Footer>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default UserWebRTCWithData;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx"}},"code":"var _templateObject;\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\n\nlet _taggedTemplateLiteral;\n\nmodule.link(\"@babel/runtime/helpers/taggedTemplateLiteral\", {\n  default(v) {\n    _taggedTemplateLiteral = v;\n  }\n\n}, 1);\nlet css;\nmodule.link(\"@rocket.chat/css-in-js\", {\n  css(v) {\n    css = v;\n  }\n\n}, 0);\nlet Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  }\n\n}, 1);\nlet colors;\nmodule.link(\"@rocket.chat/fuselage-tokens/colors.json\", {\n  default(v) {\n    colors = v;\n  }\n\n}, 2);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 3);\nlet createPortal;\nmodule.link(\"react-dom\", {\n  createPortal(v) {\n    createPortal = v;\n  }\n\n}, 4);\nlet VerticalBar;\nmodule.link(\"../../../../../components/VerticalBar\", {\n  default(v) {\n    VerticalBar = v;\n  }\n\n}, 5);\nlet createAnchor;\nmodule.link(\"../../../../../lib/utils/createAnchor\", {\n  createAnchor(v) {\n    createAnchor = v;\n  }\n\n}, 6);\nlet useWebRTC;\nmodule.link(\"../../../hooks/useWebRTC\", {\n  useWebRTC(v) {\n    useWebRTC = v;\n  }\n\n}, 7);\nlet UserWebRTC;\nmodule.link(\"./UserWebRTC\", {\n  default(v) {\n    UserWebRTC = v;\n  }\n\n}, 8);\nlet UserWebRTCButtons;\nmodule.link(\"./UserWebRTCButtons\", {\n  default(v) {\n    UserWebRTCButtons = v;\n  }\n\n}, 9);\n\nconst UserWebRTCWithData = props => {\n  const webRTCData = useWebRTC(props.rid);\n  const {\n    overlayEnabled\n  } = webRTCData;\n  const videoOverlay = css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n\\t\\tposition: fixed;\\n\\t\\tz-index: 1000;\\n\\t\\ttop: 0;\\n\\t\\tright: 0;\\n\\t\\tbottom: 0;\\n\\t\\tleft: 0;\\n\\n\\t\\tdisplay: flex;\\n\\t\\toverflow-y: auto;\\n\\t\\tflex-direction: column;\\n\\n\\t\\tpadding: var(--default-small-padding);\\n\\n\\t\\tbackground-color: \", \";\\n\\t\"])), colors.white);\n\n  if (overlayEnabled) {\n    return /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(Box, {\n      className: videoOverlay\n    }, /*#__PURE__*/React.createElement(UserWebRTC, _extends({}, props, {\n      webRTCData: webRTCData\n    })), webRTCData.isVideoActive() && /*#__PURE__*/React.createElement(UserWebRTCButtons, {\n      webRTCData: webRTCData\n    })), createAnchor('react-webrtc'));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VerticalBar.ScrollableContent, null, /*#__PURE__*/React.createElement(UserWebRTC, _extends({}, props, {\n    webRTCData: webRTCData\n  }))), webRTCData.isVideoActive() && /*#__PURE__*/React.createElement(VerticalBar.Footer, null, /*#__PURE__*/React.createElement(UserWebRTCButtons, {\n    webRTCData: webRTCData\n  })));\n};\n\nmodule.exportDefault(UserWebRTCWithData);","map":{"version":3,"sources":["client/views/room/contextualBar/UserInfo/UserWebRTC/UserWebRTCWithData.tsx"],"names":[],"mappings":";;AAAA,IAAA,QAAA;;AAAY,MAAE,CAAM,IAAR,CAAQ,gCAAR,EAAiC;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAjC,EAAiC,CAAjC;;AAAiC,IAAA,sBAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,8CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAA7C,IAAA,GAAA;AAAO,MAAO,CAAA,IAAP,CAAa,wBAAb,EAAsC;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAtC,EAAsC,CAAtC;AAAsC,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uCAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAc7C,MAAM,kBAAkB,GAAI,KAAD,IAA4E;AACtG,QAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,GAAP,CAA5B;AACA,QAAM;AAAE,IAAA;AAAF,MAAqB,UAA3B;AAEA,QAAM,YAAY,GAAG,GAAH,qUAcG,MAAM,CAAC,KAdV,CAAlB;;AAiBA,MAAI,cAAJ,EAAoB;AACnB,wBAAO,YAAY,eAClB,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE;AAAhB,oBACC,oBAAC,UAAD,eAAgB,KAAhB;AAAuB,MAAA,UAAU,EAAE;AAAnC,OADD,EAEE,UAAU,CAAC,aAAX,mBAA8B,oBAAC,iBAAD;AAAmB,MAAA,UAAU,EAAE;AAA/B,MAFhC,CADkB,EAKlB,YAAY,CAAC,cAAD,CALM,CAAnB;AAOA;;AAED,sBACC,uDACC,oBAAC,WAAD,CAAa,iBAAb,qBACC,oBAAC,UAAD,eAAgB,KAAhB;AAAuB,IAAA,UAAU,EAAE;AAAnC,KADD,CADD,EAIE,UAAU,CAAC,aAAX,mBACA,oBAAC,WAAD,CAAa,MAAb,qBACC,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAE;AAA/B,IADD,CALF,CADD;AAYA,CA3CD;;AAdA,MAAA,CAAO,aAAP,CA2De,kBA3Df","sourcesContent":["import { css } from '@rocket.chat/css-in-js';\nimport { Box } from '@rocket.chat/fuselage';\nimport colors from '@rocket.chat/fuselage-tokens/colors.json';\nimport React, { ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { IUser } from '../../../../../../definition/IUser';\nimport VerticalBar from '../../../../../components/VerticalBar';\nimport { createAnchor } from '../../../../../lib/utils/createAnchor';\nimport { useWebRTC } from '../../../hooks/useWebRTC';\nimport UserWebRTC from './UserWebRTC';\nimport UserWebRTCButtons from './UserWebRTCButtons';\n\nconst UserWebRTCWithData = (props: { rid: IRoom['_id']; peerName: IUser['username'] }): ReactElement => {\n\tconst webRTCData = useWebRTC(props.rid);\n\tconst { overlayEnabled } = webRTCData;\n\n\tconst videoOverlay = css`\n\t\tposition: fixed;\n\t\tz-index: 1000;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\n\t\tdisplay: flex;\n\t\toverflow-y: auto;\n\t\tflex-direction: column;\n\n\t\tpadding: var(--default-small-padding);\n\n\t\tbackground-color: ${colors.white};\n\t`;\n\n\tif (overlayEnabled) {\n\t\treturn createPortal(\n\t\t\t<Box className={videoOverlay}>\n\t\t\t\t<UserWebRTC {...props} webRTCData={webRTCData} />\n\t\t\t\t{webRTCData.isVideoActive() && <UserWebRTCButtons webRTCData={webRTCData} />}\n\t\t\t</Box>,\n\t\t\tcreateAnchor('react-webrtc'),\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<VerticalBar.ScrollableContent>\n\t\t\t\t<UserWebRTC {...props} webRTCData={webRTCData} />\n\t\t\t</VerticalBar.ScrollableContent>\n\t\t\t{webRTCData.isVideoActive() && (\n\t\t\t\t<VerticalBar.Footer>\n\t\t\t\t\t<UserWebRTCButtons webRTCData={webRTCData} />\n\t\t\t\t</VerticalBar.Footer>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default UserWebRTCWithData;\n"],"sourceRoot":""},"sourceType":"module","hash":"c1298614d76c989aa3e019c5ef4fbfcea0939023"}
