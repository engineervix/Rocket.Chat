{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useClipboardWithToast.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/useClipboardWithToast.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useClipboardWithToast.ts","inputSourceMap":{"version":3,"file":"client/hooks/useClipboardWithToast.ts","sourceRoot":"","sources":["client/hooks/useClipboardWithToast.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAsB,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AAEnG,OAAO,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAC;AAC3E,OAAO,EAAE,cAAc,EAAE,MAAM,gCAAgC,CAAC;AAEhE,MAAM,CAAC,OAAO,UAAU,qBAAqB,CAAC,IAAY;IACzD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IAEvD,OAAO,YAAY,CAAC,IAAI,EAAE;QACzB,aAAa,EAAE,kBAAkB,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxG,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KACnG,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { useClipboard, UseClipboardReturn, useMutableCallback } from '@rocket.chat/fuselage-hooks';\n\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\nimport { useTranslation } from '../contexts/TranslationContext';\n\nexport default function useClipboardWithToast(text: string): UseClipboardReturn {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useClipboard(text, {\n\t\tonCopySuccess: useMutableCallback(() => dispatchToastMessage({ type: 'success', message: t('Copied') })),\n\t\tonCopyError: useMutableCallback((e) => dispatchToastMessage({ type: 'error', message: String(e) })),\n\t});\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useClipboardWithToast.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useClipboardWithToast.ts"}},"code":"module.export({\n  default: () => useClipboardWithToast\n});\nlet useClipboard, useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useClipboard(v) {\n    useClipboard = v;\n  },\n\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 0);\nlet useToastMessageDispatch;\nmodule.link(\"../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 1);\nlet useTranslation;\nmodule.link(\"../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 2);\n\nfunction useClipboardWithToast(text) {\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  return useClipboard(text, {\n    onCopySuccess: useMutableCallback(() => dispatchToastMessage({\n      type: 'success',\n      message: t('Copied')\n    })),\n    onCopyError: useMutableCallback(e => dispatchToastMessage({\n      type: 'error',\n      message: String(e)\n    }))\n  });\n}","map":{"version":3,"sources":["client/hooks/useClipboardWithToast.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,OAAY,EAAsB,MAAA;AAAlC,CAAT;AAAqE,IAAA,YAAA,EAAA,kBAAA;AAA8B,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKrF,SAAU,qBAAV,CAAgC,IAAhC,EAA4C;AACzD,QAAM,CAAC,GAAG,cAAc,EAAxB;AACA,QAAM,oBAAoB,GAAG,uBAAuB,EAApD;AAEA,SAAO,YAAY,CAAC,IAAD,EAAO;AACzB,IAAA,aAAa,EAAE,kBAAkB,CAAC,MAAM,oBAAoB,CAAC;AAAE,MAAA,IAAI,EAAE,SAAR;AAAmB,MAAA,OAAO,EAAE,CAAC,CAAC,QAAD;AAA7B,KAAD,CAA3B,CADR;AAEzB,IAAA,WAAW,EAAE,kBAAkB,CAAE,CAAD,IAAO,oBAAoB,CAAC;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA,OAAO,EAAE,MAAM,CAAC,CAAD;AAAhC,KAAD,CAA5B;AAFN,GAAP,CAAnB;AAIA","sourcesContent":["import { useClipboard, UseClipboardReturn, useMutableCallback } from '@rocket.chat/fuselage-hooks';\n\nimport { useToastMessageDispatch } from '../contexts/ToastMessagesContext';\nimport { useTranslation } from '../contexts/TranslationContext';\n\nexport default function useClipboardWithToast(text: string): UseClipboardReturn {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useClipboard(text, {\n\t\tonCopySuccess: useMutableCallback(() => dispatchToastMessage({ type: 'success', message: t('Copied') })),\n\t\tonCopyError: useMutableCallback((e) => dispatchToastMessage({ type: 'error', message: String(e) })),\n\t});\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"3ba131055d6ddbe8d993e53b4139514eb7c25a6b"}
