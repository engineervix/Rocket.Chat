{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/lists/useScrollableMessageList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/lists/useScrollableMessageList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/lists/useScrollableMessageList.ts","inputSourceMap":{"version":3,"file":"client/hooks/lists/useScrollableMessageList.ts","sourceRoot":"","sources":["client/hooks/lists/useScrollableMessageList.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAMpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAEpE,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACvC,WAAwB,EACxB,aAAoG,EACpG,gBAAyB,EACoB,EAAE;IAC/C,MAAM,UAAU,GAAG,WAAW,CAC7B,KAAK,EAAE,KAAa,EAAE,GAAW,EAA6C,EAAE;QAC/E,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACrD,OAAO;YACN,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC/E,GAAG,CAAC,YAAY,CAAC,SAAS,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,SAAS,EAAE,CAAC;SACpE,CAAC;IACH,CAAC,EACD,CAAC,aAAa,CAAC,CACf,CAAC;IAEF,OAAO,uBAAuB,CAAC,WAAW,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;AAC3E,CAAC,CAAC","sourcesContent":["import { useCallback } from 'react';\n\nimport { IMessage } from '../../../definition/IMessage';\nimport { Serialized } from '../../../definition/Serialized';\nimport { MessageList } from '../../lib/lists/MessageList';\nimport { RecordListBatchChanges } from '../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../lib/utils/mapMessageFromApi';\nimport { useScrollableRecordList } from './useScrollableRecordList';\n\nexport const useScrollableMessageList = (\n\tmessageList: MessageList,\n\tfetchMessages: (start: number, end: number) => Promise<RecordListBatchChanges<Serialized<IMessage>>>,\n\tinitialItemCount?: number,\n): ReturnType<typeof useScrollableRecordList> => {\n\tconst fetchItems = useCallback(\n\t\tasync (start: number, end: number): Promise<RecordListBatchChanges<IMessage>> => {\n\t\t\tconst batchChanges = await fetchMessages(start, end);\n\t\t\treturn {\n\t\t\t\t...(batchChanges.items && { items: batchChanges.items.map(mapMessageFromApi) }),\n\t\t\t\t...(batchChanges.itemCount && { itemCount: batchChanges.itemCount }),\n\t\t\t};\n\t\t},\n\t\t[fetchMessages],\n\t);\n\n\treturn useScrollableRecordList(messageList, fetchItems, initialItemCount);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/lists/useScrollableMessageList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/lists/useScrollableMessageList.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  useScrollableMessageList: () => useScrollableMessageList\n});\nlet useCallback;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 0);\nlet mapMessageFromApi;\nmodule.link(\"../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi(v) {\n    mapMessageFromApi = v;\n  }\n\n}, 1);\nlet useScrollableRecordList;\nmodule.link(\"./useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n\n}, 2);\n\nconst useScrollableMessageList = (messageList, fetchMessages, initialItemCount) => {\n  const fetchItems = useCallback(async (start, end) => {\n    const batchChanges = await fetchMessages(start, end);\n    return _objectSpread(_objectSpread({}, batchChanges.items && {\n      items: batchChanges.items.map(mapMessageFromApi)\n    }), batchChanges.itemCount && {\n      itemCount: batchChanges.itemCount\n    });\n  }, [fetchMessages]);\n  return useScrollableRecordList(messageList, fetchItems, initialItemCount);\n};","map":{"version":3,"sources":["client/hooks/lists/useScrollableMessageList.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAS,MAAa,CAAA,IAAb,CAAmB,sCAAnB,EAA2B;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAA3B,EAA2B,CAA3B;AAAT,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,wBAA2B,EAAA,MAAA;AAA3B,CAAT;AAAoC,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAS7B,MAAM,wBAAwB,GAAG,CACvC,WADuC,EAEvC,aAFuC,EAGvC,gBAHuC,KAIQ;AAC/C,QAAM,UAAU,GAAG,WAAW,CAC7B,OAAO,KAAP,EAAsB,GAAtB,KAAgF;AAC/E,UAAM,YAAY,GAAG,MAAM,aAAa,CAAC,KAAD,EAAQ,GAAR,CAAxC;AACA,2CACK,YAAY,CAAC,KAAb,IAAsB;AAAE,MAAA,KAAK,EAAE,YAAY,CAAC,KAAb,CAAmB,GAAnB,CAAuB,iBAAvB;AAAT,KAD3B,GAEK,YAAY,CAAC,SAAb,IAA0B;AAAE,MAAA,SAAS,EAAE,YAAY,CAAC;AAA1B,KAF/B;AAIA,GAP4B,EAQ7B,CAAC,aAAD,CAR6B,CAA9B;AAWA,SAAO,uBAAuB,CAAC,WAAD,EAAc,UAAd,EAA0B,gBAA1B,CAA9B;AACA,CAjBM","sourcesContent":["import { useCallback } from 'react';\n\nimport { IMessage } from '../../../definition/IMessage';\nimport { Serialized } from '../../../definition/Serialized';\nimport { MessageList } from '../../lib/lists/MessageList';\nimport { RecordListBatchChanges } from '../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../lib/utils/mapMessageFromApi';\nimport { useScrollableRecordList } from './useScrollableRecordList';\n\nexport const useScrollableMessageList = (\n\tmessageList: MessageList,\n\tfetchMessages: (start: number, end: number) => Promise<RecordListBatchChanges<Serialized<IMessage>>>,\n\tinitialItemCount?: number,\n): ReturnType<typeof useScrollableRecordList> => {\n\tconst fetchItems = useCallback(\n\t\tasync (start: number, end: number): Promise<RecordListBatchChanges<IMessage>> => {\n\t\t\tconst batchChanges = await fetchMessages(start, end);\n\t\t\treturn {\n\t\t\t\t...(batchChanges.items && { items: batchChanges.items.map(mapMessageFromApi) }),\n\t\t\t\t...(batchChanges.itemCount && { itemCount: batchChanges.itemCount }),\n\t\t\t};\n\t\t},\n\t\t[fetchMessages],\n\t);\n\n\treturn useScrollableRecordList(messageList, fetchItems, initialItemCount);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"1cf8b2a58297e8695eedd6ab2f99b3cd1f0b493e"}
