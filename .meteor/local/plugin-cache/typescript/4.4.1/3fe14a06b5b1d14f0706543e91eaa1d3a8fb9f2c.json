{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/lists/useScrollableMessageList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/hooks/lists/useScrollableMessageList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/lists/useScrollableMessageList.ts","inputSourceMap":{"version":3,"file":"client/hooks/lists/useScrollableMessageList.ts","sourceRoot":"","sources":["client/hooks/lists/useScrollableMessageList.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAMpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAEpE,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACvC,WAAwB,EACxB,aAAoG,EACpG,gBAAyB,EACoB,EAAE;IAC/C,MAAM,UAAU,GAAG,WAAW,CAC7B,KAAK,EAAE,KAAa,EAAE,GAAW,EAA6C,EAAE;QAC/E,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACrD,OAAO;YACN,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC/E,GAAG,CAAC,YAAY,CAAC,SAAS,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,SAAS,EAAE,CAAC;SACpE,CAAC;IACH,CAAC,EACD,CAAC,aAAa,CAAC,CACf,CAAC;IAEF,OAAO,uBAAuB,CAAC,WAAW,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;AAC3E,CAAC,CAAC","sourcesContent":["import { useCallback } from 'react';\n\nimport { IMessage } from '../../../definition/IMessage';\nimport { Serialized } from '../../../definition/Serialized';\nimport { MessageList } from '../../lib/lists/MessageList';\nimport { RecordListBatchChanges } from '../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../lib/utils/mapMessageFromApi';\nimport { useScrollableRecordList } from './useScrollableRecordList';\n\nexport const useScrollableMessageList = (\n\tmessageList: MessageList,\n\tfetchMessages: (start: number, end: number) => Promise<RecordListBatchChanges<Serialized<IMessage>>>,\n\tinitialItemCount?: number,\n): ReturnType<typeof useScrollableRecordList> => {\n\tconst fetchItems = useCallback(\n\t\tasync (start: number, end: number): Promise<RecordListBatchChanges<IMessage>> => {\n\t\t\tconst batchChanges = await fetchMessages(start, end);\n\t\t\treturn {\n\t\t\t\t...(batchChanges.items && { items: batchChanges.items.map(mapMessageFromApi) }),\n\t\t\t\t...(batchChanges.itemCount && { itemCount: batchChanges.itemCount }),\n\t\t\t};\n\t\t},\n\t\t[fetchMessages],\n\t);\n\n\treturn useScrollableRecordList(messageList, fetchItems, initialItemCount);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/lists/useScrollableMessageList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/lists/useScrollableMessageList.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nmodule.export({\n  useScrollableMessageList: function () {\n    return useScrollableMessageList;\n  }\n});\nvar useCallback;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  }\n}, 0);\nvar mapMessageFromApi;\nmodule.link(\"../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi: function (v) {\n    mapMessageFromApi = v;\n  }\n}, 1);\nvar useScrollableRecordList;\nmodule.link(\"./useScrollableRecordList\", {\n  useScrollableRecordList: function (v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\n\nvar useScrollableMessageList = function (messageList, fetchMessages, initialItemCount) {\n  var fetchItems = useCallback(function () {\n    function _callee(start, end) {\n      var batchChanges;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetchMessages(start, end));\n\n              case 2:\n                batchChanges = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, batchChanges.items && {\n                  items: batchChanges.items.map(mapMessageFromApi)\n                }), batchChanges.itemCount && {\n                  itemCount: batchChanges.itemCount\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n\n    return _callee;\n  }(), [fetchMessages]);\n  return useScrollableRecordList(messageList, fetchItems, initialItemCount);\n};","map":{"version":3,"sources":["client/hooks/lists/useScrollableMessageList.ts"],"names":[],"mappings":"AAAA,IAAA,mBAAA;;AAAsB,MAAM,CAAA,IAAN,CAAc,4BAAd,EAAc;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;AAAA,CAAd,EAAc,CAAd;;AAAc,IAAA,aAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAApC,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,wBAA2B,EAAA,YAAA;AAAA,WAAA,wBAAA;AAAA;AAA3B,CAAT;AAAoC,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,iBAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,uBAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAS7B,IAAM,wBAAwB,GAAG,UACvC,WADuC,EAEvC,aAFuC,EAGvC,gBAHuC,EAIQ;AAC/C,MAAM,UAAU,GAAG,WAAW;AAC7B,qBAAO,KAAP,EAAsB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAC4B,aAAa,CAAC,KAAD,EAAQ,GAAR,CADzC;;AAAA;AACO,gBAAA,YADP;AAAA,iFAGM,YAAY,CAAC,KAAb,IAAsB;AAAE,kBAAA,KAAK,EAAE,YAAY,CAAC,KAAb,CAAmB,GAAnB,CAAuB,iBAAvB;AAAT,iBAH5B,GAIM,YAAY,CAAC,SAAb,IAA0B;AAAE,kBAAA,SAAS,EAAE,YAAY,CAAC;AAA1B,iBAJhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAD6B;AAAA,OAQ7B,CAAC,aAAD,CAR6B,CAA9B;AAWA,SAAO,uBAAuB,CAAC,WAAD,EAAc,UAAd,EAA0B,gBAA1B,CAA9B;AACA,CAjBM","sourcesContent":["import { useCallback } from 'react';\n\nimport { IMessage } from '../../../definition/IMessage';\nimport { Serialized } from '../../../definition/Serialized';\nimport { MessageList } from '../../lib/lists/MessageList';\nimport { RecordListBatchChanges } from '../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../lib/utils/mapMessageFromApi';\nimport { useScrollableRecordList } from './useScrollableRecordList';\n\nexport const useScrollableMessageList = (\n\tmessageList: MessageList,\n\tfetchMessages: (start: number, end: number) => Promise<RecordListBatchChanges<Serialized<IMessage>>>,\n\tinitialItemCount?: number,\n): ReturnType<typeof useScrollableRecordList> => {\n\tconst fetchItems = useCallback(\n\t\tasync (start: number, end: number): Promise<RecordListBatchChanges<IMessage>> => {\n\t\t\tconst batchChanges = await fetchMessages(start, end);\n\t\t\treturn {\n\t\t\t\t...(batchChanges.items && { items: batchChanges.items.map(mapMessageFromApi) }),\n\t\t\t\t...(batchChanges.itemCount && { itemCount: batchChanges.itemCount }),\n\t\t\t};\n\t\t},\n\t\t[fetchMessages],\n\t);\n\n\treturn useScrollableRecordList(messageList, fetchItems, initialItemCount);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"3fe14a06b5b1d14f0706543e91eaa1d3a8fb9f2c"}
