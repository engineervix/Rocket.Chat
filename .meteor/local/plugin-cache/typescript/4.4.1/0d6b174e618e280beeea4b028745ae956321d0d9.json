{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/goToRoomById.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/utils/goToRoomById.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/goToRoomById.ts","inputSourceMap":{"version":3,"file":"client/lib/utils/goToRoomById.ts","sourceRoot":"","sources":["client/lib/utils/goToRoomById.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC5C,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAEvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAG9D,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAEhE,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,GAAiB,EAAE,EAAE,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;AAE9F,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAAE,GAAiB,EAAiB,EAAE;IACtE,IAAI,CAAC,GAAG,EAAE;QACT,OAAO;KACP;IAED,MAAM,YAAY,GAA8B,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAElF,IAAI,YAAY,EAAE;QACjB,eAAe,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;QAC9F,OAAO;KACP;IAED,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC;IACpC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;AACrG,CAAC,CAAC","sourcesContent":["import { memoize } from '@rocket.chat/memo';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\n\nimport { ChatSubscription } from '../../../app/models/client';\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { roomCoordinator } from '../rooms/roomCoordinator';\nimport { callWithErrorHandling } from './callWithErrorHandling';\n\nconst getRoomById = memoize((rid: IRoom['_id']) => callWithErrorHandling('getRoomById', rid));\n\nexport const goToRoomById = async (rid: IRoom['_id']): Promise<void> => {\n\tif (!rid) {\n\t\treturn;\n\t}\n\n\tconst subscription: ISubscription | undefined = ChatSubscription.findOne({ rid });\n\n\tif (subscription) {\n\t\troomCoordinator.openRouteLink(subscription.t, subscription, FlowRouter.current().queryParams);\n\t\treturn;\n\t}\n\n\tconst room = await getRoomById(rid);\n\troomCoordinator.openRouteLink(room.t, { rid: room._id, ...room }, FlowRouter.current().queryParams);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/goToRoomById.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/utils/goToRoomById.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  goToRoomById: () => goToRoomById\n});\nlet memoize;\nmodule.link(\"@rocket.chat/memo\", {\n  memoize(v) {\n    memoize = v;\n  }\n\n}, 0);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 1);\nlet ChatSubscription;\nmodule.link(\"../../../app/models/client\", {\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 2);\nlet roomCoordinator;\nmodule.link(\"../rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 3);\nlet callWithErrorHandling;\nmodule.link(\"./callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n\n}, 4);\nconst getRoomById = memoize(rid => callWithErrorHandling('getRoomById', rid));\n\nconst goToRoomById = async rid => {\n  if (!rid) {\n    return;\n  }\n\n  const subscription = ChatSubscription.findOne({\n    rid\n  });\n\n  if (subscription) {\n    roomCoordinator.openRouteLink(subscription.t, subscription, FlowRouter.current().queryParams);\n    return;\n  }\n\n  const room = await getRoomById(rid);\n  roomCoordinator.openRouteLink(room.t, _objectSpread({\n    rid: room._id\n  }, room), FlowRouter.current().queryParams);\n};","map":{"version":3,"sources":["client/lib/utils/goToRoomById.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAkB,MAAM,CAAA,IAAN,CAAM,sCAAN,EAA0B;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAA1B,EAA0B,CAA1B;AAAlB,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,YAAe,EAAA,MAAA;AAAf,CAAT;AAA4C,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,qBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,qBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAS5C,MAAM,WAAW,GAAG,OAAO,CAAE,GAAD,IAAuB,qBAAqB,CAAC,aAAD,EAAgB,GAAhB,CAA7C,CAA3B;;AAEO,MAAM,YAAY,GAAG,MAAO,GAAP,IAA2C;AACtE,MAAI,CAAC,GAAL,EAAU;AACT;AACA;;AAED,QAAM,YAAY,GAA8B,gBAAgB,CAAC,OAAjB,CAAyB;AAAE,IAAA;AAAF,GAAzB,CAAhD;;AAEA,MAAI,YAAJ,EAAkB;AACjB,IAAA,eAAe,CAAC,aAAhB,CAA8B,YAAY,CAAC,CAA3C,EAA8C,YAA9C,EAA4D,UAAU,CAAC,OAAX,GAAqB,WAAjF;AACA;AACA;;AAED,QAAM,IAAI,GAAG,MAAM,WAAW,CAAC,GAAD,CAA9B;AACA,EAAA,eAAe,CAAC,aAAhB,CAA8B,IAAI,CAAC,CAAnC;AAAwC,IAAA,GAAG,EAAE,IAAI,CAAC;AAAlD,KAA0D,IAA1D,GAAkE,UAAU,CAAC,OAAX,GAAqB,WAAvF;AACA,CAdM","sourcesContent":["import { memoize } from '@rocket.chat/memo';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\n\nimport { ChatSubscription } from '../../../app/models/client';\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { roomCoordinator } from '../rooms/roomCoordinator';\nimport { callWithErrorHandling } from './callWithErrorHandling';\n\nconst getRoomById = memoize((rid: IRoom['_id']) => callWithErrorHandling('getRoomById', rid));\n\nexport const goToRoomById = async (rid: IRoom['_id']): Promise<void> => {\n\tif (!rid) {\n\t\treturn;\n\t}\n\n\tconst subscription: ISubscription | undefined = ChatSubscription.findOne({ rid });\n\n\tif (subscription) {\n\t\troomCoordinator.openRouteLink(subscription.t, subscription, FlowRouter.current().queryParams);\n\t\treturn;\n\t}\n\n\tconst room = await getRoomById(rid);\n\troomCoordinator.openRouteLink(room.t, { rid: room._id, ...room }, FlowRouter.current().queryParams);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"0d6b174e618e280beeea4b028745ae956321d0d9"}
