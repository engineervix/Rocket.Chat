{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/app/ecdh/client/ClientSession.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"ee/app/ecdh/client/ClientSession.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/app/ecdh/client/ClientSession.ts","inputSourceMap":{"version":3,"file":"ee/app/ecdh/client/ClientSession.ts","sourceRoot":"","sources":["ee/app/ecdh/client/ClientSession.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,MAAM,OAAO,aAAc,SAAQ,OAAO;IACzC,KAAK,CAAC,IAAI;QACT,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;QAEnC,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,kBAAkB,EAAE,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,YAAoB;QACtC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;QAEnC,MAAM,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,MAAM,MAAM,CAAC,6BAA6B,CAC1E,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CACtC,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC9B,CAAC;CACD","sourcesContent":["import { Session } from '../Session';\n\nexport class ClientSession extends Session {\n\tasync init(): Promise<string> {\n\t\tconst sodium = await this.sodium();\n\n\t\tconst clientKeypair = await sodium.crypto_box_keypair();\n\t\tthis.secretKey = await sodium.crypto_box_secretkey(clientKeypair);\n\t\tthis.publicKey = await sodium.crypto_box_publickey(clientKeypair);\n\n\t\treturn this.publicKey.toString(this.stringFormatKey);\n\t}\n\n\tasync setServerKey(serverPublic: string): Promise<void> {\n\t\tconst sodium = await this.sodium();\n\n\t\tconst [decryptKey, encryptKey] = await sodium.crypto_kx_client_session_keys(\n\t\t\tthis.publicKey,\n\t\t\tthis.secretKey,\n\t\t\tthis.publicKeyFromString(serverPublic),\n\t\t);\n\n\t\tthis.decryptKey = decryptKey;\n\t\tthis.encryptKey = encryptKey;\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/app/ecdh/client/ClientSession.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/ecdh/client/ClientSession.ts"}},"code":"module.export({\n  ClientSession: () => ClientSession\n});\nlet Session;\nmodule.link(\"../Session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 0);\n\nclass ClientSession extends Session {\n  async init() {\n    const sodium = await this.sodium();\n    const clientKeypair = await sodium.crypto_box_keypair();\n    this.secretKey = await sodium.crypto_box_secretkey(clientKeypair);\n    this.publicKey = await sodium.crypto_box_publickey(clientKeypair);\n    return this.publicKey.toString(this.stringFormatKey);\n  }\n\n  async setServerKey(serverPublic) {\n    const sodium = await this.sodium();\n    const [decryptKey, encryptKey] = await sodium.crypto_kx_client_session_keys(this.publicKey, this.secretKey, this.publicKeyFromString(serverPublic));\n    this.decryptKey = decryptKey;\n    this.encryptKey = encryptKey;\n  }\n\n}","map":{"version":3,"sources":["ee/app/ecdh/client/ClientSession.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,aAAe,EAAA,MAAA;AAAf,CAAT;AAAqC,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAE/B,MAAO,aAAP,SAA6B,OAA7B,CAAoC;AAC/B,QAAJ,IAAI,GAAA;AACT,UAAM,MAAM,GAAG,MAAM,KAAK,MAAL,EAArB;AAEA,UAAM,aAAa,GAAG,MAAM,MAAM,CAAC,kBAAP,EAA5B;AACA,SAAK,SAAL,GAAiB,MAAM,MAAM,CAAC,oBAAP,CAA4B,aAA5B,CAAvB;AACA,SAAK,SAAL,GAAiB,MAAM,MAAM,CAAC,oBAAP,CAA4B,aAA5B,CAAvB;AAEA,WAAO,KAAK,SAAL,CAAe,QAAf,CAAwB,KAAK,eAA7B,CAAP;AACA;;AAEiB,QAAZ,YAAY,CAAC,YAAD,EAAqB;AACtC,UAAM,MAAM,GAAG,MAAM,KAAK,MAAL,EAArB;AAEA,UAAM,CAAC,UAAD,EAAa,UAAb,IAA2B,MAAM,MAAM,CAAC,6BAAP,CACtC,KAAK,SADiC,EAEtC,KAAK,SAFiC,EAGtC,KAAK,mBAAL,CAAyB,YAAzB,CAHsC,CAAvC;AAMA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA;;AAtBwC","sourcesContent":["import { Session } from '../Session';\n\nexport class ClientSession extends Session {\n\tasync init(): Promise<string> {\n\t\tconst sodium = await this.sodium();\n\n\t\tconst clientKeypair = await sodium.crypto_box_keypair();\n\t\tthis.secretKey = await sodium.crypto_box_secretkey(clientKeypair);\n\t\tthis.publicKey = await sodium.crypto_box_publickey(clientKeypair);\n\n\t\treturn this.publicKey.toString(this.stringFormatKey);\n\t}\n\n\tasync setServerKey(serverPublic: string): Promise<void> {\n\t\tconst sodium = await this.sodium();\n\n\t\tconst [decryptKey, encryptKey] = await sodium.crypto_kx_client_session_keys(\n\t\t\tthis.publicKey,\n\t\t\tthis.secretKey,\n\t\t\tthis.publicKeyFromString(serverPublic),\n\t\t);\n\n\t\tthis.decryptKey = decryptKey;\n\t\tthis.encryptKey = encryptKey;\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"cc384e1e8e9ca1f212f07c2b2ecc9e07031fd5a3"}
