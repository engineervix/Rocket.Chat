{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/minimongo/types.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/minimongo/types.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/minimongo/types.ts","inputSourceMap":{"version":3,"file":"client/lib/minimongo/types.ts","sourceRoot":"","sources":["client/lib/minimongo/types.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAkB,QAyBjB;AAzBD,WAAkB,QAAQ;IACzB,2CAAU,CAAA;IACV,2CAAM,CAAA;IACN,2CAAM,CAAA;IACN,yCAAK,CAAA;IACL,6CAAO,CAAA;IACP,kBAAkB;IAClB,iDAAS,CAAA;IACT,+CAAQ,CAAA;IACR,6CAAO,CAAA;IACP,uCAAI,CAAA;IACJ,wCAAI,CAAA;IACJ,0CAAK,CAAA;IACL,kBAAkB;IAClB,kDAAS,CAAA;IACT,oDAAU,CAAA;IACV,kBAAkB;IAClB,4CAAM,CAAA;IACN,sEAAmB,CAAA;IACnB,sCAAG,CAAA;IACH,kDAAS,CAAA;IACT,wCAAI,CAAA;IACJ,8CAAO,CAAA;IACP,4CAAW,CAAA;IACX,6CAAY,CAAA;AACb,CAAC,EAzBiB,QAAQ,KAAR,QAAQ,QAyBzB","sourcesContent":["export const enum BSONType {\n\tDouble = 1,\n\tString,\n\tObject,\n\tArray,\n\tBinData,\n\t/** @deprecated */\n\tUndefined,\n\tObjectId,\n\tBoolean,\n\tDate,\n\tNull,\n\tRegex,\n\t/** @deprecated */\n\tDBPointer,\n\tJavaScript,\n\t/** @deprecated */\n\tSymbol,\n\tJavaScriptWithScope,\n\tInt,\n\tTimestamp,\n\tLong,\n\tDecimal,\n\tMinKey = -1,\n\tMaxKey = 127,\n}\n\nexport type FieldExpression<T> = {\n\t$eq?: T;\n\t$gt?: T;\n\t$gte?: T;\n\t$lt?: T;\n\t$lte?: T;\n\t$in?: T[];\n\t$nin?: T[];\n\t$ne?: T;\n\t$exists?: boolean;\n\t$type?: BSONType[] | BSONType;\n\t$not?: FieldExpression<T>;\n\t$expr?: FieldExpression<T>;\n\t$jsonSchema?: unknown;\n\t$mod?: number[];\n\t$regex?: RegExp | string;\n\t$options?: string;\n\t$text?: {\n\t\t$search: string;\n\t\t$language?: string;\n\t\t$caseSensitive?: boolean;\n\t\t$diacriticSensitive?: boolean;\n\t};\n\t$where?: string | Function;\n\t$geoIntersects?: unknown;\n\t$geoWithin?: unknown;\n\t$near?: unknown;\n\t$nearSphere?: unknown;\n\t$all?: T[];\n\t$elemMatch?: T extends {} ? Query<T> : FieldExpression<T>;\n\t$size?: number;\n\t$bitsAllClear?: unknown;\n\t$bitsAllSet?: unknown;\n\t$bitsAnyClear?: unknown;\n\t$bitsAnySet?: unknown;\n\t$comment?: string;\n};\n\nexport type Flatten<T> = T extends unknown[] ? T[0] : T;\n\nexport type Query<T> = {\n\t[P in keyof T]?: Flatten<T[P]> | RegExp | FieldExpression<Flatten<T[P]>>;\n} & {\n\t$or?: Query<T>[];\n\t$and?: Query<T>[];\n\t$nor?: Query<T>[];\n} & Record<string, FieldExpression<unknown>>;\n\nexport type Sort =\n\t| (string | [string, 'asc' | 'desc'])[]\n\t| {\n\t\t\t[key: string]: -1 | 1;\n\t  };\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/minimongo/types.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/minimongo/types.ts"}},"code":"module.export({\n  BSONType: () => BSONType\n});\nvar BSONType;\n\n(function (BSONType) {\n  BSONType[BSONType[\"Double\"] = 1] = \"Double\";\n  BSONType[BSONType[\"String\"] = 2] = \"String\";\n  BSONType[BSONType[\"Object\"] = 3] = \"Object\";\n  BSONType[BSONType[\"Array\"] = 4] = \"Array\";\n  BSONType[BSONType[\"BinData\"] = 5] = \"BinData\";\n  /** @deprecated */\n\n  BSONType[BSONType[\"Undefined\"] = 6] = \"Undefined\";\n  BSONType[BSONType[\"ObjectId\"] = 7] = \"ObjectId\";\n  BSONType[BSONType[\"Boolean\"] = 8] = \"Boolean\";\n  BSONType[BSONType[\"Date\"] = 9] = \"Date\";\n  BSONType[BSONType[\"Null\"] = 10] = \"Null\";\n  BSONType[BSONType[\"Regex\"] = 11] = \"Regex\";\n  /** @deprecated */\n\n  BSONType[BSONType[\"DBPointer\"] = 12] = \"DBPointer\";\n  BSONType[BSONType[\"JavaScript\"] = 13] = \"JavaScript\";\n  /** @deprecated */\n\n  BSONType[BSONType[\"Symbol\"] = 14] = \"Symbol\";\n  BSONType[BSONType[\"JavaScriptWithScope\"] = 15] = \"JavaScriptWithScope\";\n  BSONType[BSONType[\"Int\"] = 16] = \"Int\";\n  BSONType[BSONType[\"Timestamp\"] = 17] = \"Timestamp\";\n  BSONType[BSONType[\"Long\"] = 18] = \"Long\";\n  BSONType[BSONType[\"Decimal\"] = 19] = \"Decimal\";\n  BSONType[BSONType[\"MinKey\"] = -1] = \"MinKey\";\n  BSONType[BSONType[\"MaxKey\"] = 127] = \"MaxKey\";\n})(BSONType || module.runSetters(BSONType = {}, [\"BSONType\"]));","map":{"version":3,"sources":["client/lib/minimongo/types.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,MAAA,CAAkB;AAAA,EAAA,QAyBjB,EAAA,MAAA;AAzBiB,CAAlB;AAAA,IAAkB,QAAlB;;AAAA,CAAA,UAAkB,QAAlB,EAA0B;AACzqBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,GAAA,SAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,GAAA,CAAA,GAAA,QAAA;AACA,CAzBD,EAAkB,QAAQ,sBAAR,QAAQ,GAAA,EAAA,eAA1B","sourcesContent":["export const enum BSONType {\n\tDouble = 1,\n\tString,\n\tObject,\n\tArray,\n\tBinData,\n\t/** @deprecated */\n\tUndefined,\n\tObjectId,\n\tBoolean,\n\tDate,\n\tNull,\n\tRegex,\n\t/** @deprecated */\n\tDBPointer,\n\tJavaScript,\n\t/** @deprecated */\n\tSymbol,\n\tJavaScriptWithScope,\n\tInt,\n\tTimestamp,\n\tLong,\n\tDecimal,\n\tMinKey = -1,\n\tMaxKey = 127,\n}\n\nexport type FieldExpression<T> = {\n\t$eq?: T;\n\t$gt?: T;\n\t$gte?: T;\n\t$lt?: T;\n\t$lte?: T;\n\t$in?: T[];\n\t$nin?: T[];\n\t$ne?: T;\n\t$exists?: boolean;\n\t$type?: BSONType[] | BSONType;\n\t$not?: FieldExpression<T>;\n\t$expr?: FieldExpression<T>;\n\t$jsonSchema?: unknown;\n\t$mod?: number[];\n\t$regex?: RegExp | string;\n\t$options?: string;\n\t$text?: {\n\t\t$search: string;\n\t\t$language?: string;\n\t\t$caseSensitive?: boolean;\n\t\t$diacriticSensitive?: boolean;\n\t};\n\t$where?: string | Function;\n\t$geoIntersects?: unknown;\n\t$geoWithin?: unknown;\n\t$near?: unknown;\n\t$nearSphere?: unknown;\n\t$all?: T[];\n\t$elemMatch?: T extends {} ? Query<T> : FieldExpression<T>;\n\t$size?: number;\n\t$bitsAllClear?: unknown;\n\t$bitsAllSet?: unknown;\n\t$bitsAnyClear?: unknown;\n\t$bitsAnySet?: unknown;\n\t$comment?: string;\n};\n\nexport type Flatten<T> = T extends unknown[] ? T[0] : T;\n\nexport type Query<T> = {\n\t[P in keyof T]?: Flatten<T[P]> | RegExp | FieldExpression<Flatten<T[P]>>;\n} & {\n\t$or?: Query<T>[];\n\t$and?: Query<T>[];\n\t$nor?: Query<T>[];\n} & Record<string, FieldExpression<unknown>>;\n\nexport type Sort =\n\t| (string | [string, 'asc' | 'desc'])[]\n\t| {\n\t\t\t[key: string]: -1 | 1;\n\t  };\n"],"sourceRoot":""},"sourceType":"module","hash":"d046301ad6b857821556b4de9d6ca80b14b10db0"}
