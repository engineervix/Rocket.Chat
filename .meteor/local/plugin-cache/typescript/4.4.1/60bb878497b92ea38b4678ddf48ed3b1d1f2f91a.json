{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/sidebar/hooks/useRoomList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebar/hooks/useRoomList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/sidebar/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebar/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebar/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useDebouncedState } from '@rocket.chat/fuselage-hooks';\nimport { useEffect } from 'react';\n\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { useQueuedInquiries, useOmnichannelEnabled } from '../../contexts/OmnichannelContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useUserPreference, useUserSubscriptions } from '../../contexts/UserContext';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: IRoom[] = [];\n\nexport const useRoomList = (): Array<ISubscription> => {\n\tconst [roomList, setRoomList] = useDebouncedState<ISubscription[]>([], 150);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tlet queue: IRoom[] = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tuseEffect(() => {\n\t\tsetRoomList(() => {\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tshowOmnichannel && groups.set('Omnichannel', []);\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\t\t\treturn [...groups.entries()].flatMap(([key, group]) => [key, ...group]);\n\t\t});\n\t}, [\n\t\trooms,\n\t\tshowOmnichannel,\n\t\tinquiries.enabled,\n\t\tqueue,\n\t\tsidebarShowUnread,\n\t\tfavoritesEnabled,\n\t\tsidebarGroupByType,\n\t\tsetRoomList,\n\t\tisDiscussionEnabled,\n\t]);\n\n\treturn roomList;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/sidebar/hooks/useRoomList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebar/hooks/useRoomList.ts"}},"code":"module.export({\n  useRoomList: () => useRoomList\n});\nlet useDebouncedState;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedState(v) {\n    useDebouncedState = v;\n  }\n\n}, 0);\nlet useEffect;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  }\n\n}, 1);\nlet useQueuedInquiries, useOmnichannelEnabled;\nmodule.link(\"../../contexts/OmnichannelContext\", {\n  useQueuedInquiries(v) {\n    useQueuedInquiries = v;\n  },\n\n  useOmnichannelEnabled(v) {\n    useOmnichannelEnabled = v;\n  }\n\n}, 2);\nlet useSetting;\nmodule.link(\"../../contexts/SettingsContext\", {\n  useSetting(v) {\n    useSetting = v;\n  }\n\n}, 3);\nlet useUserPreference, useUserSubscriptions;\nmodule.link(\"../../contexts/UserContext\", {\n  useUserPreference(v) {\n    useUserPreference = v;\n  },\n\n  useUserSubscriptions(v) {\n    useUserSubscriptions = v;\n  }\n\n}, 4);\nlet useQueryOptions;\nmodule.link(\"./useQueryOptions\", {\n  useQueryOptions(v) {\n    useQueryOptions = v;\n  }\n\n}, 5);\nconst query = {\n  open: {\n    $ne: false\n  }\n};\nconst emptyQueue = [];\n\nconst useRoomList = () => {\n  const [roomList, setRoomList] = useDebouncedState([], 150);\n  const showOmnichannel = useOmnichannelEnabled();\n  const sidebarGroupByType = useUserPreference('sidebarGroupByType');\n  const favoritesEnabled = useUserPreference('sidebarShowFavorites');\n  const isDiscussionEnabled = useSetting('Discussion_enabled');\n  const sidebarShowUnread = useUserPreference('sidebarShowUnread');\n  const options = useQueryOptions();\n  const rooms = useUserSubscriptions(query, options);\n  const inquiries = useQueuedInquiries();\n  let queue = emptyQueue;\n\n  if (inquiries.enabled) {\n    queue = inquiries.queue;\n  }\n\n  useEffect(() => {\n    setRoomList(() => {\n      const favorite = new Set();\n      const team = new Set();\n      const omnichannel = new Set();\n      const unread = new Set();\n      const channels = new Set();\n      const direct = new Set();\n      const discussion = new Set();\n      const conversation = new Set();\n      const onHold = new Set();\n      rooms.forEach(room => {\n        if (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n          return unread.add(room);\n        }\n\n        if (favoritesEnabled && room.f) {\n          return favorite.add(room);\n        }\n\n        if (sidebarGroupByType && room.teamMain) {\n          return team.add(room);\n        }\n\n        if (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n          return discussion.add(room);\n        }\n\n        if (room.t === 'c' || room.t === 'p') {\n          channels.add(room);\n        }\n\n        if (room.t === 'l' && room.onHold) {\n          return showOmnichannel && onHold.add(room);\n        }\n\n        if (room.t === 'l') {\n          return showOmnichannel && omnichannel.add(room);\n        }\n\n        if (room.t === 'd') {\n          direct.add(room);\n        }\n\n        conversation.add(room);\n      });\n      const groups = new Map();\n      showOmnichannel && groups.set('Omnichannel', []);\n      showOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n      showOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n      showOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n      sidebarShowUnread && unread.size && groups.set('Unread', unread);\n      favoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n      sidebarGroupByType && team.size && groups.set('Teams', team);\n      sidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n      sidebarGroupByType && channels.size && groups.set('Channels', channels);\n      sidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n      !sidebarGroupByType && groups.set('Conversations', conversation);\n      return [...groups.entries()].flatMap(_ref => {\n        let [key, group] = _ref;\n        return [key, ...group];\n      });\n    });\n  }, [rooms, showOmnichannel, inquiries.enabled, queue, sidebarShowUnread, favoritesEnabled, sidebarGroupByType, setRoomList, isDiscussionEnabled]);\n  return roomList;\n};","map":{"version":3,"sources":["client/sidebar/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useDebouncedState } from '@rocket.chat/fuselage-hooks';\nimport { useEffect } from 'react';\n\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { useQueuedInquiries, useOmnichannelEnabled } from '../../contexts/OmnichannelContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useUserPreference, useUserSubscriptions } from '../../contexts/UserContext';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: IRoom[] = [];\n\nexport const useRoomList = (): Array<ISubscription> => {\n\tconst [roomList, setRoomList] = useDebouncedState<ISubscription[]>([], 150);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tlet queue: IRoom[] = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tuseEffect(() => {\n\t\tsetRoomList(() => {\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tshowOmnichannel && groups.set('Omnichannel', []);\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\t\t\treturn [...groups.entries()].flatMap(([key, group]) => [key, ...group]);\n\t\t});\n\t}, [\n\t\trooms,\n\t\tshowOmnichannel,\n\t\tinquiries.enabled,\n\t\tqueue,\n\t\tsidebarShowUnread,\n\t\tfavoritesEnabled,\n\t\tsidebarGroupByType,\n\t\tsetRoomList,\n\t\tisDiscussionEnabled,\n\t]);\n\n\treturn roomList;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"60bb878497b92ea38b4678ddf48ed3b1d1f2f91a"}
