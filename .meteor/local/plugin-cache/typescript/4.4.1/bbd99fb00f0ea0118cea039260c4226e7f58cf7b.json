{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/renderEmoji.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/utils/renderEmoji.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/renderEmoji.ts","inputSourceMap":{"version":3,"file":"client/lib/utils/renderEmoji.ts","sourceRoot":"","sources":["client/lib/utils/renderEmoji.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,mCAAmC,CAAC;AAE1D,MAAM,SAAS,GAAG,KAAK,CAAC,IAAgD,CAAC;AACzE,MAAM,aAAa,GAAG,KAAK,CAAC,QAAiE,CAAC;AAE9F,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,SAAiB,EAAsB,EAAE;IACpE,MAAM,gBAAgB,GAAG,SAAS,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC;IAC5D,IAAI,gBAAgB,EAAE;QACrB,MAAM,YAAY,GAAG,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACrD,OAAO,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACtC;IAED,OAAO,SAAS,CAAC;AAClB,CAAC,CAAC","sourcesContent":["import { emoji } from '../../../app/emoji/lib/rocketchat';\n\nconst emojiList = emoji.list as Record<string, { emojiPackage: string }>;\nconst emojiPackages = emoji.packages as Record<string, { render(emojiName: string): string }>;\n\nexport const renderEmoji = (emojiName: string): string | undefined => {\n\tconst emojiPackageName = emojiList[emojiName]?.emojiPackage;\n\tif (emojiPackageName) {\n\t\tconst emojiPackage = emojiPackages[emojiPackageName];\n\t\treturn emojiPackage.render(emojiName);\n\t}\n\n\treturn undefined;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/utils/renderEmoji.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/utils/renderEmoji.ts"}},"code":"module.export({\n  renderEmoji: () => renderEmoji\n});\nlet emoji;\nmodule.link(\"../../../app/emoji/lib/rocketchat\", {\n  emoji(v) {\n    emoji = v;\n  }\n\n}, 0);\nconst emojiList = emoji.list;\nconst emojiPackages = emoji.packages;\n\nconst renderEmoji = emojiName => {\n  var _emojiList$emojiName;\n\n  const emojiPackageName = (_emojiList$emojiName = emojiList[emojiName]) === null || _emojiList$emojiName === void 0 ? void 0 : _emojiList$emojiName.emojiPackage;\n\n  if (emojiPackageName) {\n    const emojiPackage = emojiPackages[emojiPackageName];\n    return emojiPackage.render(emojiName);\n  }\n\n  return undefined;\n};","map":{"version":3,"sources":["client/lib/utils/renderEmoji.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAc;AAAA,EAAA,WAAQ,EAAA,MAAA;AAAR,CAAd;AAAsB,IAAA,KAAA;AAAA,MAAoC,CAAA,IAApC,CAAoC,mCAApC,EAAoC;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAApC,EAAoC,CAApC;AAEtB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAxB;AACA,MAAM,aAAa,GAAG,KAAK,CAAC,QAA5B;;AAEO,MAAM,WAAW,GAAI,SAAD,IAA0C;AAAA;;AACpE,QAAM,gBAAgB,2BAAG,SAAS,CAAC,SAAD,CAAZ,yDAAG,qBAAsB,YAA/C;;AACA,MAAI,gBAAJ,EAAsB;AACrB,UAAM,YAAY,GAAG,aAAa,CAAC,gBAAD,CAAlC;AACA,WAAO,YAAY,CAAC,MAAb,CAAoB,SAApB,CAAP;AACA;;AAED,SAAO,SAAP;AACA,CARM","sourcesContent":["import { emoji } from '../../../app/emoji/lib/rocketchat';\n\nconst emojiList = emoji.list as Record<string, { emojiPackage: string }>;\nconst emojiPackages = emoji.packages as Record<string, { render(emojiName: string): string }>;\n\nexport const renderEmoji = (emojiName: string): string | undefined => {\n\tconst emojiPackageName = emojiList[emojiName]?.emojiPackage;\n\tif (emojiPackageName) {\n\t\tconst emojiPackage = emojiPackages[emojiPackageName];\n\t\treturn emojiPackage.render(emojiName);\n\t}\n\n\treturn undefined;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"bbd99fb00f0ea0118cea039260c4226e7f58cf7b"}
