{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/ServerContext/ServerContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/contexts/ServerContext/ServerContext.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/ServerContext/ServerContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/ServerContext/ServerContext.ts","sourceRoot":"","sources":["client/contexts/ServerContext/ServerContext.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAoCxE,MAAM,CAAC,MAAM,aAAa,GAAG,aAAa,CAAqB;IAC9D,IAAI,EAAE,SAAS;IACf,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI;IAC3B,YAAY,EAAE,GAAG,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACpC,CAAC;IACD,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACpC,CAAC;IACD,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;CAC5C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAgB,EAAE;IACrD,MAAM,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;KAC3D;IACD,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,GAA+B,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC;AAEtG,MAAM,CAAC,MAAM,SAAS,GAAG,CAAyC,UAAsB,EAAoC,EAAE;IAC7H,MAAM,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAEjD,OAAO,WAAW,CACjB,CAAC,GAAG,IAAwC,EAAE,EAAE;QAC/C,IAAI,CAAC,UAAU,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,wBAAwB,UAAU,yCAAyC,CAAC,CAAC;SAC7F;QAED,OAAO,UAAU,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,CAAC;IACxC,CAAC,EACD,CAAC,UAAU,EAAE,UAAU,CAAC,CACxB,CAAC;AACH,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,WAAW,GAAG,CAC1B,MAAe,EACf,IAAW,EAC0C,EAAE;IACvD,MAAM,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAEnD,OAAO,WAAW,CACjB,CAAC,MAAqE,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,EAC7G,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,CAAC,CAC5B,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CACxB,QAAgB,EAC+E,EAAE;IACjG,MAAM,EAAE,gBAAgB,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IACvD,OAAO,WAAW,CAAC,CAAC,MAAM,EAAE,QAAa,EAAE,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC,CAAC;AAC3H,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,UAAkB,EAAE,OAAY,EAAuE,EAAE;IAClI,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAChD,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC","sourcesContent":["import { createContext, useCallback, useContext, useMemo } from 'react';\n\nimport type { IServerInfo } from '../../../definition/IServerInfo';\nimport type { Serialized } from '../../../definition/Serialized';\nimport type { Method, PathFor, OperationParams, MatchPathPattern, OperationResult, PathPattern } from '../../../definition/rest';\nimport { ServerMethodFunction, ServerMethodName, ServerMethodParameters, ServerMethodReturn, ServerMethods } from './methods';\n\nexport type UploadResult = {\n\tsuccess: boolean;\n\tstatus: string;\n\t[key: string]: unknown;\n};\ntype ServerContextValue = {\n\tinfo?: IServerInfo;\n\tabsoluteUrl: (path: string) => string;\n\tcallMethod?: <MethodName extends ServerMethodName>(\n\t\tmethodName: MethodName,\n\t\t...args: ServerMethodParameters<MethodName>\n\t) => Promise<ServerMethodReturn<MethodName>>;\n\tcallEndpoint: <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\t\tmethod: TMethod,\n\t\tpath: TPath,\n\t\tparams: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>>,\n\t) => Promise<Serialized<OperationResult<TMethod, MatchPathPattern<TPath>>>>;\n\tuploadToEndpoint: (\n\t\tendpoint: string,\n\t\tparams: any,\n\t\tformData: any,\n\t) =>\n\t\t| Promise<UploadResult>\n\t\t| {\n\t\t\t\tpromise: Promise<UploadResult>;\n\t\t  };\n\tgetStream: (streamName: string, options?: {}) => <T>(eventName: string, callback: (data: T) => void) => () => void;\n};\n\nexport const ServerContext = createContext<ServerContextValue>({\n\tinfo: undefined,\n\tabsoluteUrl: (path) => path,\n\tcallEndpoint: () => {\n\t\tthrow new Error('not implemented');\n\t},\n\tuploadToEndpoint: async () => {\n\t\tthrow new Error('not implemented');\n\t},\n\tgetStream: () => () => (): void => undefined,\n});\n\nexport const useServerInformation = (): IServerInfo => {\n\tconst { info } = useContext(ServerContext);\n\tif (!info) {\n\t\tthrow new Error('useServerInformation: no info available');\n\t}\n\treturn info;\n};\n\nexport const useAbsoluteUrl = (): ((path: string) => string) => useContext(ServerContext).absoluteUrl;\n\nexport const useMethod = <MethodName extends keyof ServerMethods>(methodName: MethodName): ServerMethodFunction<MethodName> => {\n\tconst { callMethod } = useContext(ServerContext);\n\n\treturn useCallback(\n\t\t(...args: ServerMethodParameters<MethodName>) => {\n\t\t\tif (!callMethod) {\n\t\t\t\tthrow new Error(`cannot use useMethod(${methodName}) hook without a wrapping ServerContext`);\n\t\t\t}\n\n\t\t\treturn callMethod(methodName, ...args);\n\t\t},\n\t\t[callMethod, methodName],\n\t);\n};\n\ntype EndpointFunction<TMethod extends Method, TPathPattern extends PathPattern> = (\n\tparams: void extends OperationParams<TMethod, TPathPattern> ? void : Serialized<OperationParams<TMethod, TPathPattern>>,\n) => Promise<Serialized<OperationResult<TMethod, TPathPattern>>>;\n\nexport const useEndpoint = <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\tmethod: TMethod,\n\tpath: TPath,\n): EndpointFunction<TMethod, MatchPathPattern<TPath>> => {\n\tconst { callEndpoint } = useContext(ServerContext);\n\n\treturn useCallback(\n\t\t(params: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>>) => callEndpoint(method, path, params),\n\t\t[callEndpoint, path, method],\n\t);\n};\n\nexport const useUpload = (\n\tendpoint: string,\n): ((params: any, formData: any) => Promise<UploadResult> | { promise: Promise<UploadResult> }) => {\n\tconst { uploadToEndpoint } = useContext(ServerContext);\n\treturn useCallback((params, formData: any) => uploadToEndpoint(endpoint, params, formData), [endpoint, uploadToEndpoint]);\n};\n\nexport const useStream = (streamName: string, options?: {}): (<T>(eventName: string, callback: (data: T) => void) => () => void) => {\n\tconst { getStream } = useContext(ServerContext);\n\treturn useMemo(() => getStream(streamName, options), [getStream, streamName, options]);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/ServerContext/ServerContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/contexts/ServerContext/ServerContext.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  ServerContext: function () {\n    return ServerContext;\n  },\n  useServerInformation: function () {\n    return useServerInformation;\n  },\n  useAbsoluteUrl: function () {\n    return useAbsoluteUrl;\n  },\n  useMethod: function () {\n    return useMethod;\n  },\n  useEndpoint: function () {\n    return useEndpoint;\n  },\n  useUpload: function () {\n    return useUpload;\n  },\n  useStream: function () {\n    return useStream;\n  }\n});\nvar createContext, useCallback, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext: function (v) {\n    createContext = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useContext: function (v) {\n    useContext = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 0);\nvar ServerContext = /*#__PURE__*/createContext({\n  info: undefined,\n  absoluteUrl: function (path) {\n    return path;\n  },\n  callEndpoint: function () {\n    throw new Error('not implemented');\n  },\n  uploadToEndpoint: function () {\n    function _callee() {\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                throw new Error('not implemented');\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n\n    return _callee;\n  }(),\n  getStream: function () {\n    return function () {\n      return function () {\n        return undefined;\n      };\n    };\n  }\n});\n\nvar useServerInformation = function () {\n  var _useContext = useContext(ServerContext),\n      info = _useContext.info;\n\n  if (!info) {\n    throw new Error('useServerInformation: no info available');\n  }\n\n  return info;\n};\n\nvar useAbsoluteUrl = function () {\n  return useContext(ServerContext).absoluteUrl;\n};\n\nvar useMethod = function (methodName) {\n  var _useContext2 = useContext(ServerContext),\n      callMethod = _useContext2.callMethod;\n\n  return useCallback(function () {\n    if (!callMethod) {\n      throw new Error(\"cannot use useMethod(\" + methodName + \") hook without a wrapping ServerContext\");\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return callMethod.apply(void 0, [methodName].concat(args));\n  }, [callMethod, methodName]);\n};\n\nvar useEndpoint = function (method, path) {\n  var _useContext3 = useContext(ServerContext),\n      callEndpoint = _useContext3.callEndpoint;\n\n  return useCallback(function (params) {\n    return callEndpoint(method, path, params);\n  }, [callEndpoint, path, method]);\n};\n\nvar useUpload = function (endpoint) {\n  var _useContext4 = useContext(ServerContext),\n      uploadToEndpoint = _useContext4.uploadToEndpoint;\n\n  return useCallback(function (params, formData) {\n    return uploadToEndpoint(endpoint, params, formData);\n  }, [endpoint, uploadToEndpoint]);\n};\n\nvar useStream = function (streamName, options) {\n  var _useContext5 = useContext(ServerContext),\n      getStream = _useContext5.getStream;\n\n  return useMemo(function () {\n    return getStream(streamName, options);\n  }, [getStream, streamName, options]);\n};","map":{"version":3,"sources":["client/contexts/ServerContext/ServerContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { createContext, useCallback, useContext, useMemo } from 'react';\n\nimport type { IServerInfo } from '../../../definition/IServerInfo';\nimport type { Serialized } from '../../../definition/Serialized';\nimport type { Method, PathFor, OperationParams, MatchPathPattern, OperationResult, PathPattern } from '../../../definition/rest';\nimport { ServerMethodFunction, ServerMethodName, ServerMethodParameters, ServerMethodReturn, ServerMethods } from './methods';\n\nexport type UploadResult = {\n\tsuccess: boolean;\n\tstatus: string;\n\t[key: string]: unknown;\n};\ntype ServerContextValue = {\n\tinfo?: IServerInfo;\n\tabsoluteUrl: (path: string) => string;\n\tcallMethod?: <MethodName extends ServerMethodName>(\n\t\tmethodName: MethodName,\n\t\t...args: ServerMethodParameters<MethodName>\n\t) => Promise<ServerMethodReturn<MethodName>>;\n\tcallEndpoint: <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\t\tmethod: TMethod,\n\t\tpath: TPath,\n\t\tparams: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>>,\n\t) => Promise<Serialized<OperationResult<TMethod, MatchPathPattern<TPath>>>>;\n\tuploadToEndpoint: (\n\t\tendpoint: string,\n\t\tparams: any,\n\t\tformData: any,\n\t) =>\n\t\t| Promise<UploadResult>\n\t\t| {\n\t\t\t\tpromise: Promise<UploadResult>;\n\t\t  };\n\tgetStream: (streamName: string, options?: {}) => <T>(eventName: string, callback: (data: T) => void) => () => void;\n};\n\nexport const ServerContext = createContext<ServerContextValue>({\n\tinfo: undefined,\n\tabsoluteUrl: (path) => path,\n\tcallEndpoint: () => {\n\t\tthrow new Error('not implemented');\n\t},\n\tuploadToEndpoint: async () => {\n\t\tthrow new Error('not implemented');\n\t},\n\tgetStream: () => () => (): void => undefined,\n});\n\nexport const useServerInformation = (): IServerInfo => {\n\tconst { info } = useContext(ServerContext);\n\tif (!info) {\n\t\tthrow new Error('useServerInformation: no info available');\n\t}\n\treturn info;\n};\n\nexport const useAbsoluteUrl = (): ((path: string) => string) => useContext(ServerContext).absoluteUrl;\n\nexport const useMethod = <MethodName extends keyof ServerMethods>(methodName: MethodName): ServerMethodFunction<MethodName> => {\n\tconst { callMethod } = useContext(ServerContext);\n\n\treturn useCallback(\n\t\t(...args: ServerMethodParameters<MethodName>) => {\n\t\t\tif (!callMethod) {\n\t\t\t\tthrow new Error(`cannot use useMethod(${methodName}) hook without a wrapping ServerContext`);\n\t\t\t}\n\n\t\t\treturn callMethod(methodName, ...args);\n\t\t},\n\t\t[callMethod, methodName],\n\t);\n};\n\ntype EndpointFunction<TMethod extends Method, TPathPattern extends PathPattern> = (\n\tparams: void extends OperationParams<TMethod, TPathPattern> ? void : Serialized<OperationParams<TMethod, TPathPattern>>,\n) => Promise<Serialized<OperationResult<TMethod, TPathPattern>>>;\n\nexport const useEndpoint = <TMethod extends Method, TPath extends PathFor<TMethod>>(\n\tmethod: TMethod,\n\tpath: TPath,\n): EndpointFunction<TMethod, MatchPathPattern<TPath>> => {\n\tconst { callEndpoint } = useContext(ServerContext);\n\n\treturn useCallback(\n\t\t(params: Serialized<OperationParams<TMethod, MatchPathPattern<TPath>>>) => callEndpoint(method, path, params),\n\t\t[callEndpoint, path, method],\n\t);\n};\n\nexport const useUpload = (\n\tendpoint: string,\n): ((params: any, formData: any) => Promise<UploadResult> | { promise: Promise<UploadResult> }) => {\n\tconst { uploadToEndpoint } = useContext(ServerContext);\n\treturn useCallback((params, formData: any) => uploadToEndpoint(endpoint, params, formData), [endpoint, uploadToEndpoint]);\n};\n\nexport const useStream = (streamName: string, options?: {}): (<T>(eventName: string, callback: (data: T) => void) => () => void) => {\n\tconst { getStream } = useContext(ServerContext);\n\treturn useMemo(() => getStream(streamName, options), [getStream, streamName, options]);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"bf58ef14641024a38dcfb6c96e2f4394e73e267b"}
