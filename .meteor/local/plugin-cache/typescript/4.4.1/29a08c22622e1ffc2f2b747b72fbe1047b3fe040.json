{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/portals/blazePortals.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/portals/blazePortals.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/portals/blazePortals.ts","inputSourceMap":{"version":3,"file":"client/lib/portals/blazePortals.ts","sourceRoot":"","sources":["client/lib/portals/blazePortals.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AASvC,MAAM,yBAA0B,SAAQ,OAAyB;IACxD,GAAG,GAAG,IAAI,GAAG,EAA4C,CAAC;IAElE,eAAe,GAAG,GAAuB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAE1E,SAAS,GAAG,CAAC,QAAoB,EAAe,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAE/E,QAAQ,GAAG,CAAC,QAAgC,EAAE,IAAe,EAAQ,EAAE;QACtE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,KAAK,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpB,OAAO;SACP;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;YACxB,OAAO;SACP;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,UAAU,GAAG,CAAC,QAAgC,EAAQ,EAAE;QACvD,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACpB;IACF,CAAC,CAAC;CACF;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,IAAI,yBAAyB,EAAE,CAAC","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport { Random } from 'meteor/random';\nimport type { ReactNode } from 'react';\nimport type { Subscription, Unsubscribe } from 'use-subscription';\n\ntype BlazePortalEntry = {\n\tkey: string;\n\tnode: ReactNode;\n};\n\nclass BlazePortalsSubscriptions extends Emitter<{ update: void }> implements Subscription<BlazePortalEntry[]> {\n\tprivate map = new Map<Blaze.TemplateInstance, BlazePortalEntry>();\n\n\tgetCurrentValue = (): BlazePortalEntry[] => Array.from(this.map.values());\n\n\tsubscribe = (callback: () => void): Unsubscribe => this.on('update', callback);\n\n\tregister = (template: Blaze.TemplateInstance, node: ReactNode): void => {\n\t\tconst entry = this.map.get(template);\n\n\t\tif (!entry) {\n\t\t\tthis.map.set(template, { key: Random.id(), node });\n\t\t\tthis.emit('update');\n\t\t\treturn;\n\t\t}\n\n\t\tif (entry.node === node) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.map.set(template, { ...entry, node });\n\t\tthis.emit('update');\n\t};\n\n\tunregister = (template: Blaze.TemplateInstance): void => {\n\t\tif (this.map.delete(template)) {\n\t\t\tthis.emit('update');\n\t\t}\n\t};\n}\n\nexport const blazePortals = new BlazePortalsSubscriptions();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/portals/blazePortals.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/portals/blazePortals.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  blazePortals: () => blazePortals\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\n\nclass BlazePortalsSubscriptions extends Emitter {\n  constructor() {\n    super(...arguments);\n    this.map = new Map();\n\n    this.getCurrentValue = () => Array.from(this.map.values());\n\n    this.subscribe = callback => this.on('update', callback);\n\n    this.register = (template, node) => {\n      const entry = this.map.get(template);\n\n      if (!entry) {\n        this.map.set(template, {\n          key: Random.id(),\n          node\n        });\n        this.emit('update');\n        return;\n      }\n\n      if (entry.node === node) {\n        return;\n      }\n\n      this.map.set(template, _objectSpread(_objectSpread({}, entry), {}, {\n        node\n      }));\n      this.emit('update');\n    };\n\n    this.unregister = template => {\n      if (this.map.delete(template)) {\n        this.emit('update');\n      }\n    };\n  }\n\n}\n\nconst blazePortals = new BlazePortalsSubscriptions();","map":{"version":3,"sources":["client/lib/portals/blazePortals.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAkB,MAAM,CAAA,IAAN,CAAM,sCAAN,EAA6B;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAA7B,EAA6B,CAA7B;AAAlB,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,YAAe,EAAA,MAAA;AAAf,CAAT;AAA+C,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAU/C,MAAM,yBAAN,SAAwC,OAAxC,CAAiE;AAAA;AAAA;AAAA,SACxD,GADwD,GAClD,IAAI,GAAJ,EADkD;;AAAA,SAGhE,eAHgE,GAG9C,MAA0B,KAAK,CAAC,IAAN,CAAW,KAAK,GAAL,CAAS,MAAT,EAAX,CAHoB;;AAAA,SAKhE,SALgE,GAKnD,QAAD,IAAuC,KAAK,EAAL,CAAQ,QAAR,EAAkB,QAAlB,CALa;;AAAA,SAOhE,QAPgE,GAOrD,CAAC,QAAD,EAAmC,IAAnC,KAA4D;AACtE,YAAM,KAAK,GAAG,KAAK,GAAL,CAAS,GAAT,CAAa,QAAb,CAAd;;AAEA,UAAI,CAAC,KAAL,EAAY;AACX,aAAK,GAAL,CAAS,GAAT,CAAa,QAAb,EAAuB;AAAE,UAAA,GAAG,EAAE,MAAM,CAAC,EAAP,EAAP;AAAoB,UAAA;AAApB,SAAvB;AACA,aAAK,IAAL,CAAU,QAAV;AACA;AACA;;AAED,UAAI,KAAK,CAAC,IAAN,KAAe,IAAnB,EAAyB;AACxB;AACA;;AAED,WAAK,GAAL,CAAS,GAAT,CAAa,QAAb,kCAA4B,KAA5B;AAAmC,QAAA;AAAnC;AACA,WAAK,IAAL,CAAU,QAAV;AACA,KAtB+D;;AAAA,SAwBhE,UAxBgE,GAwBlD,QAAD,IAA2C;AACvD,UAAI,KAAK,GAAL,CAAS,MAAT,CAAgB,QAAhB,CAAJ,EAA+B;AAC9B,aAAK,IAAL,CAAU,QAAV;AACA;AACD,KA5B+D;AAAA;;AAAA;;AA+B1D,MAAM,YAAY,GAAG,IAAI,yBAAJ,EAArB","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport { Random } from 'meteor/random';\nimport type { ReactNode } from 'react';\nimport type { Subscription, Unsubscribe } from 'use-subscription';\n\ntype BlazePortalEntry = {\n\tkey: string;\n\tnode: ReactNode;\n};\n\nclass BlazePortalsSubscriptions extends Emitter<{ update: void }> implements Subscription<BlazePortalEntry[]> {\n\tprivate map = new Map<Blaze.TemplateInstance, BlazePortalEntry>();\n\n\tgetCurrentValue = (): BlazePortalEntry[] => Array.from(this.map.values());\n\n\tsubscribe = (callback: () => void): Unsubscribe => this.on('update', callback);\n\n\tregister = (template: Blaze.TemplateInstance, node: ReactNode): void => {\n\t\tconst entry = this.map.get(template);\n\n\t\tif (!entry) {\n\t\t\tthis.map.set(template, { key: Random.id(), node });\n\t\t\tthis.emit('update');\n\t\t\treturn;\n\t\t}\n\n\t\tif (entry.node === node) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.map.set(template, { ...entry, node });\n\t\tthis.emit('update');\n\t};\n\n\tunregister = (template: Blaze.TemplateInstance): void => {\n\t\tif (this.map.delete(template)) {\n\t\t\tthis.emit('update');\n\t\t}\n\t};\n}\n\nexport const blazePortals = new BlazePortalsSubscriptions();\n"],"sourceRoot":""},"sourceType":"module","hash":"29a08c22622e1ffc2f2b747b72fbe1047b3fe040"}
