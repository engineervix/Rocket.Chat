{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx","inputSourceMap":{"version":3,"file":"client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx","sourceRoot":"","sources":["client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAClD,OAAO,KAAuC,MAAM,OAAO,CAAC;AAG5D,OAAO,EAAE,eAAe,EAAE,MAAM,yCAAyC,CAAC;AAC1E,OAAO,EAAE,sBAAsB,EAAE,MAAM,sCAAsC,CAAC;AAE9E,MAAM,CAAC,MAAM,MAAM,GAAG;IACrB,IAAI,EAAE,YAAY;IAClB,IAAI,EAAE,aAAa;IACnB,MAAM,EAAE,aAAa;IACrB,OAAO,EAAE,aAAa;CACtB,CAAC;AAEF,MAAM,sBAAsB,GAAG,CAAC,OAA4C,EAAU,EAAE;IACvF,QAAQ,OAAO,EAAE;QAChB,KAAK,KAAK,CAAC,CAAC;YACX,OAAO,EAAE,CAAC;SACV;QACD,KAAK,KAAK,CAAC,CAAC;YACX,OAAO,EAAE,CAAC;SACV;QACD,KAAK,KAAK,CAAC;QACX,OAAO,CAAC,CAAC;YACR,OAAO,EAAE,CAAC;SACV;KACD;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,EAC5C,IAAI,EACJ,IAAI,GAAG,EAAE,EACT,SAAS,GAAG,SAAS,GAKrB,EAAgB,EAAE;IAClB,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC;IACjD,MAAM,IAAI,GAAG,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;IAC7F,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;IAC5E,MAAM,QAAQ,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC9C,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACxE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;KACzD;IACD,OAAO,CACN,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CACjC;GAAA,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,MAAM,CAC/C;IAAA,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,EACjC;GAAA,EAAE,GAAG,CACN;EAAA,EAAE,GAAG,CAAC,CACN,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { Icon, Box } from '@rocket.chat/fuselage';\nimport React, { ComponentProps, ReactElement } from 'react';\n\nimport { IOmnichannelRoomFromAppSource } from '../../../../definition/IRoom';\nimport { AsyncStatePhase } from '../../../lib/asyncState/AsyncStatePhase';\nimport { useOmnichannelRoomIcon } from './context/OmnichannelRoomIconContext';\n\nexport const colors = {\n\tbusy: 'danger-500',\n\taway: 'warning-600',\n\tonline: 'success-500',\n\toffline: 'neutral-600',\n};\n\nconst convertBoxSizeToNumber = (boxSize: ComponentProps<typeof Icon>['size']): number => {\n\tswitch (boxSize) {\n\t\tcase 'x20': {\n\t\t\treturn 20;\n\t\t}\n\t\tcase 'x24': {\n\t\t\treturn 24;\n\t\t}\n\t\tcase 'x16':\n\t\tdefault: {\n\t\t\treturn 16;\n\t\t}\n\t}\n};\n\nexport const OmnichannelAppSourceRoomIcon = ({\n\troom,\n\tsize = 16,\n\tplacement = 'default',\n}: {\n\troom: IOmnichannelRoomFromAppSource;\n\tsize: ComponentProps<typeof Icon>['size'];\n\tplacement: 'sidebar' | 'default';\n}): ReactElement => {\n\tconst color = colors[room.v.status || 'offline'];\n\tconst icon = (placement === 'sidebar' && room.source.sidebarIcon) || room.source.defaultIcon;\n\tconst { phase, value } = useOmnichannelRoomIcon(room.source.id, icon || '');\n\tconst fontSize = convertBoxSizeToNumber(size);\n\tif ([AsyncStatePhase.REJECTED, AsyncStatePhase.LOADING].includes(phase)) {\n\t\treturn <Icon name='headset' size={size} color={color} />;\n\t}\n\treturn (\n\t\t<Box size={fontSize} color={color}>\n\t\t\t<Box is='svg' size={fontSize} aria-hidden='true'>\n\t\t\t\t<Box is='use' href={`#${value}`} />\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx"}},"code":"module.export({\n  colors: () => colors,\n  OmnichannelAppSourceRoomIcon: () => OmnichannelAppSourceRoomIcon\n});\nlet Icon, Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Icon(v) {\n    Icon = v;\n  },\n\n  Box(v) {\n    Box = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet AsyncStatePhase;\nmodule.link(\"../../../lib/asyncState/AsyncStatePhase\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n\n}, 2);\nlet useOmnichannelRoomIcon;\nmodule.link(\"./context/OmnichannelRoomIconContext\", {\n  useOmnichannelRoomIcon(v) {\n    useOmnichannelRoomIcon = v;\n  }\n\n}, 3);\nconst colors = {\n  busy: 'danger-500',\n  away: 'warning-600',\n  online: 'success-500',\n  offline: 'neutral-600'\n};\n\nconst convertBoxSizeToNumber = boxSize => {\n  switch (boxSize) {\n    case 'x20':\n      {\n        return 20;\n      }\n\n    case 'x24':\n      {\n        return 24;\n      }\n\n    case 'x16':\n    default:\n      {\n        return 16;\n      }\n  }\n};\n\nconst OmnichannelAppSourceRoomIcon = _ref => {\n  let {\n    room,\n    size = 16,\n    placement = 'default'\n  } = _ref;\n  const color = colors[room.v.status || 'offline'];\n  const icon = placement === 'sidebar' && room.source.sidebarIcon || room.source.defaultIcon;\n  const {\n    phase,\n    value\n  } = useOmnichannelRoomIcon(room.source.id, icon || '');\n  const fontSize = convertBoxSizeToNumber(size);\n\n  if ([AsyncStatePhase.REJECTED, AsyncStatePhase.LOADING].includes(phase)) {\n    return /*#__PURE__*/React.createElement(Icon, {\n      name: \"headset\",\n      size: size,\n      color: color\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    size: fontSize,\n    color: color\n  }, /*#__PURE__*/React.createElement(Box, {\n    is: \"svg\",\n    size: fontSize,\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    is: \"use\",\n    href: \"#\".concat(value)\n  })));\n};","map":{"version":3,"sources":["client/components/RoomIcon/OmnichannelRoomIcon/OmnichannelAppSourceRoomIcon.tsx"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAa;AAAE,EAAA,MAAK,EAAA,MAAM,MAAb;AAAa,EAAA,4BAAwB,EAAA,MAAA;AAArC,CAAb;AAAkD,IAAA,IAAA,EAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,sBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,sBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAO3C,MAAM,MAAM,GAAG;AACrB,EAAA,IAAI,EAAE,YADe;AAErB,EAAA,IAAI,EAAE,aAFe;AAGrB,EAAA,MAAM,EAAE,aAHa;AAIrB,EAAA,OAAO,EAAE;AAJY,CAAf;;AAOP,MAAM,sBAAsB,GAAI,OAAD,IAAyD;AACvF,UAAQ,OAAR;AACC,SAAK,KAAL;AAAY;AACX,eAAO,EAAP;AACA;;AACD,SAAK,KAAL;AAAY;AACX,eAAO,EAAP;AACA;;AACD,SAAK,KAAL;AACA;AAAS;AACR,eAAO,EAAP;AACA;AAVF;AAYA,CAbD;;AAeO,MAAM,4BAA4B,GAAG,QAQzB;AAAA,MAR0B;AAC5C,IAAA,IAD4C;AAE5C,IAAA,IAAI,GAAG,EAFqC;AAG5C,IAAA,SAAS,GAAG;AAHgC,GAQ1B;AAClB,QAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAL,CAAO,MAAP,IAAiB,SAAlB,CAApB;AACA,QAAM,IAAI,GAAI,SAAS,KAAK,SAAd,IAA2B,IAAI,CAAC,MAAL,CAAY,WAAxC,IAAwD,IAAI,CAAC,MAAL,CAAY,WAAjF;AACA,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,MAAmB,sBAAsB,CAAC,IAAI,CAAC,MAAL,CAAY,EAAb,EAAiB,IAAI,IAAI,EAAzB,CAA/C;AACA,QAAM,QAAQ,GAAG,sBAAsB,CAAC,IAAD,CAAvC;;AACA,MAAI,CAAC,eAAe,CAAC,QAAjB,EAA2B,eAAe,CAAC,OAA3C,EAAoD,QAApD,CAA6D,KAA7D,CAAJ,EAAyE;AACxE,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,IAAI,EAAE,IAA3B;AAAiC,MAAA,KAAK,EAAE;AAAxC,MAAP;AACA;;AACD,sBACC,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,QAAX;AAAqB,IAAA,KAAK,EAAE;AAA5B,kBACC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,IAAI,EAAE,QAApB;AAA8B,mBAAY;AAA1C,kBACC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,IAAI,aAAM,KAAN;AAAlB,IADD,CADD,CADD;AAOA,CAvBM","sourcesContent":["import { Icon, Box } from '@rocket.chat/fuselage';\nimport React, { ComponentProps, ReactElement } from 'react';\n\nimport { IOmnichannelRoomFromAppSource } from '../../../../definition/IRoom';\nimport { AsyncStatePhase } from '../../../lib/asyncState/AsyncStatePhase';\nimport { useOmnichannelRoomIcon } from './context/OmnichannelRoomIconContext';\n\nexport const colors = {\n\tbusy: 'danger-500',\n\taway: 'warning-600',\n\tonline: 'success-500',\n\toffline: 'neutral-600',\n};\n\nconst convertBoxSizeToNumber = (boxSize: ComponentProps<typeof Icon>['size']): number => {\n\tswitch (boxSize) {\n\t\tcase 'x20': {\n\t\t\treturn 20;\n\t\t}\n\t\tcase 'x24': {\n\t\t\treturn 24;\n\t\t}\n\t\tcase 'x16':\n\t\tdefault: {\n\t\t\treturn 16;\n\t\t}\n\t}\n};\n\nexport const OmnichannelAppSourceRoomIcon = ({\n\troom,\n\tsize = 16,\n\tplacement = 'default',\n}: {\n\troom: IOmnichannelRoomFromAppSource;\n\tsize: ComponentProps<typeof Icon>['size'];\n\tplacement: 'sidebar' | 'default';\n}): ReactElement => {\n\tconst color = colors[room.v.status || 'offline'];\n\tconst icon = (placement === 'sidebar' && room.source.sidebarIcon) || room.source.defaultIcon;\n\tconst { phase, value } = useOmnichannelRoomIcon(room.source.id, icon || '');\n\tconst fontSize = convertBoxSizeToNumber(size);\n\tif ([AsyncStatePhase.REJECTED, AsyncStatePhase.LOADING].includes(phase)) {\n\t\treturn <Icon name='headset' size={size} color={color} />;\n\t}\n\treturn (\n\t\t<Box size={fontSize} color={color}>\n\t\t\t<Box is='svg' size={fontSize} aria-hidden='true'>\n\t\t\t\t<Box is='use' href={`#${value}`} />\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"a6cb4ae11fa5a381af7aa0614594cae281ec4fcb"}
