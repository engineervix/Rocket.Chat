{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/notifications/konchatNotifications.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/notifications/konchatNotifications.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/notifications/konchatNotifications.ts","inputSourceMap":{"version":3,"file":"client/startup/notifications/konchatNotifications.ts","sourceRoot":"","sources":["client/startup/notifications/konchatNotifications.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { Tracker } from 'meteor/tracker';\n\nimport { CachedChatSubscription } from '../../../app/models/client';\nimport { Notifications } from '../../../app/notifications/client';\nimport { readMessage } from '../../../app/ui-utils/client';\nimport { KonchatNotification } from '../../../app/ui/client';\nimport { getUserPreference } from '../../../app/utils/client';\nimport { IMessage } from '../../../definition/IMessage';\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { fireGlobalEvent } from '../../lib/utils/fireGlobalEvent';\nimport { isLayoutEmbedded } from '../../lib/utils/isLayoutEmbedded';\n\nconst notifyNewRoom = (sub: ISubscription): void => {\n\tif (Session.equals(`user_${Meteor.userId()}_status`, 'busy')) {\n\t\treturn;\n\t}\n\n\tif ((!FlowRouter.getParam('name') || FlowRouter.getParam('name') !== sub.name) && !sub.ls && sub.alert === true) {\n\t\tKonchatNotification.newRoom(sub.rid);\n\t}\n};\n\ntype NotificationEvent = {\n\ttitle: string;\n\ttext: string;\n\tduration: number;\n\tpayload: {\n\t\t_id: IMessage['_id'];\n\t\trid: IMessage['rid'];\n\t\ttmid: IMessage['_id'];\n\t\tsender: IMessage['u'];\n\t\ttype: IRoom['t'];\n\t\tname: IRoom['name'];\n\t\tmessage: {\n\t\t\tmsg: IMessage['msg'];\n\t\t\tt: string;\n\t\t};\n\t};\n};\n\nfunction notifyNewMessageAudio(rid: string): void {\n\tconst openedRoomId = Session.get('openedRoom');\n\n\t// This logic is duplicated in /client/startup/unread.coffee.\n\tconst hasFocus = readMessage.isEnable();\n\tconst messageIsInOpenedRoom = openedRoomId === rid;\n\tconst muteFocusedConversations = getUserPreference(Meteor.userId(), 'muteFocusedConversations');\n\n\tif (isLayoutEmbedded()) {\n\t\tif (!hasFocus && messageIsInOpenedRoom) {\n\t\t\t// Play a notification sound\n\t\t\tKonchatNotification.newMessage(rid);\n\t\t}\n\t} else if (!hasFocus || !messageIsInOpenedRoom || !muteFocusedConversations) {\n\t\t// Play a notification sound\n\t\tKonchatNotification.newMessage(rid);\n\t}\n}\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('notification', (notification: NotificationEvent) => {\n\t\t\tlet openedRoomId = undefined;\n\t\t\tif (['channel', 'group', 'direct'].includes(FlowRouter.getRouteName())) {\n\t\t\t\topenedRoomId = Session.get('openedRoom');\n\t\t\t}\n\n\t\t\t// This logic is duplicated in /client/startup/unread.coffee.\n\t\t\tconst hasFocus = readMessage.isEnable();\n\t\t\tconst messageIsInOpenedRoom = openedRoomId === notification.payload.rid;\n\n\t\t\tfireGlobalEvent('notification', {\n\t\t\t\tnotification,\n\t\t\t\tfromOpenedRoom: messageIsInOpenedRoom,\n\t\t\t\thasFocus,\n\t\t\t});\n\n\t\t\tif (isLayoutEmbedded()) {\n\t\t\t\tif (!hasFocus && messageIsInOpenedRoom) {\n\t\t\t\t\t// Show a notification.\n\t\t\t\t\tKonchatNotification.showDesktop(notification);\n\t\t\t\t}\n\t\t\t} else if (!hasFocus || !messageIsInOpenedRoom) {\n\t\t\t\t// Show a notification.\n\t\t\t\tKonchatNotification.showDesktop(notification);\n\t\t\t}\n\n\t\t\tnotifyNewMessageAudio(notification.payload.rid);\n\t\t});\n\n\t\tCachedChatSubscription.onSyncData = ((action: 'changed' | 'removed', sub: ISubscription): void => {\n\t\t\tif (action !== 'removed') {\n\t\t\t\tnotifyNewRoom(sub);\n\t\t\t}\n\t\t}) as () => void;\n\n\t\tNotifications.onUser('subscriptions-changed', (_action: 'changed' | 'removed', sub: ISubscription) => {\n\t\t\tnotifyNewRoom(sub);\n\t\t});\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/notifications/konchatNotifications.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/notifications/konchatNotifications.ts"}},"code":"let FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet CachedChatSubscription;\nmodule.link(\"../../../app/models/client\", {\n  CachedChatSubscription(v) {\n    CachedChatSubscription = v;\n  }\n\n}, 4);\nlet Notifications;\nmodule.link(\"../../../app/notifications/client\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 5);\nlet readMessage;\nmodule.link(\"../../../app/ui-utils/client\", {\n  readMessage(v) {\n    readMessage = v;\n  }\n\n}, 6);\nlet KonchatNotification;\nmodule.link(\"../../../app/ui/client\", {\n  KonchatNotification(v) {\n    KonchatNotification = v;\n  }\n\n}, 7);\nlet getUserPreference;\nmodule.link(\"../../../app/utils/client\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n\n}, 8);\nlet fireGlobalEvent;\nmodule.link(\"../../lib/utils/fireGlobalEvent\", {\n  fireGlobalEvent(v) {\n    fireGlobalEvent = v;\n  }\n\n}, 9);\nlet isLayoutEmbedded;\nmodule.link(\"../../lib/utils/isLayoutEmbedded\", {\n  isLayoutEmbedded(v) {\n    isLayoutEmbedded = v;\n  }\n\n}, 10);\n\nconst notifyNewRoom = sub => {\n  if (Session.equals(\"user_\".concat(Meteor.userId(), \"_status\"), 'busy')) {\n    return;\n  }\n\n  if ((!FlowRouter.getParam('name') || FlowRouter.getParam('name') !== sub.name) && !sub.ls && sub.alert === true) {\n    KonchatNotification.newRoom(sub.rid);\n  }\n};\n\nfunction notifyNewMessageAudio(rid) {\n  const openedRoomId = Session.get('openedRoom'); // This logic is duplicated in /client/startup/unread.coffee.\n\n  const hasFocus = readMessage.isEnable();\n  const messageIsInOpenedRoom = openedRoomId === rid;\n  const muteFocusedConversations = getUserPreference(Meteor.userId(), 'muteFocusedConversations');\n\n  if (isLayoutEmbedded()) {\n    if (!hasFocus && messageIsInOpenedRoom) {\n      // Play a notification sound\n      KonchatNotification.newMessage(rid);\n    }\n  } else if (!hasFocus || !messageIsInOpenedRoom || !muteFocusedConversations) {\n    // Play a notification sound\n    KonchatNotification.newMessage(rid);\n  }\n}\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    if (!Meteor.userId()) {\n      return;\n    }\n\n    Notifications.onUser('notification', notification => {\n      let openedRoomId = undefined;\n\n      if (['channel', 'group', 'direct'].includes(FlowRouter.getRouteName())) {\n        openedRoomId = Session.get('openedRoom');\n      } // This logic is duplicated in /client/startup/unread.coffee.\n\n\n      const hasFocus = readMessage.isEnable();\n      const messageIsInOpenedRoom = openedRoomId === notification.payload.rid;\n      fireGlobalEvent('notification', {\n        notification,\n        fromOpenedRoom: messageIsInOpenedRoom,\n        hasFocus\n      });\n\n      if (isLayoutEmbedded()) {\n        if (!hasFocus && messageIsInOpenedRoom) {\n          // Show a notification.\n          KonchatNotification.showDesktop(notification);\n        }\n      } else if (!hasFocus || !messageIsInOpenedRoom) {\n        // Show a notification.\n        KonchatNotification.showDesktop(notification);\n      }\n\n      notifyNewMessageAudio(notification.payload.rid);\n    });\n\n    CachedChatSubscription.onSyncData = (action, sub) => {\n      if (action !== 'removed') {\n        notifyNewRoom(sub);\n      }\n    };\n\n    Notifications.onUser('subscriptions-changed', (_action, sub) => {\n      notifyNewRoom(sub);\n    });\n  });\n});","map":{"version":3,"sources":["client/startup/notifications/konchatNotifications.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { Tracker } from 'meteor/tracker';\n\nimport { CachedChatSubscription } from '../../../app/models/client';\nimport { Notifications } from '../../../app/notifications/client';\nimport { readMessage } from '../../../app/ui-utils/client';\nimport { KonchatNotification } from '../../../app/ui/client';\nimport { getUserPreference } from '../../../app/utils/client';\nimport { IMessage } from '../../../definition/IMessage';\nimport { IRoom } from '../../../definition/IRoom';\nimport { ISubscription } from '../../../definition/ISubscription';\nimport { fireGlobalEvent } from '../../lib/utils/fireGlobalEvent';\nimport { isLayoutEmbedded } from '../../lib/utils/isLayoutEmbedded';\n\nconst notifyNewRoom = (sub: ISubscription): void => {\n\tif (Session.equals(`user_${Meteor.userId()}_status`, 'busy')) {\n\t\treturn;\n\t}\n\n\tif ((!FlowRouter.getParam('name') || FlowRouter.getParam('name') !== sub.name) && !sub.ls && sub.alert === true) {\n\t\tKonchatNotification.newRoom(sub.rid);\n\t}\n};\n\ntype NotificationEvent = {\n\ttitle: string;\n\ttext: string;\n\tduration: number;\n\tpayload: {\n\t\t_id: IMessage['_id'];\n\t\trid: IMessage['rid'];\n\t\ttmid: IMessage['_id'];\n\t\tsender: IMessage['u'];\n\t\ttype: IRoom['t'];\n\t\tname: IRoom['name'];\n\t\tmessage: {\n\t\t\tmsg: IMessage['msg'];\n\t\t\tt: string;\n\t\t};\n\t};\n};\n\nfunction notifyNewMessageAudio(rid: string): void {\n\tconst openedRoomId = Session.get('openedRoom');\n\n\t// This logic is duplicated in /client/startup/unread.coffee.\n\tconst hasFocus = readMessage.isEnable();\n\tconst messageIsInOpenedRoom = openedRoomId === rid;\n\tconst muteFocusedConversations = getUserPreference(Meteor.userId(), 'muteFocusedConversations');\n\n\tif (isLayoutEmbedded()) {\n\t\tif (!hasFocus && messageIsInOpenedRoom) {\n\t\t\t// Play a notification sound\n\t\t\tKonchatNotification.newMessage(rid);\n\t\t}\n\t} else if (!hasFocus || !messageIsInOpenedRoom || !muteFocusedConversations) {\n\t\t// Play a notification sound\n\t\tKonchatNotification.newMessage(rid);\n\t}\n}\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('notification', (notification: NotificationEvent) => {\n\t\t\tlet openedRoomId = undefined;\n\t\t\tif (['channel', 'group', 'direct'].includes(FlowRouter.getRouteName())) {\n\t\t\t\topenedRoomId = Session.get('openedRoom');\n\t\t\t}\n\n\t\t\t// This logic is duplicated in /client/startup/unread.coffee.\n\t\t\tconst hasFocus = readMessage.isEnable();\n\t\t\tconst messageIsInOpenedRoom = openedRoomId === notification.payload.rid;\n\n\t\t\tfireGlobalEvent('notification', {\n\t\t\t\tnotification,\n\t\t\t\tfromOpenedRoom: messageIsInOpenedRoom,\n\t\t\t\thasFocus,\n\t\t\t});\n\n\t\t\tif (isLayoutEmbedded()) {\n\t\t\t\tif (!hasFocus && messageIsInOpenedRoom) {\n\t\t\t\t\t// Show a notification.\n\t\t\t\t\tKonchatNotification.showDesktop(notification);\n\t\t\t\t}\n\t\t\t} else if (!hasFocus || !messageIsInOpenedRoom) {\n\t\t\t\t// Show a notification.\n\t\t\t\tKonchatNotification.showDesktop(notification);\n\t\t\t}\n\n\t\t\tnotifyNewMessageAudio(notification.payload.rid);\n\t\t});\n\n\t\tCachedChatSubscription.onSyncData = ((action: 'changed' | 'removed', sub: ISubscription): void => {\n\t\t\tif (action !== 'removed') {\n\t\t\t\tnotifyNewRoom(sub);\n\t\t\t}\n\t\t}) as () => void;\n\n\t\tNotifications.onUser('subscriptions-changed', (_action: 'changed' | 'removed', sub: ISubscription) => {\n\t\t\tnotifyNewRoom(sub);\n\t\t});\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"e7c444c46e256d5a52d07da286803f9ad2c1522c"}
