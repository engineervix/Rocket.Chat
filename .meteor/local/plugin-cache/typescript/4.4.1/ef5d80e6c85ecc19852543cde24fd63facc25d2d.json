{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/queueList/hooks/useQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/queueList/hooks/useQuery.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/queueList/hooks/useQuery.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/queueList/hooks/useQuery.ts","sourceRoot":"","sources":["client/views/omnichannel/queueList/hooks/useQuery.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAuBhC,MAAM,OAAO,GAAG,CAAC,OAAe,EAAU,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAE1E,MAAM,CAAC,MAAM,QAAQ,GAAiB,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,EAAE,CACxH,OAAO,CAAC,GAAG,EAAE;IACZ,MAAM,KAAK,GAOP;QACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;YACpB,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC;SAC5B,CAAC;QACF,KAAK,EAAE,YAAY;QACnB,MAAM,EAAE,OAAO;KACf,CAAC;IAEF,IAAI,MAAM,KAAK,QAAQ,EAAE;QACxB,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;KACjC;IACD,IAAI,QAAQ,EAAE;QACb,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;KACzB;IACD,IAAI,YAAY,EAAE;QACjB,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;IAED,OAAO,KAAK,CAAC;AACd,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC","sourcesContent":["import { useMemo } from 'react';\n\nimport { ILivechatAgent } from '../../../../../definition/ILivechatAgent';\nimport { ILivechatDepartment } from '../../../../../definition/ILivechatDepartment';\n\ntype useQueryType = (\n\tdebouncedParams: {\n\t\tservedBy: string;\n\t\tstatus: string;\n\t\tdepartmentId: ILivechatDepartment['_id'];\n\t\titemsPerPage: number;\n\t\tcurrent: number;\n\t},\n\tdebouncedSort: [string, 'asc' | 'desc'],\n) => {\n\tagentId?: ILivechatAgent['_id'];\n\tincludeOfflineAgents?: boolean;\n\tdepartmentId?: ILivechatAgent['_id'];\n\toffset: number;\n\tcount: number;\n\tsort: string;\n};\n\nconst sortDir = (sortDir: string): number => (sortDir === 'asc' ? 1 : -1);\n\nexport const useQuery: useQueryType = ({ servedBy, status, departmentId, itemsPerPage, current }, [column, direction]) =>\n\tuseMemo(() => {\n\t\tconst query: {\n\t\t\tagentId?: string;\n\t\t\tincludeOflineAgents?: boolean;\n\t\t\tdepartmentId?: string;\n\t\t\tsort: string;\n\t\t\tcount: number;\n\t\t\toffset: number;\n\t\t} = {\n\t\t\tsort: JSON.stringify({\n\t\t\t\t[column]: sortDir(direction),\n\t\t\t}),\n\t\t\tcount: itemsPerPage,\n\t\t\toffset: current,\n\t\t};\n\n\t\tif (status !== 'online') {\n\t\t\tquery.includeOflineAgents = true;\n\t\t}\n\t\tif (servedBy) {\n\t\t\tquery.agentId = servedBy;\n\t\t}\n\t\tif (departmentId) {\n\t\t\tquery.departmentId = departmentId;\n\t\t}\n\n\t\treturn query;\n\t}, [column, direction, itemsPerPage, current, status, servedBy, departmentId]);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/queueList/hooks/useQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/queueList/hooks/useQuery.ts"}},"code":"module.export({\n  useQuery: () => useQuery\n});\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 0);\n\nconst sortDir = sortDir => sortDir === 'asc' ? 1 : -1;\n\nconst useQuery = (_ref, _ref2) => {\n  let {\n    servedBy,\n    status,\n    departmentId,\n    itemsPerPage,\n    current\n  } = _ref;\n  let [column, direction] = _ref2;\n  return useMemo(() => {\n    const query = {\n      sort: JSON.stringify({\n        [column]: sortDir(direction)\n      }),\n      count: itemsPerPage,\n      offset: current\n    };\n\n    if (status !== 'online') {\n      query.includeOflineAgents = true;\n    }\n\n    if (servedBy) {\n      query.agentId = servedBy;\n    }\n\n    if (departmentId) {\n      query.departmentId = departmentId;\n    }\n\n    return query;\n  }, [column, direction, itemsPerPage, current, status, servedBy, departmentId]);\n};","map":{"version":3,"sources":["client/views/omnichannel/queueList/hooks/useQuery.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,QAAS,EAAM,MAAA;AAAf,CAAT;AAAgC,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAuBhC,MAAM,OAAO,GAAI,OAAD,IAA8B,OAAO,KAAK,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAvE;;AAEO,MAAM,QAAQ,GAAiB;AAAA,MAAC;AAAE,IAAA,QAAF;AAAY,IAAA,MAAZ;AAAoB,IAAA,YAApB;AAAkC,IAAA,YAAlC;AAAgD,IAAA;AAAhD,GAAD;AAAA,MAA4D,CAAC,MAAD,EAAS,SAAT,CAA5D;AAAA,SACrC,OAAO,CAAC,MAAK;AACZ,UAAM,KAAK,GAOP;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AACpB,SAAC,MAAD,GAAU,OAAO,CAAC,SAAD;AADG,OAAf,CADH;AAIH,MAAA,KAAK,EAAE,YAJJ;AAKH,MAAA,MAAM,EAAE;AALL,KAPJ;;AAeA,QAAI,MAAM,KAAK,QAAf,EAAyB;AACxB,MAAA,KAAK,CAAC,mBAAN,GAA4B,IAA5B;AACA;;AACD,QAAI,QAAJ,EAAc;AACb,MAAA,KAAK,CAAC,OAAN,GAAgB,QAAhB;AACA;;AACD,QAAI,YAAJ,EAAkB;AACjB,MAAA,KAAK,CAAC,YAAN,GAAqB,YAArB;AACA;;AAED,WAAO,KAAP;AACA,GA3BM,EA2BJ,CAAC,MAAD,EAAS,SAAT,EAAoB,YAApB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,QAAnD,EAA6D,YAA7D,CA3BI,CAD8B;AAAA,CAA/B","sourcesContent":["import { useMemo } from 'react';\n\nimport { ILivechatAgent } from '../../../../../definition/ILivechatAgent';\nimport { ILivechatDepartment } from '../../../../../definition/ILivechatDepartment';\n\ntype useQueryType = (\n\tdebouncedParams: {\n\t\tservedBy: string;\n\t\tstatus: string;\n\t\tdepartmentId: ILivechatDepartment['_id'];\n\t\titemsPerPage: number;\n\t\tcurrent: number;\n\t},\n\tdebouncedSort: [string, 'asc' | 'desc'],\n) => {\n\tagentId?: ILivechatAgent['_id'];\n\tincludeOfflineAgents?: boolean;\n\tdepartmentId?: ILivechatAgent['_id'];\n\toffset: number;\n\tcount: number;\n\tsort: string;\n};\n\nconst sortDir = (sortDir: string): number => (sortDir === 'asc' ? 1 : -1);\n\nexport const useQuery: useQueryType = ({ servedBy, status, departmentId, itemsPerPage, current }, [column, direction]) =>\n\tuseMemo(() => {\n\t\tconst query: {\n\t\t\tagentId?: string;\n\t\t\tincludeOflineAgents?: boolean;\n\t\t\tdepartmentId?: string;\n\t\t\tsort: string;\n\t\t\tcount: number;\n\t\t\toffset: number;\n\t\t} = {\n\t\t\tsort: JSON.stringify({\n\t\t\t\t[column]: sortDir(direction),\n\t\t\t}),\n\t\t\tcount: itemsPerPage,\n\t\t\toffset: current,\n\t\t};\n\n\t\tif (status !== 'online') {\n\t\t\tquery.includeOflineAgents = true;\n\t\t}\n\t\tif (servedBy) {\n\t\t\tquery.agentId = servedBy;\n\t\t}\n\t\tif (departmentId) {\n\t\t\tquery.departmentId = departmentId;\n\t\t}\n\n\t\treturn query;\n\t}, [column, direction, itemsPerPage, current, status, servedBy, departmentId]);\n"],"sourceRoot":""},"sourceType":"module","hash":"ef5d80e6c85ecc19852543cde24fd63facc25d2d"}
