{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/ActionButtonSyncer.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-message/client/ActionButtonSyncer.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/ActionButtonSyncer.ts","inputSourceMap":{"version":3,"file":"app/ui-message/client/ActionButtonSyncer.ts","sourceRoot":"","sources":["app/ui-message/client/ActionButtonSyncer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAmB,qBAAqB,EAAE,MAAM,wCAAwC,CAAC;AAEhG,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,KAAK,MAAM,MAAM,wBAAwB,CAAC;AACjD,OAAO,KAAK,aAAa,MAAM,+BAA+B,CAAC;AAC/D,OAAO,KAAK,UAAU,MAAM,4BAA4B,CAAC;AAEzD,IAAI,iBAAiB,GAA2B,EAAE,CAAC;AAEnD,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,MAAuB,EAAQ,EAAE;IAC1D,QAAQ,MAAM,CAAC,OAAO,EAAE;QACvB,KAAK,qBAAqB,CAAC,cAAc;YACxC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC9B,MAAM;QACP,KAAK,qBAAqB,CAAC,WAAW;YACrC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvB,MAAM;QACP,KAAK,qBAAqB,CAAC,kBAAkB;YAC5C,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3B,MAAM;KACP;IAED,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,MAAuB,EAAQ,EAAE;IAC7D,QAAQ,MAAM,CAAC,OAAO,EAAE;QACvB,KAAK,qBAAqB,CAAC,cAAc;YACxC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAChC,MAAM;QACP,KAAK,qBAAqB,CAAC,WAAW;YACrC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM;QACP,KAAK,qBAAqB,CAAC,kBAAkB;YAC5C,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM;KACP;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,GAAkB,EAAE,CAC9C,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,KAA6B,EAAE,EAAE;IAC1E,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5D,iBAAiB,GAAG,EAAE,CAAC;IACvB,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC;AAEJ,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { IUIActionButton, UIActionButtonContext } from '@rocket.chat/apps-engine/definition/ui';\n\nimport { APIClient } from '../../utils/client';\nimport * as TabBar from './actionButtons/tabbar';\nimport * as MessageAction from './actionButtons/messageAction';\nimport * as MessageBox from './actionButtons/messageBox';\n\nlet registeredButtons: Array<IUIActionButton> = [];\n\nexport const addButton = (button: IUIActionButton): void => {\n\tswitch (button.context) {\n\t\tcase UIActionButtonContext.MESSAGE_ACTION:\n\t\t\tMessageAction.onAdded(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.ROOM_ACTION:\n\t\t\tTabBar.onAdded(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.MESSAGE_BOX_ACTION:\n\t\t\tMessageBox.onAdded(button);\n\t\t\tbreak;\n\t}\n\n\tregisteredButtons.push(Object.freeze(button));\n};\n\nexport const removeButton = (button: IUIActionButton): void => {\n\tswitch (button.context) {\n\t\tcase UIActionButtonContext.MESSAGE_ACTION:\n\t\t\tMessageAction.onRemoved(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.ROOM_ACTION:\n\t\t\tTabBar.onRemoved(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.MESSAGE_BOX_ACTION:\n\t\t\tMessageBox.onRemoved(button);\n\t\t\tbreak;\n\t}\n};\n\nexport const loadButtons = (): Promise<void> =>\n\tAPIClient.get('apps/actionButtons').then((value: Array<IUIActionButton>) => {\n\t\tregisteredButtons.forEach((button) => removeButton(button));\n\t\tregisteredButtons = [];\n\t\tvalue.map(addButton);\n\t});\n\nMeteor.startup(() => loadButtons());\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/ActionButtonSyncer.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-message/client/ActionButtonSyncer.ts"}},"code":"module.export({\n  addButton: () => addButton,\n  removeButton: () => removeButton,\n  loadButtons: () => loadButtons\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UIActionButtonContext;\nmodule.link(\"@rocket.chat/apps-engine/definition/ui\", {\n  UIActionButtonContext(v) {\n    UIActionButtonContext = v;\n  }\n\n}, 1);\nlet APIClient;\nmodule.link(\"../../utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 2);\nlet TabBar;\nmodule.link(\"./actionButtons/tabbar\", {\n  \"*\"(v) {\n    TabBar = v;\n  }\n\n}, 3);\nlet MessageAction;\nmodule.link(\"./actionButtons/messageAction\", {\n  \"*\"(v) {\n    MessageAction = v;\n  }\n\n}, 4);\nlet MessageBox;\nmodule.link(\"./actionButtons/messageBox\", {\n  \"*\"(v) {\n    MessageBox = v;\n  }\n\n}, 5);\nlet registeredButtons = [];\n\nconst addButton = button => {\n  switch (button.context) {\n    case UIActionButtonContext.MESSAGE_ACTION:\n      MessageAction.onAdded(button);\n      break;\n\n    case UIActionButtonContext.ROOM_ACTION:\n      TabBar.onAdded(button);\n      break;\n\n    case UIActionButtonContext.MESSAGE_BOX_ACTION:\n      MessageBox.onAdded(button);\n      break;\n  }\n\n  registeredButtons.push(Object.freeze(button));\n};\n\nconst removeButton = button => {\n  switch (button.context) {\n    case UIActionButtonContext.MESSAGE_ACTION:\n      MessageAction.onRemoved(button);\n      break;\n\n    case UIActionButtonContext.ROOM_ACTION:\n      TabBar.onRemoved(button);\n      break;\n\n    case UIActionButtonContext.MESSAGE_BOX_ACTION:\n      MessageBox.onRemoved(button);\n      break;\n  }\n};\n\nconst loadButtons = () => APIClient.get('apps/actionButtons').then(value => {\n  registeredButtons.forEach(button => removeButton(button));\n  registeredButtons = [];\n  value.map(addButton);\n});\n\nMeteor.startup(() => loadButtons());","map":{"version":3,"sources":["app/ui-message/client/ActionButtonSyncer.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,SAAQ,EAAA,MAAA,SAAd;AAA8B,EAAA,YAAA,EAAA,MAAA,YAA9B;AAA8B,EAAA,WAAA,EAAA,MAAA;AAA9B,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,qBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,qBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,MAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,MAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,MAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQvC,IAAI,iBAAiB,GAA2B,EAAhD;;AAEO,MAAM,SAAS,GAAI,MAAD,IAAkC;AAC1D,UAAQ,MAAM,CAAC,OAAf;AACC,SAAK,qBAAqB,CAAC,cAA3B;AACC,MAAA,aAAa,CAAC,OAAd,CAAsB,MAAtB;AACA;;AACD,SAAK,qBAAqB,CAAC,WAA3B;AACC,MAAA,MAAM,CAAC,OAAP,CAAe,MAAf;AACA;;AACD,SAAK,qBAAqB,CAAC,kBAA3B;AACC,MAAA,UAAU,CAAC,OAAX,CAAmB,MAAnB;AACA;AATF;;AAYA,EAAA,iBAAiB,CAAC,IAAlB,CAAuB,MAAM,CAAC,MAAP,CAAc,MAAd,CAAvB;AACA,CAdM;;AAgBA,MAAM,YAAY,GAAI,MAAD,IAAkC;AAC7D,UAAQ,MAAM,CAAC,OAAf;AACC,SAAK,qBAAqB,CAAC,cAA3B;AACC,MAAA,aAAa,CAAC,SAAd,CAAwB,MAAxB;AACA;;AACD,SAAK,qBAAqB,CAAC,WAA3B;AACC,MAAA,MAAM,CAAC,SAAP,CAAiB,MAAjB;AACA;;AACD,SAAK,qBAAqB,CAAC,kBAA3B;AACC,MAAA,UAAU,CAAC,SAAX,CAAqB,MAArB;AACA;AATF;AAWA,CAZM;;AAcA,MAAM,WAAW,GAAG,MAC1B,SAAS,CAAC,GAAV,CAAc,oBAAd,EAAoC,IAApC,CAA0C,KAAD,IAAkC;AAC1E,EAAA,iBAAiB,CAAC,OAAlB,CAA2B,MAAD,IAAY,YAAY,CAAC,MAAD,CAAlD;AACA,EAAA,iBAAiB,GAAG,EAApB;AACA,EAAA,KAAK,CAAC,GAAN,CAAU,SAAV;AACA,CAJD,CADM;;AAOP,MAAM,CAAC,OAAP,CAAe,MAAM,WAAW,EAAhC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { IUIActionButton, UIActionButtonContext } from '@rocket.chat/apps-engine/definition/ui';\n\nimport { APIClient } from '../../utils/client';\nimport * as TabBar from './actionButtons/tabbar';\nimport * as MessageAction from './actionButtons/messageAction';\nimport * as MessageBox from './actionButtons/messageBox';\n\nlet registeredButtons: Array<IUIActionButton> = [];\n\nexport const addButton = (button: IUIActionButton): void => {\n\tswitch (button.context) {\n\t\tcase UIActionButtonContext.MESSAGE_ACTION:\n\t\t\tMessageAction.onAdded(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.ROOM_ACTION:\n\t\t\tTabBar.onAdded(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.MESSAGE_BOX_ACTION:\n\t\t\tMessageBox.onAdded(button);\n\t\t\tbreak;\n\t}\n\n\tregisteredButtons.push(Object.freeze(button));\n};\n\nexport const removeButton = (button: IUIActionButton): void => {\n\tswitch (button.context) {\n\t\tcase UIActionButtonContext.MESSAGE_ACTION:\n\t\t\tMessageAction.onRemoved(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.ROOM_ACTION:\n\t\t\tTabBar.onRemoved(button);\n\t\t\tbreak;\n\t\tcase UIActionButtonContext.MESSAGE_BOX_ACTION:\n\t\t\tMessageBox.onRemoved(button);\n\t\t\tbreak;\n\t}\n};\n\nexport const loadButtons = (): Promise<void> =>\n\tAPIClient.get('apps/actionButtons').then((value: Array<IUIActionButton>) => {\n\t\tregisteredButtons.forEach((button) => removeButton(button));\n\t\tregisteredButtons = [];\n\t\tvalue.map(addButton);\n\t});\n\nMeteor.startup(() => loadButtons());\n"],"sourceRoot":""},"sourceType":"module","hash":"b29e09b88e2ca717f638ad970c4e927ab6cd58de"}
