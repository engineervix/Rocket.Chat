{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/usePresence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/usePresence.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/usePresence.ts","inputSourceMap":{"version":3,"file":"client/hooks/usePresence.ts","sourceRoot":"","sources":["client/hooks/usePresence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAChC,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEnD,OAAO,EAAE,QAAQ,EAAgB,MAAM,iBAAiB,CAAC;AAIzD;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,GAAuB,EAA4B,EAAE;IAChF,MAAM,YAAY,GAAG,OAAO,CAC3B,GAAG,EAAE,CAAC,CAAC;QACN,eAAe,EAAE,GAA6B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5F,SAAS,EAAE,CAAC,QAAa,EAAO,EAAE;YACjC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YACtC,OAAO,GAAS,EAAE;gBACjB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YACrC,CAAC,CAAC;QACH,CAAC;KACD,CAAC,EACF,CAAC,GAAG,CAAC,CACL,CAAC;IAEF,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["import { useMemo } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { Presence, UserPresence } from '../lib/presence';\n\ntype Presence = 'online' | 'offline' | 'busy' | 'away' | 'loading';\n\n/**\n * Hook to fetch and subscribe users presence\n *\n * @param uid - User Id\n * @returns UserPresence\n * @public\n */\nexport const usePresence = (uid: string | undefined): UserPresence | undefined => {\n\tconst subscription = useMemo(\n\t\t() => ({\n\t\t\tgetCurrentValue: (): UserPresence | undefined => (uid ? Presence.store.get(uid) : undefined),\n\t\t\tsubscribe: (callback: any): any => {\n\t\t\t\tuid && Presence.listen(uid, callback);\n\t\t\t\treturn (): void => {\n\t\t\t\t\tuid && Presence.stop(uid, callback);\n\t\t\t\t};\n\t\t\t},\n\t\t}),\n\t\t[uid],\n\t);\n\n\treturn useSubscription(subscription);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/usePresence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/usePresence.ts"}},"code":"module.export({\n  usePresence: () => usePresence\n});\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 0);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 1);\nlet Presence;\nmodule.link(\"../lib/presence\", {\n  Presence(v) {\n    Presence = v;\n  }\n\n}, 2);\n\nconst usePresence = uid => {\n  const subscription = useMemo(() => ({\n    getCurrentValue: () => uid ? Presence.store.get(uid) : undefined,\n    subscribe: callback => {\n      uid && Presence.listen(uid, callback);\n      return () => {\n        uid && Presence.stop(uid, callback);\n      };\n    }\n  }), [uid]);\n  return useSubscription(subscription);\n};","map":{"version":3,"sources":["client/hooks/usePresence.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,WAAe,EAAA,MAAO;AAAtB,CAAT;AAAgC,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAczB,MAAM,WAAW,GAAI,GAAD,IAAsD;AAChF,QAAM,YAAY,GAAG,OAAO,CAC3B,OAAO;AACN,IAAA,eAAe,EAAE,MAAiC,GAAG,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,GAAnB,CAAH,GAA6B,SAD5E;AAEN,IAAA,SAAS,EAAG,QAAD,IAAuB;AACjC,MAAA,GAAG,IAAI,QAAQ,CAAC,MAAT,CAAgB,GAAhB,EAAqB,QAArB,CAAP;AACA,aAAO,MAAW;AACjB,QAAA,GAAG,IAAI,QAAQ,CAAC,IAAT,CAAc,GAAd,EAAmB,QAAnB,CAAP;AACA,OAFD;AAGA;AAPK,GAAP,CAD2B,EAU3B,CAAC,GAAD,CAV2B,CAA5B;AAaA,SAAO,eAAe,CAAC,YAAD,CAAtB;AACA,CAfM","sourcesContent":["import { useMemo } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { Presence, UserPresence } from '../lib/presence';\n\ntype Presence = 'online' | 'offline' | 'busy' | 'away' | 'loading';\n\n/**\n * Hook to fetch and subscribe users presence\n *\n * @param uid - User Id\n * @returns UserPresence\n * @public\n */\nexport const usePresence = (uid: string | undefined): UserPresence | undefined => {\n\tconst subscription = useMemo(\n\t\t() => ({\n\t\t\tgetCurrentValue: (): UserPresence | undefined => (uid ? Presence.store.get(uid) : undefined),\n\t\t\tsubscribe: (callback: any): any => {\n\t\t\t\tuid && Presence.listen(uid, callback);\n\t\t\t\treturn (): void => {\n\t\t\t\t\tuid && Presence.stop(uid, callback);\n\t\t\t\t};\n\t\t\t},\n\t\t}),\n\t\t[uid],\n\t);\n\n\treturn useSubscription(subscription);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"949d7e3019daa1ae3681f6432316de1d0d3e41ef"}
