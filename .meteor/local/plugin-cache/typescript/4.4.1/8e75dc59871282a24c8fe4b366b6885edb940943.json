{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/RouterContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/contexts/RouterContext.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/RouterContext.ts","inputSourceMap":{"version":3,"file":"client/contexts/RouterContext.ts","sourceRoot":"","sources":["client/contexts/RouterContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { createContext, useContext, useMemo } from 'react';\nimport { useSubscription, Subscription } from 'use-subscription';\n\ntype RouteName = string;\n\ntype RouteParameters = Record<string, string>;\n\ntype QueryStringParameters = Record<string, string>;\n\ntype RouteGroupName = string;\n\nexport type RouterContextValue = {\n\tqueryRoutePath: (\n\t\tname: RouteName,\n\t\tparameters: RouteParameters | undefined,\n\t\tqueryStringParameters: QueryStringParameters | undefined,\n\t) => Subscription<string | undefined>;\n\tqueryRouteUrl: (\n\t\tname: RouteName,\n\t\tparameters: RouteParameters | undefined,\n\t\tqueryStringParameters: QueryStringParameters | undefined,\n\t) => Subscription<string | undefined>;\n\tpushRoute: (name: RouteName, parameters: RouteParameters | undefined, queryStringParameters: QueryStringParameters | undefined) => void;\n\treplaceRoute: (\n\t\tname: RouteName,\n\t\tparameters: RouteParameters | undefined,\n\t\tqueryStringParameters: QueryStringParameters | undefined,\n\t) => void;\n\tqueryRouteParameter: (name: string) => Subscription<string | undefined>;\n\tqueryQueryStringParameter: (name: string) => Subscription<string | undefined>;\n\tqueryCurrentRoute: () => Subscription<[RouteName?, RouteParameters?, QueryStringParameters?, RouteGroupName?]>;\n};\n\nexport const RouterContext = createContext<RouterContextValue>({\n\tqueryRoutePath: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tqueryRouteUrl: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tpushRoute: () => undefined,\n\treplaceRoute: () => undefined,\n\tqueryRouteParameter: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tqueryQueryStringParameter: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tqueryCurrentRoute: () => ({\n\t\tgetCurrentValue: (): [undefined, {}, {}, undefined] => [undefined, {}, {}, undefined],\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n});\n\ntype Route = {\n\tgetPath: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => string | undefined;\n\tgetUrl: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => string | undefined;\n\tpush: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => void;\n\treplace: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => void;\n};\n\nexport const useRoute = (name: string): Route => {\n\tconst { queryRoutePath, queryRouteUrl, pushRoute, replaceRoute } = useContext(RouterContext);\n\n\treturn useMemo<Route>(\n\t\t() => ({\n\t\t\tgetPath: (parameters, queryStringParameters): string | undefined =>\n\t\t\t\tqueryRoutePath(name, parameters, queryStringParameters).getCurrentValue(),\n\t\t\tgetUrl: (parameters, queryStringParameters): ReturnType<Route['getUrl']> =>\n\t\t\t\tqueryRouteUrl(name, parameters, queryStringParameters).getCurrentValue(),\n\t\t\tpush: (parameters, queryStringParameters): ReturnType<Route['push']> => pushRoute(name, parameters, queryStringParameters),\n\t\t\treplace: (parameters, queryStringParameters): ReturnType<Route['replace']> => replaceRoute(name, parameters, queryStringParameters),\n\t\t}),\n\t\t[queryRoutePath, queryRouteUrl, name, pushRoute, replaceRoute],\n\t);\n};\n\nexport const useRoutePath = (\n\tname: string,\n\tparameters?: RouteParameters,\n\tqueryStringParameters?: QueryStringParameters,\n): string | undefined => {\n\tconst { queryRoutePath } = useContext(RouterContext);\n\n\treturn useSubscription(\n\t\tuseMemo(() => queryRoutePath(name, parameters, queryStringParameters), [queryRoutePath, name, parameters, queryStringParameters]),\n\t);\n};\n\nexport const useRouteUrl = (\n\tname: string,\n\tparameters?: RouteParameters,\n\tqueryStringParameters?: QueryStringParameters,\n): string | undefined => {\n\tconst { queryRouteUrl } = useContext(RouterContext);\n\n\treturn useSubscription(\n\t\tuseMemo(() => queryRouteUrl(name, parameters, queryStringParameters), [queryRouteUrl, name, parameters, queryStringParameters]),\n\t);\n};\n\nexport const useRouteParameter = (name: string): string | undefined => {\n\tconst { queryRouteParameter } = useContext(RouterContext);\n\n\treturn useSubscription(useMemo(() => queryRouteParameter(name), [queryRouteParameter, name]));\n};\n\nexport const useQueryStringParameter = (name: string): string | undefined => {\n\tconst { queryQueryStringParameter } = useContext(RouterContext);\n\n\treturn useSubscription(useMemo(() => queryQueryStringParameter(name), [queryQueryStringParameter, name]));\n};\n\nexport const useCurrentRoute = (): [RouteName?, RouteParameters?, QueryStringParameters?, RouteGroupName?] => {\n\tconst { queryCurrentRoute } = useContext(RouterContext);\n\n\treturn useSubscription(useMemo(() => queryCurrentRoute(), [queryCurrentRoute]));\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/contexts/RouterContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/contexts/RouterContext.ts"}},"code":"module.export({\n  RouterContext: () => RouterContext,\n  useRoute: () => useRoute,\n  useRoutePath: () => useRoutePath,\n  useRouteUrl: () => useRouteUrl,\n  useRouteParameter: () => useRouteParameter,\n  useQueryStringParameter: () => useQueryStringParameter,\n  useCurrentRoute: () => useCurrentRoute\n});\nlet createContext, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n\n  useContext(v) {\n    useContext = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 0);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 1);\nconst RouterContext = /*#__PURE__*/createContext({\n  queryRoutePath: () => ({\n    getCurrentValue: () => undefined,\n    subscribe: () => () => undefined\n  }),\n  queryRouteUrl: () => ({\n    getCurrentValue: () => undefined,\n    subscribe: () => () => undefined\n  }),\n  pushRoute: () => undefined,\n  replaceRoute: () => undefined,\n  queryRouteParameter: () => ({\n    getCurrentValue: () => undefined,\n    subscribe: () => () => undefined\n  }),\n  queryQueryStringParameter: () => ({\n    getCurrentValue: () => undefined,\n    subscribe: () => () => undefined\n  }),\n  queryCurrentRoute: () => ({\n    getCurrentValue: () => [undefined, {}, {}, undefined],\n    subscribe: () => () => undefined\n  })\n});\n\nconst useRoute = name => {\n  const {\n    queryRoutePath,\n    queryRouteUrl,\n    pushRoute,\n    replaceRoute\n  } = useContext(RouterContext);\n  return useMemo(() => ({\n    getPath: (parameters, queryStringParameters) => queryRoutePath(name, parameters, queryStringParameters).getCurrentValue(),\n    getUrl: (parameters, queryStringParameters) => queryRouteUrl(name, parameters, queryStringParameters).getCurrentValue(),\n    push: (parameters, queryStringParameters) => pushRoute(name, parameters, queryStringParameters),\n    replace: (parameters, queryStringParameters) => replaceRoute(name, parameters, queryStringParameters)\n  }), [queryRoutePath, queryRouteUrl, name, pushRoute, replaceRoute]);\n};\n\nconst useRoutePath = (name, parameters, queryStringParameters) => {\n  const {\n    queryRoutePath\n  } = useContext(RouterContext);\n  return useSubscription(useMemo(() => queryRoutePath(name, parameters, queryStringParameters), [queryRoutePath, name, parameters, queryStringParameters]));\n};\n\nconst useRouteUrl = (name, parameters, queryStringParameters) => {\n  const {\n    queryRouteUrl\n  } = useContext(RouterContext);\n  return useSubscription(useMemo(() => queryRouteUrl(name, parameters, queryStringParameters), [queryRouteUrl, name, parameters, queryStringParameters]));\n};\n\nconst useRouteParameter = name => {\n  const {\n    queryRouteParameter\n  } = useContext(RouterContext);\n  return useSubscription(useMemo(() => queryRouteParameter(name), [queryRouteParameter, name]));\n};\n\nconst useQueryStringParameter = name => {\n  const {\n    queryQueryStringParameter\n  } = useContext(RouterContext);\n  return useSubscription(useMemo(() => queryQueryStringParameter(name), [queryQueryStringParameter, name]));\n};\n\nconst useCurrentRoute = () => {\n  const {\n    queryCurrentRoute\n  } = useContext(RouterContext);\n  return useSubscription(useMemo(() => queryCurrentRoute(), [queryCurrentRoute]));\n};","map":{"version":3,"sources":["client/contexts/RouterContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { createContext, useContext, useMemo } from 'react';\nimport { useSubscription, Subscription } from 'use-subscription';\n\ntype RouteName = string;\n\ntype RouteParameters = Record<string, string>;\n\ntype QueryStringParameters = Record<string, string>;\n\ntype RouteGroupName = string;\n\nexport type RouterContextValue = {\n\tqueryRoutePath: (\n\t\tname: RouteName,\n\t\tparameters: RouteParameters | undefined,\n\t\tqueryStringParameters: QueryStringParameters | undefined,\n\t) => Subscription<string | undefined>;\n\tqueryRouteUrl: (\n\t\tname: RouteName,\n\t\tparameters: RouteParameters | undefined,\n\t\tqueryStringParameters: QueryStringParameters | undefined,\n\t) => Subscription<string | undefined>;\n\tpushRoute: (name: RouteName, parameters: RouteParameters | undefined, queryStringParameters: QueryStringParameters | undefined) => void;\n\treplaceRoute: (\n\t\tname: RouteName,\n\t\tparameters: RouteParameters | undefined,\n\t\tqueryStringParameters: QueryStringParameters | undefined,\n\t) => void;\n\tqueryRouteParameter: (name: string) => Subscription<string | undefined>;\n\tqueryQueryStringParameter: (name: string) => Subscription<string | undefined>;\n\tqueryCurrentRoute: () => Subscription<[RouteName?, RouteParameters?, QueryStringParameters?, RouteGroupName?]>;\n};\n\nexport const RouterContext = createContext<RouterContextValue>({\n\tqueryRoutePath: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tqueryRouteUrl: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tpushRoute: () => undefined,\n\treplaceRoute: () => undefined,\n\tqueryRouteParameter: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tqueryQueryStringParameter: () => ({\n\t\tgetCurrentValue: (): undefined => undefined,\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n\tqueryCurrentRoute: () => ({\n\t\tgetCurrentValue: (): [undefined, {}, {}, undefined] => [undefined, {}, {}, undefined],\n\t\tsubscribe: () => (): void => undefined,\n\t}),\n});\n\ntype Route = {\n\tgetPath: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => string | undefined;\n\tgetUrl: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => string | undefined;\n\tpush: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => void;\n\treplace: (parameters?: RouteParameters, queryStringParameters?: QueryStringParameters) => void;\n};\n\nexport const useRoute = (name: string): Route => {\n\tconst { queryRoutePath, queryRouteUrl, pushRoute, replaceRoute } = useContext(RouterContext);\n\n\treturn useMemo<Route>(\n\t\t() => ({\n\t\t\tgetPath: (parameters, queryStringParameters): string | undefined =>\n\t\t\t\tqueryRoutePath(name, parameters, queryStringParameters).getCurrentValue(),\n\t\t\tgetUrl: (parameters, queryStringParameters): ReturnType<Route['getUrl']> =>\n\t\t\t\tqueryRouteUrl(name, parameters, queryStringParameters).getCurrentValue(),\n\t\t\tpush: (parameters, queryStringParameters): ReturnType<Route['push']> => pushRoute(name, parameters, queryStringParameters),\n\t\t\treplace: (parameters, queryStringParameters): ReturnType<Route['replace']> => replaceRoute(name, parameters, queryStringParameters),\n\t\t}),\n\t\t[queryRoutePath, queryRouteUrl, name, pushRoute, replaceRoute],\n\t);\n};\n\nexport const useRoutePath = (\n\tname: string,\n\tparameters?: RouteParameters,\n\tqueryStringParameters?: QueryStringParameters,\n): string | undefined => {\n\tconst { queryRoutePath } = useContext(RouterContext);\n\n\treturn useSubscription(\n\t\tuseMemo(() => queryRoutePath(name, parameters, queryStringParameters), [queryRoutePath, name, parameters, queryStringParameters]),\n\t);\n};\n\nexport const useRouteUrl = (\n\tname: string,\n\tparameters?: RouteParameters,\n\tqueryStringParameters?: QueryStringParameters,\n): string | undefined => {\n\tconst { queryRouteUrl } = useContext(RouterContext);\n\n\treturn useSubscription(\n\t\tuseMemo(() => queryRouteUrl(name, parameters, queryStringParameters), [queryRouteUrl, name, parameters, queryStringParameters]),\n\t);\n};\n\nexport const useRouteParameter = (name: string): string | undefined => {\n\tconst { queryRouteParameter } = useContext(RouterContext);\n\n\treturn useSubscription(useMemo(() => queryRouteParameter(name), [queryRouteParameter, name]));\n};\n\nexport const useQueryStringParameter = (name: string): string | undefined => {\n\tconst { queryQueryStringParameter } = useContext(RouterContext);\n\n\treturn useSubscription(useMemo(() => queryQueryStringParameter(name), [queryQueryStringParameter, name]));\n};\n\nexport const useCurrentRoute = (): [RouteName?, RouteParameters?, QueryStringParameters?, RouteGroupName?] => {\n\tconst { queryCurrentRoute } = useContext(RouterContext);\n\n\treturn useSubscription(useMemo(() => queryCurrentRoute(), [queryCurrentRoute]));\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"8e75dc59871282a24c8fe4b366b6885edb940943"}
