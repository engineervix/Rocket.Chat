{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/2fa/overrideLoginMethod.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/2fa/overrideLoginMethod.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/2fa/overrideLoginMethod.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/overrideLoginMethod.ts","sourceRoot":"","sources":["client/lib/2fa/overrideLoginMethod.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,2BAA2B,CAAC;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAWlE,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAClC,WAA2B,EAC3B,SAAY,EACZ,QAAuB,EACvB,eAAuC,EACvC,eAAuB,EAChB,EAAE;IACT,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,SAAS,EAAE,CAAC,KAAc,EAAE,MAAgB,EAAE,EAAE;QACzE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;YAChC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChB,OAAO;SACP;QAED,gBAAgB,CAAC;YAChB,KAAK;YACL,MAAM;YACN,eAAe;YACf,gBAAgB,EAAE,QAAQ;YAC1B,MAAM,EAAE,CAAC,IAAY,EAAE,EAAE;gBACxB,eAAe,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,SAAS,EAAE,IAAI,EAAE,CAAC,KAAc,EAAE,EAAE;oBAClE,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;wBAC9B,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;wBAC/E,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACf,OAAO;qBACP;oBAED,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACjB,CAAC,CAAC,CAAC;YACJ,CAAC;SACD,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { t } from '../../../app/utils/client';\nimport { dispatchToastMessage } from '../toast';\nimport { process2faReturn } from './process2faReturn';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\ntype LoginCallback = {\n\t(error: unknown): void;\n\t(error: unknown, result: unknown): void;\n};\n\ntype LoginMethod<A extends unknown[]> = (...args: [...args: A, cb: LoginCallback]) => void;\n\ntype LoginMethodWithTotp<A extends unknown[]> = (...args: [...args: A, code: string, cb: LoginCallback]) => void;\n\nexport const overrideLoginMethod = <A extends unknown[]>(\n\tloginMethod: LoginMethod<A>,\n\tloginArgs: A,\n\tcallback: LoginCallback,\n\tloginMethodTOTP: LoginMethodWithTotp<A>,\n\temailOrUsername: string,\n): void => {\n\tloginMethod.call(null, ...loginArgs, (error: unknown, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback(error);\n\t\t\treturn;\n\t\t}\n\n\t\tprocess2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP?.call(null, ...loginArgs, code, (error: unknown) => {\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(error);\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/2fa/overrideLoginMethod.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/2fa/overrideLoginMethod.ts"}},"code":"module.export({\n  overrideLoginMethod: () => overrideLoginMethod\n});\nlet t;\nmodule.link(\"../../../app/utils/client\", {\n  t(v) {\n    t = v;\n  }\n\n}, 0);\nlet dispatchToastMessage;\nmodule.link(\"../toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n\n}, 1);\nlet process2faReturn;\nmodule.link(\"./process2faReturn\", {\n  process2faReturn(v) {\n    process2faReturn = v;\n  }\n\n}, 2);\nlet isTotpInvalidError, isTotpRequiredError;\nmodule.link(\"./utils\", {\n  isTotpInvalidError(v) {\n    isTotpInvalidError = v;\n  },\n\n  isTotpRequiredError(v) {\n    isTotpRequiredError = v;\n  }\n\n}, 3);\n\nconst overrideLoginMethod = (loginMethod, loginArgs, callback, loginMethodTOTP, emailOrUsername) => {\n  loginMethod.call(null, ...loginArgs, (error, result) => {\n    if (!isTotpRequiredError(error)) {\n      callback(error);\n      return;\n    }\n\n    process2faReturn({\n      error,\n      result,\n      emailOrUsername,\n      originalCallback: callback,\n      onCode: code => {\n        loginMethodTOTP === null || loginMethodTOTP === void 0 ? void 0 : loginMethodTOTP.call(null, ...loginArgs, code, error => {\n          if (isTotpInvalidError(error)) {\n            dispatchToastMessage({\n              type: 'error',\n              message: t('Invalid_two_factor_code')\n            });\n            callback(null);\n            return;\n          }\n\n          callback(error);\n        });\n      }\n    });\n  });\n};","map":{"version":3,"sources":["client/lib/2fa/overrideLoginMethod.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAY;AAAA,EAAA,mBAAM,EAAA,MAAA;AAAN,CAAZ;AAA8C,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,CAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,oBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,oBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,oBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA,EAAA,mBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAcvC,MAAM,mBAAmB,GAAG,CAClC,WADkC,EAElC,SAFkC,EAGlC,QAHkC,EAIlC,eAJkC,EAKlC,eALkC,KAMzB;AACT,EAAA,WAAW,CAAC,IAAZ,CAAiB,IAAjB,EAAuB,GAAG,SAA1B,EAAqC,CAAC,KAAD,EAAiB,MAAjB,KAAqC;AACzE,QAAI,CAAC,mBAAmB,CAAC,KAAD,CAAxB,EAAiC;AAChC,MAAA,QAAQ,CAAC,KAAD,CAAR;AACA;AACA;;AAED,IAAA,gBAAgB,CAAC;AAChB,MAAA,KADgB;AAEhB,MAAA,MAFgB;AAGhB,MAAA,eAHgB;AAIhB,MAAA,gBAAgB,EAAE,QAJF;AAKhB,MAAA,MAAM,EAAG,IAAD,IAAiB;AACxB,QAAA,eAAe,SAAf,IAAA,eAAe,WAAf,YAAA,eAAe,CAAE,IAAjB,CAAsB,IAAtB,EAA4B,GAAG,SAA/B,EAA0C,IAA1C,EAAiD,KAAD,IAAmB;AAClE,cAAI,kBAAkB,CAAC,KAAD,CAAtB,EAA+B;AAC9B,YAAA,oBAAoB,CAAC;AAAE,cAAA,IAAI,EAAE,OAAR;AAAiB,cAAA,OAAO,EAAE,CAAC,CAAC,yBAAD;AAA3B,aAAD,CAApB;AACA,YAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACA;;AAED,UAAA,QAAQ,CAAC,KAAD,CAAR;AACA,SARD;AASA;AAfe,KAAD,CAAhB;AAiBA,GAvBD;AAwBA,CA/BM","sourcesContent":["import { t } from '../../../app/utils/client';\nimport { dispatchToastMessage } from '../toast';\nimport { process2faReturn } from './process2faReturn';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\ntype LoginCallback = {\n\t(error: unknown): void;\n\t(error: unknown, result: unknown): void;\n};\n\ntype LoginMethod<A extends unknown[]> = (...args: [...args: A, cb: LoginCallback]) => void;\n\ntype LoginMethodWithTotp<A extends unknown[]> = (...args: [...args: A, code: string, cb: LoginCallback]) => void;\n\nexport const overrideLoginMethod = <A extends unknown[]>(\n\tloginMethod: LoginMethod<A>,\n\tloginArgs: A,\n\tcallback: LoginCallback,\n\tloginMethodTOTP: LoginMethodWithTotp<A>,\n\temailOrUsername: string,\n): void => {\n\tloginMethod.call(null, ...loginArgs, (error: unknown, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback(error);\n\t\t\treturn;\n\t\t}\n\n\t\tprocess2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP?.call(null, ...loginArgs, code, (error: unknown) => {\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(error);\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"bfdf83171b0d5b02d1f99336e50bccef0b1a5181"}
