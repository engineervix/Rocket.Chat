{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/Header/Omnichannel/VoipRoomHeader.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/Header/Omnichannel/VoipRoomHeader.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/Header/Omnichannel/VoipRoomHeader.tsx","inputSourceMap":{"version":3,"file":"client/views/room/Header/Omnichannel/VoipRoomHeader.tsx","sourceRoot":"","sources":["client/views/room/Header/Omnichannel/VoipRoomHeader.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAM,OAAO,EAAE,MAAM,OAAO,CAAC;AAE3C,OAAO,UAAU,MAAM,mCAAmC,CAAC;AAC3D,OAAO,cAAc,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAErE,OAAO,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAC;AACrF,OAAO,UAA+B,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,MAAM,cAAc,GAAwB,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3E,MAAM,CAAC,IAAI,CAAC,GAAG,eAAe,EAAE,CAAC;IACjC,MAAM,EAAE,QAAQ,EAAE,GAAG,SAAS,EAAE,CAAC;IACjC,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IAEpC,MAAM,KAAK,GAAG,OAAO,CACpB,GAAG,EAAE,CAAC,CAAC;QACN,GAAG,UAAU;QACb,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,KAAK,uBAAuB,CAAC,IAAI,CAC1D,CAAC,cAAc,CAAC,OAAO,CACtB;KAAA,CAAC,QAAQ,IAAI,CAAC,UAAU,CAAC,AAAD,EAAG,CAC3B;KAAA,CAAC,IAAI,KAAK,uBAAuB,IAAI,CAAC,UAAU,CAAC,AAAD,EAAG,CACpD;IAAA,EAAE,cAAc,CAAC,OAAO,CAAC,CACzB;KACD,CAAC,EACF,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAC5B,CAAC;IACF,OAAO,CACN,CAAC,cAAc,CAAC,QAAQ,CACvB,KAAK,CAAC,CAAC,OAAO,CACb,GAAG,EAAE,CAAC,CAAC;YACN,GAAG,OAAO;YACV,OAAO,EAAE,IAAI,GAAG,CAAC,CAAC,GAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAqC,CAAC,CAAC;SACjG,CAAC,EACF,CAAC,OAAO,CAAC,CACT,CAAC,CAEF;GAAA,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EACtC;EAAA,EAAE,cAAc,CAAC,QAAQ,CAAC,CAC1B,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import React, { FC, useMemo } from 'react';\n\nimport BurgerMenu from '../../../../components/BurgerMenu';\nimport TemplateHeader from '../../../../components/Header';\nimport { useLayout } from '../../../../contexts/LayoutContext';\nimport { useCurrentRoute } from '../../../../contexts/RouterContext';\nimport { ToolboxActionConfig } from '../../lib/Toolbox';\nimport { ToolboxContext, useToolboxContext } from '../../lib/Toolbox/ToolboxContext';\nimport RoomHeader, { RoomHeaderProps } from '../RoomHeader';\nimport { BackButton } from './BackButton';\n\nconst VoipRoomHeader: FC<RoomHeaderProps> = ({ slots: parentSlot, room }) => {\n\tconst [name] = useCurrentRoute();\n\tconst { isMobile } = useLayout();\n\tconst context = useToolboxContext();\n\n\tconst slots = useMemo(\n\t\t() => ({\n\t\t\t...parentSlot,\n\t\t\tstart: (!!isMobile || name === 'omnichannel-directory') && (\n\t\t\t\t<TemplateHeader.ToolBox>\n\t\t\t\t\t{isMobile && <BurgerMenu />}\n\t\t\t\t\t{name === 'omnichannel-directory' && <BackButton />}\n\t\t\t\t</TemplateHeader.ToolBox>\n\t\t\t),\n\t\t}),\n\t\t[isMobile, name, parentSlot],\n\t);\n\treturn (\n\t\t<ToolboxContext.Provider\n\t\t\tvalue={useMemo(\n\t\t\t\t() => ({\n\t\t\t\t\t...context,\n\t\t\t\t\tactions: new Map([...(Array.from(context.actions.entries()) as [string, ToolboxActionConfig][])]),\n\t\t\t\t}),\n\t\t\t\t[context],\n\t\t\t)}\n\t\t>\n\t\t\t<RoomHeader slots={slots} room={room} />\n\t\t</ToolboxContext.Provider>\n\t);\n};\n\nexport default VoipRoomHeader;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/Header/Omnichannel/VoipRoomHeader.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/Header/Omnichannel/VoipRoomHeader.tsx"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 0);\nlet BurgerMenu;\nmodule.link(\"../../../../components/BurgerMenu\", {\n  default(v) {\n    BurgerMenu = v;\n  }\n\n}, 1);\nlet TemplateHeader;\nmodule.link(\"../../../../components/Header\", {\n  default(v) {\n    TemplateHeader = v;\n  }\n\n}, 2);\nlet useLayout;\nmodule.link(\"../../../../contexts/LayoutContext\", {\n  useLayout(v) {\n    useLayout = v;\n  }\n\n}, 3);\nlet useCurrentRoute;\nmodule.link(\"../../../../contexts/RouterContext\", {\n  useCurrentRoute(v) {\n    useCurrentRoute = v;\n  }\n\n}, 4);\nlet ToolboxContext, useToolboxContext;\nmodule.link(\"../../lib/Toolbox/ToolboxContext\", {\n  ToolboxContext(v) {\n    ToolboxContext = v;\n  },\n\n  useToolboxContext(v) {\n    useToolboxContext = v;\n  }\n\n}, 5);\nlet RoomHeader;\nmodule.link(\"../RoomHeader\", {\n  default(v) {\n    RoomHeader = v;\n  }\n\n}, 6);\nlet BackButton;\nmodule.link(\"./BackButton\", {\n  BackButton(v) {\n    BackButton = v;\n  }\n\n}, 7);\n\nconst VoipRoomHeader = _ref => {\n  let {\n    slots: parentSlot,\n    room\n  } = _ref;\n  const [name] = useCurrentRoute();\n  const {\n    isMobile\n  } = useLayout();\n  const context = useToolboxContext();\n  const slots = useMemo(() => _objectSpread(_objectSpread({}, parentSlot), {}, {\n    start: (!!isMobile || name === 'omnichannel-directory') && /*#__PURE__*/React.createElement(TemplateHeader.ToolBox, null, isMobile && /*#__PURE__*/React.createElement(BurgerMenu, null), name === 'omnichannel-directory' && /*#__PURE__*/React.createElement(BackButton, null))\n  }), [isMobile, name, parentSlot]);\n  return /*#__PURE__*/React.createElement(ToolboxContext.Provider, {\n    value: useMemo(() => _objectSpread(_objectSpread({}, context), {}, {\n      actions: new Map([...Array.from(context.actions.entries())])\n    }), [context])\n  }, /*#__PURE__*/React.createElement(RoomHeader, {\n    slots: slots,\n    room: room\n  }));\n};\n\nmodule.exportDefault(VoipRoomHeader);","map":{"version":3,"sources":["client/views/room/Header/Omnichannel/VoipRoomHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { FC, useMemo } from 'react';\n\nimport BurgerMenu from '../../../../components/BurgerMenu';\nimport TemplateHeader from '../../../../components/Header';\nimport { useLayout } from '../../../../contexts/LayoutContext';\nimport { useCurrentRoute } from '../../../../contexts/RouterContext';\nimport { ToolboxActionConfig } from '../../lib/Toolbox';\nimport { ToolboxContext, useToolboxContext } from '../../lib/Toolbox/ToolboxContext';\nimport RoomHeader, { RoomHeaderProps } from '../RoomHeader';\nimport { BackButton } from './BackButton';\n\nconst VoipRoomHeader: FC<RoomHeaderProps> = ({ slots: parentSlot, room }) => {\n\tconst [name] = useCurrentRoute();\n\tconst { isMobile } = useLayout();\n\tconst context = useToolboxContext();\n\n\tconst slots = useMemo(\n\t\t() => ({\n\t\t\t...parentSlot,\n\t\t\tstart: (!!isMobile || name === 'omnichannel-directory') && (\n\t\t\t\t<TemplateHeader.ToolBox>\n\t\t\t\t\t{isMobile && <BurgerMenu />}\n\t\t\t\t\t{name === 'omnichannel-directory' && <BackButton />}\n\t\t\t\t</TemplateHeader.ToolBox>\n\t\t\t),\n\t\t}),\n\t\t[isMobile, name, parentSlot],\n\t);\n\treturn (\n\t\t<ToolboxContext.Provider\n\t\t\tvalue={useMemo(\n\t\t\t\t() => ({\n\t\t\t\t\t...context,\n\t\t\t\t\tactions: new Map([...(Array.from(context.actions.entries()) as [string, ToolboxActionConfig][])]),\n\t\t\t\t}),\n\t\t\t\t[context],\n\t\t\t)}\n\t\t>\n\t\t\t<RoomHeader slots={slots} room={room} />\n\t\t</ToolboxContext.Provider>\n\t);\n};\n\nexport default VoipRoomHeader;\n"],"sourceRoot":""},"sourceType":"module","hash":"4d64c7004c9b23fe27d21081ba95fee0564d3be1"}
