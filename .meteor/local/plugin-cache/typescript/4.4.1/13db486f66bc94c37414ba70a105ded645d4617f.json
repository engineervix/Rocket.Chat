{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx","inputSourceMap":{"version":3,"file":"client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx","sourceRoot":"","sources":["client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,KAAK,EAAE,EAAgB,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAIhE,OAAO,YAAY,MAAM,qCAAqC,CAAC;AAC/D,OAAO,EAAE,uBAAuB,EAAE,MAAM,2CAA2C,CAAC;AACpF,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AACzE,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAO9C,MAAM,iBAAiB,GAAG,CAAC,EAAE,SAAS,EAAE,OAAO,EAA0B,EAAgB,EAAE;IAC1F,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IAEvD,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,aAAa,CAC5C,iBAAiB,EACjB,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAC3C,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,KAAK,EAAE;YACV,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC;SACV;IACF,CAAC,EAAE,CAAC,KAAK,EAAE,oBAAoB,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;IAE9C,IAAI,KAAK,KAAK,eAAe,CAAC,OAAO,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;QACzD,OAAO,CACN,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CACvE;IAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EACxC;GAAA,EAAE,YAAY,CAAC,CACf,CAAC;KACF;IAED,OAAO,CACN,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CACvE;GAAA,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAC1C;GAAA,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CACvB,CAAC,cAAc,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAG,CACjD,CAAC,CACH;EAAA,EAAE,YAAY,CAAC,CACf,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import { Skeleton } from '@rocket.chat/fuselage';\nimport React, { ReactElement, useMemo, useEffect } from 'react';\n\nimport type { IMessage } from '../../../../../definition/IMessage/IMessage';\nimport type { ReadReceipt } from '../../../../../definition/ReadReceipt';\nimport GenericModal from '../../../../components/GenericModal';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { useMethodData } from '../../../../hooks/useMethodData';\nimport { AsyncStatePhase } from '../../../../lib/asyncState';\nimport ReadReceiptRow from './ReadReceiptRow';\n\ntype ReadReceiptsModalProps = {\n\tmessageId: IMessage['_id'];\n\tonClose: () => void;\n};\n\nconst ReadReceiptsModal = ({ messageId, onClose }: ReadReceiptsModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst { phase, value, error } = useMethodData<Array<ReadReceipt>>(\n\t\t'getReadReceipts',\n\t\tuseMemo(() => [{ messageId }], [messageId]),\n\t);\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\tonClose();\n\t\t}\n\t}, [error, dispatchToastMessage, t, onClose]);\n\n\tif (phase === AsyncStatePhase.LOADING || !value || error) {\n\t\treturn (\n\t\t\t<GenericModal title={t('Read_by')} onConfirm={onClose} onClose={onClose}>\n\t\t\t\t<Skeleton type='rect' w='full' h='x120' />\n\t\t\t</GenericModal>\n\t\t);\n\t}\n\n\treturn (\n\t\t<GenericModal title={t('Read_by')} onConfirm={onClose} onClose={onClose}>\n\t\t\t{value.length < 1 && t('No_results_found')}\n\t\t\t{value.map((receipt) => (\n\t\t\t\t<ReadReceiptRow {...receipt} key={receipt._id} />\n\t\t\t))}\n\t\t</GenericModal>\n\t);\n};\n\nexport default ReadReceiptsModal;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx"}},"code":"let _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\nlet Skeleton;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Skeleton(v) {\n    Skeleton = v;\n  }\n\n}, 0);\nlet React, useMemo, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  }\n\n}, 1);\nlet GenericModal;\nmodule.link(\"../../../../components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n\n}, 2);\nlet useToastMessageDispatch;\nmodule.link(\"../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 3);\nlet useTranslation;\nmodule.link(\"../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 4);\nlet useMethodData;\nmodule.link(\"../../../../hooks/useMethodData\", {\n  useMethodData(v) {\n    useMethodData = v;\n  }\n\n}, 5);\nlet AsyncStatePhase;\nmodule.link(\"../../../../lib/asyncState\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n\n}, 6);\nlet ReadReceiptRow;\nmodule.link(\"./ReadReceiptRow\", {\n  default(v) {\n    ReadReceiptRow = v;\n  }\n\n}, 7);\n\nconst ReadReceiptsModal = _ref => {\n  let {\n    messageId,\n    onClose\n  } = _ref;\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const {\n    phase,\n    value,\n    error\n  } = useMethodData('getReadReceipts', useMemo(() => [{\n    messageId\n  }], [messageId]));\n  useEffect(() => {\n    if (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n      onClose();\n    }\n  }, [error, dispatchToastMessage, t, onClose]);\n\n  if (phase === AsyncStatePhase.LOADING || !value || error) {\n    return /*#__PURE__*/React.createElement(GenericModal, {\n      title: t('Read_by'),\n      onConfirm: onClose,\n      onClose: onClose\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      type: \"rect\",\n      w: \"full\",\n      h: \"x120\"\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(GenericModal, {\n    title: t('Read_by'),\n    onConfirm: onClose,\n    onClose: onClose\n  }, value.length < 1 && t('No_results_found'), value.map(receipt => /*#__PURE__*/React.createElement(ReadReceiptRow, _extends({}, receipt, {\n    key: receipt._id\n  }))));\n};\n\nmodule.exportDefault(ReadReceiptsModal);","map":{"version":3,"sources":["client/views/room/modals/ReadReceiptsModal/ReadReceiptsModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Skeleton } from '@rocket.chat/fuselage';\nimport React, { ReactElement, useMemo, useEffect } from 'react';\n\nimport type { IMessage } from '../../../../../definition/IMessage/IMessage';\nimport type { ReadReceipt } from '../../../../../definition/ReadReceipt';\nimport GenericModal from '../../../../components/GenericModal';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { useMethodData } from '../../../../hooks/useMethodData';\nimport { AsyncStatePhase } from '../../../../lib/asyncState';\nimport ReadReceiptRow from './ReadReceiptRow';\n\ntype ReadReceiptsModalProps = {\n\tmessageId: IMessage['_id'];\n\tonClose: () => void;\n};\n\nconst ReadReceiptsModal = ({ messageId, onClose }: ReadReceiptsModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst { phase, value, error } = useMethodData<Array<ReadReceipt>>(\n\t\t'getReadReceipts',\n\t\tuseMemo(() => [{ messageId }], [messageId]),\n\t);\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\tonClose();\n\t\t}\n\t}, [error, dispatchToastMessage, t, onClose]);\n\n\tif (phase === AsyncStatePhase.LOADING || !value || error) {\n\t\treturn (\n\t\t\t<GenericModal title={t('Read_by')} onConfirm={onClose} onClose={onClose}>\n\t\t\t\t<Skeleton type='rect' w='full' h='x120' />\n\t\t\t</GenericModal>\n\t\t);\n\t}\n\n\treturn (\n\t\t<GenericModal title={t('Read_by')} onConfirm={onClose} onClose={onClose}>\n\t\t\t{value.length < 1 && t('No_results_found')}\n\t\t\t{value.map((receipt) => (\n\t\t\t\t<ReadReceiptRow {...receipt} key={receipt._id} />\n\t\t\t))}\n\t\t</GenericModal>\n\t);\n};\n\nexport default ReadReceiptsModal;\n"],"sourceRoot":""},"sourceType":"module","hash":"13db486f66bc94c37414ba70a105ded645d4617f"}
