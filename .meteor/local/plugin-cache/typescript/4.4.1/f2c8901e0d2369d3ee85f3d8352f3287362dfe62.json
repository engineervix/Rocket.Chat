{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webrtc/client/tabBar.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/webrtc/client/tabBar.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webrtc/client/tabBar.tsx","inputSourceMap":{"version":3,"file":"app/webrtc/client/tabBar.tsx","sourceRoot":"","sources":["app/webrtc/client/tabBar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAE7C,OAAO,EAAE,UAAU,EAAE,MAAM,0CAA0C,CAAC;AACtE,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,SAAS,CAAC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IACrC,MAAM,OAAO,GAAG,UAAU,CAAC,gBAAgB,CAAC,IAAI,UAAU,CAAC,2BAA2B,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;IAEtH,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,IAAmB,EAAE;QACzD,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;YACtF,MAAM,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAClE;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAEhC,OAAO,OAAO,CACb,GAAG,EAAE,CACJ,OAAO;QACN,CAAC,CAAC;YACA,MAAM,EAAE,CAAC,MAAM,CAAC;YAChB,EAAE,EAAE,aAAa;YACjB,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,WAAW;YACnB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,CAAC;SACP;QACH,CAAC,CAAC,IAAI,EACR,CAAC,OAAO,EAAE,WAAW,CAAC,CACtB,CAAC;AACH,CAAC,CAAC,CAAC","sourcesContent":["import { useMemo, useCallback } from 'react';\n\nimport { useSetting } from '../../../client/contexts/SettingsContext';\nimport { addAction } from '../../../client/views/room/lib/Toolbox';\nimport { APIClient } from '../../utils/client';\n\naddAction('webRTCVideo', ({ room }) => {\n\tconst enabled = useSetting('WebRTC_Enabled') && useSetting('Omnichannel_call_provider') === 'WebRTC' && room.servedBy;\n\n\tconst handleClick = useCallback(async (): Promise<void> => {\n\t\tif (!room.callStatus || room.callStatus === 'declined' || room.callStatus === 'ended') {\n\t\t\tawait APIClient.v1.get('livechat/webrtc.call', { rid: room._id });\n\t\t}\n\t\twindow.open(`/meet/${room._id}`, room._id);\n\t}, [room._id, room.callStatus]);\n\n\treturn useMemo(\n\t\t() =>\n\t\t\tenabled\n\t\t\t\t? {\n\t\t\t\t\t\tgroups: ['live'],\n\t\t\t\t\t\tid: 'webRTCVideo',\n\t\t\t\t\t\ttitle: 'WebRTC_Call',\n\t\t\t\t\t\ticon: 'phone',\n\t\t\t\t\t\taction: handleClick,\n\t\t\t\t\t\tfull: true,\n\t\t\t\t\t\torder: 4,\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t[enabled, handleClick],\n\t);\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webrtc/client/tabBar.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webrtc/client/tabBar.tsx"}},"code":"let useMemo, useCallback;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 0);\nlet useSetting;\nmodule.link(\"../../../client/contexts/SettingsContext\", {\n  useSetting(v) {\n    useSetting = v;\n  }\n\n}, 1);\nlet addAction;\nmodule.link(\"../../../client/views/room/lib/Toolbox\", {\n  addAction(v) {\n    addAction = v;\n  }\n\n}, 2);\nlet APIClient;\nmodule.link(\"../../utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 3);\naddAction('webRTCVideo', _ref => {\n  let {\n    room\n  } = _ref;\n  const enabled = useSetting('WebRTC_Enabled') && useSetting('Omnichannel_call_provider') === 'WebRTC' && room.servedBy;\n  const handleClick = useCallback(async () => {\n    if (!room.callStatus || room.callStatus === 'declined' || room.callStatus === 'ended') {\n      await APIClient.v1.get('livechat/webrtc.call', {\n        rid: room._id\n      });\n    }\n\n    window.open(\"/meet/\".concat(room._id), room._id);\n  }, [room._id, room.callStatus]);\n  return useMemo(() => enabled ? {\n    groups: ['live'],\n    id: 'webRTCVideo',\n    title: 'WebRTC_Call',\n    icon: 'phone',\n    action: handleClick,\n    full: true,\n    order: 4\n  } : null, [enabled, handleClick]);\n});","map":{"version":3,"sources":["app/webrtc/client/tabBar.tsx"],"names":[],"mappings":"AAAA,IAAA,OAAA,EAAS,WAAT;AAAkB,MAAW,CAAE,IAAb,CAAa,OAAb,EAA0B;AAAC,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAD;;AAAC,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAD,CAA1B,EAA2B,CAA3B;AAA2B,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAM7C,SAAS,CAAC,aAAD,EAAgB,QAAa;AAAA,MAAZ;AAAE,IAAA;AAAF,GAAY;AACrC,QAAM,OAAO,GAAG,UAAU,CAAC,gBAAD,CAAV,IAAgC,UAAU,CAAC,2BAAD,CAAV,KAA4C,QAA5E,IAAwF,IAAI,CAAC,QAA7G;AAEA,QAAM,WAAW,GAAG,WAAW,CAAC,YAA0B;AACzD,QAAI,CAAC,IAAI,CAAC,UAAN,IAAoB,IAAI,CAAC,UAAL,KAAoB,UAAxC,IAAsD,IAAI,CAAC,UAAL,KAAoB,OAA9E,EAAuF;AACtF,YAAM,SAAS,CAAC,EAAV,CAAa,GAAb,CAAiB,sBAAjB,EAAyC;AAAE,QAAA,GAAG,EAAE,IAAI,CAAC;AAAZ,OAAzC,CAAN;AACA;;AACD,IAAA,MAAM,CAAC,IAAP,iBAAqB,IAAI,CAAC,GAA1B,GAAiC,IAAI,CAAC,GAAtC;AACA,GAL8B,EAK5B,CAAC,IAAI,CAAC,GAAN,EAAW,IAAI,CAAC,UAAhB,CAL4B,CAA/B;AAOA,SAAO,OAAO,CACb,MACC,OAAO,GACJ;AACA,IAAA,MAAM,EAAE,CAAC,MAAD,CADR;AAEA,IAAA,EAAE,EAAE,aAFJ;AAGA,IAAA,KAAK,EAAE,aAHP;AAIA,IAAA,IAAI,EAAE,OAJN;AAKA,IAAA,MAAM,EAAE,WALR;AAMA,IAAA,IAAI,EAAE,IANN;AAOA,IAAA,KAAK,EAAE;AAPP,GADI,GAUJ,IAZS,EAab,CAAC,OAAD,EAAU,WAAV,CAba,CAAd;AAeA,CAzBQ,CAAT","sourcesContent":["import { useMemo, useCallback } from 'react';\n\nimport { useSetting } from '../../../client/contexts/SettingsContext';\nimport { addAction } from '../../../client/views/room/lib/Toolbox';\nimport { APIClient } from '../../utils/client';\n\naddAction('webRTCVideo', ({ room }) => {\n\tconst enabled = useSetting('WebRTC_Enabled') && useSetting('Omnichannel_call_provider') === 'WebRTC' && room.servedBy;\n\n\tconst handleClick = useCallback(async (): Promise<void> => {\n\t\tif (!room.callStatus || room.callStatus === 'declined' || room.callStatus === 'ended') {\n\t\t\tawait APIClient.v1.get('livechat/webrtc.call', { rid: room._id });\n\t\t}\n\t\twindow.open(`/meet/${room._id}`, room._id);\n\t}, [room._id, room.callStatus]);\n\n\treturn useMemo(\n\t\t() =>\n\t\t\tenabled\n\t\t\t\t? {\n\t\t\t\t\t\tgroups: ['live'],\n\t\t\t\t\t\tid: 'webRTCVideo',\n\t\t\t\t\t\ttitle: 'WebRTC_Call',\n\t\t\t\t\t\ticon: 'phone',\n\t\t\t\t\t\taction: handleClick,\n\t\t\t\t\t\tfull: true,\n\t\t\t\t\t\torder: 4,\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t[enabled, handleClick],\n\t);\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"f2c8901e0d2369d3ee85f3d8352f3287362dfe62"}
