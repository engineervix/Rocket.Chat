{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Code.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/Message/Body/Code.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Code.tsx","inputSourceMap":{"version":3,"file":"client/components/Message/Body/Code.tsx","sourceRoot":"","sources":["client/components/Message/Body/Code.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAM,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEvD,OAAO,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,mCAAmC,CAAC;AACnE,OAAO,QAAQ,MAAM,YAAY,CAAC;AAQlC,MAAM,YAAY,GAAG,CAAC,MAAW,EAAwB,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;AAE1E,MAAM,IAAI,GAAgB,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;IACtD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAA8D,GAAG,EAAE,CAClG,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAC1B,QAAQ,KAAK,CAAC,IAAI,EAAE;YACnB,KAAK,WAAW;gBACf,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAG,CAAC;YACrD;gBACC,OAAO,IAAI,CAAC;SACb;IACF,CAAC,CAAC,CACF,CAAC;IACF,SAAS,CAAC,GAAG,EAAE;QACd,CAAC,QAAQ,IAAI,QAAQ,KAAK,MAAM;YAC/B,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/E,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpF,CAAC,CAAC,CAAC;IACP,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IAEtB,OAAO,CACN,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,oBAAoB,QAAQ,EAAE,CAAC,CAC/C;GAAA,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CACzB;;IACA,CAAC,EAAE,CAAC,AAAD,EACJ;GAAA,EAAE,IAAI,CACN;GAAA,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC,IAAI,CAClG;GAAA,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CACzB;IAAA,CAAC,EAAE,CAAC,AAAD,EACH;;GACD,EAAE,IAAI,CACP;EAAA,EAAE,IAAI,CAAC,CACP,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC","sourcesContent":["import { Code as ASTCode } from '@rocket.chat/message-parser';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport hljs, { register } from '../../../../app/markdown/lib/hljs';\nimport CodeLine from './CodeLine';\n\ntype hljsResult = {\n\tlanguage: string;\n\tcode: string;\n\tvalue: string;\n};\n\nconst isHljsResult = (result: any): result is hljsResult => result?.value;\n\nconst Code: FC<ASTCode> = ({ value = [], language }) => {\n\tconst [code, setCode] = useState<(JSX.Element | null)[] | { language: string; code: string }>(() =>\n\t\tvalue.map((block, index) => {\n\t\t\tswitch (block.type) {\n\t\t\t\tcase 'CODE_LINE':\n\t\t\t\t\treturn <CodeLine key={index} value={block.value} />;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}),\n\t);\n\tuseEffect(() => {\n\t\t!language || language === 'none'\n\t\t\t? setCode(hljs.highlightAuto(value.map((line) => line.value.value).join('\\n')))\n\t\t\t: register(language).then(() => {\n\t\t\t\t\tsetCode(hljs.highlight(language, value.map((line) => line.value.value).join('\\n')));\n\t\t\t  });\n\t}, [language, value]);\n\n\treturn (\n\t\t<code className={`code-colors hljs ${language}`}>\n\t\t\t<span className='copyonly'>\n\t\t\t\t\\`\\`\\`\n\t\t\t\t<br />\n\t\t\t</span>\n\t\t\t{isHljsResult(code) ? <div dangerouslySetInnerHTML={{ __html: code.code || code.value }} /> : code}\n\t\t\t<span className='copyonly'>\n\t\t\t\t<br />\n\t\t\t\t\\`\\`\\`\n\t\t\t</span>\n\t\t</code>\n\t);\n};\n\nexport default Code;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Code.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Message/Body/Code.tsx"}},"code":"let React, useEffect, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 0);\nlet hljs, register;\nmodule.link(\"../../../../app/markdown/lib/hljs\", {\n  default(v) {\n    hljs = v;\n  },\n\n  register(v) {\n    register = v;\n  }\n\n}, 1);\nlet CodeLine;\nmodule.link(\"./CodeLine\", {\n  default(v) {\n    CodeLine = v;\n  }\n\n}, 2);\n\nconst isHljsResult = result => result === null || result === void 0 ? void 0 : result.value;\n\nconst Code = _ref => {\n  let {\n    value = [],\n    language\n  } = _ref;\n  const [code, setCode] = useState(() => value.map((block, index) => {\n    switch (block.type) {\n      case 'CODE_LINE':\n        return /*#__PURE__*/React.createElement(CodeLine, {\n          key: index,\n          value: block.value\n        });\n\n      default:\n        return null;\n    }\n  }));\n  useEffect(() => {\n    !language || language === 'none' ? setCode(hljs.highlightAuto(value.map(line => line.value.value).join('\\n'))) : register(language).then(() => {\n      setCode(hljs.highlight(language, value.map(line => line.value.value).join('\\n')));\n    });\n  }, [language, value]);\n  return /*#__PURE__*/React.createElement(\"code\", {\n    className: \"code-colors hljs \".concat(language)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"copyonly\"\n  }, \"\\\\`\\\\`\\\\`\", /*#__PURE__*/React.createElement(\"br\", null)), isHljsResult(code) ? /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: code.code || code.value\n    }\n  }) : code, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"copyonly\"\n  }, /*#__PURE__*/React.createElement(\"br\", null), \"\\\\`\\\\`\\\\`\"));\n};\n\nmodule.exportDefault(Code);","map":{"version":3,"sources":["client/components/Message/Body/Code.tsx"],"names":[],"mappings":"AACA,IAAA,KAAA,EAAO,SAAP,EAAoB,QAApB;AAA+B,MAAQ,CAAA,IAAR,CAAU,OAAV,EAAgB;AAAO,EAAA,OAAC,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAR;;AAAQ,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA,GAAR;;AAAQ,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAR,CAAhB,EAAwB,CAAxB;AAAwB,IAAA,IAAA,EAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAWvD,MAAM,YAAY,GAAI,MAAD,IAAuC,MAAvC,aAAuC,MAAvC,uBAAuC,MAAM,CAAE,KAApE;;AAEA,MAAM,IAAI,GAAgB,QAA6B;AAAA,MAA5B;AAAE,IAAA,KAAK,GAAG,EAAV;AAAc,IAAA;AAAd,GAA4B;AACtD,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAA8D,MAC7F,KAAK,CAAC,GAAN,CAAU,CAAC,KAAD,EAAQ,KAAR,KAAiB;AAC1B,YAAQ,KAAK,CAAC,IAAd;AACC,WAAK,WAAL;AACC,4BAAO,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAE,KAAf;AAAsB,UAAA,KAAK,EAAE,KAAK,CAAC;AAAnC,UAAP;;AACD;AACC,eAAO,IAAP;AAJF;AAMA,GAPD,CAD+B,CAAhC;AAUA,EAAA,SAAS,CAAC,MAAK;AACd,KAAC,QAAD,IAAa,QAAQ,KAAK,MAA1B,GACG,OAAO,CAAC,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,GAAN,CAAW,IAAD,IAAU,IAAI,CAAC,KAAL,CAAW,KAA/B,EAAsC,IAAtC,CAA2C,IAA3C,CAAnB,CAAD,CADV,GAEG,QAAQ,CAAC,QAAD,CAAR,CAAmB,IAAnB,CAAwB,MAAK;AAC7B,MAAA,OAAO,CAAC,IAAI,CAAC,SAAL,CAAe,QAAf,EAAyB,KAAK,CAAC,GAAN,CAAW,IAAD,IAAU,IAAI,CAAC,KAAL,CAAW,KAA/B,EAAsC,IAAtC,CAA2C,IAA3C,CAAzB,CAAD,CAAP;AACC,KAFD,CAFH;AAKA,GANQ,EAMN,CAAC,QAAD,EAAW,KAAX,CANM,CAAT;AAQA,sBACC;AAAM,IAAA,SAAS,6BAAsB,QAAtB;AAAf,kBACC;AAAM,IAAA,SAAS,EAAC;AAAhB,+BAEC,+BAFD,CADD,EAKE,YAAY,CAAC,IAAD,CAAZ,gBAAqB;AAAK,IAAA,uBAAuB,EAAE;AAAE,MAAA,MAAM,EAAE,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC;AAA5B;AAA9B,IAArB,GAA6F,IAL/F,eAMC;AAAM,IAAA,SAAS,EAAC;AAAhB,kBACC,+BADD,cAND,CADD;AAaA,CAhCD;;AAbA,MAAA,CAAO,aAAP,CA+Ce,IA/Cf","sourcesContent":["import { Code as ASTCode } from '@rocket.chat/message-parser';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport hljs, { register } from '../../../../app/markdown/lib/hljs';\nimport CodeLine from './CodeLine';\n\ntype hljsResult = {\n\tlanguage: string;\n\tcode: string;\n\tvalue: string;\n};\n\nconst isHljsResult = (result: any): result is hljsResult => result?.value;\n\nconst Code: FC<ASTCode> = ({ value = [], language }) => {\n\tconst [code, setCode] = useState<(JSX.Element | null)[] | { language: string; code: string }>(() =>\n\t\tvalue.map((block, index) => {\n\t\t\tswitch (block.type) {\n\t\t\t\tcase 'CODE_LINE':\n\t\t\t\t\treturn <CodeLine key={index} value={block.value} />;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}),\n\t);\n\tuseEffect(() => {\n\t\t!language || language === 'none'\n\t\t\t? setCode(hljs.highlightAuto(value.map((line) => line.value.value).join('\\n')))\n\t\t\t: register(language).then(() => {\n\t\t\t\t\tsetCode(hljs.highlight(language, value.map((line) => line.value.value).join('\\n')));\n\t\t\t  });\n\t}, [language, value]);\n\n\treturn (\n\t\t<code className={`code-colors hljs ${language}`}>\n\t\t\t<span className='copyonly'>\n\t\t\t\t\\`\\`\\`\n\t\t\t\t<br />\n\t\t\t</span>\n\t\t\t{isHljsResult(code) ? <div dangerouslySetInnerHTML={{ __html: code.code || code.value }} /> : code}\n\t\t\t<span className='copyonly'>\n\t\t\t\t<br />\n\t\t\t\t\\`\\`\\`\n\t\t\t</span>\n\t\t</code>\n\t);\n};\n\nexport default Code;\n"],"sourceRoot":""},"sourceType":"module","hash":"01b24bd8d352f5313dddef722cf8ef855aa505eb"}
