{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/lib/callbacks.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"lib/callbacks.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/lib/callbacks.ts","inputSourceMap":{"version":3,"file":"lib/callbacks.ts","sourceRoot":"","sources":["lib/callbacks.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { FilterQuery } from 'mongodb';\n\nimport type { IBusinessHourBehavior } from '../app/livechat/server/business-hour/AbstractBusinessHour';\nimport type { Logger } from '../app/logger/server';\nimport type { IMessage } from '../definition/IMessage';\nimport type { IRoom } from '../definition/IRoom';\nimport type { IUser } from '../definition/IUser';\nimport type { ILivechatDepartmentRecord } from '../definition/ILivechatDepartmentRecord';\nimport type { ILivechatAgent } from '../definition/ILivechatAgent';\nimport type { OmnichannelAgentStatus } from '../definition/IOmnichannelAgent';\nimport type { ILivechatInquiryRecord } from '../definition/IInquiry';\nimport type { ILivechatVisitor } from '../definition/ILivechatVisitor';\nimport { getRandomId } from './random';\n\nenum CallbackPriority {\n\tHIGH = -1000,\n\tMEDIUM = 0,\n\tLOW = 1000,\n}\n\n/**\n * Callbacks returning void, like event listeners.\n *\n * TODO: move those to event-based systems\n */\ntype EventLikeCallbackSignatures = {\n\t'afterActivateUser': (user: IUser) => void;\n\t'afterCreateChannel': (owner: IUser, room: IRoom) => void;\n\t'afterCreatePrivateGroup': (owner: IUser, room: IRoom) => void;\n\t'afterDeactivateUser': (user: IUser) => void;\n\t'afterDeleteMessage': (message: IMessage, room: IRoom) => void;\n\t'validateUserRoles': (userData: Partial<IUser>) => void;\n\t'workspaceLicenseChanged': (license: string) => void;\n\t'afterReadMessages': (rid: IRoom['_id'], params: { uid: IUser['_id']; lastSeen: Date }) => void;\n\t'beforeReadMessages': (rid: IRoom['_id'], uid: IUser['_id']) => void;\n\t'afterDeleteUser': (user: IUser) => void;\n\t'afterFileUpload': (params: { user: IUser; room: IRoom; message: IMessage }) => void;\n\t'afterSaveMessage': (message: IMessage, room: IRoom, uid: string) => void;\n\t'livechat.removeAgentDepartment': (params: { departmentId: ILivechatDepartmentRecord['_id']; agentsId: ILivechatAgent['_id'][] }) => void;\n\t'livechat.saveAgentDepartment': (params: { departmentId: ILivechatDepartmentRecord['_id']; agentsId: ILivechatAgent['_id'][] }) => void;\n\t'livechat.closeRoom': (room: IRoom) => void;\n\t'livechat.saveRoom': (room: IRoom) => void;\n\t'livechat:afterReturnRoomAsInquiry': (params: { room: IRoom }) => void;\n\t'livechat.setUserStatusLivechat': (params: { userId: IUser['_id']; status: OmnichannelAgentStatus }) => void;\n\t'livechat.agentStatusChanged': (params: { userId: IUser['_id']; status: OmnichannelAgentStatus }) => void;\n\t'livechat.afterTakeInquiry': (inq: ILivechatInquiryRecord, agent: ILivechatAgent) => void;\n\t'afterAddedToRoom': (params: { user: IUser; inviter: IUser }) => void;\n\t'beforeAddedToRoom': (params: { user: IUser; inviter: IUser }) => void;\n\t'afterCreateDirectRoom': (params: IRoom, second: { members: IUser[] }) => void;\n\t'beforeDeleteRoom': (params: IRoom) => void;\n\t'beforeJoinDefaultChannels': (user: IUser) => void;\n\t'beforeCreateChannel': (owner: IUser, room: IRoom) => void;\n\t'afterCreateRoom': (owner: IUser, room: IRoom) => void;\n};\n\n/**\n * Callbacks that are supposed to be composed like a chain.\n *\n * TODO: develop a middleware alternative and grant independence of execution order\n */\ntype ChainedCallbackSignatures = {\n\t'afterCreateUser': (user: IUser) => IUser;\n\t'afterDeleteRoom': (rid: IRoom['_id']) => IRoom['_id'];\n\t'livechat:afterOnHold': (room: IRoom) => IRoom;\n\t'livechat:afterOnHoldChatResumed': (room: IRoom) => IRoom;\n\t'livechat:onTransferFailure': (params: { room: IRoom; guest: ILivechatVisitor; transferData: { [k: string]: string | any } }) => {\n\t\troom: IRoom;\n\t\tguest: ILivechatVisitor;\n\t\ttransferData: { [k: string]: string | any };\n\t};\n\t'livechat.afterForwardChatToAgent': (params: { rid: IRoom['_id']; servedBy: unknown; oldServedBy: unknown }) => {\n\t\trid: IRoom['_id'];\n\t\tservedBy: unknown;\n\t\toldServedBy: unknown;\n\t};\n\t'livechat.afterForwardChatToDepartment': (params: {\n\t\trid: IRoom['_id'];\n\t\tnewDepartmentId: ILivechatDepartmentRecord['_id'];\n\t\toldDepartmentId: ILivechatDepartmentRecord['_id'];\n\t}) => {\n\t\trid: IRoom['_id'];\n\t\tnewDepartmentId: ILivechatDepartmentRecord['_id'];\n\t\toldDepartmentId: ILivechatDepartmentRecord['_id'];\n\t};\n\t'livechat.afterInquiryQueued': (inquiry: ILivechatInquiryRecord) => ILivechatInquiryRecord;\n\t'livechat.afterRemoveDepartment': (params: { departmentId: ILivechatDepartmentRecord['_id']; agentsId: ILivechatAgent['_id'][] }) => {\n\t\tdepartmentId: ILivechatDepartmentRecord['_id'];\n\t\tagentsId: ILivechatAgent['_id'][];\n\t};\n\t'livechat.applySimultaneousChatRestrictions': (_: undefined, params: { departmentId?: ILivechatDepartmentRecord['_id'] }) => undefined;\n\t'livechat.beforeCloseRoom': (params: { room: IRoom; options: unknown }) => { room: IRoom; options: unknown };\n\t'livechat.beforeDelegateAgent': (agent: ILivechatAgent, params: { department?: ILivechatDepartmentRecord }) => ILivechatAgent;\n\t'livechat.applyDepartmentRestrictions': (\n\t\tquery: FilterQuery<ILivechatDepartmentRecord>,\n\t\tparams: { userId: IUser['_id'] },\n\t) => FilterQuery<ILivechatDepartmentRecord>;\n\t'livechat.onMaxNumberSimultaneousChatsReached': (inquiry: ILivechatInquiryRecord) => ILivechatInquiryRecord;\n\t'on-business-hour-start': (params: { BusinessHourBehaviorClass: { new (): IBusinessHourBehavior } }) => {\n\t\tBusinessHourBehaviorClass: { new (): IBusinessHourBehavior };\n\t};\n};\n\ntype Hook =\n\t| keyof EventLikeCallbackSignatures\n\t| keyof ChainedCallbackSignatures\n\t| 'afterJoinRoom'\n\t| 'afterLeaveRoom'\n\t| 'afterLogoutCleanUp'\n\t| 'afterProcessOAuthUser'\n\t| 'afterRemoveFromRoom'\n\t| 'afterRoomArchived'\n\t| 'afterRoomNameChange'\n\t| 'afterSaveUser'\n\t| 'afterValidateLogin'\n\t| 'afterValidateNewOAuthUser'\n\t| 'archiveRoom'\n\t| 'beforeActivateUser'\n\t| 'beforeCreateRoom'\n\t| 'beforeCreateUser'\n\t| 'beforeGetMentions'\n\t| 'beforeJoinRoom'\n\t| 'beforeLeaveRoom'\n\t| 'beforeReadMessages'\n\t| 'beforeRemoveFromRoom'\n\t| 'beforeSaveMessage'\n\t| 'beforeSendMessageNotifications'\n\t| 'beforeValidateLogin'\n\t| 'cachedCollection-loadFromServer-rooms'\n\t| 'cachedCollection-loadFromServer-subscriptions'\n\t| 'cachedCollection-received-rooms'\n\t| 'cachedCollection-received-subscriptions'\n\t| 'cachedCollection-sync-rooms'\n\t| 'cachedCollection-sync-subscriptions'\n\t| 'enter-room'\n\t| 'livechat.beforeForwardRoomToDepartment'\n\t| 'livechat.beforeInquiry'\n\t| 'livechat.beforeListTags'\n\t| 'livechat.beforeRoom'\n\t| 'livechat.beforeRouteChat'\n\t| 'livechat.chatQueued'\n\t| 'livechat.checkAgentBeforeTakeInquiry'\n\t| 'livechat.checkDefaultAgentOnNewRoom'\n\t| 'livechat.closeRoom'\n\t| 'livechat.leadCapture'\n\t| 'livechat.newRoom'\n\t| 'livechat.offlineMessage'\n\t| 'livechat.onAgentAssignmentFailed'\n\t| 'livechat.onCheckRoomApiParams'\n\t| 'livechat.onLoadConfigApi'\n\t| 'livechat.onLoadForwardDepartmentRestrictions'\n\t| 'livechat.saveInfo'\n\t| 'loginPageStateChange'\n\t| 'mapLDAPUserData'\n\t| 'oembed:afterParseContent'\n\t| 'oembed:beforeGetUrlContent'\n\t| 'onCreateUser'\n\t| 'onLDAPLogin'\n\t| 'onValidateLogin'\n\t| 'openBroadcast'\n\t| 'renderMessage'\n\t| 'renderNotification'\n\t| 'roomAnnouncementChanged'\n\t| 'roomAvatarChanged'\n\t| 'roomNameChanged'\n\t| 'roomTopicChanged'\n\t| 'roomTypeChanged'\n\t| 'setReaction'\n\t| 'streamMessage'\n\t| 'streamNewMessage'\n\t| 'unarchiveRoom'\n\t| 'unsetReaction'\n\t| 'userAvatarSet'\n\t| 'userConfirmationEmailRequested'\n\t| 'userForgotPasswordEmailRequested'\n\t| 'usernameSet'\n\t| 'userPasswordReset'\n\t| 'userRegistered'\n\t| 'userStatusManuallySet';\n\ntype Callback = {\n\t(item: unknown, constant?: unknown): unknown;\n\thook: Hook;\n\tid: string;\n\tpriority: CallbackPriority;\n\tstack: string;\n};\n\ntype CallbackTracker = (callback: Callback) => () => void;\n\ntype HookTracker = (params: { hook: Hook; length: number }) => () => void;\n\nclass Callbacks {\n\tprivate logger: Logger | undefined = undefined;\n\n\tprivate trackCallback: CallbackTracker | undefined = undefined;\n\n\tprivate trackHook: HookTracker | undefined = undefined;\n\n\tprivate callbacks = new Map<Hook, Callback[]>();\n\n\tprivate sequentialRunners = new Map<Hook, (item: unknown, constant?: unknown) => unknown>();\n\n\tprivate asyncRunners = new Map<Hook, (item: unknown, constant?: unknown) => unknown>();\n\n\treadonly priority = CallbackPriority;\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tsetMetricsTrackers({ trackCallback, trackHook }: { trackCallback?: CallbackTracker; trackHook?: HookTracker }): void {\n\t\tthis.trackCallback = trackCallback;\n\t\tthis.trackHook = trackHook;\n\t}\n\n\tprivate runOne(callback: Callback, item: unknown, constant: unknown): unknown {\n\t\tconst stopTracking = this.trackCallback?.(callback);\n\n\t\ttry {\n\t\t\treturn callback(item, constant);\n\t\t} finally {\n\t\t\tstopTracking?.();\n\t\t}\n\t}\n\n\tprivate createSequentialRunner(hook: Hook, callbacks: Callback[]): (item: unknown, constant?: unknown) => unknown {\n\t\tconst wrapCallback =\n\t\t\t(callback: Callback) =>\n\t\t\t(item: unknown, constant?: unknown): unknown => {\n\t\t\t\tthis.logger?.debug(`Executing callback with id ${callback.id} for hook ${callback.hook}`);\n\n\t\t\t\treturn this.runOne(callback, item, constant) ?? item;\n\t\t\t};\n\n\t\tconst identity = <TItem>(item: TItem): TItem => item;\n\n\t\tconst pipe =\n\t\t\t(curr: (item: unknown, constant?: unknown) => unknown, next: (item: unknown, constant?: unknown) => unknown) =>\n\t\t\t(item: unknown, constant?: unknown): unknown =>\n\t\t\t\tnext(curr(item, constant), constant);\n\n\t\tconst fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tconst stopTracking = this.trackHook?.({ hook, length: callbacks.length });\n\n\t\t\ttry {\n\t\t\t\treturn fn(item, constant);\n\t\t\t} finally {\n\t\t\t\tstopTracking?.();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate createAsyncRunner(_: Hook, callbacks: Callback[]) {\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tthrow new Error('callbacks.runAsync on client server not allowed');\n\t\t\t}\n\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tMeteor.defer(() => {\n\t\t\t\t\tthis.runOne(callback, item, constant);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn item;\n\t\t};\n\t}\n\n\tgetCallbacks(hook: Hook): Callback[] {\n\t\treturn this.callbacks.get(hook) ?? [];\n\t}\n\n\tsetCallbacks(hook: Hook, callbacks: Callback[]): void {\n\t\tthis.callbacks.set(hook, callbacks);\n\t\tthis.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n\t\tthis.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n\t}\n\n\t/**\n\t * Add a callback function to a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param callback the callback function\n\t * @param priority the callback run priority (order)\n\t * @param id human friendly name for this callback\n\t */\n\tadd<THook extends keyof EventLikeCallbackSignatures>(\n\t\thook: THook,\n\t\tcallback: EventLikeCallbackSignatures[THook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<THook extends keyof ChainedCallbackSignatures>(\n\t\thook: THook,\n\t\tcallback: ChainedCallbackSignatures[THook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<TItem, TConstant, TNextItem = TItem>(\n\t\thook: Hook,\n\t\tcallback: (item: TItem, constant?: TConstant) => TNextItem,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd(hook: Hook, callback: (item: unknown, constant?: unknown) => unknown, priority = this.priority.MEDIUM, id = getRandomId()): void {\n\t\tconst callbacks = this.getCallbacks(hook);\n\n\t\tif (callbacks.some((cb) => cb.id === id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(\n\t\t\tObject.assign(callback as Callback, {\n\t\t\t\thook,\n\t\t\t\tpriority,\n\t\t\t\tid,\n\t\t\t\tstack: new Error().stack,\n\t\t\t}),\n\t\t);\n\t\tconst rank = (callback: Callback): number => callback.priority ?? this.priority.MEDIUM;\n\t\tcallbacks.sort((a, b) => rank(a) - rank(b));\n\n\t\tthis.setCallbacks(hook, callbacks);\n\t}\n\n\t/**\n\t * Remove a callback from a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param id the callback's id\n\t */\n\tremove(hook: Hook, id: string): void {\n\t\tconst hooks = this.getCallbacks(hook).filter((callback) => callback.id !== id);\n\t\tthis.setCallbacks(hook, hooks);\n\t}\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns returns the item after it's been through all the callbacks for this hook\n\t */\n\trun<THook extends keyof EventLikeCallbackSignatures>(hook: THook, ...args: Parameters<EventLikeCallbackSignatures[THook]>): void;\n\n\trun<THook extends keyof ChainedCallbackSignatures>(\n\t\thook: THook,\n\t\t...args: Parameters<ChainedCallbackSignatures[THook]>\n\t): ReturnType<ChainedCallbackSignatures[THook]>;\n\n\trun<TItem, TConstant, TNextItem = TItem>(hook: Hook, item: TItem, constant?: TConstant): TNextItem;\n\n\trun(hook: Hook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.sequentialRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item, in async mode (only works on server)\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns the post, comment, modifier, etc. on which to run the callbacks\n\t */\n\trunAsync<THook extends keyof EventLikeCallbackSignatures>(hook: THook, ...args: Parameters<EventLikeCallbackSignatures[THook]>): void;\n\n\trunAsync(hook: Hook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.asyncRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n}\n\n/**\n * Callback hooks provide an easy way to add extra steps to common operations.\n * @deprecated\n */\nexport const callbacks = new Callbacks();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/lib/callbacks.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/callbacks.ts"}},"code":"var _createForOfIteratorHelperLoose;\n\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 0);\nmodule.export({\n  callbacks: function () {\n    return callbacks;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar getRandomId;\nmodule.link(\"./random\", {\n  getRandomId: function (v) {\n    getRandomId = v;\n  }\n}, 1);\nvar CallbackPriority;\n\n(function (CallbackPriority) {\n  CallbackPriority[CallbackPriority[\"HIGH\"] = -1000] = \"HIGH\";\n  CallbackPriority[CallbackPriority[\"MEDIUM\"] = 0] = \"MEDIUM\";\n  CallbackPriority[CallbackPriority[\"LOW\"] = 1000] = \"LOW\";\n})(CallbackPriority || (CallbackPriority = {}));\n\nvar Callbacks = /*#__PURE__*/function () {\n  function Callbacks() {\n    this.logger = undefined;\n    this.trackCallback = undefined;\n    this.trackHook = undefined;\n    this.callbacks = new Map();\n    this.sequentialRunners = new Map();\n    this.asyncRunners = new Map();\n    this.priority = CallbackPriority;\n  }\n\n  var _proto = Callbacks.prototype;\n\n  _proto.setLogger = function () {\n    function setLogger(logger) {\n      this.logger = logger;\n    }\n\n    return setLogger;\n  }();\n\n  _proto.setMetricsTrackers = function () {\n    function setMetricsTrackers(_ref) {\n      var trackCallback = _ref.trackCallback,\n          trackHook = _ref.trackHook;\n      this.trackCallback = trackCallback;\n      this.trackHook = trackHook;\n    }\n\n    return setMetricsTrackers;\n  }();\n\n  _proto.runOne = function () {\n    function runOne(callback, item, constant) {\n      var _this$trackCallback;\n\n      var stopTracking = (_this$trackCallback = this.trackCallback) === null || _this$trackCallback === void 0 ? void 0 : _this$trackCallback.call(this, callback);\n\n      try {\n        return callback(item, constant);\n      } finally {\n        stopTracking === null || stopTracking === void 0 ? void 0 : stopTracking();\n      }\n    }\n\n    return runOne;\n  }();\n\n  _proto.createSequentialRunner = function () {\n    function createSequentialRunner(hook, callbacks) {\n      var _this = this;\n\n      var wrapCallback = function (callback) {\n        return function (item, constant) {\n          var _this$logger, _this$runOne;\n\n          (_this$logger = _this.logger) === null || _this$logger === void 0 ? void 0 : _this$logger.debug(\"Executing callback with id \" + callback.id + \" for hook \" + callback.hook);\n          return (_this$runOne = _this.runOne(callback, item, constant)) !== null && _this$runOne !== void 0 ? _this$runOne : item;\n        };\n      };\n\n      var identity = function (item) {\n        return item;\n      };\n\n      var pipe = function (curr, next) {\n        return function (item, constant) {\n          return next(curr(item, constant), constant);\n        };\n      };\n\n      var fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n      return function (item, constant) {\n        var _this$trackHook;\n\n        var stopTracking = (_this$trackHook = _this.trackHook) === null || _this$trackHook === void 0 ? void 0 : _this$trackHook.call(_this, {\n          hook: hook,\n          length: callbacks.length\n        });\n\n        try {\n          return fn(item, constant);\n        } finally {\n          stopTracking === null || stopTracking === void 0 ? void 0 : stopTracking();\n        }\n      };\n    }\n\n    return createSequentialRunner;\n  }();\n\n  _proto.createAsyncRunner = function () {\n    function createAsyncRunner(_, callbacks) {\n      var _this2 = this;\n\n      return function (item, constant) {\n        if (typeof window !== 'undefined') {\n          throw new Error('callbacks.runAsync on client server not allowed');\n        }\n\n        var _loop = function (callback) {\n          Meteor.defer(function () {\n            _this2.runOne(callback, item, constant);\n          });\n        };\n\n        for (var _iterator = _createForOfIteratorHelperLoose(callbacks), _step; !(_step = _iterator()).done;) {\n          var callback = _step.value;\n\n          _loop(callback);\n        }\n\n        return item;\n      };\n    }\n\n    return createAsyncRunner;\n  }();\n\n  _proto.getCallbacks = function () {\n    function getCallbacks(hook) {\n      var _this$callbacks$get;\n\n      return (_this$callbacks$get = this.callbacks.get(hook)) !== null && _this$callbacks$get !== void 0 ? _this$callbacks$get : [];\n    }\n\n    return getCallbacks;\n  }();\n\n  _proto.setCallbacks = function () {\n    function setCallbacks(hook, callbacks) {\n      this.callbacks.set(hook, callbacks);\n      this.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n      this.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n    }\n\n    return setCallbacks;\n  }();\n\n  _proto.add = function () {\n    function add(hook, callback) {\n      var _this3 = this;\n\n      var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.priority.MEDIUM;\n      var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : getRandomId();\n      var callbacks = this.getCallbacks(hook);\n\n      if (callbacks.some(function (cb) {\n        return cb.id === id;\n      })) {\n        return;\n      }\n\n      callbacks.push(Object.assign(callback, {\n        hook: hook,\n        priority: priority,\n        id: id,\n        stack: new Error().stack\n      }));\n\n      var rank = function (callback) {\n        var _callback$priority;\n\n        return (_callback$priority = callback.priority) !== null && _callback$priority !== void 0 ? _callback$priority : _this3.priority.MEDIUM;\n      };\n\n      callbacks.sort(function (a, b) {\n        return rank(a) - rank(b);\n      });\n      this.setCallbacks(hook, callbacks);\n    }\n\n    return add;\n  }()\n  /**\n   * Remove a callback from a hook\n   *\n   * @param hook the name of the hook\n   * @param id the callback's id\n   */\n  ;\n\n  _proto.remove = function () {\n    function remove(hook, id) {\n      var hooks = this.getCallbacks(hook).filter(function (callback) {\n        return callback.id !== id;\n      });\n      this.setCallbacks(hook, hooks);\n    }\n\n    return remove;\n  }();\n\n  _proto.run = function () {\n    function run(hook, item, constant) {\n      var _this$sequentialRunne;\n\n      var runner = (_this$sequentialRunne = this.sequentialRunners.get(hook)) !== null && _this$sequentialRunne !== void 0 ? _this$sequentialRunne : function (item, _constant) {\n        return item;\n      };\n      return runner(item, constant);\n    }\n\n    return run;\n  }();\n\n  _proto.runAsync = function () {\n    function runAsync(hook, item, constant) {\n      var _this$asyncRunners$ge;\n\n      var runner = (_this$asyncRunners$ge = this.asyncRunners.get(hook)) !== null && _this$asyncRunners$ge !== void 0 ? _this$asyncRunners$ge : function (item, _constant) {\n        return item;\n      };\n      return runner(item, constant);\n    }\n\n    return runAsync;\n  }();\n\n  return Callbacks;\n}();\n/**\n * Callback hooks provide an easy way to add extra steps to common operations.\n * @deprecated\n */\n\n\nvar callbacks = new Callbacks();","map":{"version":3,"sources":["lib/callbacks.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { FilterQuery } from 'mongodb';\n\nimport type { IBusinessHourBehavior } from '../app/livechat/server/business-hour/AbstractBusinessHour';\nimport type { Logger } from '../app/logger/server';\nimport type { IMessage } from '../definition/IMessage';\nimport type { IRoom } from '../definition/IRoom';\nimport type { IUser } from '../definition/IUser';\nimport type { ILivechatDepartmentRecord } from '../definition/ILivechatDepartmentRecord';\nimport type { ILivechatAgent } from '../definition/ILivechatAgent';\nimport type { OmnichannelAgentStatus } from '../definition/IOmnichannelAgent';\nimport type { ILivechatInquiryRecord } from '../definition/IInquiry';\nimport type { ILivechatVisitor } from '../definition/ILivechatVisitor';\nimport { getRandomId } from './random';\n\nenum CallbackPriority {\n\tHIGH = -1000,\n\tMEDIUM = 0,\n\tLOW = 1000,\n}\n\n/**\n * Callbacks returning void, like event listeners.\n *\n * TODO: move those to event-based systems\n */\ntype EventLikeCallbackSignatures = {\n\t'afterActivateUser': (user: IUser) => void;\n\t'afterCreateChannel': (owner: IUser, room: IRoom) => void;\n\t'afterCreatePrivateGroup': (owner: IUser, room: IRoom) => void;\n\t'afterDeactivateUser': (user: IUser) => void;\n\t'afterDeleteMessage': (message: IMessage, room: IRoom) => void;\n\t'validateUserRoles': (userData: Partial<IUser>) => void;\n\t'workspaceLicenseChanged': (license: string) => void;\n\t'afterReadMessages': (rid: IRoom['_id'], params: { uid: IUser['_id']; lastSeen: Date }) => void;\n\t'beforeReadMessages': (rid: IRoom['_id'], uid: IUser['_id']) => void;\n\t'afterDeleteUser': (user: IUser) => void;\n\t'afterFileUpload': (params: { user: IUser; room: IRoom; message: IMessage }) => void;\n\t'afterSaveMessage': (message: IMessage, room: IRoom, uid: string) => void;\n\t'livechat.removeAgentDepartment': (params: { departmentId: ILivechatDepartmentRecord['_id']; agentsId: ILivechatAgent['_id'][] }) => void;\n\t'livechat.saveAgentDepartment': (params: { departmentId: ILivechatDepartmentRecord['_id']; agentsId: ILivechatAgent['_id'][] }) => void;\n\t'livechat.closeRoom': (room: IRoom) => void;\n\t'livechat.saveRoom': (room: IRoom) => void;\n\t'livechat:afterReturnRoomAsInquiry': (params: { room: IRoom }) => void;\n\t'livechat.setUserStatusLivechat': (params: { userId: IUser['_id']; status: OmnichannelAgentStatus }) => void;\n\t'livechat.agentStatusChanged': (params: { userId: IUser['_id']; status: OmnichannelAgentStatus }) => void;\n\t'livechat.afterTakeInquiry': (inq: ILivechatInquiryRecord, agent: ILivechatAgent) => void;\n\t'afterAddedToRoom': (params: { user: IUser; inviter: IUser }) => void;\n\t'beforeAddedToRoom': (params: { user: IUser; inviter: IUser }) => void;\n\t'afterCreateDirectRoom': (params: IRoom, second: { members: IUser[] }) => void;\n\t'beforeDeleteRoom': (params: IRoom) => void;\n\t'beforeJoinDefaultChannels': (user: IUser) => void;\n\t'beforeCreateChannel': (owner: IUser, room: IRoom) => void;\n\t'afterCreateRoom': (owner: IUser, room: IRoom) => void;\n};\n\n/**\n * Callbacks that are supposed to be composed like a chain.\n *\n * TODO: develop a middleware alternative and grant independence of execution order\n */\ntype ChainedCallbackSignatures = {\n\t'afterCreateUser': (user: IUser) => IUser;\n\t'afterDeleteRoom': (rid: IRoom['_id']) => IRoom['_id'];\n\t'livechat:afterOnHold': (room: IRoom) => IRoom;\n\t'livechat:afterOnHoldChatResumed': (room: IRoom) => IRoom;\n\t'livechat:onTransferFailure': (params: { room: IRoom; guest: ILivechatVisitor; transferData: { [k: string]: string | any } }) => {\n\t\troom: IRoom;\n\t\tguest: ILivechatVisitor;\n\t\ttransferData: { [k: string]: string | any };\n\t};\n\t'livechat.afterForwardChatToAgent': (params: { rid: IRoom['_id']; servedBy: unknown; oldServedBy: unknown }) => {\n\t\trid: IRoom['_id'];\n\t\tservedBy: unknown;\n\t\toldServedBy: unknown;\n\t};\n\t'livechat.afterForwardChatToDepartment': (params: {\n\t\trid: IRoom['_id'];\n\t\tnewDepartmentId: ILivechatDepartmentRecord['_id'];\n\t\toldDepartmentId: ILivechatDepartmentRecord['_id'];\n\t}) => {\n\t\trid: IRoom['_id'];\n\t\tnewDepartmentId: ILivechatDepartmentRecord['_id'];\n\t\toldDepartmentId: ILivechatDepartmentRecord['_id'];\n\t};\n\t'livechat.afterInquiryQueued': (inquiry: ILivechatInquiryRecord) => ILivechatInquiryRecord;\n\t'livechat.afterRemoveDepartment': (params: { departmentId: ILivechatDepartmentRecord['_id']; agentsId: ILivechatAgent['_id'][] }) => {\n\t\tdepartmentId: ILivechatDepartmentRecord['_id'];\n\t\tagentsId: ILivechatAgent['_id'][];\n\t};\n\t'livechat.applySimultaneousChatRestrictions': (_: undefined, params: { departmentId?: ILivechatDepartmentRecord['_id'] }) => undefined;\n\t'livechat.beforeCloseRoom': (params: { room: IRoom; options: unknown }) => { room: IRoom; options: unknown };\n\t'livechat.beforeDelegateAgent': (agent: ILivechatAgent, params: { department?: ILivechatDepartmentRecord }) => ILivechatAgent;\n\t'livechat.applyDepartmentRestrictions': (\n\t\tquery: FilterQuery<ILivechatDepartmentRecord>,\n\t\tparams: { userId: IUser['_id'] },\n\t) => FilterQuery<ILivechatDepartmentRecord>;\n\t'livechat.onMaxNumberSimultaneousChatsReached': (inquiry: ILivechatInquiryRecord) => ILivechatInquiryRecord;\n\t'on-business-hour-start': (params: { BusinessHourBehaviorClass: { new (): IBusinessHourBehavior } }) => {\n\t\tBusinessHourBehaviorClass: { new (): IBusinessHourBehavior };\n\t};\n};\n\ntype Hook =\n\t| keyof EventLikeCallbackSignatures\n\t| keyof ChainedCallbackSignatures\n\t| 'afterJoinRoom'\n\t| 'afterLeaveRoom'\n\t| 'afterLogoutCleanUp'\n\t| 'afterProcessOAuthUser'\n\t| 'afterRemoveFromRoom'\n\t| 'afterRoomArchived'\n\t| 'afterRoomNameChange'\n\t| 'afterSaveUser'\n\t| 'afterValidateLogin'\n\t| 'afterValidateNewOAuthUser'\n\t| 'archiveRoom'\n\t| 'beforeActivateUser'\n\t| 'beforeCreateRoom'\n\t| 'beforeCreateUser'\n\t| 'beforeGetMentions'\n\t| 'beforeJoinRoom'\n\t| 'beforeLeaveRoom'\n\t| 'beforeReadMessages'\n\t| 'beforeRemoveFromRoom'\n\t| 'beforeSaveMessage'\n\t| 'beforeSendMessageNotifications'\n\t| 'beforeValidateLogin'\n\t| 'cachedCollection-loadFromServer-rooms'\n\t| 'cachedCollection-loadFromServer-subscriptions'\n\t| 'cachedCollection-received-rooms'\n\t| 'cachedCollection-received-subscriptions'\n\t| 'cachedCollection-sync-rooms'\n\t| 'cachedCollection-sync-subscriptions'\n\t| 'enter-room'\n\t| 'livechat.beforeForwardRoomToDepartment'\n\t| 'livechat.beforeInquiry'\n\t| 'livechat.beforeListTags'\n\t| 'livechat.beforeRoom'\n\t| 'livechat.beforeRouteChat'\n\t| 'livechat.chatQueued'\n\t| 'livechat.checkAgentBeforeTakeInquiry'\n\t| 'livechat.checkDefaultAgentOnNewRoom'\n\t| 'livechat.closeRoom'\n\t| 'livechat.leadCapture'\n\t| 'livechat.newRoom'\n\t| 'livechat.offlineMessage'\n\t| 'livechat.onAgentAssignmentFailed'\n\t| 'livechat.onCheckRoomApiParams'\n\t| 'livechat.onLoadConfigApi'\n\t| 'livechat.onLoadForwardDepartmentRestrictions'\n\t| 'livechat.saveInfo'\n\t| 'loginPageStateChange'\n\t| 'mapLDAPUserData'\n\t| 'oembed:afterParseContent'\n\t| 'oembed:beforeGetUrlContent'\n\t| 'onCreateUser'\n\t| 'onLDAPLogin'\n\t| 'onValidateLogin'\n\t| 'openBroadcast'\n\t| 'renderMessage'\n\t| 'renderNotification'\n\t| 'roomAnnouncementChanged'\n\t| 'roomAvatarChanged'\n\t| 'roomNameChanged'\n\t| 'roomTopicChanged'\n\t| 'roomTypeChanged'\n\t| 'setReaction'\n\t| 'streamMessage'\n\t| 'streamNewMessage'\n\t| 'unarchiveRoom'\n\t| 'unsetReaction'\n\t| 'userAvatarSet'\n\t| 'userConfirmationEmailRequested'\n\t| 'userForgotPasswordEmailRequested'\n\t| 'usernameSet'\n\t| 'userPasswordReset'\n\t| 'userRegistered'\n\t| 'userStatusManuallySet';\n\ntype Callback = {\n\t(item: unknown, constant?: unknown): unknown;\n\thook: Hook;\n\tid: string;\n\tpriority: CallbackPriority;\n\tstack: string;\n};\n\ntype CallbackTracker = (callback: Callback) => () => void;\n\ntype HookTracker = (params: { hook: Hook; length: number }) => () => void;\n\nclass Callbacks {\n\tprivate logger: Logger | undefined = undefined;\n\n\tprivate trackCallback: CallbackTracker | undefined = undefined;\n\n\tprivate trackHook: HookTracker | undefined = undefined;\n\n\tprivate callbacks = new Map<Hook, Callback[]>();\n\n\tprivate sequentialRunners = new Map<Hook, (item: unknown, constant?: unknown) => unknown>();\n\n\tprivate asyncRunners = new Map<Hook, (item: unknown, constant?: unknown) => unknown>();\n\n\treadonly priority = CallbackPriority;\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tsetMetricsTrackers({ trackCallback, trackHook }: { trackCallback?: CallbackTracker; trackHook?: HookTracker }): void {\n\t\tthis.trackCallback = trackCallback;\n\t\tthis.trackHook = trackHook;\n\t}\n\n\tprivate runOne(callback: Callback, item: unknown, constant: unknown): unknown {\n\t\tconst stopTracking = this.trackCallback?.(callback);\n\n\t\ttry {\n\t\t\treturn callback(item, constant);\n\t\t} finally {\n\t\t\tstopTracking?.();\n\t\t}\n\t}\n\n\tprivate createSequentialRunner(hook: Hook, callbacks: Callback[]): (item: unknown, constant?: unknown) => unknown {\n\t\tconst wrapCallback =\n\t\t\t(callback: Callback) =>\n\t\t\t(item: unknown, constant?: unknown): unknown => {\n\t\t\t\tthis.logger?.debug(`Executing callback with id ${callback.id} for hook ${callback.hook}`);\n\n\t\t\t\treturn this.runOne(callback, item, constant) ?? item;\n\t\t\t};\n\n\t\tconst identity = <TItem>(item: TItem): TItem => item;\n\n\t\tconst pipe =\n\t\t\t(curr: (item: unknown, constant?: unknown) => unknown, next: (item: unknown, constant?: unknown) => unknown) =>\n\t\t\t(item: unknown, constant?: unknown): unknown =>\n\t\t\t\tnext(curr(item, constant), constant);\n\n\t\tconst fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tconst stopTracking = this.trackHook?.({ hook, length: callbacks.length });\n\n\t\t\ttry {\n\t\t\t\treturn fn(item, constant);\n\t\t\t} finally {\n\t\t\t\tstopTracking?.();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate createAsyncRunner(_: Hook, callbacks: Callback[]) {\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tthrow new Error('callbacks.runAsync on client server not allowed');\n\t\t\t}\n\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tMeteor.defer(() => {\n\t\t\t\t\tthis.runOne(callback, item, constant);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn item;\n\t\t};\n\t}\n\n\tgetCallbacks(hook: Hook): Callback[] {\n\t\treturn this.callbacks.get(hook) ?? [];\n\t}\n\n\tsetCallbacks(hook: Hook, callbacks: Callback[]): void {\n\t\tthis.callbacks.set(hook, callbacks);\n\t\tthis.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n\t\tthis.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n\t}\n\n\t/**\n\t * Add a callback function to a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param callback the callback function\n\t * @param priority the callback run priority (order)\n\t * @param id human friendly name for this callback\n\t */\n\tadd<THook extends keyof EventLikeCallbackSignatures>(\n\t\thook: THook,\n\t\tcallback: EventLikeCallbackSignatures[THook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<THook extends keyof ChainedCallbackSignatures>(\n\t\thook: THook,\n\t\tcallback: ChainedCallbackSignatures[THook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<TItem, TConstant, TNextItem = TItem>(\n\t\thook: Hook,\n\t\tcallback: (item: TItem, constant?: TConstant) => TNextItem,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd(hook: Hook, callback: (item: unknown, constant?: unknown) => unknown, priority = this.priority.MEDIUM, id = getRandomId()): void {\n\t\tconst callbacks = this.getCallbacks(hook);\n\n\t\tif (callbacks.some((cb) => cb.id === id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(\n\t\t\tObject.assign(callback as Callback, {\n\t\t\t\thook,\n\t\t\t\tpriority,\n\t\t\t\tid,\n\t\t\t\tstack: new Error().stack,\n\t\t\t}),\n\t\t);\n\t\tconst rank = (callback: Callback): number => callback.priority ?? this.priority.MEDIUM;\n\t\tcallbacks.sort((a, b) => rank(a) - rank(b));\n\n\t\tthis.setCallbacks(hook, callbacks);\n\t}\n\n\t/**\n\t * Remove a callback from a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param id the callback's id\n\t */\n\tremove(hook: Hook, id: string): void {\n\t\tconst hooks = this.getCallbacks(hook).filter((callback) => callback.id !== id);\n\t\tthis.setCallbacks(hook, hooks);\n\t}\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns returns the item after it's been through all the callbacks for this hook\n\t */\n\trun<THook extends keyof EventLikeCallbackSignatures>(hook: THook, ...args: Parameters<EventLikeCallbackSignatures[THook]>): void;\n\n\trun<THook extends keyof ChainedCallbackSignatures>(\n\t\thook: THook,\n\t\t...args: Parameters<ChainedCallbackSignatures[THook]>\n\t): ReturnType<ChainedCallbackSignatures[THook]>;\n\n\trun<TItem, TConstant, TNextItem = TItem>(hook: Hook, item: TItem, constant?: TConstant): TNextItem;\n\n\trun(hook: Hook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.sequentialRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item, in async mode (only works on server)\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns the post, comment, modifier, etc. on which to run the callbacks\n\t */\n\trunAsync<THook extends keyof EventLikeCallbackSignatures>(hook: THook, ...args: Parameters<EventLikeCallbackSignatures[THook]>): void;\n\n\trunAsync(hook: Hook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.asyncRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n}\n\n/**\n * Callback hooks provide an easy way to add extra steps to common operations.\n * @deprecated\n */\nexport const callbacks = new Callbacks();\n"],"sourceRoot":""},"sourceType":"module","hash":"a0a05e2fe9149081d0ea9ae2292a140f5a843450"}
