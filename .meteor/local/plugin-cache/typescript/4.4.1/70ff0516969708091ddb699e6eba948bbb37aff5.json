{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/EditableSettingsProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/providers/EditableSettingsProvider.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/EditableSettingsProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/EditableSettingsProvider.tsx","sourceRoot":"","sources":["client/providers/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport { FilterQuery } from 'mongodb';\nimport React, { useEffect, useMemo, FunctionComponent, useRef, MutableRefObject } from 'react';\n\nimport { SettingId, GroupId, ISetting, TabId } from '../../definition/ISetting';\nimport { EditableSettingsContext, IEditableSetting, EditableSettingsContextValue } from '../contexts/EditableSettingsContext';\nimport { useSettings, SettingsContextQuery } from '../contexts/SettingsContext';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\treadonly query: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider: FunctionComponent<EditableSettingsProviderProps> = ({ children, query = defaultQuery }) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<IEditableSetting>>(null) as MutableRefObject<Mongo.Collection<IEditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<IEditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterQuery<ISetting> | FilterQuery<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<IEditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): IEditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<IEditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/EditableSettingsProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/providers/EditableSettingsProvider.tsx"}},"code":"var _excluded = [\"_id\"],\n    _excluded2 = [\"_id\"];\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\n\nvar _createForOfIteratorHelperLoose;\n\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 2);\nvar useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar React, useEffect, useMemo, useRef;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  },\n  useRef: function (v) {\n    useRef = v;\n  }\n}, 3);\nvar EditableSettingsContext;\nmodule.link(\"../contexts/EditableSettingsContext\", {\n  EditableSettingsContext: function (v) {\n    EditableSettingsContext = v;\n  }\n}, 4);\nvar useSettings;\nmodule.link(\"../contexts/SettingsContext\", {\n  useSettings: function (v) {\n    useSettings = v;\n  }\n}, 5);\nvar createReactiveSubscriptionFactory;\nmodule.link(\"./createReactiveSubscriptionFactory\", {\n  createReactiveSubscriptionFactory: function (v) {\n    createReactiveSubscriptionFactory = v;\n  }\n}, 6);\nvar defaultQuery = {};\n\nvar EditableSettingsProvider = function (_ref) {\n  var children = _ref.children,\n      _ref$query = _ref.query,\n      query = _ref$query === void 0 ? defaultQuery : _ref$query;\n  var settingsCollectionRef = useRef(null);\n  var persistedSettings = useSettings(query);\n  var getSettingsCollection = useMutableCallback(function () {\n    if (!settingsCollectionRef.current) {\n      settingsCollectionRef.current = new Mongo.Collection(null);\n    }\n\n    return settingsCollectionRef.current;\n  });\n  useEffect(function () {\n    var settingsCollection = getSettingsCollection();\n    settingsCollection.remove({\n      _id: {\n        $nin: persistedSettings.map(function (_ref2) {\n          var _id = _ref2._id;\n          return _id;\n        })\n      }\n    });\n\n    for (var _iterator = _createForOfIteratorHelperLoose(persistedSettings), _step; !(_step = _iterator()).done;) {\n      var _ref3 = _step.value;\n\n      var _id = _ref3._id,\n          fields = _objectWithoutProperties(_ref3, _excluded);\n\n      settingsCollection.upsert(_id, {\n        $set: _objectSpread({}, fields),\n        $unset: {\n          changed: true\n        }\n      });\n    }\n  }, [getSettingsCollection, persistedSettings]);\n  var queryEditableSetting = useMemo(function () {\n    var validateSettingQueries = function (query, settingsCollection) {\n      if (!query) {\n        return true;\n      }\n\n      var queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n      return queries.every(function (query) {\n        return settingsCollection.find(query).count() > 0;\n      });\n    };\n\n    return createReactiveSubscriptionFactory(function (_id) {\n      var settingsCollection = getSettingsCollection();\n      var editableSetting = settingsCollection.findOne(_id);\n\n      if (!editableSetting) {\n        return undefined;\n      }\n\n      return _objectSpread(_objectSpread({}, editableSetting), {}, {\n        disabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n        invisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection)\n      });\n    });\n  }, [getSettingsCollection]);\n  var queryEditableSettings = useMemo(function () {\n    return createReactiveSubscriptionFactory(function () {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return getSettingsCollection().find(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, '_id' in query && {\n        _id: {\n          $in: query._id\n        }\n      }), 'group' in query && {\n        group: query.group\n      }), 'changed' in query && {\n        changed: query.changed\n      }), {}, {\n        $and: [_objectSpread({}, 'section' in query && (query.section ? {\n          section: query.section\n        } : {\n          $or: [{\n            section: {\n              $exists: false\n            }\n          }, {\n            section: ''\n          }]\n        })), _objectSpread({}, 'tab' in query && (query.tab ? {\n          tab: query.tab\n        } : {\n          $or: [{\n            tab: {\n              $exists: false\n            }\n          }, {\n            tab: ''\n          }]\n        }))]\n      }), {\n        sort: {\n          section: 1,\n          sorter: 1,\n          i18nLabel: 1\n        }\n      }).fetch();\n    });\n  }, [getSettingsCollection]);\n  var queryGroupSections = useMemo(function () {\n    return createReactiveSubscriptionFactory(function (_id, tab) {\n      return Array.from(new Set(getSettingsCollection().find(_objectSpread({\n        group: _id\n      }, tab !== undefined ? {\n        tab: tab\n      } : {\n        $or: [{\n          tab: {\n            $exists: false\n          }\n        }, {\n          tab: ''\n        }]\n      }), {\n        fields: {\n          section: 1\n        },\n        sort: {\n          sorter: 1,\n          section: 1,\n          i18nLabel: 1\n        }\n      }).fetch().map(function (_ref4) {\n        var section = _ref4.section;\n        return section || '';\n      })));\n    });\n  }, [getSettingsCollection]);\n  var queryGroupTabs = useMemo(function () {\n    return createReactiveSubscriptionFactory(function (_id) {\n      return Array.from(new Set(getSettingsCollection().find({\n        group: _id\n      }, {\n        fields: {\n          tab: 1\n        },\n        sort: {\n          sorter: 1,\n          tab: 1,\n          i18nLabel: 1\n        }\n      }).fetch().map(function (_ref5) {\n        var tab = _ref5.tab;\n        return tab || '';\n      })));\n    });\n  }, [getSettingsCollection]);\n  var dispatch = useMutableCallback(function (changes) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(changes), _step2; !(_step2 = _iterator2()).done;) {\n      var _ref6 = _step2.value;\n\n      var _id = _ref6._id,\n          data = _objectWithoutProperties(_ref6, _excluded2);\n\n      if (!_id) {\n        continue;\n      }\n\n      getSettingsCollection().update(_id, {\n        $set: data\n      });\n    }\n\n    Tracker.flush();\n  });\n  var contextValue = useMemo(function () {\n    return {\n      queryEditableSetting: queryEditableSetting,\n      queryEditableSettings: queryEditableSettings,\n      queryGroupSections: queryGroupSections,\n      queryGroupTabs: queryGroupTabs,\n      dispatch: dispatch\n    };\n  }, [queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch]);\n  return /*#__PURE__*/React.createElement(EditableSettingsContext.Provider, {\n    children: children,\n    value: contextValue\n  });\n};\n\nmodule.exportDefault(EditableSettingsProvider);","map":{"version":3,"sources":["client/providers/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport { FilterQuery } from 'mongodb';\nimport React, { useEffect, useMemo, FunctionComponent, useRef, MutableRefObject } from 'react';\n\nimport { SettingId, GroupId, ISetting, TabId } from '../../definition/ISetting';\nimport { EditableSettingsContext, IEditableSetting, EditableSettingsContextValue } from '../contexts/EditableSettingsContext';\nimport { useSettings, SettingsContextQuery } from '../contexts/SettingsContext';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\treadonly query: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider: FunctionComponent<EditableSettingsProviderProps> = ({ children, query = defaultQuery }) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<IEditableSetting>>(null) as MutableRefObject<Mongo.Collection<IEditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<IEditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterQuery<ISetting> | FilterQuery<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<IEditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): IEditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<IEditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"],"sourceRoot":""},"sourceType":"module","hash":"70ff0516969708091ddb699e6eba948bbb37aff5"}
