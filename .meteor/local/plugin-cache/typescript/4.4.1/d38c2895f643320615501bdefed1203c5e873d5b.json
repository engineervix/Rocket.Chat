{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/AccountIntegrationsPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/account/AccountIntegrationsPage.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/AccountIntegrationsPage.tsx","inputSourceMap":{"version":3,"file":"client/views/account/AccountIntegrationsPage.tsx","sourceRoot":"","sources":["client/views/account/AccountIntegrationsPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Select, SelectOption, Field, Button } from '@rocket.chat/fuselage';\nimport React, { useMemo, useCallback, ReactElement } from 'react';\n\nimport { WebdavAccounts } from '../../../app/models/client';\nimport { IWebdavAccount } from '../../../definition/IWebdavAccount';\nimport Page from '../../components/Page';\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useForm } from '../../hooks/useForm';\nimport { useReactiveValue } from '../../hooks/useReactiveValue';\n\ntype WebdavAccountIntegration = Omit<IWebdavAccount, 'userId' | 'password' | '_updatedAt'>;\n\nconst getWebdavAccounts = (): Array<WebdavAccountIntegration> => WebdavAccounts.find().fetch();\n\nconst getServerName = ({ name, serverURL, username }: Omit<WebdavAccountIntegration, '_id'>): string =>\n\tname || `${username}@${serverURL?.replace(/^https?\\:\\/\\//i, '')}`;\n\nconst AccountIntegrationsPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst accounts = useReactiveValue(getWebdavAccounts);\n\tconst removeWebdavAccount = useMethod('removeWebdavAccount');\n\n\tconst {\n\t\tvalues: { selected },\n\t\thandlers: { handleSelected },\n\t} = useForm({ selected: [] });\n\n\tconst options: SelectOption[] = useMemo(() => accounts.map(({ _id, ...current }) => [_id, getServerName(current)]), [accounts]);\n\n\tconst handleClickRemove = useCallback(() => {\n\t\ttry {\n\t\t\tremoveWebdavAccount(selected as string);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Webdav_account_removed') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, removeWebdavAccount, selected, t]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Integrations')} />\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('WebDAV_Accounts')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<Select options={options} onChange={handleSelected} value={selected as string} placeholder={t('Select_an_option')} />\n\t\t\t\t\t\t\t<Button primary danger onClick={handleClickRemove}>\n\t\t\t\t\t\t\t\t{t('Remove')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t</Box>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default AccountIntegrationsPage;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/AccountIntegrationsPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/account/AccountIntegrationsPage.tsx"}},"code":"const _excluded = [\"_id\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\nlet Box, Select, Field, Button;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  },\n\n  Select(v) {\n    Select = v;\n  },\n\n  Field(v) {\n    Field = v;\n  },\n\n  Button(v) {\n    Button = v;\n  }\n\n}, 0);\nlet React, useMemo, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 1);\nlet WebdavAccounts;\nmodule.link(\"../../../app/models/client\", {\n  WebdavAccounts(v) {\n    WebdavAccounts = v;\n  }\n\n}, 2);\nlet Page;\nmodule.link(\"../../components/Page\", {\n  default(v) {\n    Page = v;\n  }\n\n}, 3);\nlet useMethod;\nmodule.link(\"../../contexts/ServerContext\", {\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 4);\nlet useToastMessageDispatch;\nmodule.link(\"../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 5);\nlet useTranslation;\nmodule.link(\"../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 6);\nlet useForm;\nmodule.link(\"../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 7);\nlet useReactiveValue;\nmodule.link(\"../../hooks/useReactiveValue\", {\n  useReactiveValue(v) {\n    useReactiveValue = v;\n  }\n\n}, 8);\n\nconst getWebdavAccounts = () => WebdavAccounts.find().fetch();\n\nconst getServerName = _ref => {\n  let {\n    name,\n    serverURL,\n    username\n  } = _ref;\n  return name || \"\".concat(username, \"@\").concat(serverURL === null || serverURL === void 0 ? void 0 : serverURL.replace(/^https?\\:\\/\\//i, ''));\n};\n\nconst AccountIntegrationsPage = () => {\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const accounts = useReactiveValue(getWebdavAccounts);\n  const removeWebdavAccount = useMethod('removeWebdavAccount');\n  const {\n    values: {\n      selected\n    },\n    handlers: {\n      handleSelected\n    }\n  } = useForm({\n    selected: []\n  });\n  const options = useMemo(() => accounts.map(_ref2 => {\n    let {\n      _id\n    } = _ref2,\n        current = _objectWithoutProperties(_ref2, _excluded);\n\n    return [_id, getServerName(current)];\n  }), [accounts]);\n  const handleClickRemove = useCallback(() => {\n    try {\n      removeWebdavAccount(selected);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Webdav_account_removed')\n      });\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  }, [dispatchToastMessage, removeWebdavAccount, selected, t]);\n  return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(Page.Header, {\n    title: t('Integrations')\n  }), /*#__PURE__*/React.createElement(Page.ScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"x600\",\n    w: \"full\",\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('WebDAV_Accounts')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Select, {\n    options: options,\n    onChange: handleSelected,\n    value: selected,\n    placeholder: t('Select_an_option')\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    danger: true,\n    onClick: handleClickRemove\n  }, t('Remove')))))));\n};\n\nmodule.exportDefault(AccountIntegrationsPage);","map":{"version":3,"sources":["client/views/account/AccountIntegrationsPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Select, SelectOption, Field, Button } from '@rocket.chat/fuselage';\nimport React, { useMemo, useCallback, ReactElement } from 'react';\n\nimport { WebdavAccounts } from '../../../app/models/client';\nimport { IWebdavAccount } from '../../../definition/IWebdavAccount';\nimport Page from '../../components/Page';\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useForm } from '../../hooks/useForm';\nimport { useReactiveValue } from '../../hooks/useReactiveValue';\n\ntype WebdavAccountIntegration = Omit<IWebdavAccount, 'userId' | 'password' | '_updatedAt'>;\n\nconst getWebdavAccounts = (): Array<WebdavAccountIntegration> => WebdavAccounts.find().fetch();\n\nconst getServerName = ({ name, serverURL, username }: Omit<WebdavAccountIntegration, '_id'>): string =>\n\tname || `${username}@${serverURL?.replace(/^https?\\:\\/\\//i, '')}`;\n\nconst AccountIntegrationsPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst accounts = useReactiveValue(getWebdavAccounts);\n\tconst removeWebdavAccount = useMethod('removeWebdavAccount');\n\n\tconst {\n\t\tvalues: { selected },\n\t\thandlers: { handleSelected },\n\t} = useForm({ selected: [] });\n\n\tconst options: SelectOption[] = useMemo(() => accounts.map(({ _id, ...current }) => [_id, getServerName(current)]), [accounts]);\n\n\tconst handleClickRemove = useCallback(() => {\n\t\ttry {\n\t\t\tremoveWebdavAccount(selected as string);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Webdav_account_removed') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, removeWebdavAccount, selected, t]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Integrations')} />\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Label>{t('WebDAV_Accounts')}</Field.Label>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<Select options={options} onChange={handleSelected} value={selected as string} placeholder={t('Select_an_option')} />\n\t\t\t\t\t\t\t<Button primary danger onClick={handleClickRemove}>\n\t\t\t\t\t\t\t\t{t('Remove')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t</Box>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default AccountIntegrationsPage;\n"],"sourceRoot":""},"sourceType":"module","hash":"d38c2895f643320615501bdefed1203c5e873d5b"}
