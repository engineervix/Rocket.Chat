{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/EditableSettingsProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/providers/EditableSettingsProvider.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/EditableSettingsProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/EditableSettingsProvider.tsx","sourceRoot":"","sources":["client/providers/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport { FilterQuery } from 'mongodb';\nimport React, { useEffect, useMemo, FunctionComponent, useRef, MutableRefObject } from 'react';\n\nimport { SettingId, GroupId, ISetting, TabId } from '../../definition/ISetting';\nimport { EditableSettingsContext, IEditableSetting, EditableSettingsContextValue } from '../contexts/EditableSettingsContext';\nimport { useSettings, SettingsContextQuery } from '../contexts/SettingsContext';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\treadonly query: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider: FunctionComponent<EditableSettingsProviderProps> = ({ children, query = defaultQuery }) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<IEditableSetting>>(null) as MutableRefObject<Mongo.Collection<IEditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<IEditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterQuery<ISetting> | FilterQuery<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<IEditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): IEditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<IEditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/EditableSettingsProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/providers/EditableSettingsProvider.tsx"}},"code":"const _excluded = [\"_id\"],\n      _excluded2 = [\"_id\"];\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet React, useEffect, useMemo, useRef;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useRef(v) {\n    useRef = v;\n  }\n\n}, 3);\nlet EditableSettingsContext;\nmodule.link(\"../contexts/EditableSettingsContext\", {\n  EditableSettingsContext(v) {\n    EditableSettingsContext = v;\n  }\n\n}, 4);\nlet useSettings;\nmodule.link(\"../contexts/SettingsContext\", {\n  useSettings(v) {\n    useSettings = v;\n  }\n\n}, 5);\nlet createReactiveSubscriptionFactory;\nmodule.link(\"./createReactiveSubscriptionFactory\", {\n  createReactiveSubscriptionFactory(v) {\n    createReactiveSubscriptionFactory = v;\n  }\n\n}, 6);\nconst defaultQuery = {};\n\nconst EditableSettingsProvider = _ref => {\n  let {\n    children,\n    query = defaultQuery\n  } = _ref;\n  const settingsCollectionRef = useRef(null);\n  const persistedSettings = useSettings(query);\n  const getSettingsCollection = useMutableCallback(() => {\n    if (!settingsCollectionRef.current) {\n      settingsCollectionRef.current = new Mongo.Collection(null);\n    }\n\n    return settingsCollectionRef.current;\n  });\n  useEffect(() => {\n    const settingsCollection = getSettingsCollection();\n    settingsCollection.remove({\n      _id: {\n        $nin: persistedSettings.map(_ref2 => {\n          let {\n            _id\n          } = _ref2;\n          return _id;\n        })\n      }\n    });\n\n    for (const _ref3 of persistedSettings) {\n      const {\n        _id\n      } = _ref3,\n            fields = _objectWithoutProperties(_ref3, _excluded);\n\n      settingsCollection.upsert(_id, {\n        $set: _objectSpread({}, fields),\n        $unset: {\n          changed: true\n        }\n      });\n    }\n  }, [getSettingsCollection, persistedSettings]);\n  const queryEditableSetting = useMemo(() => {\n    const validateSettingQueries = (query, settingsCollection) => {\n      if (!query) {\n        return true;\n      }\n\n      const queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n      return queries.every(query => settingsCollection.find(query).count() > 0);\n    };\n\n    return createReactiveSubscriptionFactory(_id => {\n      const settingsCollection = getSettingsCollection();\n      const editableSetting = settingsCollection.findOne(_id);\n\n      if (!editableSetting) {\n        return undefined;\n      }\n\n      return _objectSpread(_objectSpread({}, editableSetting), {}, {\n        disabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n        invisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection)\n      });\n    });\n  }, [getSettingsCollection]);\n  const queryEditableSettings = useMemo(() => createReactiveSubscriptionFactory(function () {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getSettingsCollection().find(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, '_id' in query && {\n      _id: {\n        $in: query._id\n      }\n    }), 'group' in query && {\n      group: query.group\n    }), 'changed' in query && {\n      changed: query.changed\n    }), {}, {\n      $and: [_objectSpread({}, 'section' in query && (query.section ? {\n        section: query.section\n      } : {\n        $or: [{\n          section: {\n            $exists: false\n          }\n        }, {\n          section: ''\n        }]\n      })), _objectSpread({}, 'tab' in query && (query.tab ? {\n        tab: query.tab\n      } : {\n        $or: [{\n          tab: {\n            $exists: false\n          }\n        }, {\n          tab: ''\n        }]\n      }))]\n    }), {\n      sort: {\n        section: 1,\n        sorter: 1,\n        i18nLabel: 1\n      }\n    }).fetch();\n  }), [getSettingsCollection]);\n  const queryGroupSections = useMemo(() => createReactiveSubscriptionFactory((_id, tab) => Array.from(new Set(getSettingsCollection().find(_objectSpread({\n    group: _id\n  }, tab !== undefined ? {\n    tab\n  } : {\n    $or: [{\n      tab: {\n        $exists: false\n      }\n    }, {\n      tab: ''\n    }]\n  }), {\n    fields: {\n      section: 1\n    },\n    sort: {\n      sorter: 1,\n      section: 1,\n      i18nLabel: 1\n    }\n  }).fetch().map(_ref4 => {\n    let {\n      section\n    } = _ref4;\n    return section || '';\n  })))), [getSettingsCollection]);\n  const queryGroupTabs = useMemo(() => createReactiveSubscriptionFactory(_id => Array.from(new Set(getSettingsCollection().find({\n    group: _id\n  }, {\n    fields: {\n      tab: 1\n    },\n    sort: {\n      sorter: 1,\n      tab: 1,\n      i18nLabel: 1\n    }\n  }).fetch().map(_ref5 => {\n    let {\n      tab\n    } = _ref5;\n    return tab || '';\n  })))), [getSettingsCollection]);\n  const dispatch = useMutableCallback(changes => {\n    for (const _ref6 of changes) {\n      const {\n        _id\n      } = _ref6,\n            data = _objectWithoutProperties(_ref6, _excluded2);\n\n      if (!_id) {\n        continue;\n      }\n\n      getSettingsCollection().update(_id, {\n        $set: data\n      });\n    }\n\n    Tracker.flush();\n  });\n  const contextValue = useMemo(() => ({\n    queryEditableSetting,\n    queryEditableSettings,\n    queryGroupSections,\n    queryGroupTabs,\n    dispatch\n  }), [queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch]);\n  return /*#__PURE__*/React.createElement(EditableSettingsContext.Provider, {\n    children: children,\n    value: contextValue\n  });\n};\n\nmodule.exportDefault(EditableSettingsProvider);","map":{"version":3,"sources":["client/providers/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport { FilterQuery } from 'mongodb';\nimport React, { useEffect, useMemo, FunctionComponent, useRef, MutableRefObject } from 'react';\n\nimport { SettingId, GroupId, ISetting, TabId } from '../../definition/ISetting';\nimport { EditableSettingsContext, IEditableSetting, EditableSettingsContextValue } from '../contexts/EditableSettingsContext';\nimport { useSettings, SettingsContextQuery } from '../contexts/SettingsContext';\nimport { createReactiveSubscriptionFactory } from './createReactiveSubscriptionFactory';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\treadonly query: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider: FunctionComponent<EditableSettingsProviderProps> = ({ children, query = defaultQuery }) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<IEditableSetting>>(null) as MutableRefObject<Mongo.Collection<IEditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<IEditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterQuery<ISetting> | FilterQuery<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<IEditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): IEditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<IEditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"],"sourceRoot":""},"sourceType":"module","hash":"db8098520fa997fc943dc3250d273f05c04706b0"}
