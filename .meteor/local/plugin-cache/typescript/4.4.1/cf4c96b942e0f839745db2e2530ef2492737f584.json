{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/2fa/process2faReturn.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/2fa/process2faReturn.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/2fa/process2faReturn.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/process2faReturn.ts","sourceRoot":"","sources":["client/lib/2fa/process2faReturn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEpC,OAAO,cAAc,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAE9C,MAAM,gBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAU,CAAC;AAIhE,MAAM,iBAAiB,GAAG,CAAC,MAAc,EAA6B,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAyB,CAAC,CAAC;AAE9H,MAAM,0BAA0B,GAAG,CAClC,KAAmB,EAC0E,EAAE;IAC/F,MAAM,OAAO,GAAG,KAAK,CAAC,OAAkB,CAAC;IAEzC,OAAO,CACN,OAAO,OAAO,KAAK,QAAQ;QAC3B,OAAO,KAAK,IAAI;QAChB,OAAQ,OAA+B,CAAC,MAAM,KAAK,QAAQ;QAC3D,iBAAiB,CAAE,OAA8B,CAAC,MAAM,CAAC,CACzD,CAAC;AACH,CAAC,CAAC;AAEF,SAAS,gBAAgB,CAAC,KAGzB;IACA,IAAI,KAAK,CAAC,MAAM,KAAK,OAAO,IAAI,OAAO,KAAK,CAAC,eAAe,KAAK,QAAQ,EAAE;QAC1E,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAC7C;AACF,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,EAChC,KAAK,EACL,MAAM,EACN,gBAAgB,EAChB,MAAM,EACN,eAAe,GAUf;IACA,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;QACtE,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAChC,OAAO;KACP;IAED,MAAM,KAAK,GAAG;QACb,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM;QAC5B,eAAe,EAAE,eAAe,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ;KAC5F,CAAC;IAEF,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAExB,eAAe,CAAC,IAAI,CAAC;QACpB,SAAS,EAAE,cAAc;QACzB,KAAK,EAAE;YACN,GAAG,KAAK;YACR,SAAS,EAAE,CAAC,IAAY,EAAE,MAAc,EAAQ,EAAE;gBACjD,eAAe,CAAC,KAAK,EAAE,CAAC;gBACxB,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7D,CAAC;YACD,OAAO,EAAE,GAAS,EAAE;gBACnB,eAAe,CAAC,KAAK,EAAE,CAAC;gBACxB,gBAAgB,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;YACrD,CAAC;SACD;KACD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SHA256 } from 'meteor/sha';\n\nimport TwoFactorModal from '../../components/TwoFactorModal';\nimport { imperativeModal } from '../imperativeModal';\nimport { isTotpRequiredError } from './utils';\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = typeof twoFactorMethods[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nexport function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tresult: unknown;\n\toriginalCallback: {\n\t\t(error: unknown): void;\n\t\t(error: unknown, result: unknown): void;\n\t};\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: string | null | undefined;\n}): void {\n\tif (!isTotpRequiredError(error) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t};\n\n\tassertModalProps(props);\n\n\timperativeModal.open({\n\t\tcomponent: TwoFactorModal,\n\t\tprops: {\n\t\t\t...props,\n\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\timperativeModal.close();\n\t\t\t\tonCode(method === 'password' ? SHA256(code) : code, method);\n\t\t\t},\n\t\t\tonClose: (): void => {\n\t\t\t\timperativeModal.close();\n\t\t\t\toriginalCallback(new Meteor.Error('totp-canceled'));\n\t\t\t},\n\t\t},\n\t});\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/2fa/process2faReturn.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/2fa/process2faReturn.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  process2faReturn: () => process2faReturn\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SHA256;\nmodule.link(\"meteor/sha\", {\n  SHA256(v) {\n    SHA256 = v;\n  }\n\n}, 1);\nlet TwoFactorModal;\nmodule.link(\"../../components/TwoFactorModal\", {\n  default(v) {\n    TwoFactorModal = v;\n  }\n\n}, 2);\nlet imperativeModal;\nmodule.link(\"../imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n\n}, 3);\nlet isTotpRequiredError;\nmodule.link(\"./utils\", {\n  isTotpRequiredError(v) {\n    isTotpRequiredError = v;\n  }\n\n}, 4);\nconst twoFactorMethods = ['totp', 'email', 'password'];\n\nconst isTwoFactorMethod = method => twoFactorMethods.includes(method);\n\nconst hasRequiredTwoFactorMethod = error => {\n  const details = error.details;\n  return typeof details === 'object' && details !== null && typeof details.method === 'string' && isTwoFactorMethod(details.method);\n};\n\nfunction assertModalProps(props) {\n  if (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n    throw new Error('Invalid Two Factor method');\n  }\n}\n\nfunction process2faReturn(_ref) {\n  var _Meteor$user;\n\n  let {\n    error,\n    result,\n    originalCallback,\n    onCode,\n    emailOrUsername\n  } = _ref;\n\n  if (!isTotpRequiredError(error) || !hasRequiredTwoFactorMethod(error)) {\n    originalCallback(error, result);\n    return;\n  }\n\n  const props = {\n    method: error.details.method,\n    emailOrUsername: emailOrUsername || error.details.emailOrUsername || ((_Meteor$user = Meteor.user()) === null || _Meteor$user === void 0 ? void 0 : _Meteor$user.username)\n  };\n  assertModalProps(props);\n  imperativeModal.open({\n    component: TwoFactorModal,\n    props: _objectSpread(_objectSpread({}, props), {}, {\n      onConfirm: (code, method) => {\n        imperativeModal.close();\n        onCode(method === 'password' ? SHA256(code) : code, method);\n      },\n      onClose: () => {\n        imperativeModal.close();\n        originalCallback(new Meteor.Error('totp-canceled'));\n      }\n    })\n  });\n}","map":{"version":3,"sources":["client/lib/2fa/process2faReturn.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SHA256 } from 'meteor/sha';\n\nimport TwoFactorModal from '../../components/TwoFactorModal';\nimport { imperativeModal } from '../imperativeModal';\nimport { isTotpRequiredError } from './utils';\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = typeof twoFactorMethods[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nexport function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tresult: unknown;\n\toriginalCallback: {\n\t\t(error: unknown): void;\n\t\t(error: unknown, result: unknown): void;\n\t};\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: string | null | undefined;\n}): void {\n\tif (!isTotpRequiredError(error) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t};\n\n\tassertModalProps(props);\n\n\timperativeModal.open({\n\t\tcomponent: TwoFactorModal,\n\t\tprops: {\n\t\t\t...props,\n\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\timperativeModal.close();\n\t\t\t\tonCode(method === 'password' ? SHA256(code) : code, method);\n\t\t\t},\n\t\t\tonClose: (): void => {\n\t\t\t\timperativeModal.close();\n\t\t\t\toriginalCallback(new Meteor.Error('totp-canceled'));\n\t\t\t},\n\t\t},\n\t});\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"cf4c96b942e0f839745db2e2530ef2492737f584"}
