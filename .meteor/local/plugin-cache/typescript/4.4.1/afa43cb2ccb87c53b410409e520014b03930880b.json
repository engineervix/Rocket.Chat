{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","inputSourceMap":{"version":3,"file":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","sourceRoot":"","sources":["client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { useEndpoint } from '../../../../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', 'teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, jitsiTimeout, webRtcCallStartTime, ...room }) => ({\n\t\t\t\t\t...(jitsiTimeout && { jitsiTimeout: new Date(jitsiTimeout) }),\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('teamsChannelListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"}},"code":"var _excluded = [\"_updatedAt\", \"lastMessage\", \"lm\", \"ts\", \"jitsiTimeout\", \"webRtcCallStartTime\"];\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 2);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 3);\nmodule.export({\n  useTeamsChannelList: function () {\n    return useTeamsChannelList;\n  }\n});\nvar useCallback, useMemo, useState;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 0);\nvar useEndpoint;\nmodule.link(\"../../../../../contexts/ServerContext\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 1);\nvar useScrollableRecordList;\nmodule.link(\"../../../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList: function (v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nvar useComponentDidUpdate;\nmodule.link(\"../../../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate: function (v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nvar RecordList;\nmodule.link(\"../../../../../lib/lists/RecordList\", {\n  RecordList: function (v) {\n    RecordList = v;\n  }\n}, 4);\nvar getConfig;\nmodule.link(\"../../../../../lib/utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 5);\nvar mapMessageFromApi;\nmodule.link(\"../../../../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi: function (v) {\n    mapMessageFromApi = v;\n  }\n}, 6);\n\nvar useTeamsChannelList = function (options) {\n  var apiEndPoint = useEndpoint('GET', 'teams.listRooms');\n\n  var _useState = useState(function () {\n    return new RecordList();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      teamsChannelList = _useState2[0],\n      setTeamsChannelList = _useState2[1];\n\n  var reload = useCallback(function () {\n    return setTeamsChannelList(new RecordList());\n  }, []);\n  useComponentDidUpdate(function () {\n    options && reload();\n  }, [options, reload]);\n  var fetchData = useCallback(function () {\n    function _callee(start, end) {\n      var _await$apiEndPoint, rooms, total;\n\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(apiEndPoint({\n                  teamId: options.teamId,\n                  offset: start,\n                  count: end,\n                  filter: options.text,\n                  type: options.type\n                }));\n\n              case 2:\n                _await$apiEndPoint = _context.sent;\n                rooms = _await$apiEndPoint.rooms;\n                total = _await$apiEndPoint.total;\n                return _context.abrupt(\"return\", {\n                  items: rooms.map(function (_ref) {\n                    var _updatedAt = _ref._updatedAt,\n                        lastMessage = _ref.lastMessage,\n                        lm = _ref.lm,\n                        ts = _ref.ts,\n                        jitsiTimeout = _ref.jitsiTimeout,\n                        webRtcCallStartTime = _ref.webRtcCallStartTime,\n                        room = _objectWithoutProperties(_ref, _excluded);\n\n                    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, jitsiTimeout && {\n                      jitsiTimeout: new Date(jitsiTimeout)\n                    }), lm && {\n                      lm: new Date(lm)\n                    }), ts && {\n                      ts: new Date(ts)\n                    }), {}, {\n                      _updatedAt: new Date(_updatedAt)\n                    }, lastMessage && {\n                      lastMessage: mapMessageFromApi(lastMessage)\n                    }), webRtcCallStartTime && {\n                      webRtcCallStartTime: new Date(webRtcCallStartTime)\n                    }), room);\n                  }),\n                  itemCount: total\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n\n    return _callee;\n  }(), [apiEndPoint, options]);\n\n  var _useScrollableRecordL = useScrollableRecordList(teamsChannelList, fetchData, useMemo(function () {\n    var filesListSize = getConfig('teamsChannelListSize');\n    return filesListSize ? parseInt(filesListSize, 10) : undefined;\n  }, [])),\n      loadMoreItems = _useScrollableRecordL.loadMoreItems,\n      initialItemCount = _useScrollableRecordL.initialItemCount;\n\n  return {\n    reload: reload,\n    teamsChannelList: teamsChannelList,\n    loadMoreItems: loadMoreItems,\n    initialItemCount: initialItemCount\n  };\n};","map":{"version":3,"sources":["client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { IRoom } from '../../../../../../definition/IRoom';\nimport { useEndpoint } from '../../../../../contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', 'teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, jitsiTimeout, webRtcCallStartTime, ...room }) => ({\n\t\t\t\t\t...(jitsiTimeout && { jitsiTimeout: new Date(jitsiTimeout) }),\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => {\n\t\t\tconst filesListSize = getConfig('teamsChannelListSize');\n\t\t\treturn filesListSize ? parseInt(filesListSize, 10) : undefined;\n\t\t}, []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"afa43cb2ccb87c53b410409e520014b03930880b"}
