{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useTimezoneTime.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/useTimezoneTime.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useTimezoneTime.ts","inputSourceMap":{"version":3,"file":"client/hooks/useTimezoneTime.ts","sourceRoot":"","sources":["client/hooks/useTimezoneTime.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAE5C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,MAAc,EAAE,QAAQ,GAAG,IAAI,EAAU,EAAE;IAC1E,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAgB,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAElF,MAAM,MAAM,GAAG,aAAa,EAAE,CAAC;IAE/B,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,MAAM,KAAK,SAAS,EAAE;YACzB,OAAO;SACP;QAED,MAAM,MAAM,GAAG,GAAS,EAAE;YACzB,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC5C,MAAM,EAAE,CAAC;QAET,OAAO,GAAS,EAAE;YACjB,aAAa,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC;IACH,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEvB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import moment from 'moment';\nimport { useState, useEffect } from 'react';\n\nimport { useFormatTime } from './useFormatTime';\n\nexport const useTimezoneTime = (offset: number, interval = 1000): string => {\n\tconst [time, setTime] = useState<moment.Moment>(() => moment().utcOffset(offset));\n\n\tconst format = useFormatTime();\n\n\tuseEffect(() => {\n\t\tif (offset === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst update = (): void => {\n\t\t\tsetTime(moment().utcOffset(offset));\n\t\t};\n\n\t\tconst timer = setInterval(update, interval);\n\t\tupdate();\n\n\t\treturn (): void => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, [offset, interval]);\n\n\treturn format(time);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useTimezoneTime.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useTimezoneTime.ts"}},"code":"module.export({\n  useTimezoneTime: () => useTimezoneTime\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet useState, useEffect;\nmodule.link(\"react\", {\n  useState(v) {\n    useState = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  }\n\n}, 1);\nlet useFormatTime;\nmodule.link(\"./useFormatTime\", {\n  useFormatTime(v) {\n    useFormatTime = v;\n  }\n\n}, 2);\n\nconst useTimezoneTime = function (offset) {\n  let interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  const [time, setTime] = useState(() => moment().utcOffset(offset));\n  const format = useFormatTime();\n  useEffect(() => {\n    if (offset === undefined) {\n      return;\n    }\n\n    const update = () => {\n      setTime(moment().utcOffset(offset));\n    };\n\n    const timer = setInterval(update, interval);\n    update();\n    return () => {\n      clearInterval(timer);\n    };\n  }, [offset, interval]);\n  return format(time);\n};","map":{"version":3,"sources":["client/hooks/useTimezoneTime.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAa;AAAA,EAAA,eAAe,EAAA,MAAA;AAAf,CAAb;AAA4B,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKrB,MAAM,eAAe,GAAG,UAAC,MAAD,EAA4C;AAAA,MAA3B,QAA2B,uEAAhB,IAAgB;AAC1E,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAAgB,MAAM,MAAM,GAAG,SAAT,CAAmB,MAAnB,CAAtB,CAAhC;AAEA,QAAM,MAAM,GAAG,aAAa,EAA5B;AAEA,EAAA,SAAS,CAAC,MAAK;AACd,QAAI,MAAM,KAAK,SAAf,EAA0B;AACzB;AACA;;AAED,UAAM,MAAM,GAAG,MAAW;AACzB,MAAA,OAAO,CAAC,MAAM,GAAG,SAAT,CAAmB,MAAnB,CAAD,CAAP;AACA,KAFD;;AAIA,UAAM,KAAK,GAAG,WAAW,CAAC,MAAD,EAAS,QAAT,CAAzB;AACA,IAAA,MAAM;AAEN,WAAO,MAAW;AACjB,MAAA,aAAa,CAAC,KAAD,CAAb;AACA,KAFD;AAGA,GAfQ,EAeN,CAAC,MAAD,EAAS,QAAT,CAfM,CAAT;AAiBA,SAAO,MAAM,CAAC,IAAD,CAAb;AACA,CAvBM","sourcesContent":["import moment from 'moment';\nimport { useState, useEffect } from 'react';\n\nimport { useFormatTime } from './useFormatTime';\n\nexport const useTimezoneTime = (offset: number, interval = 1000): string => {\n\tconst [time, setTime] = useState<moment.Moment>(() => moment().utcOffset(offset));\n\n\tconst format = useFormatTime();\n\n\tuseEffect(() => {\n\t\tif (offset === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst update = (): void => {\n\t\t\tsetTime(moment().utcOffset(offset));\n\t\t};\n\n\t\tconst timer = setInterval(update, interval);\n\t\tupdate();\n\n\t\treturn (): void => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, [offset, interval]);\n\n\treturn format(time);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"15d2e00f259b20fc68baf1d70e8f7b0a967403a4"}
