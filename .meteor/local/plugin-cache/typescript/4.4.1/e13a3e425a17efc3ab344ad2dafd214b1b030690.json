{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/omnichannel/hooks/useCannedResponseList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"ee/client/omnichannel/hooks/useCannedResponseList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/omnichannel/hooks/useCannedResponseList.ts","inputSourceMap":{"version":3,"file":"ee/client/omnichannel/hooks/useCannedResponseList.ts","sourceRoot":"","sources":["ee/client/omnichannel/hooks/useCannedResponseList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport { useEndpoint } from '../../../../client/contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../../client/hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../client/hooks/useComponentDidUpdate';\nimport { CannedResponseList } from '../../../../client/lib/lists/CannedResponseList';\n\nexport const useCannedResponseList = (\n\toptions: any,\n): {\n\treload: () => void;\n\tcannedList: CannedResponseList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [cannedList, setCannedList] = useState(() => new CannedResponseList(options));\n\tconst reload = useCallback(() => setCannedList(new CannedResponseList(options)), [options]);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tuseEffect(() => {\n\t\tif (cannedList.options !== options) {\n\t\t\tcannedList.updateFilters(options);\n\t\t}\n\t}, [cannedList, options]);\n\n\tconst getCannedResponses = useEndpoint('GET', 'canned-responses');\n\tconst getDepartments = useEndpoint('GET', 'livechat/department');\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { cannedResponses, total } = await getCannedResponses({\n\t\t\t\t...(options.filter && { text: options.filter }),\n\t\t\t\t...(options.type && ['global', 'user'].find((option) => option === options.type) && { scope: options.type }),\n\t\t\t\t...(options.type &&\n\t\t\t\t\t!['global', 'user', 'all'].find((option) => option === options.type) && {\n\t\t\t\t\t\tscope: 'department',\n\t\t\t\t\t\tdepartmentId: options.type,\n\t\t\t\t\t}),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\n\t\t\tconst { departments } = await getDepartments({ text: '' });\n\n\t\t\treturn {\n\t\t\t\titems: cannedResponses.map((cannedResponse: any) => {\n\t\t\t\t\tif (cannedResponse.departmentId) {\n\t\t\t\t\t\tdepartments.forEach((department: any) => {\n\t\t\t\t\t\t\tif (cannedResponse.departmentId === department._id) {\n\t\t\t\t\t\t\t\tcannedResponse.departmentName = department.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcannedResponse._updatedAt = new Date(cannedResponse._updatedAt);\n\t\t\t\t\tcannedResponse._createdAt = new Date(cannedResponse._createdAt);\n\t\t\t\t\treturn cannedResponse;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getCannedResponses, getDepartments, options.filter, options.type],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(cannedList, fetchData);\n\n\treturn {\n\t\treload,\n\t\tcannedList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/omnichannel/hooks/useCannedResponseList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/client/omnichannel/hooks/useCannedResponseList.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nmodule.export({\n  useCannedResponseList: function () {\n    return useCannedResponseList;\n  }\n});\nvar useCallback, useEffect, useState;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 0);\nvar useEndpoint;\nmodule.link(\"../../../../client/contexts/ServerContext\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 1);\nvar useScrollableRecordList;\nmodule.link(\"../../../../client/hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList: function (v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nvar useComponentDidUpdate;\nmodule.link(\"../../../../client/hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate: function (v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nvar CannedResponseList;\nmodule.link(\"../../../../client/lib/lists/CannedResponseList\", {\n  CannedResponseList: function (v) {\n    CannedResponseList = v;\n  }\n}, 4);\n\nvar useCannedResponseList = function (options) {\n  var _useState = useState(function () {\n    return new CannedResponseList(options);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cannedList = _useState2[0],\n      setCannedList = _useState2[1];\n\n  var reload = useCallback(function () {\n    return setCannedList(new CannedResponseList(options));\n  }, [options]);\n  useComponentDidUpdate(function () {\n    options && reload();\n  }, [options, reload]);\n  useEffect(function () {\n    if (cannedList.options !== options) {\n      cannedList.updateFilters(options);\n    }\n  }, [cannedList, options]);\n  var getCannedResponses = useEndpoint('GET', 'canned-responses');\n  var getDepartments = useEndpoint('GET', 'livechat/department');\n  var fetchData = useCallback(function () {\n    function _callee(start, end) {\n      var _await$getCannedRespo, cannedResponses, total, _await$getDepartments, departments;\n\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(getCannedResponses(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, options.filter && {\n                  text: options.filter\n                }), options.type && ['global', 'user'].find(function (option) {\n                  return option === options.type;\n                }) && {\n                  scope: options.type\n                }), options.type && !['global', 'user', 'all'].find(function (option) {\n                  return option === options.type;\n                }) && {\n                  scope: 'department',\n                  departmentId: options.type\n                }), {}, {\n                  offset: start,\n                  count: end + start\n                })));\n\n              case 2:\n                _await$getCannedRespo = _context.sent;\n                cannedResponses = _await$getCannedRespo.cannedResponses;\n                total = _await$getCannedRespo.total;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(getDepartments({\n                  text: ''\n                }));\n\n              case 7:\n                _await$getDepartments = _context.sent;\n                departments = _await$getDepartments.departments;\n                return _context.abrupt(\"return\", {\n                  items: cannedResponses.map(function (cannedResponse) {\n                    if (cannedResponse.departmentId) {\n                      departments.forEach(function (department) {\n                        if (cannedResponse.departmentId === department._id) {\n                          cannedResponse.departmentName = department.name;\n                        }\n                      });\n                    }\n\n                    cannedResponse._updatedAt = new Date(cannedResponse._updatedAt);\n                    cannedResponse._createdAt = new Date(cannedResponse._createdAt);\n                    return cannedResponse;\n                  }),\n                  itemCount: total\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n\n    return _callee;\n  }(), [getCannedResponses, getDepartments, options.filter, options.type]);\n\n  var _useScrollableRecordL = useScrollableRecordList(cannedList, fetchData),\n      loadMoreItems = _useScrollableRecordL.loadMoreItems,\n      initialItemCount = _useScrollableRecordL.initialItemCount;\n\n  return {\n    reload: reload,\n    cannedList: cannedList,\n    loadMoreItems: loadMoreItems,\n    initialItemCount: initialItemCount\n  };\n};","map":{"version":3,"sources":["ee/client/omnichannel/hooks/useCannedResponseList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport { useEndpoint } from '../../../../client/contexts/ServerContext';\nimport { useScrollableRecordList } from '../../../../client/hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../client/hooks/useComponentDidUpdate';\nimport { CannedResponseList } from '../../../../client/lib/lists/CannedResponseList';\n\nexport const useCannedResponseList = (\n\toptions: any,\n): {\n\treload: () => void;\n\tcannedList: CannedResponseList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [cannedList, setCannedList] = useState(() => new CannedResponseList(options));\n\tconst reload = useCallback(() => setCannedList(new CannedResponseList(options)), [options]);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tuseEffect(() => {\n\t\tif (cannedList.options !== options) {\n\t\t\tcannedList.updateFilters(options);\n\t\t}\n\t}, [cannedList, options]);\n\n\tconst getCannedResponses = useEndpoint('GET', 'canned-responses');\n\tconst getDepartments = useEndpoint('GET', 'livechat/department');\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { cannedResponses, total } = await getCannedResponses({\n\t\t\t\t...(options.filter && { text: options.filter }),\n\t\t\t\t...(options.type && ['global', 'user'].find((option) => option === options.type) && { scope: options.type }),\n\t\t\t\t...(options.type &&\n\t\t\t\t\t!['global', 'user', 'all'].find((option) => option === options.type) && {\n\t\t\t\t\t\tscope: 'department',\n\t\t\t\t\t\tdepartmentId: options.type,\n\t\t\t\t\t}),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\n\t\t\tconst { departments } = await getDepartments({ text: '' });\n\n\t\t\treturn {\n\t\t\t\titems: cannedResponses.map((cannedResponse: any) => {\n\t\t\t\t\tif (cannedResponse.departmentId) {\n\t\t\t\t\t\tdepartments.forEach((department: any) => {\n\t\t\t\t\t\t\tif (cannedResponse.departmentId === department._id) {\n\t\t\t\t\t\t\t\tcannedResponse.departmentName = department.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tcannedResponse._updatedAt = new Date(cannedResponse._updatedAt);\n\t\t\t\t\tcannedResponse._createdAt = new Date(cannedResponse._createdAt);\n\t\t\t\t\treturn cannedResponse;\n\t\t\t\t}),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getCannedResponses, getDepartments, options.filter, options.type],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(cannedList, fetchData);\n\n\treturn {\n\t\treload,\n\t\tcannedList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"e13a3e425a17efc3ab344ad2dafd214b1b030690"}
