{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Omnichannel/hooks/useDepartmentsList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/Omnichannel/hooks/useDepartmentsList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Omnichannel/hooks/useDepartmentsList.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useDepartmentsList.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useDepartmentsList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatDepartmentRecord } from '../../../../definition/ILivechatDepartmentRecord';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tfilter: string;\n\tdepartmentId?: string;\n\tonlyMyDepartments?: boolean;\n\thaveAll?: boolean;\n\thaveNone?: boolean;\n\texcludeDepartmentId?: string;\n\tenabled?: boolean;\n};\n\nexport const useDepartmentsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<ILivechatDepartmentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatDepartmentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatDepartmentRecord>()), []);\n\tconst endpoint = 'livechat/department';\n\n\tconst getDepartments = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\tonlyMyDepartments: `${!!options.onlyMyDepartments}`,\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t\texcludeDepartmentId: options.excludeDepartmentId,\n\t\t\t\tenabled: options.enabled,\n\t\t\t});\n\n\t\t\tconst items = departments\n\t\t\t\t.filter((department) => {\n\t\t\t\t\tif (options.departmentId && department._id === options.departmentId) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.map((department: any) => {\n\t\t\t\t\tdepartment._updatedAt = new Date(department._updatedAt);\n\t\t\t\t\tdepartment.label = department.name;\n\t\t\t\t\tdepartment.value = { value: department._id, label: department.name };\n\t\t\t\t\treturn department;\n\t\t\t\t});\n\n\t\t\toptions.haveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: { value: 'all', label: t('All') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\toptions.haveNone &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('None'),\n\t\t\t\t\tvalue: { value: '', label: t('None') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: options.departmentId ? total - 1 : total,\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tgetDepartments,\n\t\t\toptions.departmentId,\n\t\t\toptions.filter,\n\t\t\toptions.haveAll,\n\t\t\toptions.onlyMyDepartments,\n\t\t\toptions.haveNone,\n\t\t\toptions.excludeDepartmentId,\n\t\t\toptions.enabled,\n\t\t\tt,\n\t\t],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Omnichannel/hooks/useDepartmentsList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Omnichannel/hooks/useDepartmentsList.ts"}},"code":"module.export({\n  useDepartmentsList: () => useDepartmentsList\n});\nlet useCallback, useState;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 0);\nlet useEndpoint;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 1);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 2);\nlet useScrollableRecordList;\nmodule.link(\"../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n\n}, 3);\nlet useComponentDidUpdate;\nmodule.link(\"../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n\n}, 4);\nlet RecordList;\nmodule.link(\"../../../lib/lists/RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n\n}, 5);\n\nconst useDepartmentsList = options => {\n  const t = useTranslation();\n  const [itemsList, setItemsList] = useState(() => new RecordList());\n  const reload = useCallback(() => setItemsList(new RecordList()), []);\n  const endpoint = 'livechat/department';\n  const getDepartments = useEndpoint('GET', endpoint);\n  useComponentDidUpdate(() => {\n    options && reload();\n  }, [options, reload]);\n  const fetchData = useCallback(async (start, end) => {\n    const {\n      departments,\n      total\n    } = await getDepartments({\n      onlyMyDepartments: \"\".concat(!!options.onlyMyDepartments),\n      text: options.filter,\n      offset: start,\n      count: end + start,\n      sort: \"{ \\\"name\\\": 1 }\",\n      excludeDepartmentId: options.excludeDepartmentId,\n      enabled: options.enabled\n    });\n    const items = departments.filter(department => {\n      if (options.departmentId && department._id === options.departmentId) {\n        return false;\n      }\n\n      return true;\n    }).map(department => {\n      department._updatedAt = new Date(department._updatedAt);\n      department.label = department.name;\n      department.value = {\n        value: department._id,\n        label: department.name\n      };\n      return department;\n    });\n    options.haveAll && items.unshift({\n      label: t('All'),\n      value: {\n        value: 'all',\n        label: t('All')\n      },\n      _updatedAt: new Date()\n    });\n    options.haveNone && items.unshift({\n      label: t('None'),\n      value: {\n        value: '',\n        label: t('None')\n      },\n      _updatedAt: new Date()\n    });\n    return {\n      items,\n      itemCount: options.departmentId ? total - 1 : total\n    };\n  }, [getDepartments, options.departmentId, options.filter, options.haveAll, options.onlyMyDepartments, options.haveNone, options.excludeDepartmentId, options.enabled, t]);\n  const {\n    loadMoreItems,\n    initialItemCount\n  } = useScrollableRecordList(itemsList, fetchData, 25);\n  return {\n    reload,\n    itemsList,\n    loadMoreItems,\n    initialItemCount\n  };\n};","map":{"version":3,"sources":["client/components/Omnichannel/hooks/useDepartmentsList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { ILivechatDepartmentRecord } from '../../../../definition/ILivechatDepartmentRecord';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tfilter: string;\n\tdepartmentId?: string;\n\tonlyMyDepartments?: boolean;\n\thaveAll?: boolean;\n\thaveNone?: boolean;\n\texcludeDepartmentId?: string;\n\tenabled?: boolean;\n};\n\nexport const useDepartmentsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<ILivechatDepartmentRecord>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatDepartmentRecord>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatDepartmentRecord>()), []);\n\tconst endpoint = 'livechat/department';\n\n\tconst getDepartments = useEndpoint('GET', endpoint);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\tonlyMyDepartments: `${!!options.onlyMyDepartments}`,\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t\texcludeDepartmentId: options.excludeDepartmentId,\n\t\t\t\tenabled: options.enabled,\n\t\t\t});\n\n\t\t\tconst items = departments\n\t\t\t\t.filter((department) => {\n\t\t\t\t\tif (options.departmentId && department._id === options.departmentId) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.map((department: any) => {\n\t\t\t\t\tdepartment._updatedAt = new Date(department._updatedAt);\n\t\t\t\t\tdepartment.label = department.name;\n\t\t\t\t\tdepartment.value = { value: department._id, label: department.name };\n\t\t\t\t\treturn department;\n\t\t\t\t});\n\n\t\t\toptions.haveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: { value: 'all', label: t('All') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\toptions.haveNone &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('None'),\n\t\t\t\t\tvalue: { value: '', label: t('None') },\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: options.departmentId ? total - 1 : total,\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tgetDepartments,\n\t\t\toptions.departmentId,\n\t\t\toptions.filter,\n\t\t\toptions.haveAll,\n\t\t\toptions.onlyMyDepartments,\n\t\t\toptions.haveNone,\n\t\t\toptions.excludeDepartmentId,\n\t\t\toptions.enabled,\n\t\t\tt,\n\t\t],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"5e2089ccd745c8878af1fc21793a1470977d4eb5"}
