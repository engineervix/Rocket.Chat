{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomCoordinator.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/rooms/roomCoordinator.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomCoordinator.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomCoordinator.ts","sourceRoot":"","sources":["client/lib/rooms/roomCoordinator.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport type { RouteOptions } from 'meteor/kadira:flow-router';\nimport _ from 'underscore';\n\nimport { hasPermission } from '../../../app/authorization/client';\nimport { ChatRoom, ChatSubscription } from '../../../app/models/client';\nimport { openRoom } from '../../../app/ui-utils/client/lib/openRoom';\nimport type { IRoom, RoomType } from '../../../definition/IRoom';\nimport type { IRoomTypeConfig, IRoomTypeClientDirectives, RoomIdentification } from '../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../definition/IRoomTypeConfig';\nimport type { IUser } from '../../../definition/IUser';\nimport type { AtLeast, ValueOf } from '../../../definition/utils';\nimport { RoomCoordinator } from '../../../lib/rooms/coordinator';\nimport { roomExit } from './roomExit';\n\nclass RoomCoordinatorClient extends RoomCoordinator {\n\tadd(roomConfig: IRoomTypeConfig, directives: Partial<IRoomTypeClientDirectives>): void {\n\t\tthis.addRoomType(roomConfig, {\n\t\t\tallowRoomSettingChange(_room: Partial<IRoom>, _setting: ValueOf<typeof RoomSettingsEnum>): boolean {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tallowMemberAction(_room: Partial<IRoom>, _action: ValueOf<typeof RoomMemberActions>): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\troomName(_room: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>): string {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tisGroupChat(_room: Partial<IRoom>): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\topenCustomProfileTab(_instance: any, _room: IRoom, _username: string): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tgetUiText(_context: ValueOf<typeof UiTextContext>): string {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tcondition(): boolean {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tgetAvatarPath(_room): string {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tgetIcon(_room: Partial<IRoom>): string | undefined {\n\t\t\t\treturn this.config.icon;\n\t\t\t},\n\t\t\tgetUserStatus(_roomId: string): string | undefined {\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tfindRoom(_identifier: string): IRoom | undefined {\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tshowJoinLink(_roomId: string): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tisLivechatRoom(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tcanSendMessage(rid: string): boolean {\n\t\t\t\treturn ChatSubscription.find({ rid }).count() > 0;\n\t\t\t},\n\t\t\t...directives,\n\t\t\tconfig: roomConfig,\n\t\t});\n\t}\n\n\tprotected addRoute(path: string, routeConfig: RouteOptions): void {\n\t\tsuper.addRoute(path, { ...routeConfig, triggersExit: [roomExit] });\n\t}\n\n\tgetRoomDirectives(roomType: string): IRoomTypeClientDirectives | undefined {\n\t\treturn this.roomTypes[roomType]?.directives as IRoomTypeClientDirectives;\n\t}\n\n\tgetRoomTypeById(rid: string): RoomType | undefined {\n\t\tconst room = ChatRoom.findOne({ _id: rid, t: { $exists: true, $ne: null } }, { fields: { t: 1 } });\n\t\treturn room?.t;\n\t}\n\n\tgetRoomDirectivesById(rid: string): IRoomTypeClientDirectives | undefined {\n\t\tconst roomType = this.getRoomTypeById(rid);\n\t\tif (roomType) {\n\t\t\treturn this.getRoomDirectives(roomType);\n\t\t}\n\t}\n\n\tgetRoomTypeConfigById(rid: string): IRoomTypeConfig | undefined {\n\t\tconst roomType = this.getRoomTypeById(rid);\n\t\tif (roomType) {\n\t\t\treturn this.getRoomTypeConfig(roomType);\n\t\t}\n\t}\n\n\topenRoom(type: string, name: string, render = true): void {\n\t\topenRoom(type, name, render);\n\t}\n\n\tgetIcon(room: Partial<IRoom>): string | undefined {\n\t\treturn room?.t && this.getRoomDirectives(room.t)?.getIcon(room);\n\t}\n\n\topenRouteLink(roomType: RoomType, subData: RoomIdentification, queryParams?: Record<string, string>): void {\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config?.route) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (config.route.link) {\n\t\t\trouteData = config.route.link(subData);\n\t\t} else if (subData?.name) {\n\t\t\trouteData = {\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tFlowRouter.go(config.route.name, routeData, queryParams);\n\t}\n\n\tisLivechatRoom(roomType: string): boolean {\n\t\treturn Boolean(this.getRoomDirectives(roomType)?.isLivechatRoom());\n\t}\n\n\tgetRoomName(roomType: string, roomData: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>): string {\n\t\treturn this.getRoomDirectives(roomType)?.roomName(roomData) ?? '';\n\t}\n\n\treadOnly(rid: string, user: AtLeast<IUser, 'username'>): boolean {\n\t\tconst fields = {\n\t\t\tro: 1,\n\t\t\tt: 1,\n\t\t\t...(user && { muted: 1, unmuted: 1 }),\n\t\t};\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields });\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst directives = this.getRoomDirectives(room.t);\n\t\tif (directives?.readOnly) {\n\t\t\treturn directives.readOnly(rid, user);\n\t\t}\n\n\t\tif (!user?.username) {\n\t\t\treturn Boolean(room.ro);\n\t\t}\n\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (Array.isArray(room.muted) && room.muted.indexOf(user.username) !== -1) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (room.ro) {\n\t\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username) !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (hasPermission('post-readonly', room._id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #ToDo: Move this out of the RoomCoordinator\n\tarchived(rid: string): boolean {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { archived: 1 } });\n\t\treturn Boolean(room?.archived);\n\t}\n\n\tverifyCanSendMessage(rid: string): boolean {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { t: 1 } });\n\t\tif (!room?.t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Boolean(this.getRoomDirectives(room.t)?.canSendMessage(rid));\n\t}\n\n\tgetSortedTypes(): Array<{ config: IRoomTypeConfig; directives: IRoomTypeClientDirectives }> {\n\t\treturn _.sortBy(this.roomTypesOrder, 'order')\n\t\t\t.map((type) => this.roomTypes[type.identifier] as { config: IRoomTypeConfig; directives: IRoomTypeClientDirectives })\n\t\t\t.filter((type) => type.directives.condition());\n\t}\n}\n\nexport const roomCoordinator = new RoomCoordinatorClient();\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/rooms/roomCoordinator.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/rooms/roomCoordinator.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  roomCoordinator: () => roomCoordinator\n});\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet hasPermission;\nmodule.link(\"../../../app/authorization/client\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 2);\nlet ChatRoom, ChatSubscription;\nmodule.link(\"../../../app/models/client\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  },\n\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 3);\nlet openRoom;\nmodule.link(\"../../../app/ui-utils/client/lib/openRoom\", {\n  openRoom(v) {\n    openRoom = v;\n  }\n\n}, 4);\nlet RoomCoordinator;\nmodule.link(\"../../../lib/rooms/coordinator\", {\n  RoomCoordinator(v) {\n    RoomCoordinator = v;\n  }\n\n}, 5);\nlet roomExit;\nmodule.link(\"./roomExit\", {\n  roomExit(v) {\n    roomExit = v;\n  }\n\n}, 6);\n\nclass RoomCoordinatorClient extends RoomCoordinator {\n  add(roomConfig, directives) {\n    this.addRoomType(roomConfig, _objectSpread(_objectSpread({\n      allowRoomSettingChange(_room, _setting) {\n        return true;\n      },\n\n      allowMemberAction(_room, _action) {\n        return false;\n      },\n\n      roomName(_room) {\n        return '';\n      },\n\n      isGroupChat(_room) {\n        return false;\n      },\n\n      openCustomProfileTab(_instance, _room, _username) {\n        return false;\n      },\n\n      getUiText(_context) {\n        return '';\n      },\n\n      condition() {\n        return true;\n      },\n\n      getAvatarPath(_room) {\n        return '';\n      },\n\n      getIcon(_room) {\n        return this.config.icon;\n      },\n\n      getUserStatus(_roomId) {\n        return undefined;\n      },\n\n      findRoom(_identifier) {\n        return undefined;\n      },\n\n      showJoinLink(_roomId) {\n        return false;\n      },\n\n      isLivechatRoom() {\n        return false;\n      },\n\n      canSendMessage(rid) {\n        return ChatSubscription.find({\n          rid\n        }).count() > 0;\n      }\n\n    }, directives), {}, {\n      config: roomConfig\n    }));\n  }\n\n  addRoute(path, routeConfig) {\n    super.addRoute(path, _objectSpread(_objectSpread({}, routeConfig), {}, {\n      triggersExit: [roomExit]\n    }));\n  }\n\n  getRoomDirectives(roomType) {\n    var _this$roomTypes$roomT;\n\n    return (_this$roomTypes$roomT = this.roomTypes[roomType]) === null || _this$roomTypes$roomT === void 0 ? void 0 : _this$roomTypes$roomT.directives;\n  }\n\n  getRoomTypeById(rid) {\n    const room = ChatRoom.findOne({\n      _id: rid,\n      t: {\n        $exists: true,\n        $ne: null\n      }\n    }, {\n      fields: {\n        t: 1\n      }\n    });\n    return room === null || room === void 0 ? void 0 : room.t;\n  }\n\n  getRoomDirectivesById(rid) {\n    const roomType = this.getRoomTypeById(rid);\n\n    if (roomType) {\n      return this.getRoomDirectives(roomType);\n    }\n  }\n\n  getRoomTypeConfigById(rid) {\n    const roomType = this.getRoomTypeById(rid);\n\n    if (roomType) {\n      return this.getRoomTypeConfig(roomType);\n    }\n  }\n\n  openRoom(type, name) {\n    let render = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    openRoom(type, name, render);\n  }\n\n  getIcon(room) {\n    var _this$getRoomDirectiv;\n\n    return (room === null || room === void 0 ? void 0 : room.t) && ((_this$getRoomDirectiv = this.getRoomDirectives(room.t)) === null || _this$getRoomDirectiv === void 0 ? void 0 : _this$getRoomDirectiv.getIcon(room));\n  }\n\n  openRouteLink(roomType, subData, queryParams) {\n    const config = this.getRoomTypeConfig(roomType);\n\n    if (!(config !== null && config !== void 0 && config.route)) {\n      return;\n    }\n\n    let routeData = {};\n\n    if (config.route.link) {\n      routeData = config.route.link(subData);\n    } else if (subData !== null && subData !== void 0 && subData.name) {\n      routeData = {\n        name: subData.name\n      };\n    } else {\n      return;\n    }\n\n    FlowRouter.go(config.route.name, routeData, queryParams);\n  }\n\n  isLivechatRoom(roomType) {\n    var _this$getRoomDirectiv2;\n\n    return Boolean((_this$getRoomDirectiv2 = this.getRoomDirectives(roomType)) === null || _this$getRoomDirectiv2 === void 0 ? void 0 : _this$getRoomDirectiv2.isLivechatRoom());\n  }\n\n  getRoomName(roomType, roomData) {\n    var _this$getRoomDirectiv3, _this$getRoomDirectiv4;\n\n    return (_this$getRoomDirectiv3 = (_this$getRoomDirectiv4 = this.getRoomDirectives(roomType)) === null || _this$getRoomDirectiv4 === void 0 ? void 0 : _this$getRoomDirectiv4.roomName(roomData)) !== null && _this$getRoomDirectiv3 !== void 0 ? _this$getRoomDirectiv3 : '';\n  }\n\n  readOnly(rid, user) {\n    const fields = _objectSpread({\n      ro: 1,\n      t: 1\n    }, user && {\n      muted: 1,\n      unmuted: 1\n    });\n\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields\n    });\n\n    if (!room) {\n      return false;\n    }\n\n    const directives = this.getRoomDirectives(room.t);\n\n    if (directives !== null && directives !== void 0 && directives.readOnly) {\n      return directives.readOnly(rid, user);\n    }\n\n    if (!(user !== null && user !== void 0 && user.username)) {\n      return Boolean(room.ro);\n    }\n\n    if (!room) {\n      return false;\n    }\n\n    if (Array.isArray(room.muted) && room.muted.indexOf(user.username) !== -1) {\n      return true;\n    }\n\n    if (room.ro) {\n      if (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username) !== -1) {\n        return false;\n      }\n\n      if (hasPermission('post-readonly', room._id)) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  } // #ToDo: Move this out of the RoomCoordinator\n\n\n  archived(rid) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        archived: 1\n      }\n    });\n    return Boolean(room === null || room === void 0 ? void 0 : room.archived);\n  }\n\n  verifyCanSendMessage(rid) {\n    var _this$getRoomDirectiv5;\n\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        t: 1\n      }\n    });\n\n    if (!(room !== null && room !== void 0 && room.t)) {\n      return false;\n    }\n\n    return Boolean((_this$getRoomDirectiv5 = this.getRoomDirectives(room.t)) === null || _this$getRoomDirectiv5 === void 0 ? void 0 : _this$getRoomDirectiv5.canSendMessage(rid));\n  }\n\n  getSortedTypes() {\n    return _.sortBy(this.roomTypesOrder, 'order').map(type => this.roomTypes[type.identifier]).filter(type => type.directives.condition());\n  }\n\n}\n\nconst roomCoordinator = new RoomCoordinatorClient();","map":{"version":3,"sources":["client/lib/rooms/roomCoordinator.ts"],"names":[],"mappings":"AAAA,IAAA,aAAA;;AAAS,MAAY,CAAA,IAAZ,CAAkB,sCAAlB,EAA8C;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAA9C,EAA8C,CAA9C;AAAT,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,eAAkB,EAAA,MAAA;AAAlB,CAAT;AAA2B,IAA4B,UAA5B;AAA4B,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,CAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA,EAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2CAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAevD,MAAM,qBAAN,SAAoC,eAApC,CAAmD;AAClD,EAAA,GAAG,CAAC,UAAD,EAA8B,UAA9B,EAA4E;AAC9E,SAAK,WAAL,CAAiB,UAAjB;AACC,MAAA,sBAAsB,CAAC,KAAD,EAAwB,QAAxB,EAAkE;AACvF,eAAO,IAAP;AACA,OAHF;;AAIC,MAAA,iBAAiB,CAAC,KAAD,EAAwB,OAAxB,EAAkE;AAClF,eAAO,KAAP;AACA,OANF;;AAOC,MAAA,QAAQ,CAAC,KAAD,EAAyD;AAChE,eAAO,EAAP;AACA,OATF;;AAUC,MAAA,WAAW,CAAC,KAAD,EAAsB;AAChC,eAAO,KAAP;AACA,OAZF;;AAaC,MAAA,oBAAoB,CAAC,SAAD,EAAiB,KAAjB,EAA+B,SAA/B,EAAgD;AACnE,eAAO,KAAP;AACA,OAfF;;AAgBC,MAAA,SAAS,CAAC,QAAD,EAAwC;AAChD,eAAO,EAAP;AACA,OAlBF;;AAmBC,MAAA,SAAS,GAAA;AACR,eAAO,IAAP;AACA,OArBF;;AAsBC,MAAA,aAAa,CAAC,KAAD,EAAM;AAClB,eAAO,EAAP;AACA,OAxBF;;AAyBC,MAAA,OAAO,CAAC,KAAD,EAAsB;AAC5B,eAAO,KAAK,MAAL,CAAY,IAAnB;AACA,OA3BF;;AA4BC,MAAA,aAAa,CAAC,OAAD,EAAgB;AAC5B,eAAO,SAAP;AACA,OA9BF;;AA+BC,MAAA,QAAQ,CAAC,WAAD,EAAoB;AAC3B,eAAO,SAAP;AACA,OAjCF;;AAkCC,MAAA,YAAY,CAAC,OAAD,EAAgB;AAC3B,eAAO,KAAP;AACA,OApCF;;AAqCC,MAAA,cAAc,GAAA;AACb,eAAO,KAAP;AACA,OAvCF;;AAwCC,MAAA,cAAc,CAAC,GAAD,EAAY;AACzB,eAAO,gBAAgB,CAAC,IAAjB,CAAsB;AAAE,UAAA;AAAF,SAAtB,EAA+B,KAA/B,KAAyC,CAAhD;AACA;;AA1CF,OA2CI,UA3CJ;AA4CC,MAAA,MAAM,EAAE;AA5CT;AA8CA;;AAES,EAAA,QAAQ,CAAC,IAAD,EAAe,WAAf,EAAwC;AACzD,UAAM,QAAN,CAAe,IAAf,kCAA0B,WAA1B;AAAuC,MAAA,YAAY,EAAE,CAAC,QAAD;AAArD;AACA;;AAED,EAAA,iBAAiB,CAAC,QAAD,EAAiB;AAAA;;AACjC,oCAAO,KAAK,SAAL,CAAe,QAAf,CAAP,0DAAO,sBAA0B,UAAjC;AACA;;AAED,EAAA,eAAe,CAAC,GAAD,EAAY;AAC1B,UAAM,IAAI,GAAG,QAAQ,CAAC,OAAT,CAAiB;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,CAAC,EAAE;AAAE,QAAA,OAAO,EAAE,IAAX;AAAiB,QAAA,GAAG,EAAE;AAAtB;AAAf,KAAjB,EAAgE;AAAE,MAAA,MAAM,EAAE;AAAE,QAAA,CAAC,EAAE;AAAL;AAAV,KAAhE,CAAb;AACA,WAAO,IAAP,aAAO,IAAP,uBAAO,IAAI,CAAE,CAAb;AACA;;AAED,EAAA,qBAAqB,CAAC,GAAD,EAAY;AAChC,UAAM,QAAQ,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAjB;;AACA,QAAI,QAAJ,EAAc;AACb,aAAO,KAAK,iBAAL,CAAuB,QAAvB,CAAP;AACA;AACD;;AAED,EAAA,qBAAqB,CAAC,GAAD,EAAY;AAChC,UAAM,QAAQ,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAjB;;AACA,QAAI,QAAJ,EAAc;AACb,aAAO,KAAK,iBAAL,CAAuB,QAAvB,CAAP;AACA;AACD;;AAED,EAAA,QAAQ,CAAC,IAAD,EAAe,IAAf,EAA0C;AAAA,QAAb,MAAa,uEAAJ,IAAI;AACjD,IAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,MAAb,CAAR;AACA;;AAED,EAAA,OAAO,CAAC,IAAD,EAAqB;AAAA;;AAC3B,WAAO,CAAA,IAAI,SAAJ,IAAA,IAAI,WAAJ,YAAA,IAAI,CAAE,CAAN,+BAAW,KAAK,iBAAL,CAAuB,IAAI,CAAC,CAA5B,CAAX,0DAAW,sBAAgC,OAAhC,CAAwC,IAAxC,CAAX,CAAP;AACA;;AAED,EAAA,aAAa,CAAC,QAAD,EAAqB,OAArB,EAAkD,WAAlD,EAAsF;AAClG,UAAM,MAAM,GAAG,KAAK,iBAAL,CAAuB,QAAvB,CAAf;;AACA,QAAI,EAAC,MAAD,aAAC,MAAD,eAAC,MAAM,CAAE,KAAT,CAAJ,EAAoB;AACnB;AACA;;AAED,QAAI,SAAS,GAAG,EAAhB;;AACA,QAAI,MAAM,CAAC,KAAP,CAAa,IAAjB,EAAuB;AACtB,MAAA,SAAS,GAAG,MAAM,CAAC,KAAP,CAAa,IAAb,CAAkB,OAAlB,CAAZ;AACA,KAFD,MAEO,IAAI,OAAJ,aAAI,OAAJ,eAAI,OAAO,CAAE,IAAb,EAAmB;AACzB,MAAA,SAAS,GAAG;AACX,QAAA,IAAI,EAAE,OAAO,CAAC;AADH,OAAZ;AAGA,KAJM,MAIA;AACN;AACA;;AAED,IAAA,UAAU,CAAC,EAAX,CAAc,MAAM,CAAC,KAAP,CAAa,IAA3B,EAAiC,SAAjC,EAA4C,WAA5C;AACA;;AAED,EAAA,cAAc,CAAC,QAAD,EAAiB;AAAA;;AAC9B,WAAO,OAAO,2BAAC,KAAK,iBAAL,CAAuB,QAAvB,CAAD,2DAAC,uBAAkC,cAAlC,EAAD,CAAd;AACA;;AAED,EAAA,WAAW,CAAC,QAAD,EAAmB,QAAnB,EAA8E;AAAA;;AACxF,+DAAO,KAAK,iBAAL,CAAuB,QAAvB,CAAP,2DAAO,uBAAkC,QAAlC,CAA2C,QAA3C,CAAP,2EAA+D,EAA/D;AACA;;AAED,EAAA,QAAQ,CAAC,GAAD,EAAc,IAAd,EAA8C;AACrD,UAAM,MAAM;AACX,MAAA,EAAE,EAAE,CADO;AAEX,MAAA,CAAC,EAAE;AAFQ,OAGP,IAAI,IAAI;AAAE,MAAA,KAAK,EAAE,CAAT;AAAY,MAAA,OAAO,EAAE;AAArB,KAHD,CAAZ;;AAKA,UAAM,IAAI,GAAG,QAAQ,CAAC,OAAT,CAAiB;AAAE,MAAA,GAAG,EAAE;AAAP,KAAjB,EAA+B;AAAE,MAAA;AAAF,KAA/B,CAAb;;AACA,QAAI,CAAC,IAAL,EAAW;AACV,aAAO,KAAP;AACA;;AAED,UAAM,UAAU,GAAG,KAAK,iBAAL,CAAuB,IAAI,CAAC,CAA5B,CAAnB;;AACA,QAAI,UAAJ,aAAI,UAAJ,eAAI,UAAU,CAAE,QAAhB,EAA0B;AACzB,aAAO,UAAU,CAAC,QAAX,CAAoB,GAApB,EAAyB,IAAzB,CAAP;AACA;;AAED,QAAI,EAAC,IAAD,aAAC,IAAD,eAAC,IAAI,CAAE,QAAP,CAAJ,EAAqB;AACpB,aAAO,OAAO,CAAC,IAAI,CAAC,EAAN,CAAd;AACA;;AAED,QAAI,CAAC,IAAL,EAAW;AACV,aAAO,KAAP;AACA;;AAED,QAAI,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,KAAnB,KAA6B,IAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,IAAI,CAAC,QAAxB,MAAsC,CAAC,CAAxE,EAA2E;AAC1E,aAAO,IAAP;AACA;;AAED,QAAI,IAAI,CAAC,EAAT,EAAa;AACZ,UAAI,KAAK,CAAC,OAAN,CAAc,IAAI,CAAC,OAAnB,KAA+B,IAAI,CAAC,OAAL,CAAa,OAAb,CAAqB,IAAI,CAAC,QAA1B,MAAwC,CAAC,CAA5E,EAA+E;AAC9E,eAAO,KAAP;AACA;;AAED,UAAI,aAAa,CAAC,eAAD,EAAkB,IAAI,CAAC,GAAvB,CAAjB,EAA8C;AAC7C,eAAO,KAAP;AACA;;AAED,aAAO,IAAP;AACA;;AAED,WAAO,KAAP;AACA,GA1JiD,CA4JlD;;;AACA,EAAA,QAAQ,CAAC,GAAD,EAAY;AACnB,UAAM,IAAI,GAAG,QAAQ,CAAC,OAAT,CAAiB;AAAE,MAAA,GAAG,EAAE;AAAP,KAAjB,EAA+B;AAAE,MAAA,MAAM,EAAE;AAAE,QAAA,QAAQ,EAAE;AAAZ;AAAV,KAA/B,CAAb;AACA,WAAO,OAAO,CAAC,IAAD,aAAC,IAAD,uBAAC,IAAI,CAAE,QAAP,CAAd;AACA;;AAED,EAAA,oBAAoB,CAAC,GAAD,EAAY;AAAA;;AAC/B,UAAM,IAAI,GAAG,QAAQ,CAAC,OAAT,CAAiB;AAAE,MAAA,GAAG,EAAE;AAAP,KAAjB,EAA+B;AAAE,MAAA,MAAM,EAAE;AAAE,QAAA,CAAC,EAAE;AAAL;AAAV,KAA/B,CAAb;;AACA,QAAI,EAAC,IAAD,aAAC,IAAD,eAAC,IAAI,CAAE,CAAP,CAAJ,EAAc;AACb,aAAO,KAAP;AACA;;AAED,WAAO,OAAO,2BAAC,KAAK,iBAAL,CAAuB,IAAI,CAAC,CAA5B,CAAD,2DAAC,uBAAgC,cAAhC,CAA+C,GAA/C,CAAD,CAAd;AACA;;AAED,EAAA,cAAc,GAAA;AACb,WAAO,CAAC,CAAC,MAAF,CAAS,KAAK,cAAd,EAA8B,OAA9B,EACL,GADK,CACA,IAAD,IAAU,KAAK,SAAL,CAAe,IAAI,CAAC,UAApB,CADT,EAEL,MAFK,CAEG,IAAD,IAAU,IAAI,CAAC,UAAL,CAAgB,SAAhB,EAFZ,CAAP;AAGA;;AA/KiD;;AAkL5C,MAAM,eAAe,GAAG,IAAI,qBAAJ,EAAxB","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport type { RouteOptions } from 'meteor/kadira:flow-router';\nimport _ from 'underscore';\n\nimport { hasPermission } from '../../../app/authorization/client';\nimport { ChatRoom, ChatSubscription } from '../../../app/models/client';\nimport { openRoom } from '../../../app/ui-utils/client/lib/openRoom';\nimport type { IRoom, RoomType } from '../../../definition/IRoom';\nimport type { IRoomTypeConfig, IRoomTypeClientDirectives, RoomIdentification } from '../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../definition/IRoomTypeConfig';\nimport type { IUser } from '../../../definition/IUser';\nimport type { AtLeast, ValueOf } from '../../../definition/utils';\nimport { RoomCoordinator } from '../../../lib/rooms/coordinator';\nimport { roomExit } from './roomExit';\n\nclass RoomCoordinatorClient extends RoomCoordinator {\n\tadd(roomConfig: IRoomTypeConfig, directives: Partial<IRoomTypeClientDirectives>): void {\n\t\tthis.addRoomType(roomConfig, {\n\t\t\tallowRoomSettingChange(_room: Partial<IRoom>, _setting: ValueOf<typeof RoomSettingsEnum>): boolean {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tallowMemberAction(_room: Partial<IRoom>, _action: ValueOf<typeof RoomMemberActions>): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\troomName(_room: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>): string {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tisGroupChat(_room: Partial<IRoom>): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\topenCustomProfileTab(_instance: any, _room: IRoom, _username: string): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tgetUiText(_context: ValueOf<typeof UiTextContext>): string {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tcondition(): boolean {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tgetAvatarPath(_room): string {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tgetIcon(_room: Partial<IRoom>): string | undefined {\n\t\t\t\treturn this.config.icon;\n\t\t\t},\n\t\t\tgetUserStatus(_roomId: string): string | undefined {\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tfindRoom(_identifier: string): IRoom | undefined {\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tshowJoinLink(_roomId: string): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tisLivechatRoom(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tcanSendMessage(rid: string): boolean {\n\t\t\t\treturn ChatSubscription.find({ rid }).count() > 0;\n\t\t\t},\n\t\t\t...directives,\n\t\t\tconfig: roomConfig,\n\t\t});\n\t}\n\n\tprotected addRoute(path: string, routeConfig: RouteOptions): void {\n\t\tsuper.addRoute(path, { ...routeConfig, triggersExit: [roomExit] });\n\t}\n\n\tgetRoomDirectives(roomType: string): IRoomTypeClientDirectives | undefined {\n\t\treturn this.roomTypes[roomType]?.directives as IRoomTypeClientDirectives;\n\t}\n\n\tgetRoomTypeById(rid: string): RoomType | undefined {\n\t\tconst room = ChatRoom.findOne({ _id: rid, t: { $exists: true, $ne: null } }, { fields: { t: 1 } });\n\t\treturn room?.t;\n\t}\n\n\tgetRoomDirectivesById(rid: string): IRoomTypeClientDirectives | undefined {\n\t\tconst roomType = this.getRoomTypeById(rid);\n\t\tif (roomType) {\n\t\t\treturn this.getRoomDirectives(roomType);\n\t\t}\n\t}\n\n\tgetRoomTypeConfigById(rid: string): IRoomTypeConfig | undefined {\n\t\tconst roomType = this.getRoomTypeById(rid);\n\t\tif (roomType) {\n\t\t\treturn this.getRoomTypeConfig(roomType);\n\t\t}\n\t}\n\n\topenRoom(type: string, name: string, render = true): void {\n\t\topenRoom(type, name, render);\n\t}\n\n\tgetIcon(room: Partial<IRoom>): string | undefined {\n\t\treturn room?.t && this.getRoomDirectives(room.t)?.getIcon(room);\n\t}\n\n\topenRouteLink(roomType: RoomType, subData: RoomIdentification, queryParams?: Record<string, string>): void {\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config?.route) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (config.route.link) {\n\t\t\trouteData = config.route.link(subData);\n\t\t} else if (subData?.name) {\n\t\t\trouteData = {\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tFlowRouter.go(config.route.name, routeData, queryParams);\n\t}\n\n\tisLivechatRoom(roomType: string): boolean {\n\t\treturn Boolean(this.getRoomDirectives(roomType)?.isLivechatRoom());\n\t}\n\n\tgetRoomName(roomType: string, roomData: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>): string {\n\t\treturn this.getRoomDirectives(roomType)?.roomName(roomData) ?? '';\n\t}\n\n\treadOnly(rid: string, user: AtLeast<IUser, 'username'>): boolean {\n\t\tconst fields = {\n\t\t\tro: 1,\n\t\t\tt: 1,\n\t\t\t...(user && { muted: 1, unmuted: 1 }),\n\t\t};\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields });\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst directives = this.getRoomDirectives(room.t);\n\t\tif (directives?.readOnly) {\n\t\t\treturn directives.readOnly(rid, user);\n\t\t}\n\n\t\tif (!user?.username) {\n\t\t\treturn Boolean(room.ro);\n\t\t}\n\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (Array.isArray(room.muted) && room.muted.indexOf(user.username) !== -1) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (room.ro) {\n\t\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username) !== -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (hasPermission('post-readonly', room._id)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #ToDo: Move this out of the RoomCoordinator\n\tarchived(rid: string): boolean {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { archived: 1 } });\n\t\treturn Boolean(room?.archived);\n\t}\n\n\tverifyCanSendMessage(rid: string): boolean {\n\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { t: 1 } });\n\t\tif (!room?.t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Boolean(this.getRoomDirectives(room.t)?.canSendMessage(rid));\n\t}\n\n\tgetSortedTypes(): Array<{ config: IRoomTypeConfig; directives: IRoomTypeClientDirectives }> {\n\t\treturn _.sortBy(this.roomTypesOrder, 'order')\n\t\t\t.map((type) => this.roomTypes[type.identifier] as { config: IRoomTypeConfig; directives: IRoomTypeClientDirectives })\n\t\t\t.filter((type) => type.directives.condition());\n\t}\n}\n\nexport const roomCoordinator = new RoomCoordinatorClient();\n"],"sourceRoot":""},"sourceType":"module","hash":"84d00fd4adf961d40f99029b75a3eac899e231c5"}
