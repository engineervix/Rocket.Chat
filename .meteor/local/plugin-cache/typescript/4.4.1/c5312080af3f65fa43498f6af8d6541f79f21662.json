{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Body.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/components/Message/Body/Body.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Body.tsx","inputSourceMap":{"version":3,"file":"client/components/Message/Body/Body.tsx","sourceRoot":"","sources":["client/components/Message/Body/Body.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAM,IAAI,EAAE,MAAM,OAAO,CAAC;AAExC,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,OAAO,MAAM,WAAW,CAAC;AAChC,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAQ5C,MAAM,UAAU,GAAG,CAAC,MAAoB,EAA2B,EAAE,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;AAE5H,MAAM,IAAI,GAAkB,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;IACpD,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;QACvB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;KAC5C;IAED,OAAO,CACN,EACC;GAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC5B,IAAI,KAAK,CAAC,IAAI,KAAK,gBAAgB,EAAE;gBACpC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACzD;YAED,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC3B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACjD;YACD,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC3B,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACpD;YAED,IAAI,KAAK,CAAC,IAAI,KAAK,cAAc,EAAE;gBAClC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACvD;YAED,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBAC/B,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACzE;YAED,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;gBAC1B,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACvC;YAED,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC7B,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC;aACnD;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC,CACH;EAAA,GAAG,CACH,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import { BigEmoji as ASTBigEmoji, MarkdownAST as GazzodownAST } from '@rocket.chat/message-parser';\nimport React, { FC, memo } from 'react';\n\nimport BigEmoji from './BigEmoji';\nimport Code from './Code';\nimport Heading from './Heading';\nimport OrderedList from './OrderedList';\nimport Paragraph from './Paragraph';\nimport Quote from './Quote';\nimport TaskList from './TaskList';\nimport UnorderedList from './UnorderedList';\nimport { UserMention } from './definitions/UserMention';\n\ntype BodyProps = {\n\ttokens: GazzodownAST;\n\tmentions: UserMention[];\n};\n\nconst isBigEmoji = (tokens: GazzodownAST): tokens is [ASTBigEmoji] => tokens.length === 1 && tokens[0].type === 'BIG_EMOJI';\n\nconst Body: FC<BodyProps> = ({ tokens, mentions }) => {\n\tif (isBigEmoji(tokens)) {\n\t\treturn <BigEmoji value={tokens[0].value} />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{tokens.map((block, index) => {\n\t\t\t\tif (block.type === 'UNORDERED_LIST') {\n\t\t\t\t\treturn <UnorderedList value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'QUOTE') {\n\t\t\t\t\treturn <Quote value={block.value} key={index} />;\n\t\t\t\t}\n\t\t\t\tif (block.type === 'TASKS') {\n\t\t\t\t\treturn <TaskList value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'ORDERED_LIST') {\n\t\t\t\t\treturn <OrderedList value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'PARAGRAPH') {\n\t\t\t\t\treturn <Paragraph mentions={mentions} value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'CODE') {\n\t\t\t\t\treturn <Code {...block} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'HEADING') {\n\t\t\t\t\treturn <Heading value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport default memo(Body);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Body.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Message/Body/Body.tsx"}},"code":"var _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 0);\nvar React, memo;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  memo: function (v) {\n    memo = v;\n  }\n}, 0);\nvar BigEmoji;\nmodule.link(\"./BigEmoji\", {\n  \"default\": function (v) {\n    BigEmoji = v;\n  }\n}, 1);\nvar Code;\nmodule.link(\"./Code\", {\n  \"default\": function (v) {\n    Code = v;\n  }\n}, 2);\nvar Heading;\nmodule.link(\"./Heading\", {\n  \"default\": function (v) {\n    Heading = v;\n  }\n}, 3);\nvar OrderedList;\nmodule.link(\"./OrderedList\", {\n  \"default\": function (v) {\n    OrderedList = v;\n  }\n}, 4);\nvar Paragraph;\nmodule.link(\"./Paragraph\", {\n  \"default\": function (v) {\n    Paragraph = v;\n  }\n}, 5);\nvar Quote;\nmodule.link(\"./Quote\", {\n  \"default\": function (v) {\n    Quote = v;\n  }\n}, 6);\nvar TaskList;\nmodule.link(\"./TaskList\", {\n  \"default\": function (v) {\n    TaskList = v;\n  }\n}, 7);\nvar UnorderedList;\nmodule.link(\"./UnorderedList\", {\n  \"default\": function (v) {\n    UnorderedList = v;\n  }\n}, 8);\n\nvar isBigEmoji = function (tokens) {\n  return tokens.length === 1 && tokens[0].type === 'BIG_EMOJI';\n};\n\nvar Body = function (_ref) {\n  var tokens = _ref.tokens,\n      mentions = _ref.mentions;\n\n  if (isBigEmoji(tokens)) {\n    return /*#__PURE__*/React.createElement(BigEmoji, {\n      value: tokens[0].value\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, tokens.map(function (block, index) {\n    if (block.type === 'UNORDERED_LIST') {\n      return /*#__PURE__*/React.createElement(UnorderedList, {\n        value: block.value,\n        key: index\n      });\n    }\n\n    if (block.type === 'QUOTE') {\n      return /*#__PURE__*/React.createElement(Quote, {\n        value: block.value,\n        key: index\n      });\n    }\n\n    if (block.type === 'TASKS') {\n      return /*#__PURE__*/React.createElement(TaskList, {\n        value: block.value,\n        key: index\n      });\n    }\n\n    if (block.type === 'ORDERED_LIST') {\n      return /*#__PURE__*/React.createElement(OrderedList, {\n        value: block.value,\n        key: index\n      });\n    }\n\n    if (block.type === 'PARAGRAPH') {\n      return /*#__PURE__*/React.createElement(Paragraph, {\n        mentions: mentions,\n        value: block.value,\n        key: index\n      });\n    }\n\n    if (block.type === 'CODE') {\n      return /*#__PURE__*/React.createElement(Code, _extends({}, block, {\n        key: index\n      }));\n    }\n\n    if (block.type === 'HEADING') {\n      return /*#__PURE__*/React.createElement(Heading, {\n        value: block.value,\n        key: index\n      });\n    }\n\n    return null;\n  }));\n};\n\nmodule.exportDefault( /*#__PURE__*/memo(Body));","map":{"version":3,"sources":["client/components/Message/Body/Body.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BigEmoji as ASTBigEmoji, MarkdownAST as GazzodownAST } from '@rocket.chat/message-parser';\nimport React, { FC, memo } from 'react';\n\nimport BigEmoji from './BigEmoji';\nimport Code from './Code';\nimport Heading from './Heading';\nimport OrderedList from './OrderedList';\nimport Paragraph from './Paragraph';\nimport Quote from './Quote';\nimport TaskList from './TaskList';\nimport UnorderedList from './UnorderedList';\nimport { UserMention } from './definitions/UserMention';\n\ntype BodyProps = {\n\ttokens: GazzodownAST;\n\tmentions: UserMention[];\n};\n\nconst isBigEmoji = (tokens: GazzodownAST): tokens is [ASTBigEmoji] => tokens.length === 1 && tokens[0].type === 'BIG_EMOJI';\n\nconst Body: FC<BodyProps> = ({ tokens, mentions }) => {\n\tif (isBigEmoji(tokens)) {\n\t\treturn <BigEmoji value={tokens[0].value} />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{tokens.map((block, index) => {\n\t\t\t\tif (block.type === 'UNORDERED_LIST') {\n\t\t\t\t\treturn <UnorderedList value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'QUOTE') {\n\t\t\t\t\treturn <Quote value={block.value} key={index} />;\n\t\t\t\t}\n\t\t\t\tif (block.type === 'TASKS') {\n\t\t\t\t\treturn <TaskList value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'ORDERED_LIST') {\n\t\t\t\t\treturn <OrderedList value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'PARAGRAPH') {\n\t\t\t\t\treturn <Paragraph mentions={mentions} value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'CODE') {\n\t\t\t\t\treturn <Code {...block} key={index} />;\n\t\t\t\t}\n\n\t\t\t\tif (block.type === 'HEADING') {\n\t\t\t\t\treturn <Heading value={block.value} key={index} />;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport default memo(Body);\n"],"sourceRoot":""},"sourceType":"module","hash":"c5312080af3f65fa43498f6af8d6541f79f21662"}
