{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/lists/RecordList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/lists/RecordList.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/lists/RecordList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/RecordList.ts","sourceRoot":"","sources":["client/lib/lists/RecordList.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport type { IRocketChatRecord } from '../../../definition/IRocketChatRecord';\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends IRocketChatRecord> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\treturn a._updatedAt.getTime() - b._updatedAt.getTime();\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/lists/RecordList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/lists/RecordList.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _createForOfIteratorHelperLoose;\n\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 1);\n\nvar _createClass;\n\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 2);\n\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 3);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 4);\n\nvar _classPrivateFieldLooseBase;\n\nmodule.link(\"@babel/runtime/helpers/classPrivateFieldLooseBase\", {\n  default: function (v) {\n    _classPrivateFieldLooseBase = v;\n  }\n}, 5);\n\nvar _classPrivateFieldLooseKey;\n\nmodule.link(\"@babel/runtime/helpers/classPrivateFieldLooseKey\", {\n  default: function (v) {\n    _classPrivateFieldLooseKey = v;\n  }\n}, 6);\nmodule.export({\n  RecordList: function () {\n    return RecordList;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar AsyncStatePhase;\nmodule.link(\"../asyncState\", {\n  AsyncStatePhase: function (v) {\n    AsyncStatePhase = v;\n  }\n}, 1);\n\nvar _hasChanges = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasChanges\");\n\nvar _index = /*#__PURE__*/_classPrivateFieldLooseKey(\"index\");\n\nvar _phase = /*#__PURE__*/_classPrivateFieldLooseKey(\"phase\");\n\nvar _items = /*#__PURE__*/_classPrivateFieldLooseKey(\"items\");\n\nvar _itemCount = /*#__PURE__*/_classPrivateFieldLooseKey(\"itemCount\");\n\nvar _pedingMutation = /*#__PURE__*/_classPrivateFieldLooseKey(\"pedingMutation\");\n\nvar RecordList = /*#__PURE__*/function (_Emitter) {\n  _inheritsLoose(RecordList, _Emitter);\n\n  function RecordList() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Emitter.call.apply(_Emitter, [this].concat(args)) || this;\n    Object.defineProperty(_assertThisInitialized(_this), _hasChanges, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _index, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _phase, {\n      writable: true,\n      value: AsyncStatePhase.LOADING\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _items, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _itemCount, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _pedingMutation, {\n      writable: true,\n      value: Promise.resolve()\n    });\n    return _this;\n  }\n\n  var _proto = RecordList.prototype;\n\n  _proto.filter = function () {\n    function filter(_item) {\n      return true;\n    }\n\n    return filter;\n  }();\n\n  _proto.compare = function () {\n    function compare(a, b) {\n      return a._updatedAt.getTime() - b._updatedAt.getTime();\n    }\n\n    return compare;\n  }();\n\n  _proto.insert = function () {\n    function insert(item) {\n      _classPrivateFieldLooseBase(this, _index)[_index].set(item._id, item);\n\n      this.emit(item._id + \"/inserted\", item);\n\n      if (typeof _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] === 'number') {\n        _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]++;\n      }\n\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n    }\n\n    return insert;\n  }();\n\n  _proto.update = function () {\n    function update(item) {\n      _classPrivateFieldLooseBase(this, _index)[_index].set(item._id, item);\n\n      this.emit(item._id + \"/updated\", item);\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n    }\n\n    return update;\n  }();\n\n  _proto.delete = function () {\n    function _delete(_id) {\n      _classPrivateFieldLooseBase(this, _index)[_index].delete(_id);\n\n      this.emit(_id + \"/deleted\");\n\n      if (typeof _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] === 'number') {\n        _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]--;\n      }\n\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n    }\n\n    return _delete;\n  }();\n\n  _proto.push = function () {\n    function push(item) {\n      var exists = _classPrivateFieldLooseBase(this, _index)[_index].has(item._id);\n\n      var valid = this.filter(item);\n\n      if (exists && !valid) {\n        this.delete(item._id);\n        return;\n      }\n\n      if (exists && valid) {\n        this.update(item);\n        return;\n      }\n\n      if (!exists && valid) {\n        this.insert(item);\n      }\n    }\n\n    return push;\n  }();\n\n  _proto.mutate = function () {\n    function mutate(mutation) {\n      var hasChanged;\n      return _regeneratorRuntime.async(function () {\n        function mutate$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (_classPrivateFieldLooseBase(this, _phase)[_phase] === AsyncStatePhase.RESOLVED) {\n                  _classPrivateFieldLooseBase(this, _phase)[_phase] = AsyncStatePhase.UPDATING;\n                  this.emit('mutating');\n                }\n\n                _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation] = _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation].then(mutation);\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(_classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation]);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                this.emit('errored', _context.t0);\n\n              case 10:\n                _context.prev = 10;\n                hasChanged = _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges];\n                _classPrivateFieldLooseBase(this, _phase)[_phase] = AsyncStatePhase.RESOLVED;\n\n                if (hasChanged) {\n                  _classPrivateFieldLooseBase(this, _items)[_items] = undefined;\n                  _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = false;\n                }\n\n                this.emit('mutated', hasChanged);\n                return _context.finish(10);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return mutate$;\n      }(), null, this, [[0, 7, 10, 16]], Promise);\n    }\n\n    return mutate;\n  }();\n\n  _proto.batchHandle = function () {\n    function batchHandle(getInfo) {\n      var _this2 = this;\n\n      return this.mutate(function () {\n        function _callee() {\n          var info, _iterator, _step, item;\n\n          return _regeneratorRuntime.async(function () {\n            function _callee$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime.awrap(getInfo());\n\n                  case 2:\n                    info = _context2.sent;\n\n                    if (info.items) {\n                      for (_iterator = _createForOfIteratorHelperLoose(info.items); !(_step = _iterator()).done;) {\n                        item = _step.value;\n\n                        _this2.push(item);\n                      }\n                    }\n\n                    if (info.itemCount) {\n                      _classPrivateFieldLooseBase(_this2, _itemCount)[_itemCount] = info.itemCount;\n                      _classPrivateFieldLooseBase(_this2, _hasChanges)[_hasChanges] = true;\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }\n\n            return _callee$;\n          }(), null, null, null, Promise);\n        }\n\n        return _callee;\n      }());\n    }\n\n    return batchHandle;\n  }();\n\n  _proto.prune = function () {\n    function prune(matchCriteria) {\n      var _this3 = this;\n\n      return this.mutate(function () {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(_classPrivateFieldLooseBase(_this3, _index)[_index].values()), _step2; !(_step2 = _iterator2()).done;) {\n          var item = _step2.value;\n\n          if (matchCriteria(item)) {\n            _this3.delete(item._id);\n          }\n        }\n      });\n    }\n\n    return prune;\n  }();\n\n  _proto.handle = function () {\n    function handle(item) {\n      var _this4 = this;\n\n      return this.mutate(function () {\n        _this4.push(item);\n      });\n    }\n\n    return handle;\n  }();\n\n  _proto.remove = function () {\n    function remove(_id) {\n      var _this5 = this;\n\n      return this.mutate(function () {\n        if (!_classPrivateFieldLooseBase(_this5, _index)[_index].has(_id)) {\n          return;\n        }\n\n        _this5.delete(_id);\n      });\n    }\n\n    return remove;\n  }();\n\n  _proto.clear = function () {\n    function clear() {\n      var _this6 = this;\n\n      return this.mutate(function () {\n        if (_classPrivateFieldLooseBase(_this6, _index)[_index].size === 0) {\n          return;\n        }\n\n        _classPrivateFieldLooseBase(_this6, _index)[_index].clear();\n\n        _classPrivateFieldLooseBase(_this6, _items)[_items] = undefined;\n        _classPrivateFieldLooseBase(_this6, _itemCount)[_itemCount] = undefined;\n        _classPrivateFieldLooseBase(_this6, _hasChanges)[_hasChanges] = true;\n\n        _this6.emit('cleared');\n      });\n    }\n\n    return clear;\n  }();\n\n  _createClass(RecordList, [{\n    key: \"phase\",\n    get: function () {\n      return _classPrivateFieldLooseBase(this, _phase)[_phase];\n    }\n  }, {\n    key: \"items\",\n    get: function () {\n      if (!_classPrivateFieldLooseBase(this, _items)[_items]) {\n        _classPrivateFieldLooseBase(this, _items)[_items] = Array.from(_classPrivateFieldLooseBase(this, _index)[_index].values()).sort(this.compare);\n      }\n\n      return _classPrivateFieldLooseBase(this, _items)[_items];\n    }\n  }, {\n    key: \"itemCount\",\n    get: function () {\n      var _classPrivateFieldLoo;\n\n      return (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]) !== null && _classPrivateFieldLoo !== void 0 ? _classPrivateFieldLoo : _classPrivateFieldLooseBase(this, _index)[_index].size;\n    }\n  }]);\n\n  return RecordList;\n}(Emitter);","map":{"version":3,"sources":["client/lib/lists/RecordList.ts"],"names":[],"mappings":"AAAA,IAAA,mBAAA;;AAAwB,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAuB;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;AAAA,CAAvB,EAAuB,CAAvB;;AAAuB,IAAA,+BAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,uDAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,+BAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,YAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,oCAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,sBAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,8CAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,cAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,2BAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,mDAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,2BAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAAA,IAAA,0BAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,kDAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,0BAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAA/C,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,UAAe,EAAA,YAAA;AAAA,WAAA,UAAA;AAAuB;AAAtC,CAAT;AAA+C,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;;;IAUlC,U;;;;;;;;;;;;;aACE;;;;aAEL,IAAI,GAAJ;;;;aAE+E,eAAe,CAAC;;;;aAE9E;;;;aAEO;;;;aAqEA,OAAO,CAAC,OAAR;;;;;;;SAnEvB,M;AAAA,oBAAO,KAAP,EAAe;AACxB,aAAO,IAAP;AACA;;;;;SAES,O;AAAA,qBAAQ,CAAR,EAAc,CAAd,EAAkB;AAC3B,aAAO,CAAC,CAAC,UAAF,CAAa,OAAb,KAAyB,CAAC,CAAC,UAAF,CAAa,OAAb,EAAhC;AACA;;;;;SAkBO,M;AAAA,oBAAO,IAAP,EAAc;AACrB,wDAAY,GAAZ,CAAgB,IAAI,CAAC,GAArB,EAA0B,IAA1B;;AACA,WAAK,IAAL,CAAa,IAAI,CAAC,GAAlB,gBAAkC,IAAlC;;AACA,UAAI,mCAAO,IAAP,8BAA2B,QAA/B,EAAyC;AACxC;AACA;;AACD,oEAAmB,IAAnB;AACA;;;;;SAEO,M;AAAA,oBAAO,IAAP,EAAc;AACrB,wDAAY,GAAZ,CAAgB,IAAI,CAAC,GAArB,EAA0B,IAA1B;;AACA,WAAK,IAAL,CAAa,IAAI,CAAC,GAAlB,eAAiC,IAAjC;AACA,oEAAmB,IAAnB;AACA;;;;;SAEO,M;AAAA,qBAAO,GAAP,EAAoB;AAC3B,wDAAY,MAAZ,CAAmB,GAAnB;;AACA,WAAK,IAAL,CAAa,GAAb;;AACA,UAAI,mCAAO,IAAP,8BAA2B,QAA/B,EAAyC;AACxC;AACA;;AACD,oEAAmB,IAAnB;AACA;;;;;SAEO,I;AAAA,kBAAK,IAAL,EAAY;AACnB,UAAM,MAAM,GAAG,kDAAY,GAAZ,CAAgB,IAAI,CAAC,GAArB,CAAf;;AACA,UAAM,KAAK,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAd;;AAEA,UAAI,MAAM,IAAI,CAAC,KAAf,EAAsB;AACrB,aAAK,MAAL,CAAY,IAAI,CAAC,GAAjB;AACA;AACA;;AAED,UAAI,MAAM,IAAI,KAAd,EAAqB;AACpB,aAAK,MAAL,CAAY,IAAZ;AACA;AACA;;AAED,UAAI,CAAC,MAAD,IAAW,KAAf,EAAsB;AACrB,aAAK,MAAL,CAAY,IAAZ;AACA;AACD;;;;;SAIe,M;AAAN,oBAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAER,oBAAI,sDAAgB,eAAe,CAAC,QAApC,EAA8C;AAC7C,sEAAc,eAAe,CAAC,QAA9B;AACA,uBAAK,IAAL,CAAU,UAAV;AACA;;AAED,sFAAuB,oEAAqB,IAArB,CAA0B,QAA1B,CAAvB;AAPQ;AAAA,6EAQF,IARE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUR,qBAAK,IAAL,CAAU,SAAV;;AAVQ;AAAA;AAYF,gBAAA,UAZE,+BAYW,IAZX;AAaR,oEAAc,eAAe,CAAC,QAA9B;;AACA,oBAAI,UAAJ,EAAgB;AACf,sEAAc,SAAd;AACA,gFAAmB,KAAnB;AACA;;AACD,qBAAK,IAAL,CAAU,SAAV,EAAqB,UAArB;AAlBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAsBH,W;AAAA,yBAAY,OAAZ,EAA6D;AAAA;;AACnE,aAAO,KAAK,MAAL;AAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACC,OAAO,EADR;;AAAA;AACZ,oBAAA,IADY;;AAGlB,wBAAI,IAAI,CAAC,KAAT,EAAgB;AACf,uEAAmB,IAAI,CAAC,KAAxB,iCAA+B;AAApB,wBAAA,IAAoB;;AAC9B,wBAAA,MAAI,CAAC,IAAL,CAAU,IAAV;AACA;AACD;;AAED,wBAAI,IAAI,CAAC,SAAT,EAAoB;AACnB,kDAAA,MAAI,aAAJ,eAAkB,IAAI,CAAC,SAAvB;AACA,kDAAA,MAAI,cAAJ,gBAAmB,IAAnB;AACA;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAZ;AAAA,UAAP;AAcA;;;;;SAEM,K;AAAA,mBAAM,aAAN,EAAyC;AAAA;;AAC/C,aAAO,KAAK,MAAL,CAAY,YAAK;AACvB,8DAAmB,4BAAA,MAAI,SAAJ,SAAY,MAAZ,EAAnB,2CAAyC;AAAA,cAA9B,IAA8B;;AACxC,cAAI,aAAa,CAAC,IAAD,CAAjB,EAAyB;AACxB,YAAA,MAAI,CAAC,MAAL,CAAY,IAAI,CAAC,GAAjB;AACA;AACD;AACD,OANM,CAAP;AAOA;;;;;SAEM,M;AAAA,oBAAO,IAAP,EAAc;AAAA;;AACpB,aAAO,KAAK,MAAL,CAAY,YAAK;AACvB,QAAA,MAAI,CAAC,IAAL,CAAU,IAAV;AACA,OAFM,CAAP;AAGA;;;;;SAEM,M;AAAA,oBAAO,GAAP,EAAoB;AAAA;;AAC1B,aAAO,KAAK,MAAL,CAAY,YAAK;AACvB,YAAI,CAAC,4BAAA,MAAI,SAAJ,SAAY,GAAZ,CAAgB,GAAhB,CAAL,EAA2B;AAC1B;AACA;;AAED,QAAA,MAAI,CAAC,MAAL,CAAY,GAAZ;AACA,OANM,CAAP;AAOA;;;;;SAEM,K;AAAA,qBAAK;AAAA;;AACX,aAAO,KAAK,MAAL,CAAY,YAAK;AACvB,YAAI,4BAAA,MAAI,SAAJ,SAAY,IAAZ,KAAqB,CAAzB,EAA4B;AAC3B;AACA;;AAED,oCAAA,MAAI,SAAJ,SAAY,KAAZ;;AACA,oCAAA,MAAI,SAAJ,WAAc,SAAd;AACA,oCAAA,MAAI,aAAJ,eAAkB,SAAlB;AACA,oCAAA,MAAI,cAAJ,gBAAmB,IAAnB;;AACA,QAAA,MAAI,CAAC,IAAL,CAAU,SAAV;AACA,OAVM,CAAP;AAWA;;;;;;;SA1ID,YAAgB;AACf,yCAAO,IAAP;AACA;;;SAED,YAAgB;AACf,UAAI,6BAAC,IAAD,iBAAJ,EAAkB;AACjB,4DAAc,KAAK,CAAC,IAAN,CAAW,kDAAY,MAAZ,EAAX,EAAiC,IAAjC,CAAsC,KAAK,OAA3C,CAAd;AACA;;AAED,yCAAO,IAAP;AACA;;;SAED,YAAoB;AAAA;;AACnB,kEAAO,IAAP,kGAA0B,kDAAY,IAAtC;AACA;;;;EAjC2D,O","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport type { IRocketChatRecord } from '../../../definition/IRocketChatRecord';\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends IRocketChatRecord> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\treturn a._updatedAt.getTime() - b._updatedAt.getTime();\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"d71a0a4a3998c4dbed95f9d3c7c763263efb2aeb"}
