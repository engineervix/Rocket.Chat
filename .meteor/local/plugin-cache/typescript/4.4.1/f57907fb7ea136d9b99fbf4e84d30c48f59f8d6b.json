{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,KAAa,MAAM,OAAO,CAAC;AAGlC,OAAO,EAAE,mBAAmB,EAAE,MAAM,wDAAwD,CAAC;AAC7F,OAAO,EAAE,cAAc,EAAE,MAAM,4CAA4C,CAAC;AAC5E,OAAO,KAAK,MAAM,2BAA2B,CAAC;AAC9C,OAAO,IAAI,MAAM,0BAA0B,CAAC;AAC5C,OAAO,KAAK,MAAM,2BAA2B,CAAC;AAM9C,MAAM,WAAW,GAAyB,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IACtD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAE3E,qFAAqF;IACrF,wDAAwD;IACxD,MAAM,kBAAkB,GAOpB;QACH,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;QACrB,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;QACjB,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC;QACb,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,oBAAoB,CAAC;QACjD,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,oBAAoB,CAAC;QACjD,KAAK,EAAE,CAAC,CAAC,oBAAoB,CAAC;KAC9B,CAAC;IAEF,MAAM,uBAAuB,GAOzB;QACH,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE;QACtB,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC;QAClB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC;QACvC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC;QACvC,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC;KACpB,CAAC;IAEF,OAAO,CACN,CAAC,KAAK,CACL;GAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAC5B;GAAA,CAAC,IAAI,CACJ;IAAA,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CACtC;KAAA,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAC/D;KAAA,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CACrB;MAAA,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CACpD;KAAA,EAAE,KAAK,CACP;KAAA,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAC3C;IAAA,EAAE,GAAG,CACN;GAAA,EAAE,IAAI,CACP;EAAA,EAAE,KAAK,CAAC,CACR,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport React, { FC } from 'react';\n\nimport { IOmnichannelRoom } from '../../../../../../definition/IRoom';\nimport { OmnichannelRoomIcon } from '../../../../../components/RoomIcon/OmnichannelRoomIcon';\nimport { useTranslation } from '../../../../../contexts/TranslationContext';\nimport Field from '../../../components/Field';\nimport Info from '../../../components/Info';\nimport Label from '../../../components/Label';\n\ntype SourceFieldProps = {\n\troom: IOmnichannelRoom;\n};\n\nconst SourceField: FC<SourceFieldProps> = ({ room }) => {\n\tconst t = useTranslation();\n\n\tconst roomSource = room.source.alias || room.source.id || room.source.type;\n\n\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n\t// so we don't have to write this object again and again\n\tconst defaultTypesLabels: {\n\t\twidget: string;\n\t\temail: string;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: t('Livechat'),\n\t\temail: t('Email'),\n\t\tsms: t('SMS'),\n\t\tapp: room.source.alias || t('Custom_Integration'),\n\t\tapi: room.source.alias || t('Custom_Integration'),\n\t\tother: t('Custom_Integration'),\n\t};\n\n\tconst defaultTypesVisitorData: {\n\t\twidget: string | undefined;\n\t\temail: string | undefined;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: '',\n\t\temail: room?.source.id,\n\t\tsms: t('External'),\n\t\tapp: room.source.label || t('External'),\n\t\tapi: room.source.label || t('External'),\n\t\tother: t('External'),\n\t};\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Channel')}</Label>\n\t\t\t<Info>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<OmnichannelRoomIcon room={room} size='x24' placement='default' />\n\t\t\t\t\t<Label mi='x8' mbe='0'>\n\t\t\t\t\t\t{defaultTypesLabels[room.source.type] || roomSource}\n\t\t\t\t\t</Label>\n\t\t\t\t\t{defaultTypesVisitorData[room.source.type]}\n\t\t\t\t</Box>\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default SourceField;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx"}},"code":"let Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet OmnichannelRoomIcon;\nmodule.link(\"../../../../../components/RoomIcon/OmnichannelRoomIcon\", {\n  OmnichannelRoomIcon(v) {\n    OmnichannelRoomIcon = v;\n  }\n\n}, 2);\nlet useTranslation;\nmodule.link(\"../../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 3);\nlet Field;\nmodule.link(\"../../../components/Field\", {\n  default(v) {\n    Field = v;\n  }\n\n}, 4);\nlet Info;\nmodule.link(\"../../../components/Info\", {\n  default(v) {\n    Info = v;\n  }\n\n}, 5);\nlet Label;\nmodule.link(\"../../../components/Label\", {\n  default(v) {\n    Label = v;\n  }\n\n}, 6);\n\nconst SourceField = _ref => {\n  let {\n    room\n  } = _ref;\n  const t = useTranslation();\n  const roomSource = room.source.alias || room.source.id || room.source.type; // TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n  // so we don't have to write this object again and again\n\n  const defaultTypesLabels = {\n    widget: t('Livechat'),\n    email: t('Email'),\n    sms: t('SMS'),\n    app: room.source.alias || t('Custom_Integration'),\n    api: room.source.alias || t('Custom_Integration'),\n    other: t('Custom_Integration')\n  };\n  const defaultTypesVisitorData = {\n    widget: '',\n    email: room === null || room === void 0 ? void 0 : room.source.id,\n    sms: t('External'),\n    app: room.source.label || t('External'),\n    api: room.source.label || t('External'),\n    other: t('External')\n  };\n  return /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Label, null, t('Channel')), /*#__PURE__*/React.createElement(Info, null, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(OmnichannelRoomIcon, {\n    room: room,\n    size: \"x24\",\n    placement: \"default\"\n  }), /*#__PURE__*/React.createElement(Label, {\n    mi: \"x8\",\n    mbe: \"0\"\n  }, defaultTypesLabels[room.source.type] || roomSource), defaultTypesVisitorData[room.source.type])));\n};\n\nmodule.exportDefault(SourceField);","map":{"version":3,"sources":["client/views/omnichannel/directory/chats/contextualBar/SourceField.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport React, { FC } from 'react';\n\nimport { IOmnichannelRoom } from '../../../../../../definition/IRoom';\nimport { OmnichannelRoomIcon } from '../../../../../components/RoomIcon/OmnichannelRoomIcon';\nimport { useTranslation } from '../../../../../contexts/TranslationContext';\nimport Field from '../../../components/Field';\nimport Info from '../../../components/Info';\nimport Label from '../../../components/Label';\n\ntype SourceFieldProps = {\n\troom: IOmnichannelRoom;\n};\n\nconst SourceField: FC<SourceFieldProps> = ({ room }) => {\n\tconst t = useTranslation();\n\n\tconst roomSource = room.source.alias || room.source.id || room.source.type;\n\n\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n\t// so we don't have to write this object again and again\n\tconst defaultTypesLabels: {\n\t\twidget: string;\n\t\temail: string;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: t('Livechat'),\n\t\temail: t('Email'),\n\t\tsms: t('SMS'),\n\t\tapp: room.source.alias || t('Custom_Integration'),\n\t\tapi: room.source.alias || t('Custom_Integration'),\n\t\tother: t('Custom_Integration'),\n\t};\n\n\tconst defaultTypesVisitorData: {\n\t\twidget: string | undefined;\n\t\temail: string | undefined;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: '',\n\t\temail: room?.source.id,\n\t\tsms: t('External'),\n\t\tapp: room.source.label || t('External'),\n\t\tapi: room.source.label || t('External'),\n\t\tother: t('External'),\n\t};\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Channel')}</Label>\n\t\t\t<Info>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<OmnichannelRoomIcon room={room} size='x24' placement='default' />\n\t\t\t\t\t<Label mi='x8' mbe='0'>\n\t\t\t\t\t\t{defaultTypesLabels[room.source.type] || roomSource}\n\t\t\t\t\t</Label>\n\t\t\t\t\t{defaultTypesVisitorData[room.source.type]}\n\t\t\t\t</Box>\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default SourceField;\n"],"sourceRoot":""},"sourceType":"module","hash":"f57907fb7ea136d9b99fbf4e84d30c48f59f8d6b"}
