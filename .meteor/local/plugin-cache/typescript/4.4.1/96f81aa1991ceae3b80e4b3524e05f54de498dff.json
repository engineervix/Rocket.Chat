{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/ecdh.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"ee/client/ecdh.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/ecdh.ts","inputSourceMap":{"version":3,"file":"ee/client/ecdh.ts","sourceRoot":"","sources":["ee/client/ecdh.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { APIClient } from '../../app/utils/client';\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\n\nlet resolveSession: (value: ClientSession | void) => void;\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\n\tresolveSession = resolve;\n});\n\nfunction init(session: ClientSession): void {\n\tMeteor.connection._stream.allowConnection();\n\n\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\n\t\tconst decryptedData = await session.decrypt(data);\n\t\tdecryptedData.split('\\n').forEach((d) => _didMessage(d));\n\t};\n\n\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\n\t\tsend(await session.encrypt(data));\n\t};\n}\n\nasync function initEncryptedSession(): Promise<void> {\n\tif (!window.ECDH_Enabled) {\n\t\tMeteor.connection._stream.allowConnection();\n\t\treturn resolveSession();\n\t}\n\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\n\tconst session = new ClientSession();\n\tconst clientPublicKey = await session.init();\n\n\ttry {\n\t\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ clientPublicKey }),\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\tif (data.success === false) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tawait session.setServerKey(data.publicKeyString);\n\t\tresolveSession(session);\n\t\tinit(session);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tresolveSession();\n\t\tMeteor.connection._stream.allowConnection();\n\t}\n}\n\ninitEncryptedSession();\n\nconst _jqueryCall = APIClient._jqueryCall.bind(APIClient);\n\nAPIClient._jqueryCall = async (method, endpoint, params, body, headers = {}): Promise<any> => {\n\tconst session = await sessionPromise;\n\n\tif (!session) {\n\t\treturn _jqueryCall(method, endpoint, params, body, headers);\n\t}\n\n\tconst result = await _jqueryCall(method, endpoint, params, body, headers, 'text');\n\tconst decrypted = await session.decrypt(result);\n\tconst parsed = JSON.parse(decrypted);\n\treturn parsed;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/ecdh.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/client/ecdh.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet APIClient;\nmodule.link(\"../../app/utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 1);\nlet resolveSession;\nconst sessionPromise = new Promise(resolve => {\n  resolveSession = resolve;\n});\n\nfunction init(session) {\n  Meteor.connection._stream.allowConnection();\n\n  const _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\n  const send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n  Meteor.connection._stream.socket._didMessage = async data => {\n    const decryptedData = await session.decrypt(data);\n    decryptedData.split('\\n').forEach(d => _didMessage(d));\n  };\n\n  Meteor.connection._stream.socket.send = async data => {\n    send(await session.encrypt(data));\n  };\n}\n\nasync function initEncryptedSession() {\n  if (!window.ECDH_Enabled) {\n    Meteor.connection._stream.allowConnection();\n\n    return resolveSession();\n  }\n\n  const {\n    ClientSession\n  } = await module.dynamicImport('../app/ecdh/client/ClientSession');\n  const session = new ClientSession();\n  const clientPublicKey = await session.init();\n\n  try {\n    const response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        clientPublicKey\n      })\n    });\n\n    if (response.status !== 200) {\n      resolveSession();\n      return Meteor.connection._stream.allowConnection();\n    }\n\n    const data = await response.json();\n\n    if (data.success === false) {\n      resolveSession();\n      return Meteor.connection._stream.allowConnection();\n    }\n\n    await session.setServerKey(data.publicKeyString);\n    resolveSession(session);\n    init(session);\n  } catch (e) {\n    console.log(e);\n    resolveSession();\n\n    Meteor.connection._stream.allowConnection();\n  }\n}\n\ninitEncryptedSession();\n\nconst _jqueryCall = APIClient._jqueryCall.bind(APIClient);\n\nAPIClient._jqueryCall = async function (method, endpoint, params, body) {\n  let headers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  const session = await sessionPromise;\n\n  if (!session) {\n    return _jqueryCall(method, endpoint, params, body, headers);\n  }\n\n  const result = await _jqueryCall(method, endpoint, params, body, headers, 'text');\n  const decrypted = await session.decrypt(result);\n  const parsed = JSON.parse(decrypted);\n  return parsed;\n};","map":{"version":3,"sources":["ee/client/ecdh.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { APIClient } from '../../app/utils/client';\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\n\nlet resolveSession: (value: ClientSession | void) => void;\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\n\tresolveSession = resolve;\n});\n\nfunction init(session: ClientSession): void {\n\tMeteor.connection._stream.allowConnection();\n\n\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\n\t\tconst decryptedData = await session.decrypt(data);\n\t\tdecryptedData.split('\\n').forEach((d) => _didMessage(d));\n\t};\n\n\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\n\t\tsend(await session.encrypt(data));\n\t};\n}\n\nasync function initEncryptedSession(): Promise<void> {\n\tif (!window.ECDH_Enabled) {\n\t\tMeteor.connection._stream.allowConnection();\n\t\treturn resolveSession();\n\t}\n\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\n\tconst session = new ClientSession();\n\tconst clientPublicKey = await session.init();\n\n\ttry {\n\t\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ clientPublicKey }),\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\tif (data.success === false) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tawait session.setServerKey(data.publicKeyString);\n\t\tresolveSession(session);\n\t\tinit(session);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tresolveSession();\n\t\tMeteor.connection._stream.allowConnection();\n\t}\n}\n\ninitEncryptedSession();\n\nconst _jqueryCall = APIClient._jqueryCall.bind(APIClient);\n\nAPIClient._jqueryCall = async (method, endpoint, params, body, headers = {}): Promise<any> => {\n\tconst session = await sessionPromise;\n\n\tif (!session) {\n\t\treturn _jqueryCall(method, endpoint, params, body, headers);\n\t}\n\n\tconst result = await _jqueryCall(method, endpoint, params, body, headers, 'text');\n\tconst decrypted = await session.decrypt(result);\n\tconst parsed = JSON.parse(decrypted);\n\treturn parsed;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"96f81aa1991ceae3b80e4b3524e05f54de498dff"}
