{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/setupWizard/steps/CloudAccountConfirmation.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/setupWizard/steps/CloudAccountConfirmation.tsx","inputSourceMap":{"version":3,"file":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx","sourceRoot":"","sources":["client/views/setupWizard/steps/CloudAccountConfirmation.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,KAAK,EAAE,EAAgB,SAAS,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAEpE,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AACvE,OAAO,EAAE,uBAAuB,EAAE,MAAM,wCAAwC,CAAC;AACjF,OAAO,EAAE,cAAc,EAAE,MAAM,sCAAsC,CAAC;AACtE,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AAEvE,MAAM,eAAe,GAAG,CAAC,QAAiB,EAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAExF,MAAM,wBAAwB,GAAG,GAAiB,EAAE;IACnD,MAAM,EACL,cAAc,EACd,QAAQ,EACR,eAAe,EAAE,EAAE,gBAAgB,EAAE,EACrC,iBAAiB,GACjB,GAAG,qBAAqB,EAAE,CAAC;IAC5B,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;IACnE,MAAM,qBAAqB,GAAG,WAAW,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;IAC3E,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,MAAM,eAAe,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC9C,IAAI;YACH,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,qBAAqB,CAAC;gBAChD,UAAU,EAAE,gBAAgB,CAAC,WAAW;aACxC,CAAC,CAAC;YAEH,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACpD,MAAM,iBAAiB,EAAE,CAAC;gBAC1B,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;gBACjF,OAAO,kBAAkB,CAAC,WAAW,CAAC,CAAC;aACvC;SACD;QAAC,OAAO,KAAK,EAAE;YACf,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;SACxD;IACF,CAAC,EAAE,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,WAAW,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC;IAE1H,SAAS,CAAC,GAAG,EAAE;QACd,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,eAAe,EAAE,EAAE,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEtG,OAAO,GAAS,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAChD,CAAC,EAAE,CAAC,eAAe,EAAE,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEjD,OAAO,CACN,CAAC,wBAAwB,CACxB,YAAY,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAC1C,YAAY,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CACzC,oBAAoB,CAAC,CAAC,GAAkB,EAAE,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,gBAAgB,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAChH,oBAAoB,CAAC,CAAC,GAAS,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC7C,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["import { AwaitingConfirmationPage } from '@rocket.chat/onboarding-ui';\nimport React, { ReactElement, useEffect, useCallback } from 'react';\n\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useSettingSetValue } from '../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useSetupWizardContext } from '../contexts/SetupWizardContext';\n\nconst setIntervalTime = (interval?: number): number => (interval ? interval * 1000 : 0);\n\nconst CloudAccountConfirmation = (): ReactElement => {\n\tconst {\n\t\tregisterServer,\n\t\tgoToStep,\n\t\tsetupWizardData: { registrationData },\n\t\tsaveWorkspaceData,\n\t} = useSetupWizardContext();\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst cloudConfirmationPoll = useEndpoint('GET', 'cloud.confirmationPoll');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst t = useTranslation();\n\n\tconst getConfirmation = useCallback(async () => {\n\t\ttry {\n\t\t\tconst { pollData } = await cloudConfirmationPoll({\n\t\t\t\tdeviceCode: registrationData.device_code,\n\t\t\t});\n\n\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\tawait saveWorkspaceData();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\t\t\treturn setShowSetupWizard('completed');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n\n\tuseEffect(() => {\n\t\tconst pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n\n\t\treturn (): void => clearInterval(pollInterval);\n\t}, [getConfirmation, registrationData.interval]);\n\n\treturn (\n\t\t<AwaitingConfirmationPage\n\t\t\temailAddress={registrationData.cloudEmail}\n\t\t\tsecurityCode={registrationData.user_code}\n\t\t\tonResendEmailRequest={(): Promise<void> => registerServer({ email: registrationData.cloudEmail, resend: true })}\n\t\t\tonChangeEmailRequest={(): void => goToStep(3)}\n\t\t/>\n\t);\n};\n\nexport default CloudAccountConfirmation;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/setupWizard/steps/CloudAccountConfirmation.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx"}},"code":"let AwaitingConfirmationPage;\nmodule.link(\"@rocket.chat/onboarding-ui\", {\n  AwaitingConfirmationPage(v) {\n    AwaitingConfirmationPage = v;\n  }\n\n}, 0);\nlet React, useEffect, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 1);\nlet useEndpoint;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 2);\nlet useSettingSetValue;\nmodule.link(\"../../../contexts/SettingsContext\", {\n  useSettingSetValue(v) {\n    useSettingSetValue = v;\n  }\n\n}, 3);\nlet useToastMessageDispatch;\nmodule.link(\"../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 4);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 5);\nlet useSetupWizardContext;\nmodule.link(\"../contexts/SetupWizardContext\", {\n  useSetupWizardContext(v) {\n    useSetupWizardContext = v;\n  }\n\n}, 6);\n\nconst setIntervalTime = interval => interval ? interval * 1000 : 0;\n\nconst CloudAccountConfirmation = () => {\n  const {\n    registerServer,\n    goToStep,\n    setupWizardData: {\n      registrationData\n    },\n    saveWorkspaceData\n  } = useSetupWizardContext();\n  const setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n  const cloudConfirmationPoll = useEndpoint('GET', 'cloud.confirmationPoll');\n  const dispatchToastMessage = useToastMessageDispatch();\n  const t = useTranslation();\n  const getConfirmation = useCallback(async () => {\n    try {\n      const {\n        pollData\n      } = await cloudConfirmationPoll({\n        deviceCode: registrationData.device_code\n      });\n\n      if ('successful' in pollData && pollData.successful) {\n        await saveWorkspaceData();\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Your_workspace_is_ready')\n        });\n        return setShowSetupWizard('completed');\n      }\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  }, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n  useEffect(() => {\n    const pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n    return () => clearInterval(pollInterval);\n  }, [getConfirmation, registrationData.interval]);\n  return /*#__PURE__*/React.createElement(AwaitingConfirmationPage, {\n    emailAddress: registrationData.cloudEmail,\n    securityCode: registrationData.user_code,\n    onResendEmailRequest: () => registerServer({\n      email: registrationData.cloudEmail,\n      resend: true\n    }),\n    onChangeEmailRequest: () => goToStep(3)\n  });\n};\n\nmodule.exportDefault(CloudAccountConfirmation);","map":{"version":3,"sources":["client/views/setupWizard/steps/CloudAccountConfirmation.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AwaitingConfirmationPage } from '@rocket.chat/onboarding-ui';\nimport React, { ReactElement, useEffect, useCallback } from 'react';\n\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useSettingSetValue } from '../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useSetupWizardContext } from '../contexts/SetupWizardContext';\n\nconst setIntervalTime = (interval?: number): number => (interval ? interval * 1000 : 0);\n\nconst CloudAccountConfirmation = (): ReactElement => {\n\tconst {\n\t\tregisterServer,\n\t\tgoToStep,\n\t\tsetupWizardData: { registrationData },\n\t\tsaveWorkspaceData,\n\t} = useSetupWizardContext();\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst cloudConfirmationPoll = useEndpoint('GET', 'cloud.confirmationPoll');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst t = useTranslation();\n\n\tconst getConfirmation = useCallback(async () => {\n\t\ttry {\n\t\t\tconst { pollData } = await cloudConfirmationPoll({\n\t\t\t\tdeviceCode: registrationData.device_code,\n\t\t\t});\n\n\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\tawait saveWorkspaceData();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\t\t\treturn setShowSetupWizard('completed');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n\n\tuseEffect(() => {\n\t\tconst pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n\n\t\treturn (): void => clearInterval(pollInterval);\n\t}, [getConfirmation, registrationData.interval]);\n\n\treturn (\n\t\t<AwaitingConfirmationPage\n\t\t\temailAddress={registrationData.cloudEmail}\n\t\t\tsecurityCode={registrationData.user_code}\n\t\t\tonResendEmailRequest={(): Promise<void> => registerServer({ email: registrationData.cloudEmail, resend: true })}\n\t\t\tonChangeEmailRequest={(): void => goToStep(3)}\n\t\t/>\n\t);\n};\n\nexport default CloudAccountConfirmation;\n"],"sourceRoot":""},"sourceType":"module","hash":"3fc248ad9e243343ceb0eb567a166cc639b21245"}
