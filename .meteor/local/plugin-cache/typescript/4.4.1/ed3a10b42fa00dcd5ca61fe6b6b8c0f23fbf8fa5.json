{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx","inputSourceMap":{"version":3,"file":"client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx","sourceRoot":"","sources":["client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAE,eAAe,EAAe,MAAM,kBAAkB,CAAC;AAGhE,OAAO,EAAE,eAAe,EAAE,MAAM,4CAA4C,CAAC;AAY7E,MAAM,CAAC,MAAM,0BAA0B,GAAG,aAAa,CAA8B;IACpF,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;QACjB,eAAe,EAAE,GAAuB,EAAE,CAAC,CAAC;YAC3C,KAAK,EAAE,eAAe,CAAC,OAAO;YAC9B,KAAK,EAAE,SAAS;YAChB,KAAK,EAAE,SAAS;SAChB,CAAC;QACF,SAAS,EAAE,GAAgB,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;KACnD,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,GAAW,EAAE,IAAY,EAAsB,EAAE;IACvF,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC,0BAA0B,CAAC,CAAC;IAC7D,OAAO,eAAe,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC","sourcesContent":["import { createContext, useMemo, useContext } from 'react';\nimport { useSubscription, Unsubscribe } from 'use-subscription';\n\nimport { AsyncState } from '../../../../lib/asyncState/AsyncState';\nimport { AsyncStatePhase } from '../../../../lib/asyncState/AsyncStatePhase';\n\ntype IOmnichannelRoomIconContext = {\n\tqueryIcon(\n\t\tapp: string,\n\t\ticon: string,\n\t): {\n\t\tgetCurrentValue: () => AsyncState<string>;\n\t\tsubscribe: (callback: () => void) => Unsubscribe;\n\t};\n};\n\nexport const OmnichannelRoomIconContext = createContext<IOmnichannelRoomIconContext>({\n\tqueryIcon: () => ({\n\t\tgetCurrentValue: (): AsyncState<string> => ({\n\t\t\tphase: AsyncStatePhase.LOADING,\n\t\t\tvalue: undefined,\n\t\t\terror: undefined,\n\t\t}),\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n});\n\nexport const useOmnichannelRoomIcon = (app: string, icon: string): AsyncState<string> => {\n\tconst { queryIcon } = useContext(OmnichannelRoomIconContext);\n\treturn useSubscription(useMemo(() => queryIcon(app, icon), [app, queryIcon, icon]));\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx"}},"code":"module.export({\n  OmnichannelRoomIconContext: () => OmnichannelRoomIconContext,\n  useOmnichannelRoomIcon: () => useOmnichannelRoomIcon\n});\nlet createContext, useMemo, useContext;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useContext(v) {\n    useContext = v;\n  }\n\n}, 0);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 1);\nlet AsyncStatePhase;\nmodule.link(\"../../../../lib/asyncState/AsyncStatePhase\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n\n}, 2);\nconst OmnichannelRoomIconContext = /*#__PURE__*/createContext({\n  queryIcon: () => ({\n    getCurrentValue: () => ({\n      phase: AsyncStatePhase.LOADING,\n      value: undefined,\n      error: undefined\n    }),\n    subscribe: () => () => undefined\n  })\n});\n\nconst useOmnichannelRoomIcon = (app, icon) => {\n  const {\n    queryIcon\n  } = useContext(OmnichannelRoomIconContext);\n  return useSubscription(useMemo(() => queryIcon(app, icon), [app, queryIcon, icon]));\n};","map":{"version":3,"sources":["client/components/RoomIcon/OmnichannelRoomIcon/context/OmnichannelRoomIconContext.tsx"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,0BAAwB,EAAA,MAAY,0BAApC;AAAkD,EAAA,sBAAA,EAAA,MAAA;AAAlD,CAAT;AAA2D,IAAA,aAAA,EAAA,OAAA,EAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4CAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAgBpD,MAAM,0BAA0B,gBAAG,aAAa,CAA8B;AACpF,EAAA,SAAS,EAAE,OAAO;AACjB,IAAA,eAAe,EAAE,OAA2B;AAC3C,MAAA,KAAK,EAAE,eAAe,CAAC,OADoB;AAE3C,MAAA,KAAK,EAAE,SAFoC;AAG3C,MAAA,KAAK,EAAE;AAHoC,KAA3B,CADA;AAMjB,IAAA,SAAS,EAAE,MAAmB,MAAY;AANzB,GAAP;AADyE,CAA9B,CAAhD;;AAWA,MAAM,sBAAsB,GAAG,CAAC,GAAD,EAAc,IAAd,KAAkD;AACvF,QAAM;AAAE,IAAA;AAAF,MAAgB,UAAU,CAAC,0BAAD,CAAhC;AACA,SAAO,eAAe,CAAC,OAAO,CAAC,MAAM,SAAS,CAAC,GAAD,EAAM,IAAN,CAAhB,EAA6B,CAAC,GAAD,EAAM,SAAN,EAAiB,IAAjB,CAA7B,CAAR,CAAtB;AACA,CAHM","sourcesContent":["import { createContext, useMemo, useContext } from 'react';\nimport { useSubscription, Unsubscribe } from 'use-subscription';\n\nimport { AsyncState } from '../../../../lib/asyncState/AsyncState';\nimport { AsyncStatePhase } from '../../../../lib/asyncState/AsyncStatePhase';\n\ntype IOmnichannelRoomIconContext = {\n\tqueryIcon(\n\t\tapp: string,\n\t\ticon: string,\n\t): {\n\t\tgetCurrentValue: () => AsyncState<string>;\n\t\tsubscribe: (callback: () => void) => Unsubscribe;\n\t};\n};\n\nexport const OmnichannelRoomIconContext = createContext<IOmnichannelRoomIconContext>({\n\tqueryIcon: () => ({\n\t\tgetCurrentValue: (): AsyncState<string> => ({\n\t\t\tphase: AsyncStatePhase.LOADING,\n\t\t\tvalue: undefined,\n\t\t\terror: undefined,\n\t\t}),\n\t\tsubscribe: (): Unsubscribe => (): void => undefined,\n\t}),\n});\n\nexport const useOmnichannelRoomIcon = (app: string, icon: string): AsyncState<string> => {\n\tconst { queryIcon } = useContext(OmnichannelRoomIconContext);\n\treturn useSubscription(useMemo(() => queryIcon(app, icon), [app, queryIcon, icon]));\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"ed3a10b42fa00dcd5ca61fe6b6b8c0f23fbf8fa5"}
