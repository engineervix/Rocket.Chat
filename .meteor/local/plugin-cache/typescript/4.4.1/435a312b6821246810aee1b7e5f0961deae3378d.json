{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contexts/RoomContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contexts/RoomContext.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contexts/RoomContext.ts","inputSourceMap":{"version":3,"file":"client/views/room/contexts/RoomContext.ts","sourceRoot":"","sources":["client/views/room/contexts/RoomContext.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAElD,OAAO,EAA2B,iBAAiB,EAAE,UAAU,EAAa,MAAM,8BAA8B,CAAC;AAQjH,MAAM,CAAC,MAAM,WAAW,GAAG,aAAa,CAA0B,IAAI,CAAC,CAAC;AAExE,MAAM,CAAC,MAAM,OAAO,GAAG,GAAU,EAAE;IAClC,MAAM,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAE/C,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;KACxD;IAED,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAqB,EAAE;IACxD,MAAM,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAE/C,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;KACxD;IAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACrC;IAED,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,GAAc,EAAE;IAC1C,MAAM,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAE/C,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;KACxD;IAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACtB,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACrC;IAED,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { IRoom, IOmnichannelRoom, isOmnichannelRoom, isVoipRoom, IVoipRoom } from '../../../../definition/IRoom';\n\nexport type RoomContextValue = {\n\trid: IRoom['_id'];\n\troom: IRoom;\n\tsubscribed: boolean;\n};\n\nexport const RoomContext = createContext<RoomContextValue | null>(null);\n\nexport const useRoom = (): IRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\treturn room;\n};\n\nexport const useOmnichannelRoom = (): IOmnichannelRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\tif (!isOmnichannelRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n\nexport const useVoipRoom = (): IVoipRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\tif (!isVoipRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contexts/RoomContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contexts/RoomContext.ts"}},"code":"module.export({\n  RoomContext: () => RoomContext,\n  useRoom: () => useRoom,\n  useOmnichannelRoom: () => useOmnichannelRoom,\n  useVoipRoom: () => useVoipRoom\n});\nlet createContext, useContext;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n\n  useContext(v) {\n    useContext = v;\n  }\n\n}, 0);\nlet isOmnichannelRoom, isVoipRoom;\nmodule.link(\"../../../../definition/IRoom\", {\n  isOmnichannelRoom(v) {\n    isOmnichannelRoom = v;\n  },\n\n  isVoipRoom(v) {\n    isVoipRoom = v;\n  }\n\n}, 1);\nconst RoomContext = /*#__PURE__*/createContext(null);\n\nconst useRoom = () => {\n  const {\n    room\n  } = useContext(RoomContext) || {};\n\n  if (!room) {\n    throw new Error('use useRoom only inside opened rooms');\n  }\n\n  return room;\n};\n\nconst useOmnichannelRoom = () => {\n  const {\n    room\n  } = useContext(RoomContext) || {};\n\n  if (!room) {\n    throw new Error('use useRoom only inside opened rooms');\n  }\n\n  if (!isOmnichannelRoom(room)) {\n    throw new Error('invalid room type');\n  }\n\n  return room;\n};\n\nconst useVoipRoom = () => {\n  const {\n    room\n  } = useContext(RoomContext) || {};\n\n  if (!room) {\n    throw new Error('use useRoom only inside opened rooms');\n  }\n\n  if (!isVoipRoom(room)) {\n    throw new Error('invalid room type');\n  }\n\n  return room;\n};","map":{"version":3,"sources":["client/views/room/contexts/RoomContext.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,WAAe,EAAA,MAAA,WAAf;AAAiC,EAAA,OAAQ,EAAA,MAAA,OAAzC;AAAyC,EAAA,kBAAA,EAAA,MAAA,kBAAzC;AAAyC,EAAA,WAAA,EAAA,MAAA;AAAzC,CAAT;AAAkD,IAAA,aAAA,EAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA,EAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAU3C,MAAM,WAAW,gBAAG,aAAa,CAA0B,IAA1B,CAAjC;;AAEA,MAAM,OAAO,GAAG,MAAY;AAClC,QAAM;AAAE,IAAA;AAAF,MAAW,UAAU,CAAC,WAAD,CAAV,IAA2B,EAA5C;;AAEA,MAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACA;;AAED,SAAO,IAAP;AACA,CARM;;AAUA,MAAM,kBAAkB,GAAG,MAAuB;AACxD,QAAM;AAAE,IAAA;AAAF,MAAW,UAAU,CAAC,WAAD,CAAV,IAA2B,EAA5C;;AAEA,MAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACA;;AAED,MAAI,CAAC,iBAAiB,CAAC,IAAD,CAAtB,EAA8B;AAC7B,UAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACA;;AAED,SAAO,IAAP;AACA,CAZM;;AAcA,MAAM,WAAW,GAAG,MAAgB;AAC1C,QAAM;AAAE,IAAA;AAAF,MAAW,UAAU,CAAC,WAAD,CAAV,IAA2B,EAA5C;;AAEA,MAAI,CAAC,IAAL,EAAW;AACV,UAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACA;;AAED,MAAI,CAAC,UAAU,CAAC,IAAD,CAAf,EAAuB;AACtB,UAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACA;;AAED,SAAO,IAAP;AACA,CAZM","sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { IRoom, IOmnichannelRoom, isOmnichannelRoom, isVoipRoom, IVoipRoom } from '../../../../definition/IRoom';\n\nexport type RoomContextValue = {\n\trid: IRoom['_id'];\n\troom: IRoom;\n\tsubscribed: boolean;\n};\n\nexport const RoomContext = createContext<RoomContextValue | null>(null);\n\nexport const useRoom = (): IRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\treturn room;\n};\n\nexport const useOmnichannelRoom = (): IOmnichannelRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\tif (!isOmnichannelRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n\nexport const useVoipRoom = (): IVoipRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\tif (!isVoipRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"435a312b6821246810aee1b7e5f0961deae3378d"}
