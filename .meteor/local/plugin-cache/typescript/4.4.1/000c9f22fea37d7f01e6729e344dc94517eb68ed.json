{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/hooks/useWebRTC.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/hooks/useWebRTC.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/hooks/useWebRTC.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useWebRTC.ts","sourceRoot":"","sources":["client/views/room/hooks/useWebRTC.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AAiCvD,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,GAAW,EAAkB,EAAE;IACxD,MAAM,iBAAiB,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACpF,MAAM,cAAc,GAAG,iBAAiB,EAAE,CAAC;IAC3C,MAAM,cAAc,GAAG,cAAc,IAAI,IAAI,CAAC;IAE9C,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAS,OAAO,CAAC,CAAC;IAE5D,MAAM,mBAAmB,GAAG,GAAY,EAAE;QACzC,IAAI,CAAC,cAAc,EAAE;YACpB,OAAO,KAAK,CAAC;SACb;QAED,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,cAAc,CAAC;QACjD,MAAM,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;QAClC,IAAI,QAAQ,CAAC,GAAG,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9C,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC;IACb,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,GAAY,EAAE;QACnC,IAAI,EAAE,WAAW,EAAE,GAAG,iBAAiB,EAAE,CAAC;QAC1C,MAAM,EAAE,QAAQ,EAAE,GAAG,iBAAiB,EAAE,CAAC;QACzC,WAAW,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;QACtC,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,GAAS,EAAE;QAC/B,IAAI,SAAS,KAAK,OAAO,EAAE;YAC1B,OAAO,cAAc,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC;SACtC;QAED,IAAI,SAAS,KAAK,OAAO,EAAE;YAC1B,MAAM,WAAW,GAAG,cAAc,EAAE,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;YAC5D,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;aAC1B;YACD,OAAO,cAAc,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC;SACtC;QAED,IAAI,cAAc,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;YAC7D,OAAO,cAAc,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC;SAC5D;QAED,YAAY,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,cAAc,IAAI,aAAa,EAAE,CAAC;IAEzD,MAAM,gBAAgB,GAAG,mBAAmB,EAAE,CAAC;IAC/C,MAAM,cAAc,GAAG,cAAc,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC;IAC5D,MAAM,cAAc,GAAG,cAAc,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC;IAC5D,MAAM,YAAY,GAAG,cAAc,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC;IACxD,MAAM,YAAY,GAAG,cAAc,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC;IACxD,MAAM,oBAAoB,GAAG,cAAc,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,cAAc,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC;IAEtG,MAAM,kBAAkB,GAAG,cAAc,EAAE,kBAAkB,CAAC,GAAG,EAAE,CAAC;IACpE,MAAM,gBAAgB,GAAG,cAAc,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC;IAC3D,MAAM,YAAY,GAAG,cAAc,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC;IAEpD,MAAM,cAAc,GAAG,GAAS,EAAE,CAAC,cAAc,EAAE,IAAI,EAAE,CAAC;IAC1D,MAAM,aAAa,GAAG,GAAS,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,EAAE,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1I,MAAM,iBAAiB,GAAG,GAAS,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,cAAc,EAAE,iBAAiB,EAAE,CAAC,CAAC;IACxI,MAAM,WAAW,GAAG,GAAS,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,cAAc,EAAE,WAAW,EAAE,CAAC,CAAC;IAChH,MAAM,WAAW,GAAG,GAAS,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,cAAc,EAAE,WAAW,EAAE,CAAC,CAAC;IAEhH,MAAM,QAAQ,GAAG,CAAC,MAAkB,EAAQ,EAAE,CAAC,cAAc,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChF,MAAM,SAAS,GAAG,CAAC,MAAkB,EAAQ,EAAE,CAAC,cAAc,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IAElF,OAAO;QACN,gBAAgB;QAChB,cAAc;QACd,cAAc;QACd,cAAc;QACd,YAAY;QACZ,kBAAkB;QAClB,YAAY;QACZ,oBAAoB;QACpB,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,aAAa;QACb,cAAc;QACd,oBAAoB,EAAE,cAAc,EAAE,oBAAoB;QAC1D,iBAAiB;QACjB,aAAa;QACb,WAAW;QACX,WAAW;QACX,cAAc;QACd,QAAQ;QACR,SAAS;QACT,SAAS;QACT,YAAY;KACZ,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { WebRTC } from '../../../../app/webrtc/client';\n\ntype callParams = {\n\taudio: boolean;\n\tvideo: boolean;\n};\n\nexport type useWebRTCProps = {\n\tshouldAllowCalls: boolean;\n\tcallInProgress: boolean;\n\tvideoAvaliable: boolean;\n\tshowUserWebRTC: boolean;\n\tmainVideoUrl: () => MediaStream | void;\n\tscreenShareEnabled: boolean;\n\tselfVideoUrl: MediaStream;\n\taudioAndVideoEnabled: boolean;\n\taudioEnabled: boolean;\n\tvideoEnabled: boolean;\n\tremoteVideoItems: Array<MediaStream>;\n\tisVideoActive: () => boolean;\n\thandleStopCall: () => void;\n\tscreenShareAvailable: boolean;\n\ttoggleScreenShare: () => void;\n\ttoggleOverlay: () => void;\n\ttoggleVideo: () => void;\n\ttoggleAudio: () => void;\n\toverlayEnabled: boolean;\n\tjoinCall: (params: callParams) => void;\n\tstartCall: (params: callParams) => void;\n\tmainVideo: string;\n\tsetMainVideo: (value: string) => void;\n};\n\nexport const useWebRTC = (rid: string): useWebRTCProps => {\n\tconst getWebRTCInstance = useCallback(() => WebRTC.getInstanceByRoomId(rid), [rid]);\n\tconst webRTCInstance = getWebRTCInstance();\n\tconst videoAvaliable = webRTCInstance != null;\n\n\tconst [mainVideo, setMainVideo] = useState<string>('$auto');\n\n\tconst getShouldAllowCalls = (): boolean => {\n\t\tif (!webRTCInstance) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { localUrl, remoteItems } = webRTCInstance;\n\t\tconst r = remoteItems.get() || [];\n\t\tif (localUrl.get() === null && r.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst isVideoActive = (): boolean => {\n\t\tlet { remoteItems } = getWebRTCInstance();\n\t\tconst { localUrl } = getWebRTCInstance();\n\t\tremoteItems = remoteItems.get() || [];\n\t\treturn localUrl.get() != null || remoteItems.length > 0;\n\t};\n\n\tconst mainVideoUrl = (): void => {\n\t\tif (mainVideo === '$self') {\n\t\t\treturn webRTCInstance?.localUrl.get();\n\t\t}\n\n\t\tif (mainVideo === '$auto') {\n\t\t\tconst remoteItems = webRTCInstance?.remoteItems.get() || [];\n\t\t\tif (remoteItems.length > 0) {\n\t\t\t\treturn remoteItems[0].url;\n\t\t\t}\n\t\t\treturn webRTCInstance?.localUrl.get();\n\t\t}\n\n\t\tif (webRTCInstance?.remoteItemsById.get()[mainVideo] != null) {\n\t\t\treturn webRTCInstance?.remoteItemsById.get()[mainVideo].url;\n\t\t}\n\n\t\tsetMainVideo('$auto');\n\t};\n\n\tconst showUserWebRTC = videoAvaliable && isVideoActive();\n\n\tconst shouldAllowCalls = getShouldAllowCalls();\n\tconst callInProgress = webRTCInstance?.callInProgress.get();\n\tconst overlayEnabled = webRTCInstance?.overlayEnabled.get();\n\tconst audioEnabled = webRTCInstance?.audioEnabled.get();\n\tconst videoEnabled = webRTCInstance?.videoEnabled.get();\n\tconst audioAndVideoEnabled = webRTCInstance?.audioEnabled.get() && webRTCInstance?.videoEnabled.get();\n\n\tconst screenShareEnabled = webRTCInstance?.screenShareEnabled.get();\n\tconst remoteVideoItems = webRTCInstance?.remoteItems.get();\n\tconst selfVideoUrl = webRTCInstance?.localUrl.get();\n\n\tconst handleStopCall = (): void => webRTCInstance?.stop();\n\tconst toggleOverlay = (): void => (overlayEnabled ? webRTCInstance?.overlayEnabled.set(false) : webRTCInstance?.overlayEnabled.set(true));\n\tconst toggleScreenShare = (): void => (screenShareEnabled ? webRTCInstance?.disableScreenShare() : webRTCInstance?.enableScreenShare());\n\tconst toggleVideo = (): void => (videoEnabled ? webRTCInstance?.disableVideo() : webRTCInstance?.enableVideo());\n\tconst toggleAudio = (): void => (audioEnabled ? webRTCInstance?.disableAudio() : webRTCInstance?.enableAudio());\n\n\tconst joinCall = (params: callParams): void => webRTCInstance?.joinCall(params);\n\tconst startCall = (params: callParams): void => webRTCInstance?.startCall(params);\n\n\treturn {\n\t\tshouldAllowCalls,\n\t\tcallInProgress,\n\t\tvideoAvaliable,\n\t\tshowUserWebRTC,\n\t\tmainVideoUrl,\n\t\tscreenShareEnabled,\n\t\tselfVideoUrl,\n\t\taudioAndVideoEnabled,\n\t\taudioEnabled,\n\t\tvideoEnabled,\n\t\tremoteVideoItems,\n\t\tisVideoActive,\n\t\thandleStopCall,\n\t\tscreenShareAvailable: webRTCInstance?.screenShareAvailable,\n\t\ttoggleScreenShare,\n\t\ttoggleOverlay,\n\t\ttoggleVideo,\n\t\ttoggleAudio,\n\t\toverlayEnabled,\n\t\tjoinCall,\n\t\tstartCall,\n\t\tmainVideo,\n\t\tsetMainVideo,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/hooks/useWebRTC.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useWebRTC.ts"}},"code":"var _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nmodule.export({\n  useWebRTC: function () {\n    return useWebRTC;\n  }\n});\nvar useCallback, useState;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 0);\nvar WebRTC;\nmodule.link(\"../../../../app/webrtc/client\", {\n  WebRTC: function (v) {\n    WebRTC = v;\n  }\n}, 1);\n\nvar useWebRTC = function (rid) {\n  var getWebRTCInstance = useCallback(function () {\n    return WebRTC.getInstanceByRoomId(rid);\n  }, [rid]);\n  var webRTCInstance = getWebRTCInstance();\n  var videoAvaliable = webRTCInstance != null;\n\n  var _useState = useState('$auto'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainVideo = _useState2[0],\n      setMainVideo = _useState2[1];\n\n  var getShouldAllowCalls = function () {\n    if (!webRTCInstance) {\n      return false;\n    }\n\n    var localUrl = webRTCInstance.localUrl,\n        remoteItems = webRTCInstance.remoteItems;\n    var r = remoteItems.get() || [];\n\n    if (localUrl.get() === null && r.length === 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var isVideoActive = function () {\n    var _getWebRTCInstance = getWebRTCInstance(),\n        remoteItems = _getWebRTCInstance.remoteItems;\n\n    var _getWebRTCInstance2 = getWebRTCInstance(),\n        localUrl = _getWebRTCInstance2.localUrl;\n\n    remoteItems = remoteItems.get() || [];\n    return localUrl.get() != null || remoteItems.length > 0;\n  };\n\n  var mainVideoUrl = function () {\n    if (mainVideo === '$self') {\n      return webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.localUrl.get();\n    }\n\n    if (mainVideo === '$auto') {\n      var remoteItems = (webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.remoteItems.get()) || [];\n\n      if (remoteItems.length > 0) {\n        return remoteItems[0].url;\n      }\n\n      return webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.localUrl.get();\n    }\n\n    if ((webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.remoteItemsById.get()[mainVideo]) != null) {\n      return webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.remoteItemsById.get()[mainVideo].url;\n    }\n\n    setMainVideo('$auto');\n  };\n\n  var showUserWebRTC = videoAvaliable && isVideoActive();\n  var shouldAllowCalls = getShouldAllowCalls();\n  var callInProgress = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.callInProgress.get();\n  var overlayEnabled = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.overlayEnabled.get();\n  var audioEnabled = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.audioEnabled.get();\n  var videoEnabled = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.videoEnabled.get();\n  var audioAndVideoEnabled = (webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.audioEnabled.get()) && (webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.videoEnabled.get());\n  var screenShareEnabled = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.screenShareEnabled.get();\n  var remoteVideoItems = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.remoteItems.get();\n  var selfVideoUrl = webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.localUrl.get();\n\n  var handleStopCall = function () {\n    return webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.stop();\n  };\n\n  var toggleOverlay = function () {\n    return overlayEnabled ? webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.overlayEnabled.set(false) : webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.overlayEnabled.set(true);\n  };\n\n  var toggleScreenShare = function () {\n    return screenShareEnabled ? webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.disableScreenShare() : webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.enableScreenShare();\n  };\n\n  var toggleVideo = function () {\n    return videoEnabled ? webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.disableVideo() : webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.enableVideo();\n  };\n\n  var toggleAudio = function () {\n    return audioEnabled ? webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.disableAudio() : webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.enableAudio();\n  };\n\n  var joinCall = function (params) {\n    return webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.joinCall(params);\n  };\n\n  var startCall = function (params) {\n    return webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.startCall(params);\n  };\n\n  return {\n    shouldAllowCalls: shouldAllowCalls,\n    callInProgress: callInProgress,\n    videoAvaliable: videoAvaliable,\n    showUserWebRTC: showUserWebRTC,\n    mainVideoUrl: mainVideoUrl,\n    screenShareEnabled: screenShareEnabled,\n    selfVideoUrl: selfVideoUrl,\n    audioAndVideoEnabled: audioAndVideoEnabled,\n    audioEnabled: audioEnabled,\n    videoEnabled: videoEnabled,\n    remoteVideoItems: remoteVideoItems,\n    isVideoActive: isVideoActive,\n    handleStopCall: handleStopCall,\n    screenShareAvailable: webRTCInstance === null || webRTCInstance === void 0 ? void 0 : webRTCInstance.screenShareAvailable,\n    toggleScreenShare: toggleScreenShare,\n    toggleOverlay: toggleOverlay,\n    toggleVideo: toggleVideo,\n    toggleAudio: toggleAudio,\n    overlayEnabled: overlayEnabled,\n    joinCall: joinCall,\n    startCall: startCall,\n    mainVideo: mainVideo,\n    setMainVideo: setMainVideo\n  };\n};","map":{"version":3,"sources":["client/views/room/hooks/useWebRTC.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { WebRTC } from '../../../../app/webrtc/client';\n\ntype callParams = {\n\taudio: boolean;\n\tvideo: boolean;\n};\n\nexport type useWebRTCProps = {\n\tshouldAllowCalls: boolean;\n\tcallInProgress: boolean;\n\tvideoAvaliable: boolean;\n\tshowUserWebRTC: boolean;\n\tmainVideoUrl: () => MediaStream | void;\n\tscreenShareEnabled: boolean;\n\tselfVideoUrl: MediaStream;\n\taudioAndVideoEnabled: boolean;\n\taudioEnabled: boolean;\n\tvideoEnabled: boolean;\n\tremoteVideoItems: Array<MediaStream>;\n\tisVideoActive: () => boolean;\n\thandleStopCall: () => void;\n\tscreenShareAvailable: boolean;\n\ttoggleScreenShare: () => void;\n\ttoggleOverlay: () => void;\n\ttoggleVideo: () => void;\n\ttoggleAudio: () => void;\n\toverlayEnabled: boolean;\n\tjoinCall: (params: callParams) => void;\n\tstartCall: (params: callParams) => void;\n\tmainVideo: string;\n\tsetMainVideo: (value: string) => void;\n};\n\nexport const useWebRTC = (rid: string): useWebRTCProps => {\n\tconst getWebRTCInstance = useCallback(() => WebRTC.getInstanceByRoomId(rid), [rid]);\n\tconst webRTCInstance = getWebRTCInstance();\n\tconst videoAvaliable = webRTCInstance != null;\n\n\tconst [mainVideo, setMainVideo] = useState<string>('$auto');\n\n\tconst getShouldAllowCalls = (): boolean => {\n\t\tif (!webRTCInstance) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { localUrl, remoteItems } = webRTCInstance;\n\t\tconst r = remoteItems.get() || [];\n\t\tif (localUrl.get() === null && r.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst isVideoActive = (): boolean => {\n\t\tlet { remoteItems } = getWebRTCInstance();\n\t\tconst { localUrl } = getWebRTCInstance();\n\t\tremoteItems = remoteItems.get() || [];\n\t\treturn localUrl.get() != null || remoteItems.length > 0;\n\t};\n\n\tconst mainVideoUrl = (): void => {\n\t\tif (mainVideo === '$self') {\n\t\t\treturn webRTCInstance?.localUrl.get();\n\t\t}\n\n\t\tif (mainVideo === '$auto') {\n\t\t\tconst remoteItems = webRTCInstance?.remoteItems.get() || [];\n\t\t\tif (remoteItems.length > 0) {\n\t\t\t\treturn remoteItems[0].url;\n\t\t\t}\n\t\t\treturn webRTCInstance?.localUrl.get();\n\t\t}\n\n\t\tif (webRTCInstance?.remoteItemsById.get()[mainVideo] != null) {\n\t\t\treturn webRTCInstance?.remoteItemsById.get()[mainVideo].url;\n\t\t}\n\n\t\tsetMainVideo('$auto');\n\t};\n\n\tconst showUserWebRTC = videoAvaliable && isVideoActive();\n\n\tconst shouldAllowCalls = getShouldAllowCalls();\n\tconst callInProgress = webRTCInstance?.callInProgress.get();\n\tconst overlayEnabled = webRTCInstance?.overlayEnabled.get();\n\tconst audioEnabled = webRTCInstance?.audioEnabled.get();\n\tconst videoEnabled = webRTCInstance?.videoEnabled.get();\n\tconst audioAndVideoEnabled = webRTCInstance?.audioEnabled.get() && webRTCInstance?.videoEnabled.get();\n\n\tconst screenShareEnabled = webRTCInstance?.screenShareEnabled.get();\n\tconst remoteVideoItems = webRTCInstance?.remoteItems.get();\n\tconst selfVideoUrl = webRTCInstance?.localUrl.get();\n\n\tconst handleStopCall = (): void => webRTCInstance?.stop();\n\tconst toggleOverlay = (): void => (overlayEnabled ? webRTCInstance?.overlayEnabled.set(false) : webRTCInstance?.overlayEnabled.set(true));\n\tconst toggleScreenShare = (): void => (screenShareEnabled ? webRTCInstance?.disableScreenShare() : webRTCInstance?.enableScreenShare());\n\tconst toggleVideo = (): void => (videoEnabled ? webRTCInstance?.disableVideo() : webRTCInstance?.enableVideo());\n\tconst toggleAudio = (): void => (audioEnabled ? webRTCInstance?.disableAudio() : webRTCInstance?.enableAudio());\n\n\tconst joinCall = (params: callParams): void => webRTCInstance?.joinCall(params);\n\tconst startCall = (params: callParams): void => webRTCInstance?.startCall(params);\n\n\treturn {\n\t\tshouldAllowCalls,\n\t\tcallInProgress,\n\t\tvideoAvaliable,\n\t\tshowUserWebRTC,\n\t\tmainVideoUrl,\n\t\tscreenShareEnabled,\n\t\tselfVideoUrl,\n\t\taudioAndVideoEnabled,\n\t\taudioEnabled,\n\t\tvideoEnabled,\n\t\tremoteVideoItems,\n\t\tisVideoActive,\n\t\thandleStopCall,\n\t\tscreenShareAvailable: webRTCInstance?.screenShareAvailable,\n\t\ttoggleScreenShare,\n\t\ttoggleOverlay,\n\t\ttoggleVideo,\n\t\ttoggleAudio,\n\t\toverlayEnabled,\n\t\tjoinCall,\n\t\tstartCall,\n\t\tmainVideo,\n\t\tsetMainVideo,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"000c9f22fea37d7f01e6729e344dc94517eb68ed"}
