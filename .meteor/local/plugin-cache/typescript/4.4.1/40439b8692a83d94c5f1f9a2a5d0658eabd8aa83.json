{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/sidebar/OmnichannelSidebar.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/sidebar/OmnichannelSidebar.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/sidebar/OmnichannelSidebar.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/sidebar/OmnichannelSidebar.tsx","sourceRoot":"","sources":["client/views/omnichannel/sidebar/OmnichannelSidebar.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,SAAS,EAAM,IAAI,EAAE,MAAM,OAAO,CAAC;AAChE,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEnD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,OAAO,MAAM,6BAA6B,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAChF,OAAO,EAAE,cAAc,EAAE,MAAM,sCAAsC,CAAC;AACtE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qCAAqC,CAAC;AACvE,OAAO,gBAAgB,MAAM,qCAAqC,CAAC;AACnE,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAEpD,MAAM,kBAAkB,GAAO,GAAG,EAAE;IACnC,MAAM,KAAK,GAAG,eAAe,CAAC,iBAAiB,CAAC,CAAC;IACjD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,MAAM,oBAAoB,GAAG,WAAW,CAAC,GAAG,EAAE;QAC7C,IAAI,gBAAgB,EAAE,EAAE;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;SACP;QAED,OAAO,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,YAAY,GAAG,eAAe,EAAE,CAAC;IACvC,MAAM,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,qBAAqB,CAAC,GAAG,YAAY,CAAC;IAC7G,MAAM,WAAW,GAAG,YAAY,CAAC,gBAAgB,IAAI,EAAE,EAAE,kBAAkB,EAAE,wBAAwB,CAAC,CAAC;IAEvG,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,qBAAqB,KAAK,aAAa,EAAE;YAC5C,OAAO,CAAC,SAAS,EAAE,CAAC;SACpB;IACF,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAE5B,OAAO,CACN,CAAC,gBAAgB,CAAC,UAAU,CAC3B;GAAA,CAAC,OAAO,CACP;IAAA,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,EAC9E;IAAA,CAAC,OAAO,CAAC,OAAO,CACf;KAAA,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,EAChE;IAAA,EAAE,OAAO,CAAC,OAAO,CAClB;GAAA,EAAE,OAAO,CACV;EAAA,EAAE,gBAAgB,CAAC,CACnB,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import React, { useCallback, useEffect, FC, memo } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { menu, SideNav } from '../../../../app/ui-utils/client';\nimport Sidebar from '../../../components/Sidebar';\nimport { useRoutePath, useCurrentRoute } from '../../../contexts/RouterContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { isLayoutEmbedded } from '../../../lib/utils/isLayoutEmbedded';\nimport SettingsProvider from '../../../providers/SettingsProvider';\nimport { itemsSubscription } from '../sidebarItems';\n\nconst OmnichannelSidebar: FC = () => {\n\tconst items = useSubscription(itemsSubscription);\n\tconst t = useTranslation();\n\n\tconst closeOmnichannelFlex = useCallback(() => {\n\t\tif (isLayoutEmbedded()) {\n\t\t\tmenu.close();\n\t\t\treturn;\n\t\t}\n\n\t\tSideNav.closeFlex();\n\t}, []);\n\n\tconst currentRoute = useCurrentRoute();\n\tconst [currentRouteName, currentRouteParams, currentQueryStringParams, currentRouteGroupName] = currentRoute;\n\tconst currentPath = useRoutePath(currentRouteName ?? '', currentRouteParams, currentQueryStringParams);\n\n\tuseEffect(() => {\n\t\tif (currentRouteGroupName !== 'omnichannel') {\n\t\t\tSideNav.closeFlex();\n\t\t}\n\t}, [currentRouteGroupName]);\n\n\treturn (\n\t\t<SettingsProvider privileged>\n\t\t\t<Sidebar>\n\t\t\t\t<Sidebar.Header onClose={closeOmnichannelFlex} title={<>{t('Omnichannel')}</>} />\n\t\t\t\t<Sidebar.Content>\n\t\t\t\t\t<Sidebar.ItemsAssembler items={items} currentPath={currentPath} />\n\t\t\t\t</Sidebar.Content>\n\t\t\t</Sidebar>\n\t\t</SettingsProvider>\n\t);\n};\n\nexport default memo(OmnichannelSidebar);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/sidebar/OmnichannelSidebar.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/sidebar/OmnichannelSidebar.tsx"}},"code":"let React, useCallback, useEffect, memo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  memo(v) {\n    memo = v;\n  }\n\n}, 0);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 1);\nlet menu, SideNav;\nmodule.link(\"../../../../app/ui-utils/client\", {\n  menu(v) {\n    menu = v;\n  },\n\n  SideNav(v) {\n    SideNav = v;\n  }\n\n}, 2);\nlet Sidebar;\nmodule.link(\"../../../components/Sidebar\", {\n  default(v) {\n    Sidebar = v;\n  }\n\n}, 3);\nlet useRoutePath, useCurrentRoute;\nmodule.link(\"../../../contexts/RouterContext\", {\n  useRoutePath(v) {\n    useRoutePath = v;\n  },\n\n  useCurrentRoute(v) {\n    useCurrentRoute = v;\n  }\n\n}, 4);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 5);\nlet isLayoutEmbedded;\nmodule.link(\"../../../lib/utils/isLayoutEmbedded\", {\n  isLayoutEmbedded(v) {\n    isLayoutEmbedded = v;\n  }\n\n}, 6);\nlet SettingsProvider;\nmodule.link(\"../../../providers/SettingsProvider\", {\n  default(v) {\n    SettingsProvider = v;\n  }\n\n}, 7);\nlet itemsSubscription;\nmodule.link(\"../sidebarItems\", {\n  itemsSubscription(v) {\n    itemsSubscription = v;\n  }\n\n}, 8);\n\nconst OmnichannelSidebar = () => {\n  const items = useSubscription(itemsSubscription);\n  const t = useTranslation();\n  const closeOmnichannelFlex = useCallback(() => {\n    if (isLayoutEmbedded()) {\n      menu.close();\n      return;\n    }\n\n    SideNav.closeFlex();\n  }, []);\n  const currentRoute = useCurrentRoute();\n  const [currentRouteName, currentRouteParams, currentQueryStringParams, currentRouteGroupName] = currentRoute;\n  const currentPath = useRoutePath(currentRouteName !== null && currentRouteName !== void 0 ? currentRouteName : '', currentRouteParams, currentQueryStringParams);\n  useEffect(() => {\n    if (currentRouteGroupName !== 'omnichannel') {\n      SideNav.closeFlex();\n    }\n  }, [currentRouteGroupName]);\n  return /*#__PURE__*/React.createElement(SettingsProvider, {\n    privileged: true\n  }, /*#__PURE__*/React.createElement(Sidebar, null, /*#__PURE__*/React.createElement(Sidebar.Header, {\n    onClose: closeOmnichannelFlex,\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, t('Omnichannel'))\n  }), /*#__PURE__*/React.createElement(Sidebar.Content, null, /*#__PURE__*/React.createElement(Sidebar.ItemsAssembler, {\n    items: items,\n    currentPath: currentPath\n  }))));\n};\n\nmodule.exportDefault( /*#__PURE__*/memo(OmnichannelSidebar));","map":{"version":3,"sources":["client/views/omnichannel/sidebar/OmnichannelSidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, FC, memo } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { menu, SideNav } from '../../../../app/ui-utils/client';\nimport Sidebar from '../../../components/Sidebar';\nimport { useRoutePath, useCurrentRoute } from '../../../contexts/RouterContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { isLayoutEmbedded } from '../../../lib/utils/isLayoutEmbedded';\nimport SettingsProvider from '../../../providers/SettingsProvider';\nimport { itemsSubscription } from '../sidebarItems';\n\nconst OmnichannelSidebar: FC = () => {\n\tconst items = useSubscription(itemsSubscription);\n\tconst t = useTranslation();\n\n\tconst closeOmnichannelFlex = useCallback(() => {\n\t\tif (isLayoutEmbedded()) {\n\t\t\tmenu.close();\n\t\t\treturn;\n\t\t}\n\n\t\tSideNav.closeFlex();\n\t}, []);\n\n\tconst currentRoute = useCurrentRoute();\n\tconst [currentRouteName, currentRouteParams, currentQueryStringParams, currentRouteGroupName] = currentRoute;\n\tconst currentPath = useRoutePath(currentRouteName ?? '', currentRouteParams, currentQueryStringParams);\n\n\tuseEffect(() => {\n\t\tif (currentRouteGroupName !== 'omnichannel') {\n\t\t\tSideNav.closeFlex();\n\t\t}\n\t}, [currentRouteGroupName]);\n\n\treturn (\n\t\t<SettingsProvider privileged>\n\t\t\t<Sidebar>\n\t\t\t\t<Sidebar.Header onClose={closeOmnichannelFlex} title={<>{t('Omnichannel')}</>} />\n\t\t\t\t<Sidebar.Content>\n\t\t\t\t\t<Sidebar.ItemsAssembler items={items} currentPath={currentPath} />\n\t\t\t\t</Sidebar.Content>\n\t\t\t</Sidebar>\n\t\t</SettingsProvider>\n\t);\n};\n\nexport default memo(OmnichannelSidebar);\n"],"sourceRoot":""},"sourceType":"module","hash":"40439b8692a83d94c5f1f9a2a5d0658eabd8aa83"}
