{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/setupWizard/providers/SetupWizardProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/setupWizard/providers/SetupWizardProvider.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/setupWizard/providers/SetupWizardProvider.tsx","inputSourceMap":{"version":3,"file":"client/views/setupWizard/providers/SetupWizardProvider.tsx","sourceRoot":"","sources":["client/views/setupWizard/providers/SetupWizardProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Meteor } from 'meteor/meteor';\nimport React, { useCallback, useMemo, useState, ReactElement, ContextType } from 'react';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport { useRole } from '../../../contexts/AuthorizationContext';\nimport { useMethod, useEndpoint } from '../../../contexts/ServerContext';\nimport { useSessionDispatch } from '../../../contexts/SessionContext';\nimport { useSettingSetValue, useSettingsDispatch } from '../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useLoginWithPassword } from '../../../contexts/UserContext';\nimport { SetupWizardContext } from '../contexts/SetupWizardContext';\nimport { useParameters } from '../hooks/useParameters';\nimport { useStepRouting } from '../hooks/useStepRouting';\n\nconst initialData: ContextType<typeof SetupWizardContext>['setupWizardData'] = {\n\tadminData: { fullname: '', username: '', companyEmail: '', password: '' },\n\torganizationData: {\n\t\torganizationName: '',\n\t\torganizationType: '',\n\t\torganizationIndustry: '',\n\t\torganizationSize: '',\n\t\tcountry: '',\n\t},\n\tserverData: {\n\t\tagreement: false,\n\t\temail: '',\n\t\tregisterType: 'registered',\n\t\tupdates: false,\n\t},\n\t// eslint-disable-next-line @typescript-eslint/camelcase\n\tregistrationData: { cloudEmail: '', device_code: '', user_code: '' },\n};\n\ntype HandleRegisterServer = (params: { email: string; resend?: boolean }) => Promise<void>;\n\nconst SetupWizardProvider = ({ children }: { children: ReactElement }): ReactElement => {\n\tconst t = useTranslation();\n\tconst hasAdminRole = useRole('admin');\n\tconst [setupWizardData, setSetupWizardData] = useState<ContextType<typeof SetupWizardContext>['setupWizardData']>(initialData);\n\tconst [currentStep, setCurrentStep] = useStepRouting();\n\tconst { isSuccess, data } = useParameters();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst dispatchSettings = useSettingsDispatch();\n\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst registerUser = useMethod('registerUser');\n\tconst defineUsername = useMethod('setUsername');\n\tconst loginWithPassword = useLoginWithPassword();\n\tconst setForceLogin = useSessionDispatch('forceLogin');\n\tconst createRegistrationIntent = useEndpoint('POST', 'cloud.createRegistrationIntent');\n\n\tconst goToPreviousStep = useCallback(() => setCurrentStep((currentStep) => currentStep - 1), [setCurrentStep]);\n\tconst goToNextStep = useCallback(() => setCurrentStep((currentStep) => currentStep + 1), [setCurrentStep]);\n\tconst goToStep = useCallback((step) => setCurrentStep(() => step), [setCurrentStep]);\n\n\tconst _validateEmail = useCallback(\n\t\t(email: string): true | string => {\n\t\t\tif (!validateEmail(email)) {\n\t\t\t\treturn t('Invalid_email');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[t],\n\t);\n\n\tconst registerAdminUser = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tadminData: { fullname, username, companyEmail, password },\n\t\t} = setupWizardData;\n\t\tawait registerUser({ name: fullname, username, email: companyEmail, pass: password });\n\t\tcallbacks.run('userRegistered', {});\n\n\t\ttry {\n\t\t\tawait loginWithPassword(companyEmail, password);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Meteor.Error && error.error === 'error-invalid-email') {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('We_have_sent_registration_email') });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (error instanceof Error || typeof error === 'string') {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tsetForceLogin(false);\n\n\t\tawait defineUsername(username);\n\t\tawait dispatchSettings([{ _id: 'Organization_Email', value: companyEmail }]);\n\t\tcallbacks.run('usernameSet', {});\n\t}, [defineUsername, dispatchToastMessage, loginWithPassword, registerUser, setForceLogin, dispatchSettings, setupWizardData, t]);\n\n\tconst saveWorkspaceData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tserverData: { updates, agreement },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Statistics_reporting',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Apps_Framework_enabled',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Register_Server',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Allow_Marketing_Emails',\n\t\t\t\tvalue: updates,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Cloud_Service_Agree_PrivacyTerms',\n\t\t\t\tvalue: agreement,\n\t\t\t},\n\t\t]);\n\t}, [dispatchSettings, setupWizardData]);\n\n\tconst saveOrganizationData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\torganizationData: { organizationName, organizationType, organizationIndustry, organizationSize, country },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Country',\n\t\t\t\tvalue: country,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Organization_Type',\n\t\t\t\tvalue: organizationType,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Industry',\n\t\t\t\tvalue: organizationIndustry,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Size',\n\t\t\t\tvalue: organizationSize,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Organization_Name',\n\t\t\t\tvalue: organizationName,\n\t\t\t},\n\t\t]);\n\t}, [dispatchSettings, setupWizardData]);\n\n\tconst registerServer: HandleRegisterServer = useMutableCallback(async ({ email, resend = false }): Promise<void> => {\n\t\tif (!hasAdminRole) {\n\t\t\ttry {\n\t\t\t\tawait registerAdminUser();\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof Error || typeof e === 'string')\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tmessage: e,\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait saveOrganizationData();\n\t\t\tconst { intentData } = await createRegistrationIntent({ resend, email });\n\n\t\t\tsetSetupWizardData((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tregistrationData: { ...intentData, cloudEmail: email },\n\t\t\t}));\n\n\t\t\tgoToStep(4);\n\t\t\tsetShowSetupWizard('in_progress');\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\tconst completeSetupWizard = useMutableCallback(async (): Promise<void> => {\n\t\tif (!hasAdminRole) {\n\t\t\tawait registerAdminUser();\n\t\t}\n\t\tawait saveOrganizationData();\n\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\treturn setShowSetupWizard('completed');\n\t});\n\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tloaded: isSuccess,\n\t\t\tsettings: data.settings,\n\t\t\tskipCloudRegistration: data.serverAlreadyRegistered,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\tregisterAdminUser,\n\t\t\tvalidateEmail: _validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t\tcompleteSetupWizard,\n\t\t\tmaxSteps: data.serverAlreadyRegistered ? 2 : 3,\n\t\t}),\n\t\t[\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tisSuccess,\n\t\t\tregisterAdminUser,\n\t\t\tdata,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\t_validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t\tcompleteSetupWizard,\n\t\t],\n\t);\n\n\treturn <SetupWizardContext.Provider value={value}>{children}</SetupWizardContext.Provider>;\n};\n\nexport default SetupWizardProvider;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/setupWizard/providers/SetupWizardProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/setupWizard/providers/SetupWizardProvider.tsx"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet React, useCallback, useMemo, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet validateEmail;\nmodule.link(\"../../../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n\n}, 4);\nlet useRole;\nmodule.link(\"../../../contexts/AuthorizationContext\", {\n  useRole(v) {\n    useRole = v;\n  }\n\n}, 5);\nlet useMethod, useEndpoint;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useMethod(v) {\n    useMethod = v;\n  },\n\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 6);\nlet useSessionDispatch;\nmodule.link(\"../../../contexts/SessionContext\", {\n  useSessionDispatch(v) {\n    useSessionDispatch = v;\n  }\n\n}, 7);\nlet useSettingSetValue, useSettingsDispatch;\nmodule.link(\"../../../contexts/SettingsContext\", {\n  useSettingSetValue(v) {\n    useSettingSetValue = v;\n  },\n\n  useSettingsDispatch(v) {\n    useSettingsDispatch = v;\n  }\n\n}, 8);\nlet useToastMessageDispatch;\nmodule.link(\"../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 9);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 10);\nlet useLoginWithPassword;\nmodule.link(\"../../../contexts/UserContext\", {\n  useLoginWithPassword(v) {\n    useLoginWithPassword = v;\n  }\n\n}, 11);\nlet SetupWizardContext;\nmodule.link(\"../contexts/SetupWizardContext\", {\n  SetupWizardContext(v) {\n    SetupWizardContext = v;\n  }\n\n}, 12);\nlet useParameters;\nmodule.link(\"../hooks/useParameters\", {\n  useParameters(v) {\n    useParameters = v;\n  }\n\n}, 13);\nlet useStepRouting;\nmodule.link(\"../hooks/useStepRouting\", {\n  useStepRouting(v) {\n    useStepRouting = v;\n  }\n\n}, 14);\nconst initialData = {\n  adminData: {\n    fullname: '',\n    username: '',\n    companyEmail: '',\n    password: ''\n  },\n  organizationData: {\n    organizationName: '',\n    organizationType: '',\n    organizationIndustry: '',\n    organizationSize: '',\n    country: ''\n  },\n  serverData: {\n    agreement: false,\n    email: '',\n    registerType: 'registered',\n    updates: false\n  },\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  registrationData: {\n    cloudEmail: '',\n    device_code: '',\n    user_code: ''\n  }\n};\n\nconst SetupWizardProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const t = useTranslation();\n  const hasAdminRole = useRole('admin');\n  const [setupWizardData, setSetupWizardData] = useState(initialData);\n  const [currentStep, setCurrentStep] = useStepRouting();\n  const {\n    isSuccess,\n    data\n  } = useParameters();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const dispatchSettings = useSettingsDispatch();\n  const setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n  const registerUser = useMethod('registerUser');\n  const defineUsername = useMethod('setUsername');\n  const loginWithPassword = useLoginWithPassword();\n  const setForceLogin = useSessionDispatch('forceLogin');\n  const createRegistrationIntent = useEndpoint('POST', 'cloud.createRegistrationIntent');\n  const goToPreviousStep = useCallback(() => setCurrentStep(currentStep => currentStep - 1), [setCurrentStep]);\n  const goToNextStep = useCallback(() => setCurrentStep(currentStep => currentStep + 1), [setCurrentStep]);\n  const goToStep = useCallback(step => setCurrentStep(() => step), [setCurrentStep]);\n\n  const _validateEmail = useCallback(email => {\n    if (!validateEmail(email)) {\n      return t('Invalid_email');\n    }\n\n    return true;\n  }, [t]);\n\n  const registerAdminUser = useCallback(async () => {\n    const {\n      adminData: {\n        fullname,\n        username,\n        companyEmail,\n        password\n      }\n    } = setupWizardData;\n    await registerUser({\n      name: fullname,\n      username,\n      email: companyEmail,\n      pass: password\n    });\n    callbacks.run('userRegistered', {});\n\n    try {\n      await loginWithPassword(companyEmail, password);\n    } catch (error) {\n      if (error instanceof Meteor.Error && error.error === 'error-invalid-email') {\n        dispatchToastMessage({\n          type: 'success',\n          message: t('We_have_sent_registration_email')\n        });\n        return;\n      }\n\n      if (error instanceof Error || typeof error === 'string') {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n\n      throw error;\n    }\n\n    setForceLogin(false);\n    await defineUsername(username);\n    await dispatchSettings([{\n      _id: 'Organization_Email',\n      value: companyEmail\n    }]);\n    callbacks.run('usernameSet', {});\n  }, [defineUsername, dispatchToastMessage, loginWithPassword, registerUser, setForceLogin, dispatchSettings, setupWizardData, t]);\n  const saveWorkspaceData = useCallback(async () => {\n    const {\n      serverData: {\n        updates,\n        agreement\n      }\n    } = setupWizardData;\n    await dispatchSettings([{\n      _id: 'Statistics_reporting',\n      value: true\n    }, {\n      _id: 'Apps_Framework_enabled',\n      value: true\n    }, {\n      _id: 'Register_Server',\n      value: true\n    }, {\n      _id: 'Allow_Marketing_Emails',\n      value: updates\n    }, {\n      _id: 'Cloud_Service_Agree_PrivacyTerms',\n      value: agreement\n    }]);\n  }, [dispatchSettings, setupWizardData]);\n  const saveOrganizationData = useCallback(async () => {\n    const {\n      organizationData: {\n        organizationName,\n        organizationType,\n        organizationIndustry,\n        organizationSize,\n        country\n      }\n    } = setupWizardData;\n    await dispatchSettings([{\n      _id: 'Country',\n      value: country\n    }, {\n      _id: 'Organization_Type',\n      value: organizationType\n    }, {\n      _id: 'Industry',\n      value: organizationIndustry\n    }, {\n      _id: 'Size',\n      value: organizationSize\n    }, {\n      _id: 'Organization_Name',\n      value: organizationName\n    }]);\n  }, [dispatchSettings, setupWizardData]);\n  const registerServer = useMutableCallback(async _ref2 => {\n    let {\n      email,\n      resend = false\n    } = _ref2;\n\n    if (!hasAdminRole) {\n      try {\n        await registerAdminUser();\n      } catch (e) {\n        if (e instanceof Error || typeof e === 'string') return dispatchToastMessage({\n          type: 'error',\n          message: e\n        });\n      }\n    }\n\n    try {\n      await saveOrganizationData();\n      const {\n        intentData\n      } = await createRegistrationIntent({\n        resend,\n        email\n      });\n      setSetupWizardData(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        registrationData: _objectSpread(_objectSpread({}, intentData), {}, {\n          cloudEmail: email\n        })\n      }));\n      goToStep(4);\n      setShowSetupWizard('in_progress');\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  const completeSetupWizard = useMutableCallback(async () => {\n    if (!hasAdminRole) {\n      await registerAdminUser();\n    }\n\n    await saveOrganizationData();\n    dispatchToastMessage({\n      type: 'success',\n      message: t('Your_workspace_is_ready')\n    });\n    return setShowSetupWizard('completed');\n  });\n  const value = useMemo(() => ({\n    setupWizardData,\n    setSetupWizardData,\n    currentStep,\n    loaded: isSuccess,\n    settings: data.settings,\n    skipCloudRegistration: data.serverAlreadyRegistered,\n    goToPreviousStep,\n    goToNextStep,\n    goToStep,\n    registerAdminUser,\n    validateEmail: _validateEmail,\n    registerServer,\n    saveWorkspaceData,\n    saveOrganizationData,\n    completeSetupWizard,\n    maxSteps: data.serverAlreadyRegistered ? 2 : 3\n  }), [setupWizardData, setSetupWizardData, currentStep, isSuccess, registerAdminUser, data, goToPreviousStep, goToNextStep, goToStep, _validateEmail, registerServer, saveWorkspaceData, saveOrganizationData, completeSetupWizard]);\n  return /*#__PURE__*/React.createElement(SetupWizardContext.Provider, {\n    value: value\n  }, children);\n};\n\nmodule.exportDefault(SetupWizardProvider);","map":{"version":3,"sources":["client/views/setupWizard/providers/SetupWizardProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Meteor } from 'meteor/meteor';\nimport React, { useCallback, useMemo, useState, ReactElement, ContextType } from 'react';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport { useRole } from '../../../contexts/AuthorizationContext';\nimport { useMethod, useEndpoint } from '../../../contexts/ServerContext';\nimport { useSessionDispatch } from '../../../contexts/SessionContext';\nimport { useSettingSetValue, useSettingsDispatch } from '../../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useLoginWithPassword } from '../../../contexts/UserContext';\nimport { SetupWizardContext } from '../contexts/SetupWizardContext';\nimport { useParameters } from '../hooks/useParameters';\nimport { useStepRouting } from '../hooks/useStepRouting';\n\nconst initialData: ContextType<typeof SetupWizardContext>['setupWizardData'] = {\n\tadminData: { fullname: '', username: '', companyEmail: '', password: '' },\n\torganizationData: {\n\t\torganizationName: '',\n\t\torganizationType: '',\n\t\torganizationIndustry: '',\n\t\torganizationSize: '',\n\t\tcountry: '',\n\t},\n\tserverData: {\n\t\tagreement: false,\n\t\temail: '',\n\t\tregisterType: 'registered',\n\t\tupdates: false,\n\t},\n\t// eslint-disable-next-line @typescript-eslint/camelcase\n\tregistrationData: { cloudEmail: '', device_code: '', user_code: '' },\n};\n\ntype HandleRegisterServer = (params: { email: string; resend?: boolean }) => Promise<void>;\n\nconst SetupWizardProvider = ({ children }: { children: ReactElement }): ReactElement => {\n\tconst t = useTranslation();\n\tconst hasAdminRole = useRole('admin');\n\tconst [setupWizardData, setSetupWizardData] = useState<ContextType<typeof SetupWizardContext>['setupWizardData']>(initialData);\n\tconst [currentStep, setCurrentStep] = useStepRouting();\n\tconst { isSuccess, data } = useParameters();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst dispatchSettings = useSettingsDispatch();\n\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst registerUser = useMethod('registerUser');\n\tconst defineUsername = useMethod('setUsername');\n\tconst loginWithPassword = useLoginWithPassword();\n\tconst setForceLogin = useSessionDispatch('forceLogin');\n\tconst createRegistrationIntent = useEndpoint('POST', 'cloud.createRegistrationIntent');\n\n\tconst goToPreviousStep = useCallback(() => setCurrentStep((currentStep) => currentStep - 1), [setCurrentStep]);\n\tconst goToNextStep = useCallback(() => setCurrentStep((currentStep) => currentStep + 1), [setCurrentStep]);\n\tconst goToStep = useCallback((step) => setCurrentStep(() => step), [setCurrentStep]);\n\n\tconst _validateEmail = useCallback(\n\t\t(email: string): true | string => {\n\t\t\tif (!validateEmail(email)) {\n\t\t\t\treturn t('Invalid_email');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[t],\n\t);\n\n\tconst registerAdminUser = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tadminData: { fullname, username, companyEmail, password },\n\t\t} = setupWizardData;\n\t\tawait registerUser({ name: fullname, username, email: companyEmail, pass: password });\n\t\tcallbacks.run('userRegistered', {});\n\n\t\ttry {\n\t\t\tawait loginWithPassword(companyEmail, password);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Meteor.Error && error.error === 'error-invalid-email') {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('We_have_sent_registration_email') });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (error instanceof Error || typeof error === 'string') {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tsetForceLogin(false);\n\n\t\tawait defineUsername(username);\n\t\tawait dispatchSettings([{ _id: 'Organization_Email', value: companyEmail }]);\n\t\tcallbacks.run('usernameSet', {});\n\t}, [defineUsername, dispatchToastMessage, loginWithPassword, registerUser, setForceLogin, dispatchSettings, setupWizardData, t]);\n\n\tconst saveWorkspaceData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tserverData: { updates, agreement },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Statistics_reporting',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Apps_Framework_enabled',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Register_Server',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Allow_Marketing_Emails',\n\t\t\t\tvalue: updates,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Cloud_Service_Agree_PrivacyTerms',\n\t\t\t\tvalue: agreement,\n\t\t\t},\n\t\t]);\n\t}, [dispatchSettings, setupWizardData]);\n\n\tconst saveOrganizationData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\torganizationData: { organizationName, organizationType, organizationIndustry, organizationSize, country },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Country',\n\t\t\t\tvalue: country,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Organization_Type',\n\t\t\t\tvalue: organizationType,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Industry',\n\t\t\t\tvalue: organizationIndustry,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Size',\n\t\t\t\tvalue: organizationSize,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Organization_Name',\n\t\t\t\tvalue: organizationName,\n\t\t\t},\n\t\t]);\n\t}, [dispatchSettings, setupWizardData]);\n\n\tconst registerServer: HandleRegisterServer = useMutableCallback(async ({ email, resend = false }): Promise<void> => {\n\t\tif (!hasAdminRole) {\n\t\t\ttry {\n\t\t\t\tawait registerAdminUser();\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof Error || typeof e === 'string')\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tmessage: e,\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait saveOrganizationData();\n\t\t\tconst { intentData } = await createRegistrationIntent({ resend, email });\n\n\t\t\tsetSetupWizardData((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tregistrationData: { ...intentData, cloudEmail: email },\n\t\t\t}));\n\n\t\t\tgoToStep(4);\n\t\t\tsetShowSetupWizard('in_progress');\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\tconst completeSetupWizard = useMutableCallback(async (): Promise<void> => {\n\t\tif (!hasAdminRole) {\n\t\t\tawait registerAdminUser();\n\t\t}\n\t\tawait saveOrganizationData();\n\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\treturn setShowSetupWizard('completed');\n\t});\n\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tloaded: isSuccess,\n\t\t\tsettings: data.settings,\n\t\t\tskipCloudRegistration: data.serverAlreadyRegistered,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\tregisterAdminUser,\n\t\t\tvalidateEmail: _validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t\tcompleteSetupWizard,\n\t\t\tmaxSteps: data.serverAlreadyRegistered ? 2 : 3,\n\t\t}),\n\t\t[\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tisSuccess,\n\t\t\tregisterAdminUser,\n\t\t\tdata,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\t_validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t\tcompleteSetupWizard,\n\t\t],\n\t);\n\n\treturn <SetupWizardContext.Provider value={value}>{children}</SetupWizardContext.Provider>;\n};\n\nexport default SetupWizardProvider;\n"],"sourceRoot":""},"sourceType":"module","hash":"aed00b5ab4f05e0eafe6c92dca48503c424b1bbc"}
