{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/CallProvider/CallProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/providers/CallProvider/CallProvider.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/CallProvider/CallProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/CallProvider/CallProvider.tsx","sourceRoot":"","sources":["client/providers/CallProvider/CallProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Random } from 'meteor/random';\nimport React, { useMemo, FC, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { CustomSounds } from '../../../app/custom-sounds/client';\nimport { getUserPreference } from '../../../app/utils/client';\nimport { IVoipRoom } from '../../../definition/IRoom';\nimport { IUser } from '../../../definition/IUser';\nimport { ICallerInfo } from '../../../definition/voip/ICallerInfo';\nimport { WrapUpCallModal } from '../../components/voip/modal/WrapUpCallModal';\nimport { CallContext, CallContextValue } from '../../contexts/CallContext';\nimport { useSetModal } from '../../contexts/ModalContext';\nimport { useRoute } from '../../contexts/RouterContext';\nimport { useEndpoint, useStream } from '../../contexts/ServerContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useUser } from '../../contexts/UserContext';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { useVoipClient } from './hooks/useVoipClient';\n\nconst startRingback = (user: IUser): void => {\n\tconst audioVolume = getUserPreference(user, 'notificationsSoundVolume');\n\tCustomSounds.play('telephone', {\n\t\tvolume: Number((audioVolume / 100).toPrecision(2)),\n\t\tloop: true,\n\t});\n};\n\nconst stopRingback = (): void => {\n\tCustomSounds.pause('telephone');\n\tCustomSounds.remove('telephone');\n};\n\nexport const CallProvider: FC = ({ children }) => {\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tconst result = useVoipClient();\n\n\tconst user = useUser();\n\tconst homeRoute = useRoute('home');\n\n\tconst remoteAudioMediaRef = useRef<HTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\n\tconst setModal = useSetModal();\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(<WrapUpCallModal />);\n\t}, [setModal]);\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tuseEffect(() => {\n\t\tif (!result?.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(result.voipClient.getAggregator());\n\t}, [result]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleAgentCalled = async (queue: {\n\t\t\tqueuename: string;\n\t\t\tcallerId: { id: string; name: string };\n\t\t\tqueuedcalls: string;\n\t\t}): Promise<void> => {\n\t\t\tqueueAggregator.callRinging({ queuename: queue.queuename, callerid: queue.callerId });\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/agentcalled`, handleAgentCalled);\n\t}, [subscribeToNotifyUser, user, voipEnabled, queueAggregator]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleQueueJoined = async (joiningDetails: {\n\t\t\tqueuename: string;\n\t\t\tcallerid: { id: string };\n\t\t\tqueuedcalls: string;\n\t\t}): Promise<void> => {\n\t\t\tqueueAggregator.queueJoined(joiningDetails);\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/callerjoined`, handleQueueJoined);\n\t}, [subscribeToNotifyUser, user, voipEnabled, queueAggregator]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleAgentConnected = (queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void => {\n\t\t\tqueueAggregator.callPickedup(queue);\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/agentconnected`, handleAgentConnected);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleMemberAdded = (queue: { queuename: string; queuedcalls: string }): void => {\n\t\t\tqueueAggregator.memberAdded(queue);\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/queuememberadded`, handleMemberAdded);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleMemberRemoved = (queue: { queuename: string; queuedcalls: string }): void => {\n\t\t\tqueueAggregator.memberRemoved(queue);\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/queuememberremoved`, handleMemberRemoved);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleCallAbandon = (queue: { queuename: string; queuedcallafterabandon: string }): void => {\n\t\t\tqueueAggregator.queueAbandoned(queue);\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/callabandoned`, handleCallAbandon);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleCallHangup = (_event: { roomId: string }): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\topenWrapUpModal();\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.callerhangup`, handleCallHangup);\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup taks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be incosistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happend, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistecies :\n\t\t * This element is utilised in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tconst visitorEndpoint = useEndpoint('POST', 'livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', 'voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', 'voip/room.close');\n\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>();\n\n\tconst openRoom = (rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t};\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\tvoipClient.on('incomingcall', () => user && startRingback(user));\n\t\tvoipClient.on('callestablished', () => stopRingback());\n\t\tvoipClient.on('callterminated', () => stopRingback());\n\n\t\treturn {\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom: async (caller: ICallerInfo): Promise<IVoipRoom['_id']> => {\n\t\t\t\tif (user) {\n\t\t\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\t\t\tvisitor: {\n\t\t\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\t\t\tphone: caller.callerId,\n\t\t\t\t\t\t\tname: caller.callerName || caller.callerId,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst voipRoom = visitor && (await voipEndpoint({ token: visitor.token, agentId: user._id }));\n\t\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\t\tconst queueAggregator = voipClient.getAggregator();\n\t\t\t\t\tif (queueAggregator) {\n\t\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t\t}\n\t\t\t\t\treturn voipRoom.room._id;\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tcloseRoom: async ({ comment, tags }: { comment: string; tags: string[] }): Promise<void> => {\n\t\t\t\troomInfo && (await voipCloseRoomEndpoint({ rid: roomInfo.rid, token: roomInfo.v.token || '', comment: comment || '', tags }));\n\t\t\t\thomeRoute.push({});\n\t\t\t\tconst queueAggregator = voipClient.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callEnded();\n\t\t\t\t}\n\t\t\t},\n\t\t\topenWrapUpModal,\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser,\n\t\tresult,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenWrapUpModal,\n\t\tvisitorEndpoint,\n\t\tvoipEndpoint,\n\t\tvoipCloseRoomEndpoint,\n\t\thomeRoute,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled && createPortal(<audio ref={remoteAudioMediaRef} />, document.body)}\n\t\t</CallContext.Provider>\n\t);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/CallProvider/CallProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/providers/CallProvider/CallProvider.tsx"}},"code":"module.export({\n  CallProvider: () => CallProvider\n});\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 0);\nlet React, useMemo, useRef, useCallback, useEffect, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useRef(v) {\n    useRef = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 1);\nlet createPortal;\nmodule.link(\"react-dom\", {\n  createPortal(v) {\n    createPortal = v;\n  }\n\n}, 2);\nlet CustomSounds;\nmodule.link(\"../../../app/custom-sounds/client\", {\n  CustomSounds(v) {\n    CustomSounds = v;\n  }\n\n}, 3);\nlet getUserPreference;\nmodule.link(\"../../../app/utils/client\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n\n}, 4);\nlet WrapUpCallModal;\nmodule.link(\"../../components/voip/modal/WrapUpCallModal\", {\n  WrapUpCallModal(v) {\n    WrapUpCallModal = v;\n  }\n\n}, 5);\nlet CallContext;\nmodule.link(\"../../contexts/CallContext\", {\n  CallContext(v) {\n    CallContext = v;\n  }\n\n}, 6);\nlet useSetModal;\nmodule.link(\"../../contexts/ModalContext\", {\n  useSetModal(v) {\n    useSetModal = v;\n  }\n\n}, 7);\nlet useRoute;\nmodule.link(\"../../contexts/RouterContext\", {\n  useRoute(v) {\n    useRoute = v;\n  }\n\n}, 8);\nlet useEndpoint, useStream;\nmodule.link(\"../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n\n  useStream(v) {\n    useStream = v;\n  }\n\n}, 9);\nlet useSetting;\nmodule.link(\"../../contexts/SettingsContext\", {\n  useSetting(v) {\n    useSetting = v;\n  }\n\n}, 10);\nlet useUser;\nmodule.link(\"../../contexts/UserContext\", {\n  useUser(v) {\n    useUser = v;\n  }\n\n}, 11);\nlet roomCoordinator;\nmodule.link(\"../../lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 12);\nlet useVoipClient;\nmodule.link(\"./hooks/useVoipClient\", {\n  useVoipClient(v) {\n    useVoipClient = v;\n  }\n\n}, 13);\n\nconst startRingback = user => {\n  const audioVolume = getUserPreference(user, 'notificationsSoundVolume');\n  CustomSounds.play('telephone', {\n    volume: Number((audioVolume / 100).toPrecision(2)),\n    loop: true\n  });\n};\n\nconst stopRingback = () => {\n  CustomSounds.pause('telephone');\n  CustomSounds.remove('telephone');\n};\n\nconst CallProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const voipEnabled = useSetting('VoIP_Enabled');\n  const subscribeToNotifyUser = useStream('notify-user');\n  const result = useVoipClient();\n  const user = useUser();\n  const homeRoute = useRoute('home');\n  const remoteAudioMediaRef = useRef(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n  const [queueCounter, setQueueCounter] = useState(0);\n  const [queueName, setQueueName] = useState('');\n  const setModal = useSetModal();\n  const openWrapUpModal = useCallback(() => {\n    setModal( /*#__PURE__*/React.createElement(WrapUpCallModal, null));\n  }, [setModal]);\n  const [queueAggregator, setQueueAggregator] = useState();\n  useEffect(() => {\n    if (!(result !== null && result !== void 0 && result.voipClient)) {\n      return;\n    }\n\n    setQueueAggregator(result.voipClient.getAggregator());\n  }, [result]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleAgentCalled = async queue => {\n      queueAggregator.callRinging({\n        queuename: queue.queuename,\n        callerid: queue.callerId\n      });\n      setQueueName(queueAggregator.getCurrentQueueName());\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/agentcalled\"), handleAgentCalled);\n  }, [subscribeToNotifyUser, user, voipEnabled, queueAggregator]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleQueueJoined = async joiningDetails => {\n      queueAggregator.queueJoined(joiningDetails);\n      setQueueCounter(queueAggregator.getCallWaitingCount());\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/callerjoined\"), handleQueueJoined);\n  }, [subscribeToNotifyUser, user, voipEnabled, queueAggregator]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleAgentConnected = queue => {\n      queueAggregator.callPickedup(queue);\n      setQueueName(queueAggregator.getCurrentQueueName());\n      setQueueCounter(queueAggregator.getCallWaitingCount());\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/agentconnected\"), handleAgentConnected);\n  }, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleMemberAdded = queue => {\n      queueAggregator.memberAdded(queue);\n      setQueueName(queueAggregator.getCurrentQueueName());\n      setQueueCounter(queueAggregator.getCallWaitingCount());\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/queuememberadded\"), handleMemberAdded);\n  }, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleMemberRemoved = queue => {\n      queueAggregator.memberRemoved(queue);\n      setQueueCounter(queueAggregator.getCallWaitingCount());\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/queuememberremoved\"), handleMemberRemoved);\n  }, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleCallAbandon = queue => {\n      queueAggregator.queueAbandoned(queue);\n      setQueueName(queueAggregator.getCurrentQueueName());\n      setQueueCounter(queueAggregator.getCallWaitingCount());\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/callabandoned\"), handleCallAbandon);\n  }, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n  useEffect(() => {\n    if (!voipEnabled || !user || !queueAggregator) {\n      return;\n    }\n\n    const handleCallHangup = _event => {\n      setQueueName(queueAggregator.getCurrentQueueName());\n      openWrapUpModal();\n    };\n\n    return subscribeToNotifyUser(\"\".concat(user._id, \"/call.callerhangup\"), handleCallHangup);\n  }, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n  useEffect(() => {\n    if (!result.voipClient) {\n      return;\n    }\n    /*\n     * This code may need a revisit when we handle callinqueue differently.\n     * Check clickup taks for more details\n     * https://app.clickup.com/t/22hy1k4\n     * When customer called a queue (Either using skype or using internal number), call would get established\n     * customer would hear agent's voice but agent would not hear anything from customer.\n     * This issue was observed on unstable. It was found to be incosistent to reproduce.\n     * On some developer env, it would happen randomly. On Safari it did not happen if\n     * user refreshes before taking every call.\n     *\n     * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n     * This change will trigger re-rendering of media and creation of audio element.\n     * This audio element gets used by voipClient to render the remote audio.\n     * Because the re-render happend, it would hold a stale reference.\n     *\n     * If the dom is inspected, audio element just before body is usually created by this class.\n     * this audio element.srcObject contains null value. In working case, it should display\n     * valid stream object.\n     *\n     * Reason for inconsistecies :\n     * This element is utilised in VoIPUser::setupRemoteMedia\n     * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n     * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n     * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n     * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n     * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n     * Hence sometimes the audio is heard.\n     *\n     * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n     * which should be independent and should not control the call component.\n     *\n     * Solution :\n     * Either make the audio elemenent rendered independent of rest of the DOM.\n     * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n     *\n     * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n     *\n     */\n\n\n    remoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({\n      remoteMediaElement: remoteAudioMediaRef.current\n    });\n  }, [result.voipClient]);\n  const visitorEndpoint = useEndpoint('POST', 'livechat/visitor');\n  const voipEndpoint = useEndpoint('GET', 'voip/room');\n  const voipCloseRoomEndpoint = useEndpoint('POST', 'voip/room.close');\n  const [roomInfo, setRoomInfo] = useState();\n\n  const openRoom = rid => {\n    roomCoordinator.openRouteLink('v', {\n      rid\n    });\n  };\n\n  const contextValue = useMemo(() => {\n    if (!voipEnabled) {\n      return {\n        enabled: false,\n        ready: false\n      };\n    }\n\n    if (!(user !== null && user !== void 0 && user.extension)) {\n      return {\n        enabled: false,\n        ready: false\n      };\n    }\n\n    if (result.error) {\n      return {\n        enabled: true,\n        ready: false,\n        error: result.error\n      };\n    }\n\n    if (!result.voipClient) {\n      return {\n        enabled: true,\n        ready: false\n      };\n    }\n\n    const {\n      registrationInfo,\n      voipClient\n    } = result;\n    voipClient.on('incomingcall', () => user && startRingback(user));\n    voipClient.on('callestablished', () => stopRingback());\n    voipClient.on('callterminated', () => stopRingback());\n    return {\n      enabled: true,\n      ready: true,\n      openedRoomInfo: roomInfo,\n      voipClient,\n      registrationInfo,\n      queueCounter,\n      queueName,\n      actions: {\n        mute: () => voipClient.muteCall(true),\n        unmute: () => voipClient.muteCall(false),\n        pause: () => voipClient.holdCall(true),\n        resume: () => voipClient.holdCall(false),\n        end: () => voipClient.endCall(),\n        pickUp: async () => remoteAudioMediaRef.current && voipClient.acceptCall({\n          remoteMediaElement: remoteAudioMediaRef.current\n        }),\n        reject: () => voipClient.rejectCall()\n      },\n      openRoom,\n      createRoom: async caller => {\n        if (user) {\n          const {\n            visitor\n          } = await visitorEndpoint({\n            visitor: {\n              token: Random.id(),\n              phone: caller.callerId,\n              name: caller.callerName || caller.callerId\n            }\n          });\n          const voipRoom = visitor && (await voipEndpoint({\n            token: visitor.token,\n            agentId: user._id\n          }));\n          openRoom(voipRoom.room._id);\n          voipRoom.room && setRoomInfo({\n            v: {\n              token: voipRoom.room.v.token\n            },\n            rid: voipRoom.room._id\n          });\n          const queueAggregator = voipClient.getAggregator();\n\n          if (queueAggregator) {\n            queueAggregator.callStarted();\n          }\n\n          return voipRoom.room._id;\n        }\n\n        return '';\n      },\n      closeRoom: async _ref2 => {\n        let {\n          comment,\n          tags\n        } = _ref2;\n        roomInfo && (await voipCloseRoomEndpoint({\n          rid: roomInfo.rid,\n          token: roomInfo.v.token || '',\n          comment: comment || '',\n          tags\n        }));\n        homeRoute.push({});\n        const queueAggregator = voipClient.getAggregator();\n\n        if (queueAggregator) {\n          queueAggregator.callEnded();\n        }\n      },\n      openWrapUpModal\n    };\n  }, [voipEnabled, user, result, roomInfo, queueCounter, queueName, openWrapUpModal, visitorEndpoint, voipEndpoint, voipCloseRoomEndpoint, homeRoute]);\n  return /*#__PURE__*/React.createElement(CallContext.Provider, {\n    value: contextValue\n  }, children, contextValue.enabled && /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(\"audio\", {\n    ref: remoteAudioMediaRef\n  }), document.body));\n};","map":{"version":3,"sources":["client/providers/CallProvider/CallProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Random } from 'meteor/random';\nimport React, { useMemo, FC, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { CustomSounds } from '../../../app/custom-sounds/client';\nimport { getUserPreference } from '../../../app/utils/client';\nimport { IVoipRoom } from '../../../definition/IRoom';\nimport { IUser } from '../../../definition/IUser';\nimport { ICallerInfo } from '../../../definition/voip/ICallerInfo';\nimport { WrapUpCallModal } from '../../components/voip/modal/WrapUpCallModal';\nimport { CallContext, CallContextValue } from '../../contexts/CallContext';\nimport { useSetModal } from '../../contexts/ModalContext';\nimport { useRoute } from '../../contexts/RouterContext';\nimport { useEndpoint, useStream } from '../../contexts/ServerContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useUser } from '../../contexts/UserContext';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { useVoipClient } from './hooks/useVoipClient';\n\nconst startRingback = (user: IUser): void => {\n\tconst audioVolume = getUserPreference(user, 'notificationsSoundVolume');\n\tCustomSounds.play('telephone', {\n\t\tvolume: Number((audioVolume / 100).toPrecision(2)),\n\t\tloop: true,\n\t});\n};\n\nconst stopRingback = (): void => {\n\tCustomSounds.pause('telephone');\n\tCustomSounds.remove('telephone');\n};\n\nexport const CallProvider: FC = ({ children }) => {\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tconst result = useVoipClient();\n\n\tconst user = useUser();\n\tconst homeRoute = useRoute('home');\n\n\tconst remoteAudioMediaRef = useRef<HTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\n\tconst setModal = useSetModal();\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(<WrapUpCallModal />);\n\t}, [setModal]);\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tuseEffect(() => {\n\t\tif (!result?.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(result.voipClient.getAggregator());\n\t}, [result]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleAgentCalled = async (queue: {\n\t\t\tqueuename: string;\n\t\t\tcallerId: { id: string; name: string };\n\t\t\tqueuedcalls: string;\n\t\t}): Promise<void> => {\n\t\t\tqueueAggregator.callRinging({ queuename: queue.queuename, callerid: queue.callerId });\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/agentcalled`, handleAgentCalled);\n\t}, [subscribeToNotifyUser, user, voipEnabled, queueAggregator]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleQueueJoined = async (joiningDetails: {\n\t\t\tqueuename: string;\n\t\t\tcallerid: { id: string };\n\t\t\tqueuedcalls: string;\n\t\t}): Promise<void> => {\n\t\t\tqueueAggregator.queueJoined(joiningDetails);\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/callerjoined`, handleQueueJoined);\n\t}, [subscribeToNotifyUser, user, voipEnabled, queueAggregator]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleAgentConnected = (queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void => {\n\t\t\tqueueAggregator.callPickedup(queue);\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/agentconnected`, handleAgentConnected);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleMemberAdded = (queue: { queuename: string; queuedcalls: string }): void => {\n\t\t\tqueueAggregator.memberAdded(queue);\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/queuememberadded`, handleMemberAdded);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleMemberRemoved = (queue: { queuename: string; queuedcalls: string }): void => {\n\t\t\tqueueAggregator.memberRemoved(queue);\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/queuememberremoved`, handleMemberRemoved);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleCallAbandon = (queue: { queuename: string; queuedcallafterabandon: string }): void => {\n\t\t\tqueueAggregator.queueAbandoned(queue);\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/callabandoned`, handleCallAbandon);\n\t}, [queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleCallHangup = (_event: { roomId: string }): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\topenWrapUpModal();\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.callerhangup`, handleCallHangup);\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup taks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be incosistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happend, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistecies :\n\t\t * This element is utilised in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tconst visitorEndpoint = useEndpoint('POST', 'livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', 'voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', 'voip/room.close');\n\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>();\n\n\tconst openRoom = (rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t};\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\tvoipClient.on('incomingcall', () => user && startRingback(user));\n\t\tvoipClient.on('callestablished', () => stopRingback());\n\t\tvoipClient.on('callterminated', () => stopRingback());\n\n\t\treturn {\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom: async (caller: ICallerInfo): Promise<IVoipRoom['_id']> => {\n\t\t\t\tif (user) {\n\t\t\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\t\t\tvisitor: {\n\t\t\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\t\t\tphone: caller.callerId,\n\t\t\t\t\t\t\tname: caller.callerName || caller.callerId,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tconst voipRoom = visitor && (await voipEndpoint({ token: visitor.token, agentId: user._id }));\n\t\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\t\tconst queueAggregator = voipClient.getAggregator();\n\t\t\t\t\tif (queueAggregator) {\n\t\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t\t}\n\t\t\t\t\treturn voipRoom.room._id;\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tcloseRoom: async ({ comment, tags }: { comment: string; tags: string[] }): Promise<void> => {\n\t\t\t\troomInfo && (await voipCloseRoomEndpoint({ rid: roomInfo.rid, token: roomInfo.v.token || '', comment: comment || '', tags }));\n\t\t\t\thomeRoute.push({});\n\t\t\t\tconst queueAggregator = voipClient.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callEnded();\n\t\t\t\t}\n\t\t\t},\n\t\t\topenWrapUpModal,\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser,\n\t\tresult,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenWrapUpModal,\n\t\tvisitorEndpoint,\n\t\tvoipEndpoint,\n\t\tvoipCloseRoomEndpoint,\n\t\thomeRoute,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled && createPortal(<audio ref={remoteAudioMediaRef} />, document.body)}\n\t\t</CallContext.Provider>\n\t);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"92b06100b4ee7eb0eb3008bca0cc6b2b06c629f2"}
