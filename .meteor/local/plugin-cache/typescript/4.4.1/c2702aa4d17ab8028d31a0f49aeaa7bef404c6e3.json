{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/QueueAggregator.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/voip/QueueAggregator.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/QueueAggregator.ts","inputSourceMap":{"version":3,"file":"client/lib/voip/QueueAggregator.ts","sourceRoot":"","sources":["client/lib/voip/QueueAggregator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Class representing the agent's queue information. This class stores the information\n * of all the queues that the agent is serving.\n *\n * @remarks\n * This class stores the necessary information of agent's queue stats.\n * It also maintains a history of agents queue operation history for current\n * login session. (Agent logging in to rocket-chat and logging off from rocket chat.)\n * Currently the data is stored locally but may sent back to server if such need exists.\n */\n\nimport { IQueueMembershipSubscription } from '../../../definition/IVoipExtension';\nimport { ICallerInfo } from '../../../definition/voip/ICallerInfo';\nimport { IQueueInfo } from '../../../definition/voip/IQueueInfo';\n\ninterface IQueueServingRecord {\n\tqueueInfo: IQueueInfo;\n\tcallStarted: Date | undefined;\n\tcallEnded: Date | undefined;\n\tcallerId: ICallerInfo;\n\tagentExtension: string;\n}\n/**\n * Currently this class depends on the external users to update this class.\n * But in theory, this class serves as\n */\nexport class QueueAggregator {\n\t// Maintains the history of the queue that the agent has served\n\tprivate sessionQueueCallServingHistory: IQueueServingRecord[];\n\n\tprivate currentlyServing: IQueueServingRecord;\n\n\tprivate currentQueueMembershipStatus: Record<string, IQueueInfo>;\n\n\tprivate extension: string;\n\n\tconstructor() {\n\t\tthis.sessionQueueCallServingHistory = [];\n\t\tthis.currentQueueMembershipStatus = {};\n\t}\n\n\tprivate updateQueueInfo(queueName: string, queuedCalls: number): void {\n\t\tif (!this.currentQueueMembershipStatus[queueName]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tthis.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n\t}\n\n\tsetMembership(subscription: IQueueMembershipSubscription): void {\n\t\tthis.extension = subscription.extension;\n\t\tfor (let i = 0; i < subscription.queues.length; i++) {\n\t\t\tconst queue = subscription.queues[i];\n\t\t\tconst queueInfo: IQueueInfo = {\n\t\t\t\tqueueName: queue.name,\n\t\t\t\tcallsInQueue: 0,\n\t\t\t};\n\t\t\tthis.currentQueueMembershipStatus[queue.name] = queueInfo;\n\t\t}\n\t}\n\n\tqueueJoined(joiningDetails: { queuename: string; callerid: { id: string }; queuedcalls: string }): void {\n\t\tthis.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n\t}\n\n\tcallPickedup(queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n\t}\n\n\tmemberAdded(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is added in the queue which has queue count |queuedcalls|\n\t\tconst queueInfo: IQueueInfo = {\n\t\t\tqueueName: queue.queuename,\n\t\t\tcallsInQueue: Number(queue.queuedcalls),\n\t\t};\n\t\tthis.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n\t}\n\n\tmemberRemoved(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is removed from the queue which has queue count |queuedcalls|\n\t\tif (!this.currentQueueMembershipStatus[queue.queuename]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tdelete this.currentQueueMembershipStatus[queue.queuename];\n\t}\n\n\tqueueAbandoned(queue: { queuename: string; queuedcallafterabandon: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n\t}\n\n\tgetCallWaitingCount(): number {\n\t\tlet totalCallWaitingCount = 0;\n\t\tObject.entries(this.currentQueueMembershipStatus).forEach(([, value]) => {\n\t\t\ttotalCallWaitingCount += value.callsInQueue;\n\t\t});\n\t\treturn totalCallWaitingCount;\n\t}\n\n\tgetCurrentQueueName(): string {\n\t\tif (this.currentlyServing.queueInfo) {\n\t\t\treturn this.currentlyServing.queueInfo.queueName;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tcallRinging(queueInfo: { queuename: string; callerid: { id: string; name: string } }): void {\n\t\tif (!this.currentQueueMembershipStatus[queueInfo.queuename]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst queueServing: IQueueServingRecord = {\n\t\t\tqueueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n\t\t\tcallerId: {\n\t\t\t\tcallerId: queueInfo.callerid.id,\n\t\t\t\tcallerName: queueInfo.callerid.name,\n\t\t\t},\n\t\t\tcallStarted: undefined,\n\t\t\tcallEnded: undefined,\n\t\t\tagentExtension: this.extension,\n\t\t};\n\t\tthis.currentlyServing = queueServing;\n\t}\n\n\tcallStarted(): void {\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callStarted = new Date();\n\t\t}\n\t}\n\n\tcallEnded(): void {\n\t\t// Latest calls are at lower index\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callEnded = new Date();\n\t\t\tthis.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n\t\t}\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/voip/QueueAggregator.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/voip/QueueAggregator.ts"}},"code":"module.export({\n  QueueAggregator: () => QueueAggregator\n});\n\nclass QueueAggregator {\n  // Maintains the history of the queue that the agent has served\n  constructor() {\n    this.sessionQueueCallServingHistory = void 0;\n    this.currentlyServing = void 0;\n    this.currentQueueMembershipStatus = void 0;\n    this.extension = void 0;\n    this.sessionQueueCallServingHistory = [];\n    this.currentQueueMembershipStatus = {};\n  }\n\n  updateQueueInfo(queueName, queuedCalls) {\n    if (!this.currentQueueMembershipStatus[queueName]) {\n      // something is wrong. Queue is not found in the membership details.\n      return;\n    }\n\n    this.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n  }\n\n  setMembership(subscription) {\n    this.extension = subscription.extension;\n\n    for (let i = 0; i < subscription.queues.length; i++) {\n      const queue = subscription.queues[i];\n      const queueInfo = {\n        queueName: queue.name,\n        callsInQueue: 0\n      };\n      this.currentQueueMembershipStatus[queue.name] = queueInfo;\n    }\n  }\n\n  queueJoined(joiningDetails) {\n    this.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n  }\n\n  callPickedup(queue) {\n    this.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n  }\n\n  memberAdded(queue) {\n    // current user is added in the queue which has queue count |queuedcalls|\n    const queueInfo = {\n      queueName: queue.queuename,\n      callsInQueue: Number(queue.queuedcalls)\n    };\n    this.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n  }\n\n  memberRemoved(queue) {\n    // current user is removed from the queue which has queue count |queuedcalls|\n    if (!this.currentQueueMembershipStatus[queue.queuename]) {\n      // something is wrong. Queue is not found in the membership details.\n      return;\n    }\n\n    delete this.currentQueueMembershipStatus[queue.queuename];\n  }\n\n  queueAbandoned(queue) {\n    this.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n  }\n\n  getCallWaitingCount() {\n    let totalCallWaitingCount = 0;\n    Object.entries(this.currentQueueMembershipStatus).forEach(_ref => {\n      let [, value] = _ref;\n      totalCallWaitingCount += value.callsInQueue;\n    });\n    return totalCallWaitingCount;\n  }\n\n  getCurrentQueueName() {\n    if (this.currentlyServing.queueInfo) {\n      return this.currentlyServing.queueInfo.queueName;\n    }\n\n    return '';\n  }\n\n  callRinging(queueInfo) {\n    if (!this.currentQueueMembershipStatus[queueInfo.queuename]) {\n      return;\n    }\n\n    const queueServing = {\n      queueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n      callerId: {\n        callerId: queueInfo.callerid.id,\n        callerName: queueInfo.callerid.name\n      },\n      callStarted: undefined,\n      callEnded: undefined,\n      agentExtension: this.extension\n    };\n    this.currentlyServing = queueServing;\n  }\n\n  callStarted() {\n    if (this.currentlyServing) {\n      this.currentlyServing.callStarted = new Date();\n    }\n  }\n\n  callEnded() {\n    // Latest calls are at lower index\n    if (this.currentlyServing) {\n      this.currentlyServing.callEnded = new Date();\n      this.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n    }\n  }\n\n}","map":{"version":3,"sources":["client/lib/voip/QueueAggregator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Class representing the agent's queue information. This class stores the information\n * of all the queues that the agent is serving.\n *\n * @remarks\n * This class stores the necessary information of agent's queue stats.\n * It also maintains a history of agents queue operation history for current\n * login session. (Agent logging in to rocket-chat and logging off from rocket chat.)\n * Currently the data is stored locally but may sent back to server if such need exists.\n */\n\nimport { IQueueMembershipSubscription } from '../../../definition/IVoipExtension';\nimport { ICallerInfo } from '../../../definition/voip/ICallerInfo';\nimport { IQueueInfo } from '../../../definition/voip/IQueueInfo';\n\ninterface IQueueServingRecord {\n\tqueueInfo: IQueueInfo;\n\tcallStarted: Date | undefined;\n\tcallEnded: Date | undefined;\n\tcallerId: ICallerInfo;\n\tagentExtension: string;\n}\n/**\n * Currently this class depends on the external users to update this class.\n * But in theory, this class serves as\n */\nexport class QueueAggregator {\n\t// Maintains the history of the queue that the agent has served\n\tprivate sessionQueueCallServingHistory: IQueueServingRecord[];\n\n\tprivate currentlyServing: IQueueServingRecord;\n\n\tprivate currentQueueMembershipStatus: Record<string, IQueueInfo>;\n\n\tprivate extension: string;\n\n\tconstructor() {\n\t\tthis.sessionQueueCallServingHistory = [];\n\t\tthis.currentQueueMembershipStatus = {};\n\t}\n\n\tprivate updateQueueInfo(queueName: string, queuedCalls: number): void {\n\t\tif (!this.currentQueueMembershipStatus[queueName]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tthis.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n\t}\n\n\tsetMembership(subscription: IQueueMembershipSubscription): void {\n\t\tthis.extension = subscription.extension;\n\t\tfor (let i = 0; i < subscription.queues.length; i++) {\n\t\t\tconst queue = subscription.queues[i];\n\t\t\tconst queueInfo: IQueueInfo = {\n\t\t\t\tqueueName: queue.name,\n\t\t\t\tcallsInQueue: 0,\n\t\t\t};\n\t\t\tthis.currentQueueMembershipStatus[queue.name] = queueInfo;\n\t\t}\n\t}\n\n\tqueueJoined(joiningDetails: { queuename: string; callerid: { id: string }; queuedcalls: string }): void {\n\t\tthis.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n\t}\n\n\tcallPickedup(queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n\t}\n\n\tmemberAdded(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is added in the queue which has queue count |queuedcalls|\n\t\tconst queueInfo: IQueueInfo = {\n\t\t\tqueueName: queue.queuename,\n\t\t\tcallsInQueue: Number(queue.queuedcalls),\n\t\t};\n\t\tthis.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n\t}\n\n\tmemberRemoved(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is removed from the queue which has queue count |queuedcalls|\n\t\tif (!this.currentQueueMembershipStatus[queue.queuename]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tdelete this.currentQueueMembershipStatus[queue.queuename];\n\t}\n\n\tqueueAbandoned(queue: { queuename: string; queuedcallafterabandon: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n\t}\n\n\tgetCallWaitingCount(): number {\n\t\tlet totalCallWaitingCount = 0;\n\t\tObject.entries(this.currentQueueMembershipStatus).forEach(([, value]) => {\n\t\t\ttotalCallWaitingCount += value.callsInQueue;\n\t\t});\n\t\treturn totalCallWaitingCount;\n\t}\n\n\tgetCurrentQueueName(): string {\n\t\tif (this.currentlyServing.queueInfo) {\n\t\t\treturn this.currentlyServing.queueInfo.queueName;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tcallRinging(queueInfo: { queuename: string; callerid: { id: string; name: string } }): void {\n\t\tif (!this.currentQueueMembershipStatus[queueInfo.queuename]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst queueServing: IQueueServingRecord = {\n\t\t\tqueueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n\t\t\tcallerId: {\n\t\t\t\tcallerId: queueInfo.callerid.id,\n\t\t\t\tcallerName: queueInfo.callerid.name,\n\t\t\t},\n\t\t\tcallStarted: undefined,\n\t\t\tcallEnded: undefined,\n\t\t\tagentExtension: this.extension,\n\t\t};\n\t\tthis.currentlyServing = queueServing;\n\t}\n\n\tcallStarted(): void {\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callStarted = new Date();\n\t\t}\n\t}\n\n\tcallEnded(): void {\n\t\t// Latest calls are at lower index\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callEnded = new Date();\n\t\t\tthis.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n\t\t}\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"c2702aa4d17ab8028d31a0f49aeaa7bef404c6e3"}
