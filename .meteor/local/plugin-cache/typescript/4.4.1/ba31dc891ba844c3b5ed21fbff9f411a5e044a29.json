{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/userData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/userData.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/userData.ts","inputSourceMap":{"version":3,"file":"client/lib/userData.ts","sourceRoot":"","sources":["client/lib/userData.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport { Users } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { APIClient } from '../../app/utils/client';\nimport type { IUser, IUserDataEvent } from '../../definition/IUser';\nimport { Serialized } from '../../definition/Serialized';\n\nexport const isSyncReady = new ReactiveVar(false);\n\ntype RawUserData = Serialized<\n\tPick<\n\t\tIUser,\n\t\t| '_id'\n\t\t| 'type'\n\t\t| 'name'\n\t\t| 'username'\n\t\t| 'emails'\n\t\t| 'status'\n\t\t| 'statusDefault'\n\t\t| 'statusText'\n\t\t| 'statusConnection'\n\t\t| 'avatarOrigin'\n\t\t| 'utcOffset'\n\t\t| 'language'\n\t\t| 'settings'\n\t\t| 'roles'\n\t\t| 'active'\n\t\t| 'defaultRoom'\n\t\t| 'customFields'\n\t\t| 'statusLivechat'\n\t\t| 'oauth'\n\t\t| 'createdAt'\n\t\t| '_updatedAt'\n\t\t| 'avatarETag'\n\t>\n>;\n\nconst updateUser = (userData: IUser): void => {\n\tconst user: IUser = Users.findOne({ _id: userData._id });\n\n\tif (!user || !user._updatedAt || user._updatedAt.getTime() < userData._updatedAt.getTime()) {\n\t\tMeteor.users.upsert({ _id: userData._id }, userData as Meteor.User);\n\t\treturn;\n\t}\n\n\t// delete data already on user's collection as those are newer\n\tObject.keys(user).forEach((key) => {\n\t\tdelete userData[key as keyof IUser];\n\t});\n\tMeteor.users.update({ _id: user._id }, { $set: userData as Meteor.User });\n};\n\nlet cancel: undefined | (() => void);\nexport const synchronizeUserData = async (uid: Meteor.User['_id']): Promise<RawUserData | void> => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\n\t// Remove data from any other user that we may have retained\n\tMeteor.users.remove({ _id: { $ne: uid } });\n\n\tcancel?.();\n\n\tcancel = await Notifications.onUser('userData', (data: IUserDataEvent) => {\n\t\tswitch (data.type) {\n\t\t\tcase 'inserted':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\tconst { type, id, ...user } = data;\n\t\t\t\tMeteor.users.insert(user as Meteor.User);\n\t\t\t\tbreak;\n\n\t\t\tcase 'updated':\n\t\t\t\tMeteor.users.upsert({ _id: uid }, { $set: data.diff as Meteor.User, $unset: data.unset });\n\t\t\t\tbreak;\n\n\t\t\tcase 'removed':\n\t\t\t\tMeteor.users.remove({ _id: uid });\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst userData: RawUserData = await APIClient.v1.get('me');\n\tif (userData) {\n\t\tupdateUser({\n\t\t\t...userData,\n\t\t\tcreatedAt: new Date(userData.createdAt),\n\t\t\t_updatedAt: new Date(userData._updatedAt),\n\t\t});\n\t}\n\tisSyncReady.set(true);\n\n\treturn userData;\n};\n\nexport const removeLocalUserData = (): number => Meteor.users.remove({});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/lib/userData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/userData.ts"}},"code":"const _excluded = [\"type\", \"id\"];\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nmodule.export({\n  isSyncReady: () => isSyncReady,\n  synchronizeUserData: () => synchronizeUserData,\n  removeLocalUserData: () => removeLocalUserData\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../app/models/client\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet Notifications;\nmodule.link(\"../../app/notifications/client\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 3);\nlet APIClient;\nmodule.link(\"../../app/utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 4);\nconst isSyncReady = new ReactiveVar(false);\n\nconst updateUser = userData => {\n  const user = Users.findOne({\n    _id: userData._id\n  });\n\n  if (!user || !user._updatedAt || user._updatedAt.getTime() < userData._updatedAt.getTime()) {\n    Meteor.users.upsert({\n      _id: userData._id\n    }, userData);\n    return;\n  } // delete data already on user's collection as those are newer\n\n\n  Object.keys(user).forEach(key => {\n    delete userData[key];\n  });\n  Meteor.users.update({\n    _id: user._id\n  }, {\n    $set: userData\n  });\n};\n\nlet cancel;\n\nconst synchronizeUserData = async uid => {\n  var _cancel;\n\n  if (!uid) {\n    return;\n  } // Remove data from any other user that we may have retained\n\n\n  Meteor.users.remove({\n    _id: {\n      $ne: uid\n    }\n  });\n  (_cancel = cancel) === null || _cancel === void 0 ? void 0 : _cancel();\n  cancel = await Notifications.onUser('userData', data => {\n    switch (data.type) {\n      case 'inserted':\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {\n          type,\n          id\n        } = data,\n              user = _objectWithoutProperties(data, _excluded);\n\n        Meteor.users.insert(user);\n        break;\n\n      case 'updated':\n        Meteor.users.upsert({\n          _id: uid\n        }, {\n          $set: data.diff,\n          $unset: data.unset\n        });\n        break;\n\n      case 'removed':\n        Meteor.users.remove({\n          _id: uid\n        });\n        break;\n    }\n  });\n  const userData = await APIClient.v1.get('me');\n\n  if (userData) {\n    updateUser(_objectSpread(_objectSpread({}, userData), {}, {\n      createdAt: new Date(userData.createdAt),\n      _updatedAt: new Date(userData._updatedAt)\n    }));\n  }\n\n  isSyncReady.set(true);\n  return userData;\n};\n\nconst removeLocalUserData = () => Meteor.users.remove({});","map":{"version":3,"sources":["client/lib/userData.ts"],"names":[],"mappings":";;AAAA,IAAA,aAAA;;AAAiB,MAAM,CAAA,IAAN,CAAM,sCAAN,EAAsB;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAtB,EAAsB,CAAtB;;AAAsB,IAAA,wBAAA;;AAAA,MAAA,CAAA,IAAA,CAAA,gDAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,wBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAvC,MAAA,CAAO,MAAP,CAAS;AAAM,EAAA,WAAQ,EAAA,MAAA,WAAd;AAA8B,EAAA,mBAAA,EAAA,MAAA,mBAA9B;AAA8B,EAAA,mBAAA,EAAA,MAAA;AAA9B,CAAT;AAAuC,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAShC,MAAM,WAAW,GAAG,IAAI,WAAJ,CAAgB,KAAhB,CAApB;;AA8BP,MAAM,UAAU,GAAI,QAAD,IAA0B;AAC5C,QAAM,IAAI,GAAU,KAAK,CAAC,OAAN,CAAc;AAAE,IAAA,GAAG,EAAE,QAAQ,CAAC;AAAhB,GAAd,CAApB;;AAEA,MAAI,CAAC,IAAD,IAAS,CAAC,IAAI,CAAC,UAAf,IAA6B,IAAI,CAAC,UAAL,CAAgB,OAAhB,KAA4B,QAAQ,CAAC,UAAT,CAAoB,OAApB,EAA7D,EAA4F;AAC3F,IAAA,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB;AAAE,MAAA,GAAG,EAAE,QAAQ,CAAC;AAAhB,KAApB,EAA2C,QAA3C;AACA;AACA,GAN2C,CAQ5C;;;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA2B,GAAD,IAAQ;AACjC,WAAO,QAAQ,CAAC,GAAD,CAAf;AACA,GAFD;AAGA,EAAA,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB;AAAE,IAAA,GAAG,EAAE,IAAI,CAAC;AAAZ,GAApB,EAAuC;AAAE,IAAA,IAAI,EAAE;AAAR,GAAvC;AACA,CAbD;;AAeA,IAAI,MAAJ;;AACO,MAAM,mBAAmB,GAAG,MAAO,GAAP,IAA+D;AAAA;;AACjG,MAAI,CAAC,GAAL,EAAU;AACT;AACA,GAHgG,CAKjG;;;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB;AAAE,IAAA,GAAG,EAAE;AAAE,MAAA,GAAG,EAAE;AAAP;AAAP,GAApB;AAEA,aAAA,MAAM,UAAN;AAEA,EAAA,MAAM,GAAG,MAAM,aAAa,CAAC,MAAd,CAAqB,UAArB,EAAkC,IAAD,IAAyB;AACxE,YAAQ,IAAI,CAAC,IAAb;AACC,WAAK,UAAL;AACC;AACA,cAAM;AAAE,UAAA,IAAF;AAAQ,UAAA;AAAR,YAAwB,IAA9B;AAAA,cAAqB,IAArB,4BAA8B,IAA9B;;AACA,QAAA,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB,IAApB;AACA;;AAED,WAAK,SAAL;AACC,QAAA,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB;AAAE,UAAA,GAAG,EAAE;AAAP,SAApB,EAAkC;AAAE,UAAA,IAAI,EAAE,IAAI,CAAC,IAAb;AAAkC,UAAA,MAAM,EAAE,IAAI,CAAC;AAA/C,SAAlC;AACA;;AAED,WAAK,SAAL;AACC,QAAA,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB;AAAE,UAAA,GAAG,EAAE;AAAP,SAApB;AACA;AAbF;AAeA,GAhBc,CAAf;AAkBA,QAAM,QAAQ,GAAgB,MAAM,SAAS,CAAC,EAAV,CAAa,GAAb,CAAiB,IAAjB,CAApC;;AACA,MAAI,QAAJ,EAAc;AACb,IAAA,UAAU,iCACN,QADM;AAET,MAAA,SAAS,EAAE,IAAI,IAAJ,CAAS,QAAQ,CAAC,SAAlB,CAFF;AAGT,MAAA,UAAU,EAAE,IAAI,IAAJ,CAAS,QAAQ,CAAC,UAAlB;AAHH,OAAV;AAKA;;AACD,EAAA,WAAW,CAAC,GAAZ,CAAgB,IAAhB;AAEA,SAAO,QAAP;AACA,CAvCM;;AAyCA,MAAM,mBAAmB,GAAG,MAAc,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB,EAApB,CAA1C","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport { Users } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { APIClient } from '../../app/utils/client';\nimport type { IUser, IUserDataEvent } from '../../definition/IUser';\nimport { Serialized } from '../../definition/Serialized';\n\nexport const isSyncReady = new ReactiveVar(false);\n\ntype RawUserData = Serialized<\n\tPick<\n\t\tIUser,\n\t\t| '_id'\n\t\t| 'type'\n\t\t| 'name'\n\t\t| 'username'\n\t\t| 'emails'\n\t\t| 'status'\n\t\t| 'statusDefault'\n\t\t| 'statusText'\n\t\t| 'statusConnection'\n\t\t| 'avatarOrigin'\n\t\t| 'utcOffset'\n\t\t| 'language'\n\t\t| 'settings'\n\t\t| 'roles'\n\t\t| 'active'\n\t\t| 'defaultRoom'\n\t\t| 'customFields'\n\t\t| 'statusLivechat'\n\t\t| 'oauth'\n\t\t| 'createdAt'\n\t\t| '_updatedAt'\n\t\t| 'avatarETag'\n\t>\n>;\n\nconst updateUser = (userData: IUser): void => {\n\tconst user: IUser = Users.findOne({ _id: userData._id });\n\n\tif (!user || !user._updatedAt || user._updatedAt.getTime() < userData._updatedAt.getTime()) {\n\t\tMeteor.users.upsert({ _id: userData._id }, userData as Meteor.User);\n\t\treturn;\n\t}\n\n\t// delete data already on user's collection as those are newer\n\tObject.keys(user).forEach((key) => {\n\t\tdelete userData[key as keyof IUser];\n\t});\n\tMeteor.users.update({ _id: user._id }, { $set: userData as Meteor.User });\n};\n\nlet cancel: undefined | (() => void);\nexport const synchronizeUserData = async (uid: Meteor.User['_id']): Promise<RawUserData | void> => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\n\t// Remove data from any other user that we may have retained\n\tMeteor.users.remove({ _id: { $ne: uid } });\n\n\tcancel?.();\n\n\tcancel = await Notifications.onUser('userData', (data: IUserDataEvent) => {\n\t\tswitch (data.type) {\n\t\t\tcase 'inserted':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\tconst { type, id, ...user } = data;\n\t\t\t\tMeteor.users.insert(user as Meteor.User);\n\t\t\t\tbreak;\n\n\t\t\tcase 'updated':\n\t\t\t\tMeteor.users.upsert({ _id: uid }, { $set: data.diff as Meteor.User, $unset: data.unset });\n\t\t\t\tbreak;\n\n\t\t\tcase 'removed':\n\t\t\t\tMeteor.users.remove({ _id: uid });\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst userData: RawUserData = await APIClient.v1.get('me');\n\tif (userData) {\n\t\tupdateUser({\n\t\t\t...userData,\n\t\t\tcreatedAt: new Date(userData.createdAt),\n\t\t\t_updatedAt: new Date(userData._updatedAt),\n\t\t});\n\t}\n\tisSyncReady.set(true);\n\n\treturn userData;\n};\n\nexport const removeLocalUserData = (): number => Meteor.users.remove({});\n"],"sourceRoot":""},"sourceType":"module","hash":"ba31dc891ba844c3b5ed21fbff9f411a5e044a29"}
