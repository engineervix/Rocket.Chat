{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/e2e.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/startup/e2e.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/e2e.ts","inputSourceMap":{"version":3,"file":"client/startup/e2e.ts","sourceRoot":"","sources":["client/startup/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { Subscriptions, Rooms } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { settings } from '../../app/settings/client';\nimport { IMessage } from '../../definition/IMessage';\nimport { IRoom } from '../../definition/IRoom';\nimport { ISubscription } from '../../definition/ISubscription';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\n\nconst handle = async (roomId: IRoom['_id'], keyId: string): Promise<void> => {\n\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\tif (!e2eRoom) {\n\t\treturn;\n\t}\n\n\te2eRoom.provideKeyToUser(keyId);\n};\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst adminEmbedded = isLayoutEmbedded() && FlowRouter.current().path.startsWith('/admin');\n\n\t\tif (!adminEmbedded && settings.get('E2E_Enable') && window.crypto) {\n\t\t\te2e.startClient();\n\t\t\te2e.enabled.set(true);\n\t\t} else {\n\t\t\te2e.enabled.set(false);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet observable: Meteor.LiveQueryHandle | null = null;\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\toffClientMessageReceived?.();\n\t\t\tNotifications.unUser('e2ekeyRequest', handle);\n\t\t\tobservable?.stop();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('e2ekeyRequest', handle);\n\n\t\tobservable = Subscriptions.find().observe({\n\t\t\tchanged: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(doc.rid);\n\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdoc.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\t\t// Cover private groups and direct messages\n\t\t\t\tif (!e2eRoom.isSupportedRoomType(doc.t)) {\n\t\t\t\t\te2eRoom.disable();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (doc.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!e2eRoom.isReady()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te2eRoom.decryptSubscription();\n\t\t\t},\n\t\t\tadded: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn e2e.getInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t\tremoved: (doc: ISubscription) => {\n\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t});\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom || !e2eRoom.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => Rooms.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\tconst msg = await e2eRoom.encrypt(message);\n\n\t\t\tmessage.msg = msg;\n\t\t\tmessage.t = 'e2e';\n\t\t\tmessage.e2e = 'pending';\n\t\t\treturn message;\n\t\t});\n\t});\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/startup/e2e.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/e2e.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar e2e;\nmodule.link(\"../../app/e2e/client/rocketchat.e2e\", {\n  e2e: function (v) {\n    e2e = v;\n  }\n}, 3);\nvar Subscriptions, Rooms;\nmodule.link(\"../../app/models/client\", {\n  Subscriptions: function (v) {\n    Subscriptions = v;\n  },\n  Rooms: function (v) {\n    Rooms = v;\n  }\n}, 4);\nvar Notifications;\nmodule.link(\"../../app/notifications/client\", {\n  Notifications: function (v) {\n    Notifications = v;\n  }\n}, 5);\nvar settings;\nmodule.link(\"../../app/settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 6);\nvar onClientBeforeSendMessage;\nmodule.link(\"../lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage: function (v) {\n    onClientBeforeSendMessage = v;\n  }\n}, 7);\nvar onClientMessageReceived;\nmodule.link(\"../lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 8);\nvar isLayoutEmbedded;\nmodule.link(\"../lib/utils/isLayoutEmbedded\", {\n  isLayoutEmbedded: function (v) {\n    isLayoutEmbedded = v;\n  }\n}, 9);\nvar waitUntilFind;\nmodule.link(\"../lib/utils/waitUntilFind\", {\n  waitUntilFind: function (v) {\n    waitUntilFind = v;\n  }\n}, 10);\n\nvar handle = function () {\n  function _callee(roomId, keyId) {\n    var e2eRoom;\n    return _regeneratorRuntime.async(function () {\n      function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(roomId));\n\n            case 2:\n              e2eRoom = _context.sent;\n\n              if (e2eRoom) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              e2eRoom.provideKeyToUser(keyId);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }\n\n      return _callee$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee;\n}();\n\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    if (!Meteor.userId()) {\n      return;\n    }\n\n    var adminEmbedded = isLayoutEmbedded() && FlowRouter.current().path.startsWith('/admin');\n\n    if (!adminEmbedded && settings.get('E2E_Enable') && window.crypto) {\n      e2e.startClient();\n      e2e.enabled.set(true);\n    } else {\n      e2e.enabled.set(false);\n      e2e.closeAlert();\n    }\n  });\n  var observable = null;\n  var offClientMessageReceived;\n  var offClientBeforeSendMessage;\n  Tracker.autorun(function () {\n    if (!e2e.isReady()) {\n      var _offClientMessageRece, _observable, _offClientBeforeSendM;\n\n      (_offClientMessageRece = offClientMessageReceived) === null || _offClientMessageRece === void 0 ? void 0 : _offClientMessageRece();\n      Notifications.unUser('e2ekeyRequest', handle);\n      (_observable = observable) === null || _observable === void 0 ? void 0 : _observable.stop();\n      (_offClientBeforeSendM = offClientBeforeSendMessage) === null || _offClientBeforeSendM === void 0 ? void 0 : _offClientBeforeSendM();\n      return;\n    }\n\n    Notifications.onUser('e2ekeyRequest', handle);\n    observable = Subscriptions.find().observe({\n      changed: function () {\n        function _callee2(doc) {\n          var e2eRoom;\n          return _regeneratorRuntime.async(function () {\n            function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(!doc.encrypted && !doc.E2EKey)) {\n                      _context2.next = 3;\n                      break;\n                    }\n\n                    e2e.removeInstanceByRoomId(doc.rid);\n                    return _context2.abrupt(\"return\");\n\n                  case 3:\n                    _context2.next = 5;\n                    return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(doc.rid));\n\n                  case 5:\n                    e2eRoom = _context2.sent;\n\n                    if (e2eRoom) {\n                      _context2.next = 8;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\");\n\n                  case 8:\n                    doc.encrypted ? e2eRoom.resume() : e2eRoom.pause(); // Cover private groups and direct messages\n\n                    if (e2eRoom.isSupportedRoomType(doc.t)) {\n                      _context2.next = 12;\n                      break;\n                    }\n\n                    e2eRoom.disable();\n                    return _context2.abrupt(\"return\");\n\n                  case 12:\n                    if (!(doc.E2EKey && e2eRoom.isWaitingKeys())) {\n                      _context2.next = 15;\n                      break;\n                    }\n\n                    e2eRoom.keyReceived();\n                    return _context2.abrupt(\"return\");\n\n                  case 15:\n                    if (e2eRoom.isReady()) {\n                      _context2.next = 17;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\");\n\n                  case 17:\n                    e2eRoom.decryptSubscription();\n\n                  case 18:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }\n\n            return _callee2$;\n          }(), null, null, null, Promise);\n        }\n\n        return _callee2;\n      }(),\n      added: function () {\n        function _callee3(doc) {\n          return _regeneratorRuntime.async(function () {\n            function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!(!doc.encrypted && !doc.E2EKey)) {\n                      _context3.next = 2;\n                      break;\n                    }\n\n                    return _context3.abrupt(\"return\");\n\n                  case 2:\n                    return _context3.abrupt(\"return\", e2e.getInstanceByRoomId(doc.rid));\n\n                  case 3:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }\n\n            return _callee3$;\n          }(), null, null, null, Promise);\n        }\n\n        return _callee3;\n      }(),\n      removed: function (doc) {\n        e2e.removeInstanceByRoomId(doc.rid);\n      }\n    });\n    offClientMessageReceived = onClientMessageReceived.use(function () {\n      function _callee4(msg) {\n        var e2eRoom;\n        return _regeneratorRuntime.async(function () {\n          function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(msg.rid));\n\n                case 2:\n                  e2eRoom = _context4.sent;\n\n                  if (!(!e2eRoom || !e2eRoom.shouldConvertReceivedMessages())) {\n                    _context4.next = 5;\n                    break;\n                  }\n\n                  return _context4.abrupt(\"return\", msg);\n\n                case 5:\n                  return _context4.abrupt(\"return\", e2e.decryptMessage(msg));\n\n                case 6:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }\n\n          return _callee4$;\n        }(), null, null, null, Promise);\n      }\n\n      return _callee4;\n    }()); // Encrypt messages before sending\n\n    offClientBeforeSendMessage = onClientBeforeSendMessage.use(function () {\n      function _callee5(message) {\n        var e2eRoom, subscription, shouldConvertSentMessages, msg;\n        return _regeneratorRuntime.async(function () {\n          function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(message.rid));\n\n                case 2:\n                  e2eRoom = _context5.sent;\n\n                  if (e2eRoom) {\n                    _context5.next = 5;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", message);\n\n                case 5:\n                  _context5.next = 7;\n                  return _regeneratorRuntime.awrap(waitUntilFind(function () {\n                    return Rooms.findOne({\n                      _id: message.rid\n                    });\n                  }));\n\n                case 7:\n                  subscription = _context5.sent;\n                  subscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n                  _context5.next = 11;\n                  return _regeneratorRuntime.awrap(e2eRoom.shouldConvertSentMessages(message));\n\n                case 11:\n                  shouldConvertSentMessages = _context5.sent;\n\n                  if (shouldConvertSentMessages) {\n                    _context5.next = 14;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", message);\n\n                case 14:\n                  _context5.next = 16;\n                  return _regeneratorRuntime.awrap(e2eRoom.encrypt(message));\n\n                case 16:\n                  msg = _context5.sent;\n                  message.msg = msg;\n                  message.t = 'e2e';\n                  message.e2e = 'pending';\n                  return _context5.abrupt(\"return\", message);\n\n                case 21:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }\n\n          return _callee5$;\n        }(), null, null, null, Promise);\n      }\n\n      return _callee5;\n    }());\n  });\n});","map":{"version":3,"sources":["client/startup/e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { Subscriptions, Rooms } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { settings } from '../../app/settings/client';\nimport { IMessage } from '../../definition/IMessage';\nimport { IRoom } from '../../definition/IRoom';\nimport { ISubscription } from '../../definition/ISubscription';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\n\nconst handle = async (roomId: IRoom['_id'], keyId: string): Promise<void> => {\n\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\tif (!e2eRoom) {\n\t\treturn;\n\t}\n\n\te2eRoom.provideKeyToUser(keyId);\n};\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst adminEmbedded = isLayoutEmbedded() && FlowRouter.current().path.startsWith('/admin');\n\n\t\tif (!adminEmbedded && settings.get('E2E_Enable') && window.crypto) {\n\t\t\te2e.startClient();\n\t\t\te2e.enabled.set(true);\n\t\t} else {\n\t\t\te2e.enabled.set(false);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet observable: Meteor.LiveQueryHandle | null = null;\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\toffClientMessageReceived?.();\n\t\t\tNotifications.unUser('e2ekeyRequest', handle);\n\t\t\tobservable?.stop();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('e2ekeyRequest', handle);\n\n\t\tobservable = Subscriptions.find().observe({\n\t\t\tchanged: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(doc.rid);\n\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdoc.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\t\t// Cover private groups and direct messages\n\t\t\t\tif (!e2eRoom.isSupportedRoomType(doc.t)) {\n\t\t\t\t\te2eRoom.disable();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (doc.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!e2eRoom.isReady()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te2eRoom.decryptSubscription();\n\t\t\t},\n\t\t\tadded: async (doc: ISubscription) => {\n\t\t\t\tif (!doc.encrypted && !doc.E2EKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn e2e.getInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t\tremoved: (doc: ISubscription) => {\n\t\t\t\te2e.removeInstanceByRoomId(doc.rid);\n\t\t\t},\n\t\t});\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom || !e2eRoom.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => Rooms.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\tconst msg = await e2eRoom.encrypt(message);\n\n\t\t\tmessage.msg = msg;\n\t\t\tmessage.t = 'e2e';\n\t\t\tmessage.e2e = 'pending';\n\t\t\treturn message;\n\t\t});\n\t});\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"b11310933bdabda481f6e35a6fcc1499d31ece32"}
