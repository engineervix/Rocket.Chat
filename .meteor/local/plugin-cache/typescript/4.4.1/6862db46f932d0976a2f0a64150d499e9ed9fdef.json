{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/livechat/client/externalFrame/crypto.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/livechat/client/externalFrame/crypto.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/livechat/client/externalFrame/crypto.ts","inputSourceMap":{"version":3,"file":"app/livechat/client/externalFrame/crypto.ts","sourceRoot":"","sources":["app/livechat/client/externalFrame/crypto.ts"],"names":[],"mappings":"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","sourcesContent":["function ab2str(buf: ArrayBuffer): string {\n\treturn String.fromCharCode(...new Uint16Array(buf));\n}\n\nfunction str2ab(str: string): ArrayBuffer {\n\tconst buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n\tconst bufView = new Uint16Array(buf);\n\tfor (let i = 0, strLen = str.length; i < strLen; i++) {\n\t\tbufView[i] = str.charCodeAt(i);\n\t}\n\treturn buf;\n}\n\nexport async function generateKey(): Promise<string> {\n\tconst key = await crypto.subtle.generateKey({ name: 'AES-GCM', length: 256 }, true, ['encrypt', 'decrypt']);\n\tconst exportedKey = await crypto.subtle.exportKey('jwk', key);\n\treturn JSON.stringify(exportedKey);\n}\n\nexport async function getKeyFromString(keyStr: string): Promise<CryptoKey> {\n\tconst key = JSON.parse(keyStr);\n\treturn crypto.subtle.importKey('jwk', key, { name: 'AES-GCM', length: 256 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function encrypt(text: string, key: CryptoKey): Promise<string> {\n\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\tconst data = new TextEncoder().encode(text);\n\tconst enc = await crypto.subtle.encrypt({ name: 'AES-GCM', iv: vector }, key, data);\n\tconst cipherText = new Uint8Array(enc);\n\treturn encodeURIComponent(btoa(ab2str(vector) + ab2str(cipherText)));\n}\n\nexport async function decrypt(data: string, key: CryptoKey): Promise<string> {\n\tconst binaryData = atob(decodeURIComponent(data));\n\tconst vector = new Uint8Array(new Uint16Array(str2ab(binaryData.slice(0, 16))));\n\tconst buffer = new Uint8Array(new Uint16Array(str2ab(binaryData.slice(16))));\n\tconst decoded = await crypto.subtle.decrypt({ name: 'AES-GCM', iv: vector }, key, buffer);\n\treturn new TextDecoder().decode(decoded);\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/livechat/client/externalFrame/crypto.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/client/externalFrame/crypto.ts"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _toConsumableArray;\n\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\nmodule.export({\n  generateKey: function () {\n    return generateKey;\n  },\n  getKeyFromString: function () {\n    return getKeyFromString;\n  },\n  encrypt: function () {\n    return encrypt;\n  },\n  decrypt: function () {\n    return decrypt;\n  }\n});\n\nfunction ab2str(buf) {\n  return String.fromCharCode.apply(String, _toConsumableArray(new Uint16Array(buf)));\n}\n\nfunction str2ab(str) {\n  var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n\n  var bufView = new Uint16Array(buf);\n\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nfunction generateKey() {\n  var key, exportedKey;\n  return _regeneratorRuntime.async(function () {\n    function generateKey$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(crypto.subtle.generateKey({\n              name: 'AES-GCM',\n              length: 256\n            }, true, ['encrypt', 'decrypt']));\n\n          case 2:\n            key = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(crypto.subtle.exportKey('jwk', key));\n\n          case 5:\n            exportedKey = _context.sent;\n            return _context.abrupt(\"return\", JSON.stringify(exportedKey));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }\n\n    return generateKey$;\n  }(), null, null, null, Promise);\n}\n\nfunction getKeyFromString(keyStr) {\n  var key;\n  return _regeneratorRuntime.async(function () {\n    function getKeyFromString$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            key = JSON.parse(keyStr);\n            return _context2.abrupt(\"return\", crypto.subtle.importKey('jwk', key, {\n              name: 'AES-GCM',\n              length: 256\n            }, true, ['encrypt', 'decrypt']));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }\n\n    return getKeyFromString$;\n  }(), null, null, null, Promise);\n}\n\nfunction encrypt(text, key) {\n  var vector, data, enc, cipherText;\n  return _regeneratorRuntime.async(function () {\n    function encrypt$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            vector = crypto.getRandomValues(new Uint8Array(16));\n            data = new TextEncoder().encode(text);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(crypto.subtle.encrypt({\n              name: 'AES-GCM',\n              iv: vector\n            }, key, data));\n\n          case 4:\n            enc = _context3.sent;\n            cipherText = new Uint8Array(enc);\n            return _context3.abrupt(\"return\", encodeURIComponent(btoa(ab2str(vector) + ab2str(cipherText))));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }\n\n    return encrypt$;\n  }(), null, null, null, Promise);\n}\n\nfunction decrypt(data, key) {\n  var binaryData, vector, buffer, decoded;\n  return _regeneratorRuntime.async(function () {\n    function decrypt$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            binaryData = atob(decodeURIComponent(data));\n            vector = new Uint8Array(new Uint16Array(str2ab(binaryData.slice(0, 16))));\n            buffer = new Uint8Array(new Uint16Array(str2ab(binaryData.slice(16))));\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(crypto.subtle.decrypt({\n              name: 'AES-GCM',\n              iv: vector\n            }, key, buffer));\n\n          case 5:\n            decoded = _context4.sent;\n            return _context4.abrupt(\"return\", new TextDecoder().decode(decoded));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }\n\n    return decrypt$;\n  }(), null, null, null, Promise);\n}","map":{"version":3,"sources":["app/livechat/client/externalFrame/crypto.ts"],"names":[],"mappings":"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","sourcesContent":["function ab2str(buf: ArrayBuffer): string {\n\treturn String.fromCharCode(...new Uint16Array(buf));\n}\n\nfunction str2ab(str: string): ArrayBuffer {\n\tconst buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n\tconst bufView = new Uint16Array(buf);\n\tfor (let i = 0, strLen = str.length; i < strLen; i++) {\n\t\tbufView[i] = str.charCodeAt(i);\n\t}\n\treturn buf;\n}\n\nexport async function generateKey(): Promise<string> {\n\tconst key = await crypto.subtle.generateKey({ name: 'AES-GCM', length: 256 }, true, ['encrypt', 'decrypt']);\n\tconst exportedKey = await crypto.subtle.exportKey('jwk', key);\n\treturn JSON.stringify(exportedKey);\n}\n\nexport async function getKeyFromString(keyStr: string): Promise<CryptoKey> {\n\tconst key = JSON.parse(keyStr);\n\treturn crypto.subtle.importKey('jwk', key, { name: 'AES-GCM', length: 256 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function encrypt(text: string, key: CryptoKey): Promise<string> {\n\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\tconst data = new TextEncoder().encode(text);\n\tconst enc = await crypto.subtle.encrypt({ name: 'AES-GCM', iv: vector }, key, data);\n\tconst cipherText = new Uint8Array(enc);\n\treturn encodeURIComponent(btoa(ab2str(vector) + ab2str(cipherText)));\n}\n\nexport async function decrypt(data: string, key: CryptoKey): Promise<string> {\n\tconst binaryData = atob(decodeURIComponent(data));\n\tconst vector = new Uint8Array(new Uint16Array(str2ab(binaryData.slice(0, 16))));\n\tconst buffer = new Uint8Array(new Uint16Array(str2ab(binaryData.slice(16))));\n\tconst decoded = await crypto.subtle.decrypt({ name: 'AES-GCM', iv: vector }, key, buffer);\n\treturn new TextDecoder().decode(decoded);\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"6862db46f932d0976a2f0a64150d499e9ed9fdef"}
