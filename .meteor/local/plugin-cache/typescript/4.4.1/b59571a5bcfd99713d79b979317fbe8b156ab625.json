{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/sidebar/sections/OmnichannelSection.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebar/sections/OmnichannelSection.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/sidebar/sections/OmnichannelSection.tsx","inputSourceMap":{"version":3,"file":"client/sidebar/sections/OmnichannelSection.tsx","sourceRoot":"","sources":["client/sidebar/sections/OmnichannelSection.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAO,OAAO,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,KAAK,EAAE,EAAE,IAAI,EAAgB,MAAM,OAAO,CAAC;AAElD,OAAO,EAAE,aAAa,EAAE,MAAM,qCAAqC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,2BAA2B,EAAE,4BAA4B,EAAE,MAAM,mCAAmC,CAAC;AAC9G,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,uBAAuB,EAAE,MAAM,qCAAqC,CAAC;AAC9E,OAAO,EAAE,cAAc,EAAE,MAAM,mCAAmC,CAAC;AACnE,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAE3E,MAAM,kBAAkB,GAAG,CAAC,KAAiB,EAAgB,EAAE;IAC9D,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,iBAAiB,GAAG,SAAS,CAAC,+BAA+B,CAAC,CAAC;IACrE,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;IACzC,MAAM,aAAa,GAAG,aAAa,CAAC,iCAAiC,CAAC,CAAC;IACvE,MAAM,cAAc,GAAG,4BAA4B,EAAE,CAAC;IAEtD,MAAM,wBAAwB,GAAG,2BAA2B,EAAE,CAAC;IAC/D,MAAM,EAAE,OAAO,EAAE,GAAG,SAAS,EAAE,CAAC;IAChC,MAAM,cAAc,GAAG,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IACzD,MAAM,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAClD,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IAEvD,MAAM,aAAa,GAAG;QACrB,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;QAC3D,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;QAC7C,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB;KAC5C,CAAC;IAEX,MAAM,aAAa,GAAG;QACrB,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC;QAC1B,IAAI,EAAE,SAAS;KACN,CAAC;IAEX,MAAM,2BAA2B,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QACjE,IAAI;YACH,MAAM,iBAAiB,EAAE,CAAC;SAC1B;QAAC,OAAO,KAAU,EAAE;YACpB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;SACxD;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,kBAAkB,CAAC,CAAC,KAAK,EAAE,EAAE;QAChD,OAAO,CAAC,MAAM,EAAE,CAAC;QAEjB,QAAQ,KAAK,EAAE;YACd,KAAK,WAAW;gBACf,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACxB,MAAM;YACP,KAAK,OAAO;gBACX,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACxB,MAAM;SACP;IACF,CAAC,CAAC,CAAC;IAEH,iFAAiF;IACjF,OAAO,CACN,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC,CACjE;GAAA,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAC9D;GAAA,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CACtB;IAAA,CAAC,wBAAwB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAS,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAG,CACjI;IAAA,CAAC,aAAa,IAAI,CAAC,qBAAqB,CAAC,AAAD,EAAG,CAC3C;IAAA,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,2BAA2B,CAAC,EAC/E;IAAA,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,GAAS,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,EAAG,CAC9G;GAAA,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CACzB;EAAA,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CACzB,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE;IACtD,IAAI,EAAE,EAAE;CACR,CAAC,CAAC","sourcesContent":["import { Box, Sidebar } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { memo, ReactElement } from 'react';\n\nimport { usePermission } from '../../contexts/AuthorizationContext';\nimport { useIsCallEnabled } from '../../contexts/CallContext';\nimport { useLayout } from '../../contexts/LayoutContext';\nimport { useOmnichannelShowQueueLink, useOmnichannelAgentAvailable } from '../../contexts/OmnichannelContext';\nimport { useRoute } from '../../contexts/RouterContext';\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { OmnichannelCallToggle } from './components/OmnichannelCallToggle';\n\nconst OmnichannelSection = (props: typeof Box): ReactElement => {\n\tconst t = useTranslation();\n\tconst changeAgentStatus = useMethod('livechat:changeLivechatStatus');\n\tconst isCallEnabled = useIsCallEnabled();\n\tconst hasPermission = usePermission('view-omnichannel-contact-center');\n\tconst agentAvailable = useOmnichannelAgentAvailable();\n\n\tconst showOmnichannelQueueLink = useOmnichannelShowQueueLink();\n\tconst { sidebar } = useLayout();\n\tconst directoryRoute = useRoute('omnichannel-directory');\n\tconst queueListRoute = useRoute('livechat-queue');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst availableIcon = {\n\t\ttitle: agentAvailable ? t('Available') : t('Not_Available'),\n\t\tcolor: agentAvailable ? 'success' : undefined,\n\t\ticon: agentAvailable ? 'message' : 'message-disabled',\n\t} as const;\n\n\tconst directoryIcon = {\n\t\ttitle: t('Contact_Center'),\n\t\ticon: 'contact',\n\t} as const;\n\n\tconst handleAvailableStatusChange = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait changeAgentStatus();\n\t\t} catch (error: any) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst handleRoute = useMutableCallback((route) => {\n\t\tsidebar.toggle();\n\n\t\tswitch (route) {\n\t\t\tcase 'directory':\n\t\t\t\tdirectoryRoute.push({});\n\t\t\t\tbreak;\n\t\t\tcase 'queue':\n\t\t\t\tqueueListRoute.push({});\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// The className is a paliative while we make TopBar.ToolBox optional on fuselage\n\treturn (\n\t\t<Sidebar.TopBar.ToolBox className='omnichannel-sidebar' {...props}>\n\t\t\t<Sidebar.TopBar.Title>{t('Omnichannel')}</Sidebar.TopBar.Title>\n\t\t\t<Sidebar.TopBar.Actions>\n\t\t\t\t{showOmnichannelQueueLink && <Sidebar.TopBar.Action icon='queue' title={t('Queue')} onClick={(): void => handleRoute('queue')} />}\n\t\t\t\t{isCallEnabled && <OmnichannelCallToggle />}\n\t\t\t\t<Sidebar.TopBar.Action {...availableIcon} onClick={handleAvailableStatusChange} />\n\t\t\t\t{hasPermission && <Sidebar.TopBar.Action {...directoryIcon} onClick={(): void => handleRoute('directory')} />}\n\t\t\t</Sidebar.TopBar.Actions>\n\t\t</Sidebar.TopBar.ToolBox>\n\t);\n};\n\nexport default Object.assign(memo(OmnichannelSection), {\n\tsize: 56,\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/sidebar/sections/OmnichannelSection.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebar/sections/OmnichannelSection.tsx"}},"code":"let _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\nlet Sidebar;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Sidebar(v) {\n    Sidebar = v;\n  }\n\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 1);\nlet React, memo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  memo(v) {\n    memo = v;\n  }\n\n}, 2);\nlet usePermission;\nmodule.link(\"../../contexts/AuthorizationContext\", {\n  usePermission(v) {\n    usePermission = v;\n  }\n\n}, 3);\nlet useIsCallEnabled;\nmodule.link(\"../../contexts/CallContext\", {\n  useIsCallEnabled(v) {\n    useIsCallEnabled = v;\n  }\n\n}, 4);\nlet useLayout;\nmodule.link(\"../../contexts/LayoutContext\", {\n  useLayout(v) {\n    useLayout = v;\n  }\n\n}, 5);\nlet useOmnichannelShowQueueLink, useOmnichannelAgentAvailable;\nmodule.link(\"../../contexts/OmnichannelContext\", {\n  useOmnichannelShowQueueLink(v) {\n    useOmnichannelShowQueueLink = v;\n  },\n\n  useOmnichannelAgentAvailable(v) {\n    useOmnichannelAgentAvailable = v;\n  }\n\n}, 6);\nlet useRoute;\nmodule.link(\"../../contexts/RouterContext\", {\n  useRoute(v) {\n    useRoute = v;\n  }\n\n}, 7);\nlet useMethod;\nmodule.link(\"../../contexts/ServerContext\", {\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 8);\nlet useToastMessageDispatch;\nmodule.link(\"../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 9);\nlet useTranslation;\nmodule.link(\"../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 10);\nlet OmnichannelCallToggle;\nmodule.link(\"./components/OmnichannelCallToggle\", {\n  OmnichannelCallToggle(v) {\n    OmnichannelCallToggle = v;\n  }\n\n}, 11);\n\nconst OmnichannelSection = props => {\n  const t = useTranslation();\n  const changeAgentStatus = useMethod('livechat:changeLivechatStatus');\n  const isCallEnabled = useIsCallEnabled();\n  const hasPermission = usePermission('view-omnichannel-contact-center');\n  const agentAvailable = useOmnichannelAgentAvailable();\n  const showOmnichannelQueueLink = useOmnichannelShowQueueLink();\n  const {\n    sidebar\n  } = useLayout();\n  const directoryRoute = useRoute('omnichannel-directory');\n  const queueListRoute = useRoute('livechat-queue');\n  const dispatchToastMessage = useToastMessageDispatch();\n  const availableIcon = {\n    title: agentAvailable ? t('Available') : t('Not_Available'),\n    color: agentAvailable ? 'success' : undefined,\n    icon: agentAvailable ? 'message' : 'message-disabled'\n  };\n  const directoryIcon = {\n    title: t('Contact_Center'),\n    icon: 'contact'\n  };\n  const handleAvailableStatusChange = useMutableCallback(async () => {\n    try {\n      await changeAgentStatus();\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  });\n  const handleRoute = useMutableCallback(route => {\n    sidebar.toggle();\n\n    switch (route) {\n      case 'directory':\n        directoryRoute.push({});\n        break;\n\n      case 'queue':\n        queueListRoute.push({});\n        break;\n    }\n  }); // The className is a paliative while we make TopBar.ToolBox optional on fuselage\n\n  return /*#__PURE__*/React.createElement(Sidebar.TopBar.ToolBox, _extends({\n    className: \"omnichannel-sidebar\"\n  }, props), /*#__PURE__*/React.createElement(Sidebar.TopBar.Title, null, t('Omnichannel')), /*#__PURE__*/React.createElement(Sidebar.TopBar.Actions, null, showOmnichannelQueueLink && /*#__PURE__*/React.createElement(Sidebar.TopBar.Action, {\n    icon: \"queue\",\n    title: t('Queue'),\n    onClick: () => handleRoute('queue')\n  }), isCallEnabled && /*#__PURE__*/React.createElement(OmnichannelCallToggle, null), /*#__PURE__*/React.createElement(Sidebar.TopBar.Action, _extends({}, availableIcon, {\n    onClick: handleAvailableStatusChange\n  })), hasPermission && /*#__PURE__*/React.createElement(Sidebar.TopBar.Action, _extends({}, directoryIcon, {\n    onClick: () => handleRoute('directory')\n  }))));\n};\n\nmodule.exportDefault(Object.assign( /*#__PURE__*/memo(OmnichannelSection), {\n  size: 56\n}));","map":{"version":3,"sources":["client/sidebar/sections/OmnichannelSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Sidebar } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { memo, ReactElement } from 'react';\n\nimport { usePermission } from '../../contexts/AuthorizationContext';\nimport { useIsCallEnabled } from '../../contexts/CallContext';\nimport { useLayout } from '../../contexts/LayoutContext';\nimport { useOmnichannelShowQueueLink, useOmnichannelAgentAvailable } from '../../contexts/OmnichannelContext';\nimport { useRoute } from '../../contexts/RouterContext';\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { OmnichannelCallToggle } from './components/OmnichannelCallToggle';\n\nconst OmnichannelSection = (props: typeof Box): ReactElement => {\n\tconst t = useTranslation();\n\tconst changeAgentStatus = useMethod('livechat:changeLivechatStatus');\n\tconst isCallEnabled = useIsCallEnabled();\n\tconst hasPermission = usePermission('view-omnichannel-contact-center');\n\tconst agentAvailable = useOmnichannelAgentAvailable();\n\n\tconst showOmnichannelQueueLink = useOmnichannelShowQueueLink();\n\tconst { sidebar } = useLayout();\n\tconst directoryRoute = useRoute('omnichannel-directory');\n\tconst queueListRoute = useRoute('livechat-queue');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst availableIcon = {\n\t\ttitle: agentAvailable ? t('Available') : t('Not_Available'),\n\t\tcolor: agentAvailable ? 'success' : undefined,\n\t\ticon: agentAvailable ? 'message' : 'message-disabled',\n\t} as const;\n\n\tconst directoryIcon = {\n\t\ttitle: t('Contact_Center'),\n\t\ticon: 'contact',\n\t} as const;\n\n\tconst handleAvailableStatusChange = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait changeAgentStatus();\n\t\t} catch (error: any) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst handleRoute = useMutableCallback((route) => {\n\t\tsidebar.toggle();\n\n\t\tswitch (route) {\n\t\t\tcase 'directory':\n\t\t\t\tdirectoryRoute.push({});\n\t\t\t\tbreak;\n\t\t\tcase 'queue':\n\t\t\t\tqueueListRoute.push({});\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// The className is a paliative while we make TopBar.ToolBox optional on fuselage\n\treturn (\n\t\t<Sidebar.TopBar.ToolBox className='omnichannel-sidebar' {...props}>\n\t\t\t<Sidebar.TopBar.Title>{t('Omnichannel')}</Sidebar.TopBar.Title>\n\t\t\t<Sidebar.TopBar.Actions>\n\t\t\t\t{showOmnichannelQueueLink && <Sidebar.TopBar.Action icon='queue' title={t('Queue')} onClick={(): void => handleRoute('queue')} />}\n\t\t\t\t{isCallEnabled && <OmnichannelCallToggle />}\n\t\t\t\t<Sidebar.TopBar.Action {...availableIcon} onClick={handleAvailableStatusChange} />\n\t\t\t\t{hasPermission && <Sidebar.TopBar.Action {...directoryIcon} onClick={(): void => handleRoute('directory')} />}\n\t\t\t</Sidebar.TopBar.Actions>\n\t\t</Sidebar.TopBar.ToolBox>\n\t);\n};\n\nexport default Object.assign(memo(OmnichannelSection), {\n\tsize: 56,\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"b59571a5bcfd99713d79b979317fbe8b156ab625"}
