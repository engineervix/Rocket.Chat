{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Code.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/components/Message/Body/Code.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Code.tsx","inputSourceMap":{"version":3,"file":"client/components/Message/Body/Code.tsx","sourceRoot":"","sources":["client/components/Message/Body/Code.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAM,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEvD,OAAO,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,mCAAmC,CAAC;AACnE,OAAO,QAAQ,MAAM,YAAY,CAAC;AAQlC,MAAM,YAAY,GAAG,CAAC,MAAW,EAAwB,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;AAE1E,MAAM,IAAI,GAAgB,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;IACtD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAA8D,GAAG,EAAE,CAClG,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAC1B,QAAQ,KAAK,CAAC,IAAI,EAAE;YACnB,KAAK,WAAW;gBACf,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAG,CAAC;YACrD;gBACC,OAAO,IAAI,CAAC;SACb;IACF,CAAC,CAAC,CACF,CAAC;IACF,SAAS,CAAC,GAAG,EAAE;QACd,CAAC,QAAQ,IAAI,QAAQ,KAAK,MAAM;YAC/B,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/E,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpF,CAAC,CAAC,CAAC;IACP,CAAC,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IAEtB,OAAO,CACN,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,oBAAoB,QAAQ,EAAE,CAAC,CAC/C;GAAA,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CACzB;;IACA,CAAC,EAAE,CAAC,AAAD,EACJ;GAAA,EAAE,IAAI,CACN;GAAA,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC,IAAI,CAClG;GAAA,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CACzB;IAAA,CAAC,EAAE,CAAC,AAAD,EACH;;GACD,EAAE,IAAI,CACP;EAAA,EAAE,IAAI,CAAC,CACP,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC","sourcesContent":["import { Code as ASTCode } from '@rocket.chat/message-parser';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport hljs, { register } from '../../../../app/markdown/lib/hljs';\nimport CodeLine from './CodeLine';\n\ntype hljsResult = {\n\tlanguage: string;\n\tcode: string;\n\tvalue: string;\n};\n\nconst isHljsResult = (result: any): result is hljsResult => result?.value;\n\nconst Code: FC<ASTCode> = ({ value = [], language }) => {\n\tconst [code, setCode] = useState<(JSX.Element | null)[] | { language: string; code: string }>(() =>\n\t\tvalue.map((block, index) => {\n\t\t\tswitch (block.type) {\n\t\t\t\tcase 'CODE_LINE':\n\t\t\t\t\treturn <CodeLine key={index} value={block.value} />;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}),\n\t);\n\tuseEffect(() => {\n\t\t!language || language === 'none'\n\t\t\t? setCode(hljs.highlightAuto(value.map((line) => line.value.value).join('\\n')))\n\t\t\t: register(language).then(() => {\n\t\t\t\t\tsetCode(hljs.highlight(language, value.map((line) => line.value.value).join('\\n')));\n\t\t\t  });\n\t}, [language, value]);\n\n\treturn (\n\t\t<code className={`code-colors hljs ${language}`}>\n\t\t\t<span className='copyonly'>\n\t\t\t\t\\`\\`\\`\n\t\t\t\t<br />\n\t\t\t</span>\n\t\t\t{isHljsResult(code) ? <div dangerouslySetInnerHTML={{ __html: code.code || code.value }} /> : code}\n\t\t\t<span className='copyonly'>\n\t\t\t\t<br />\n\t\t\t\t\\`\\`\\`\n\t\t\t</span>\n\t\t</code>\n\t);\n};\n\nexport default Code;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/Message/Body/Code.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Message/Body/Code.tsx"}},"code":"var _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nvar React, useEffect, useState;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 0);\nvar hljs, register;\nmodule.link(\"../../../../app/markdown/lib/hljs\", {\n  \"default\": function (v) {\n    hljs = v;\n  },\n  register: function (v) {\n    register = v;\n  }\n}, 1);\nvar CodeLine;\nmodule.link(\"./CodeLine\", {\n  \"default\": function (v) {\n    CodeLine = v;\n  }\n}, 2);\n\nvar isHljsResult = function (result) {\n  return result === null || result === void 0 ? void 0 : result.value;\n};\n\nvar Code = function (_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? [] : _ref$value,\n      language = _ref.language;\n\n  var _useState = useState(function () {\n    return value.map(function (block, index) {\n      switch (block.type) {\n        case 'CODE_LINE':\n          return /*#__PURE__*/React.createElement(CodeLine, {\n            key: index,\n            value: block.value\n          });\n\n        default:\n          return null;\n      }\n    });\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  useEffect(function () {\n    !language || language === 'none' ? setCode(hljs.highlightAuto(value.map(function (line) {\n      return line.value.value;\n    }).join('\\n'))) : register(language).then(function () {\n      setCode(hljs.highlight(language, value.map(function (line) {\n        return line.value.value;\n      }).join('\\n')));\n    });\n  }, [language, value]);\n  return /*#__PURE__*/React.createElement(\"code\", {\n    className: \"code-colors hljs \" + language\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"copyonly\"\n  }, \"\\\\`\\\\`\\\\`\", /*#__PURE__*/React.createElement(\"br\", null)), isHljsResult(code) ? /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: code.code || code.value\n    }\n  }) : code, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"copyonly\"\n  }, /*#__PURE__*/React.createElement(\"br\", null), \"\\\\`\\\\`\\\\`\"));\n};\n\nmodule.exportDefault(Code);","map":{"version":3,"sources":["client/components/Message/Body/Code.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Code as ASTCode } from '@rocket.chat/message-parser';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport hljs, { register } from '../../../../app/markdown/lib/hljs';\nimport CodeLine from './CodeLine';\n\ntype hljsResult = {\n\tlanguage: string;\n\tcode: string;\n\tvalue: string;\n};\n\nconst isHljsResult = (result: any): result is hljsResult => result?.value;\n\nconst Code: FC<ASTCode> = ({ value = [], language }) => {\n\tconst [code, setCode] = useState<(JSX.Element | null)[] | { language: string; code: string }>(() =>\n\t\tvalue.map((block, index) => {\n\t\t\tswitch (block.type) {\n\t\t\t\tcase 'CODE_LINE':\n\t\t\t\t\treturn <CodeLine key={index} value={block.value} />;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}),\n\t);\n\tuseEffect(() => {\n\t\t!language || language === 'none'\n\t\t\t? setCode(hljs.highlightAuto(value.map((line) => line.value.value).join('\\n')))\n\t\t\t: register(language).then(() => {\n\t\t\t\t\tsetCode(hljs.highlight(language, value.map((line) => line.value.value).join('\\n')));\n\t\t\t  });\n\t}, [language, value]);\n\n\treturn (\n\t\t<code className={`code-colors hljs ${language}`}>\n\t\t\t<span className='copyonly'>\n\t\t\t\t\\`\\`\\`\n\t\t\t\t<br />\n\t\t\t</span>\n\t\t\t{isHljsResult(code) ? <div dangerouslySetInnerHTML={{ __html: code.code || code.value }} /> : code}\n\t\t\t<span className='copyonly'>\n\t\t\t\t<br />\n\t\t\t\t\\`\\`\\`\n\t\t\t</span>\n\t\t</code>\n\t);\n};\n\nexport default Code;\n"],"sourceRoot":""},"sourceType":"module","hash":"845af80a5f0d504fa2174ea760f4ad3cfa9c19a2"}
