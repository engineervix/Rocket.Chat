{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx","inputSourceMap":{"version":3,"file":"ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx","sourceRoot":"","sources":["ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,KAAK,EAAE,EAAgB,OAAO,EAAE,MAAM,OAAO,CAAC;AAErD,OAAO,EAAE,cAAc,EAAE,MAAM,sDAAsD,CAAC;AACtF,OAAO,EAAE,SAAS,EAAU,MAAM,WAAW,CAAC;AAQ9C,MAAM,cAAc,GAAG,CAAgC,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAgC,EAAgB,EAAE;IAClI,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,MAAM,OAAO,GAAG,OAAO,CAAqB,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;IAElI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAa,EAAQ,EAAE,CAAC,QAAQ,CAAC,KAAgB,CAAC,CAAC,EAAG,CAAC;AAClH,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import { Select } from '@rocket.chat/fuselage';\nimport React, { ReactElement, useMemo } from 'react';\n\nimport { useTranslation } from '../../../../../../client/contexts/TranslationContext';\nimport { getPeriod, Period } from './periods';\n\ntype PeriodSelectorProps<TPeriod extends Period['key']> = {\n\tperiods: TPeriod[];\n\tvalue: TPeriod;\n\tonChange: (value: TPeriod) => void;\n};\n\nconst PeriodSelector = <TPeriod extends Period['key']>({ periods, value, onChange }: PeriodSelectorProps<TPeriod>): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst options = useMemo<[string, string][]>(() => periods.map((period) => [period, t(...getPeriod(period).label)]), [periods, t]);\n\n\treturn <Select options={options} value={value} onChange={(value: string): void => onChange(value as TPeriod)} />;\n};\n\nexport default PeriodSelector;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx"}},"code":"let Select;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Select(v) {\n    Select = v;\n  }\n\n}, 0);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 1);\nlet useTranslation;\nmodule.link(\"../../../../../../client/contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 2);\nlet getPeriod;\nmodule.link(\"./periods\", {\n  getPeriod(v) {\n    getPeriod = v;\n  }\n\n}, 3);\n\nconst PeriodSelector = _ref => {\n  let {\n    periods,\n    value,\n    onChange\n  } = _ref;\n  const t = useTranslation();\n  const options = useMemo(() => periods.map(period => [period, t(...getPeriod(period).label)]), [periods, t]);\n  return /*#__PURE__*/React.createElement(Select, {\n    options: options,\n    value: value,\n    onChange: value => onChange(value)\n  });\n};\n\nmodule.exportDefault(PeriodSelector);","map":{"version":3,"sources":["ee/client/views/admin/engagementDashboard/data/PeriodSelector.tsx"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAS,MAAQ,CAAA,IAAR,CAAc,uBAAd,EAAsC;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAtC,EAAsC,CAAtC;AAAsC,IAAA,KAAA,EAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sDAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAY/C,MAAM,cAAc,GAAG,QAA4G;AAAA,MAA5E;AAAE,IAAA,OAAF;AAAW,IAAA,KAAX;AAAkB,IAAA;AAAlB,GAA4E;AAClI,QAAM,CAAC,GAAG,cAAc,EAAxB;AAEA,QAAM,OAAO,GAAG,OAAO,CAAqB,MAAM,OAAO,CAAC,GAAR,CAAa,MAAD,IAAY,CAAC,MAAD,EAAS,CAAC,CAAC,GAAG,SAAS,CAAC,MAAD,CAAT,CAAkB,KAAtB,CAAV,CAAxB,CAA3B,EAA6F,CAAC,OAAD,EAAU,CAAV,CAA7F,CAAvB;AAEA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,OAAjB;AAA0B,IAAA,KAAK,EAAE,KAAjC;AAAwC,IAAA,QAAQ,EAAG,KAAD,IAAyB,QAAQ,CAAC,KAAD;AAAnF,IAAP;AACA,CAND;;AAZA,MAAA,CAAO,aAAP,CAoBe,cApBf","sourcesContent":["import { Select } from '@rocket.chat/fuselage';\nimport React, { ReactElement, useMemo } from 'react';\n\nimport { useTranslation } from '../../../../../../client/contexts/TranslationContext';\nimport { getPeriod, Period } from './periods';\n\ntype PeriodSelectorProps<TPeriod extends Period['key']> = {\n\tperiods: TPeriod[];\n\tvalue: TPeriod;\n\tonChange: (value: TPeriod) => void;\n};\n\nconst PeriodSelector = <TPeriod extends Period['key']>({ periods, value, onChange }: PeriodSelectorProps<TPeriod>): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst options = useMemo<[string, string][]>(() => periods.map((period) => [period, t(...getPeriod(period).label)]), [periods, t]);\n\n\treturn <Select options={options} value={value} onChange={(value: string): void => onChange(value as TPeriod)} />;\n};\n\nexport default PeriodSelector;\n"],"sourceRoot":""},"sourceType":"module","hash":"1675f7e0dffe4cbdb16830802640e49d6f1c6c58"}
