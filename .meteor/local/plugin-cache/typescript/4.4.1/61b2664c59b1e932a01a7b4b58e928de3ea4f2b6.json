{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useForm.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/hooks/useForm.ts","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useForm.ts","inputSourceMap":{"version":3,"file":"client/hooks/useForm.ts","sourceRoot":"","sources":["client/hooks/useForm.ts"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport { useCallback, useReducer, useMemo, ChangeEvent } from 'react';\n\ntype Field = {\n\tname: string;\n\tcurrentValue: unknown;\n\tinitialValue: unknown;\n\tchanged: boolean;\n};\n\ntype FormState<Values extends Record<string, unknown>> = {\n\tfields: Field[];\n\tvalues: Values;\n\thasUnsavedChanges: boolean;\n};\n\ntype FormAction<Values extends Record<string, unknown>> = {\n\t(prevState: FormState<Values>): FormState<Values>;\n};\n\nconst reduceForm = <Values extends Record<string, unknown>>(state: FormState<Values>, action: FormAction<Values>): FormState<Values> =>\n\taction(state);\n\nconst initForm = <Values extends Record<string, unknown>>(initialValues: Values): FormState<Values> => {\n\tconst fields = [];\n\n\tfor (const [fieldName, initialValue] of Object.entries(initialValues)) {\n\t\tfields.push({\n\t\t\tname: fieldName,\n\t\t\tcurrentValue: initialValue,\n\t\t\tinitialValue,\n\t\t\tchanged: false,\n\t\t});\n\t}\n\n\treturn {\n\t\tfields,\n\t\tvalues: { ...initialValues },\n\t\thasUnsavedChanges: false,\n\t};\n};\n\nconst valueChanged =\n\t<Values extends Record<string, unknown>>(fieldName: string, newValue: unknown): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => {\n\t\tlet { fields } = state;\n\t\tconst field = fields.find(({ name }) => name === fieldName);\n\n\t\tif (!field || field.currentValue === newValue) {\n\t\t\treturn state;\n\t\t}\n\n\t\tconst newField = {\n\t\t\t...field,\n\t\t\tcurrentValue: newValue,\n\t\t\tchanged: JSON.stringify(newValue) !== JSON.stringify(field.initialValue),\n\t\t};\n\n\t\tfields = state.fields.map((field) => {\n\t\t\tif (field.name === fieldName) {\n\t\t\t\treturn newField;\n\t\t\t}\n\n\t\t\treturn field;\n\t\t});\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tfields,\n\t\t\tvalues: {\n\t\t\t\t...state.values,\n\t\t\t\t[newField.name]: newField.currentValue,\n\t\t\t},\n\t\t\thasUnsavedChanges: newField.changed || fields.some((field) => field.changed),\n\t\t};\n\t};\n\nconst formCommitted =\n\t<Values extends Record<string, unknown>>(): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => ({\n\t\t...state,\n\t\tfields: state.fields.map((field) => ({\n\t\t\t...field,\n\t\t\tinitialValue: field.currentValue,\n\t\t\tchanged: false,\n\t\t})),\n\t\thasUnsavedChanges: false,\n\t});\n\nconst formReset =\n\t<Values extends Record<string, unknown>>(): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => ({\n\t\t...state,\n\t\tfields: state.fields.map((field) => ({\n\t\t\t...field,\n\t\t\tcurrentValue: field.initialValue,\n\t\t\tchanged: false,\n\t\t})),\n\t\tvalues: state.fields.reduce(\n\t\t\t(values, field) => ({\n\t\t\t\t...values,\n\t\t\t\t[field.name]: field.initialValue,\n\t\t\t}),\n\t\t\t{} as Values,\n\t\t),\n\t\thasUnsavedChanges: false,\n\t});\n\nconst isChangeEvent = (x: any): x is ChangeEvent =>\n\t(typeof x === 'object' || typeof x === 'function') && typeof x?.currentTarget !== 'undefined';\n\nconst getValue = (eventOrValue: ChangeEvent | unknown): unknown => {\n\tif (!isChangeEvent(eventOrValue)) {\n\t\treturn eventOrValue;\n\t}\n\n\tconst target = eventOrValue.currentTarget;\n\n\tif (target instanceof HTMLTextAreaElement) {\n\t\treturn target.value;\n\t}\n\n\tif (target instanceof HTMLSelectElement) {\n\t\treturn target.value;\n\t}\n\n\tif (!(target instanceof HTMLInputElement)) {\n\t\treturn undefined;\n\t}\n\n\tif (target.type === 'checkbox' || target.type === 'radio') {\n\t\treturn target.checked;\n\t}\n\n\treturn target.value;\n};\n\n/**\n * @deprecated prefer react-hook-form's `useForm`\n */\nexport const useForm = <\n\tReducer extends (\n\t\tstate: FormState<Record<string, unknown>>,\n\t\taction: FormAction<Record<string, unknown>>,\n\t) => FormState<Record<string, unknown>>,\n>(\n\tinitialValues: Parameters<Reducer>[0]['values'],\n\tonChange: (...args: unknown[]) => void = (): void => undefined,\n): {\n\tvalues: Parameters<Reducer>[0]['values'];\n\thandlers: Record<string, (eventOrValue: ChangeEvent | unknown) => void>;\n\thasUnsavedChanges: boolean;\n\tcommit: () => void;\n\treset: () => void;\n} => {\n\tconst [state, dispatch] = useReducer(reduceForm, initialValues, initForm);\n\n\tconst commit = useCallback(() => {\n\t\tdispatch(formCommitted());\n\t}, []);\n\n\tconst reset = useCallback(() => {\n\t\tdispatch(formReset());\n\t}, []);\n\n\tconst handlers = useMemo<Record<string, (eventOrValue: ChangeEvent | unknown) => void>>(\n\t\t() =>\n\t\t\tstate.fields.reduce(\n\t\t\t\t(handlers, { name, initialValue }) => ({\n\t\t\t\t\t...handlers,\n\t\t\t\t\t[`handle${capitalize(name)}`]: (eventOrValue: ChangeEvent | unknown): void => {\n\t\t\t\t\t\tconst newValue = getValue(eventOrValue);\n\t\t\t\t\t\tdispatch(valueChanged(name, newValue));\n\t\t\t\t\t\tonChange({\n\t\t\t\t\t\t\tinitialValue,\n\t\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t\t\tkey: name,\n\t\t\t\t\t\t\tvalues: state.values,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\t{},\n\t\t\t),\n\t\t[onChange, state.fields, state.values],\n\t);\n\n\treturn {\n\t\thandlers,\n\t\tvalues: state.values,\n\t\thasUnsavedChanges: state.hasUnsavedChanges,\n\t\tcommit,\n\t\treset,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/hooks/useForm.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useForm.ts"}},"code":"var _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nmodule.export({\n  useForm: function () {\n    return useForm;\n  }\n});\nvar capitalize;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  capitalize: function (v) {\n    capitalize = v;\n  }\n}, 0);\nvar useCallback, useReducer, useMemo;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useReducer: function (v) {\n    useReducer = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 1);\n\nvar reduceForm = function (state, action) {\n  return action(state);\n};\n\nvar initForm = function (initialValues) {\n  var fields = [];\n\n  for (var _i = 0, _Object$entries = Object.entries(initialValues); _i < _Object$entries.length; _i++) {\n    var _ref = _Object$entries[_i];\n\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var fieldName = _ref2[0];\n    var initialValue = _ref2[1];\n    fields.push({\n      name: fieldName,\n      currentValue: initialValue,\n      initialValue: initialValue,\n      changed: false\n    });\n  }\n\n  return {\n    fields: fields,\n    values: _objectSpread({}, initialValues),\n    hasUnsavedChanges: false\n  };\n};\n\nvar valueChanged = function (fieldName, newValue) {\n  return function (state) {\n    var _objectSpread2;\n\n    var fields = state.fields;\n    var field = fields.find(function (_ref3) {\n      var name = _ref3.name;\n      return name === fieldName;\n    });\n\n    if (!field || field.currentValue === newValue) {\n      return state;\n    }\n\n    var newField = _objectSpread(_objectSpread({}, field), {}, {\n      currentValue: newValue,\n      changed: JSON.stringify(newValue) !== JSON.stringify(field.initialValue)\n    });\n\n    fields = state.fields.map(function (field) {\n      if (field.name === fieldName) {\n        return newField;\n      }\n\n      return field;\n    });\n    return _objectSpread(_objectSpread({}, state), {}, {\n      fields: fields,\n      values: _objectSpread(_objectSpread({}, state.values), {}, (_objectSpread2 = {}, _objectSpread2[newField.name] = newField.currentValue, _objectSpread2)),\n      hasUnsavedChanges: newField.changed || fields.some(function (field) {\n        return field.changed;\n      })\n    });\n  };\n};\n\nvar formCommitted = function () {\n  return function (state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      fields: state.fields.map(function (field) {\n        return _objectSpread(_objectSpread({}, field), {}, {\n          initialValue: field.currentValue,\n          changed: false\n        });\n      }),\n      hasUnsavedChanges: false\n    });\n  };\n};\n\nvar formReset = function () {\n  return function (state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      fields: state.fields.map(function (field) {\n        return _objectSpread(_objectSpread({}, field), {}, {\n          currentValue: field.initialValue,\n          changed: false\n        });\n      }),\n      values: state.fields.reduce(function (values, field) {\n        var _objectSpread3;\n\n        return _objectSpread(_objectSpread({}, values), {}, (_objectSpread3 = {}, _objectSpread3[field.name] = field.initialValue, _objectSpread3));\n      }, {}),\n      hasUnsavedChanges: false\n    });\n  };\n};\n\nvar isChangeEvent = function (x) {\n  return (_typeof(x) === 'object' || typeof x === 'function') && typeof (x === null || x === void 0 ? void 0 : x.currentTarget) !== 'undefined';\n};\n\nvar getValue = function (eventOrValue) {\n  if (!isChangeEvent(eventOrValue)) {\n    return eventOrValue;\n  }\n\n  var target = eventOrValue.currentTarget;\n\n  if (target instanceof HTMLTextAreaElement) {\n    return target.value;\n  }\n\n  if (target instanceof HTMLSelectElement) {\n    return target.value;\n  }\n\n  if (!(target instanceof HTMLInputElement)) {\n    return undefined;\n  }\n\n  if (target.type === 'checkbox' || target.type === 'radio') {\n    return target.checked;\n  }\n\n  return target.value;\n};\n/**\n * @deprecated prefer react-hook-form's `useForm`\n */\n\n\nvar useForm = function (initialValues) {\n  var onChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return undefined;\n  };\n\n  var _useReducer = useReducer(reduceForm, initialValues, initForm),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var commit = useCallback(function () {\n    dispatch(formCommitted());\n  }, []);\n  var reset = useCallback(function () {\n    dispatch(formReset());\n  }, []);\n  var handlers = useMemo(function () {\n    return state.fields.reduce(function (handlers, _ref4) {\n      var _objectSpread4;\n\n      var name = _ref4.name,\n          initialValue = _ref4.initialValue;\n      return _objectSpread(_objectSpread({}, handlers), {}, (_objectSpread4 = {}, _objectSpread4[\"handle\" + capitalize(name)] = function (eventOrValue) {\n        var newValue = getValue(eventOrValue);\n        dispatch(valueChanged(name, newValue));\n        onChange({\n          initialValue: initialValue,\n          value: newValue,\n          key: name,\n          values: state.values\n        });\n      }, _objectSpread4));\n    }, {});\n  }, [onChange, state.fields, state.values]);\n  return {\n    handlers: handlers,\n    values: state.values,\n    hasUnsavedChanges: state.hasUnsavedChanges,\n    commit: commit,\n    reset: reset\n  };\n};","map":{"version":3,"sources":["client/hooks/useForm.ts"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport { useCallback, useReducer, useMemo, ChangeEvent } from 'react';\n\ntype Field = {\n\tname: string;\n\tcurrentValue: unknown;\n\tinitialValue: unknown;\n\tchanged: boolean;\n};\n\ntype FormState<Values extends Record<string, unknown>> = {\n\tfields: Field[];\n\tvalues: Values;\n\thasUnsavedChanges: boolean;\n};\n\ntype FormAction<Values extends Record<string, unknown>> = {\n\t(prevState: FormState<Values>): FormState<Values>;\n};\n\nconst reduceForm = <Values extends Record<string, unknown>>(state: FormState<Values>, action: FormAction<Values>): FormState<Values> =>\n\taction(state);\n\nconst initForm = <Values extends Record<string, unknown>>(initialValues: Values): FormState<Values> => {\n\tconst fields = [];\n\n\tfor (const [fieldName, initialValue] of Object.entries(initialValues)) {\n\t\tfields.push({\n\t\t\tname: fieldName,\n\t\t\tcurrentValue: initialValue,\n\t\t\tinitialValue,\n\t\t\tchanged: false,\n\t\t});\n\t}\n\n\treturn {\n\t\tfields,\n\t\tvalues: { ...initialValues },\n\t\thasUnsavedChanges: false,\n\t};\n};\n\nconst valueChanged =\n\t<Values extends Record<string, unknown>>(fieldName: string, newValue: unknown): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => {\n\t\tlet { fields } = state;\n\t\tconst field = fields.find(({ name }) => name === fieldName);\n\n\t\tif (!field || field.currentValue === newValue) {\n\t\t\treturn state;\n\t\t}\n\n\t\tconst newField = {\n\t\t\t...field,\n\t\t\tcurrentValue: newValue,\n\t\t\tchanged: JSON.stringify(newValue) !== JSON.stringify(field.initialValue),\n\t\t};\n\n\t\tfields = state.fields.map((field) => {\n\t\t\tif (field.name === fieldName) {\n\t\t\t\treturn newField;\n\t\t\t}\n\n\t\t\treturn field;\n\t\t});\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tfields,\n\t\t\tvalues: {\n\t\t\t\t...state.values,\n\t\t\t\t[newField.name]: newField.currentValue,\n\t\t\t},\n\t\t\thasUnsavedChanges: newField.changed || fields.some((field) => field.changed),\n\t\t};\n\t};\n\nconst formCommitted =\n\t<Values extends Record<string, unknown>>(): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => ({\n\t\t...state,\n\t\tfields: state.fields.map((field) => ({\n\t\t\t...field,\n\t\t\tinitialValue: field.currentValue,\n\t\t\tchanged: false,\n\t\t})),\n\t\thasUnsavedChanges: false,\n\t});\n\nconst formReset =\n\t<Values extends Record<string, unknown>>(): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => ({\n\t\t...state,\n\t\tfields: state.fields.map((field) => ({\n\t\t\t...field,\n\t\t\tcurrentValue: field.initialValue,\n\t\t\tchanged: false,\n\t\t})),\n\t\tvalues: state.fields.reduce(\n\t\t\t(values, field) => ({\n\t\t\t\t...values,\n\t\t\t\t[field.name]: field.initialValue,\n\t\t\t}),\n\t\t\t{} as Values,\n\t\t),\n\t\thasUnsavedChanges: false,\n\t});\n\nconst isChangeEvent = (x: any): x is ChangeEvent =>\n\t(typeof x === 'object' || typeof x === 'function') && typeof x?.currentTarget !== 'undefined';\n\nconst getValue = (eventOrValue: ChangeEvent | unknown): unknown => {\n\tif (!isChangeEvent(eventOrValue)) {\n\t\treturn eventOrValue;\n\t}\n\n\tconst target = eventOrValue.currentTarget;\n\n\tif (target instanceof HTMLTextAreaElement) {\n\t\treturn target.value;\n\t}\n\n\tif (target instanceof HTMLSelectElement) {\n\t\treturn target.value;\n\t}\n\n\tif (!(target instanceof HTMLInputElement)) {\n\t\treturn undefined;\n\t}\n\n\tif (target.type === 'checkbox' || target.type === 'radio') {\n\t\treturn target.checked;\n\t}\n\n\treturn target.value;\n};\n\n/**\n * @deprecated prefer react-hook-form's `useForm`\n */\nexport const useForm = <\n\tReducer extends (\n\t\tstate: FormState<Record<string, unknown>>,\n\t\taction: FormAction<Record<string, unknown>>,\n\t) => FormState<Record<string, unknown>>,\n>(\n\tinitialValues: Parameters<Reducer>[0]['values'],\n\tonChange: (...args: unknown[]) => void = (): void => undefined,\n): {\n\tvalues: Parameters<Reducer>[0]['values'];\n\thandlers: Record<string, (eventOrValue: ChangeEvent | unknown) => void>;\n\thasUnsavedChanges: boolean;\n\tcommit: () => void;\n\treset: () => void;\n} => {\n\tconst [state, dispatch] = useReducer(reduceForm, initialValues, initForm);\n\n\tconst commit = useCallback(() => {\n\t\tdispatch(formCommitted());\n\t}, []);\n\n\tconst reset = useCallback(() => {\n\t\tdispatch(formReset());\n\t}, []);\n\n\tconst handlers = useMemo<Record<string, (eventOrValue: ChangeEvent | unknown) => void>>(\n\t\t() =>\n\t\t\tstate.fields.reduce(\n\t\t\t\t(handlers, { name, initialValue }) => ({\n\t\t\t\t\t...handlers,\n\t\t\t\t\t[`handle${capitalize(name)}`]: (eventOrValue: ChangeEvent | unknown): void => {\n\t\t\t\t\t\tconst newValue = getValue(eventOrValue);\n\t\t\t\t\t\tdispatch(valueChanged(name, newValue));\n\t\t\t\t\t\tonChange({\n\t\t\t\t\t\t\tinitialValue,\n\t\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t\t\tkey: name,\n\t\t\t\t\t\t\tvalues: state.values,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\t{},\n\t\t\t),\n\t\t[onChange, state.fields, state.values],\n\t);\n\n\treturn {\n\t\thandlers,\n\t\tvalues: state.values,\n\t\thasUnsavedChanges: state.hasUnsavedChanges,\n\t\tcommit,\n\t\treset,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"61b2664c59b1e932a01a7b4b58e928de3ea4f2b6"}
