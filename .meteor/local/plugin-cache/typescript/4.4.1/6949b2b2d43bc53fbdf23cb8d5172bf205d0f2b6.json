{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/RouterProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/providers/RouterProvider.tsx","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/RouterProvider.tsx","inputSourceMap":{"version":3,"file":"client/providers/RouterProvider.tsx","sourceRoot":"","sources":["client/providers/RouterProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Tracker } from 'meteor/tracker';\nimport React, { FC } from 'react';\nimport { Subscription, Unsubscribe } from 'use-subscription';\n\nimport { RouterContext, RouterContextValue } from '../contexts/RouterContext';\n\nconst createSubscription = function <T>(getValue: () => T): Subscription<T> {\n\tlet currentValue = Tracker.nonreactive(getValue);\n\treturn {\n\t\tgetCurrentValue: (): T => currentValue,\n\t\tsubscribe: (callback: () => void): Unsubscribe => {\n\t\t\tconst computation = Tracker.autorun(() => {\n\t\t\t\tcurrentValue = getValue();\n\t\t\t\tcallback();\n\t\t\t});\n\n\t\t\treturn (): void => {\n\t\t\t\tcomputation.stop();\n\t\t\t};\n\t\t},\n\t};\n};\n\nconst queryRoutePath = (\n\tname: Parameters<RouterContextValue['queryRoutePath']>[0],\n\tparameters: Parameters<RouterContextValue['queryRoutePath']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['queryRoutePath']>[2],\n): ReturnType<RouterContextValue['queryRoutePath']> => createSubscription(() => FlowRouter.path(name, parameters, queryStringParameters));\n\nconst queryRouteUrl = (\n\tname: Parameters<RouterContextValue['queryRouteUrl']>[0],\n\tparameters: Parameters<RouterContextValue['queryRouteUrl']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['queryRouteUrl']>[2],\n): ReturnType<RouterContextValue['queryRouteUrl']> => createSubscription(() => FlowRouter.url(name, parameters, queryStringParameters));\n\nconst pushRoute = (\n\tname: Parameters<RouterContextValue['pushRoute']>[0],\n\tparameters: Parameters<RouterContextValue['pushRoute']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['pushRoute']>[2],\n): ReturnType<RouterContextValue['pushRoute']> => {\n\tFlowRouter.go(name, parameters, queryStringParameters);\n};\n\nconst replaceRoute = (\n\tname: Parameters<RouterContextValue['replaceRoute']>[0],\n\tparameters: Parameters<RouterContextValue['replaceRoute']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['replaceRoute']>[2],\n): ReturnType<RouterContextValue['replaceRoute']> => {\n\tFlowRouter.withReplaceState(() => {\n\t\tFlowRouter.go(name, parameters, queryStringParameters);\n\t});\n};\n\nconst queryRouteParameter = (\n\tname: Parameters<RouterContextValue['replaceRoute']>[0],\n): ReturnType<RouterContextValue['queryRouteParameter']> => createSubscription(() => FlowRouter.getParam(name));\n\nconst queryQueryStringParameter = (\n\tname: Parameters<RouterContextValue['queryQueryStringParameter']>[0],\n): ReturnType<RouterContextValue['queryQueryStringParameter']> => createSubscription(() => FlowRouter.getQueryParam(name));\n\nconst queryCurrentRoute = (): ReturnType<RouterContextValue['queryCurrentRoute']> =>\n\tcreateSubscription(() => {\n\t\tFlowRouter.watchPathChange();\n\t\tconst { route, params, queryParams } = FlowRouter.current();\n\t\treturn [route?.name, params, queryParams, route?.group?.name];\n\t});\n\nconst contextValue = {\n\tqueryRoutePath,\n\tqueryRouteUrl,\n\tpushRoute,\n\treplaceRoute,\n\tqueryRouteParameter,\n\tqueryQueryStringParameter,\n\tqueryCurrentRoute,\n};\n\nconst RouterProvider: FC = ({ children }) => <RouterContext.Provider children={children} value={contextValue} />;\n\nexport default RouterProvider;\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/providers/RouterProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/providers/RouterProvider.tsx"}},"code":"var FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 0);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 2);\nvar RouterContext;\nmodule.link(\"../contexts/RouterContext\", {\n  RouterContext: function (v) {\n    RouterContext = v;\n  }\n}, 3);\n\nvar createSubscription = function (getValue) {\n  var currentValue = Tracker.nonreactive(getValue);\n  return {\n    getCurrentValue: function () {\n      return currentValue;\n    },\n    subscribe: function (callback) {\n      var computation = Tracker.autorun(function () {\n        currentValue = getValue();\n        callback();\n      });\n      return function () {\n        computation.stop();\n      };\n    }\n  };\n};\n\nvar queryRoutePath = function (name, parameters, queryStringParameters) {\n  return createSubscription(function () {\n    return FlowRouter.path(name, parameters, queryStringParameters);\n  });\n};\n\nvar queryRouteUrl = function (name, parameters, queryStringParameters) {\n  return createSubscription(function () {\n    return FlowRouter.url(name, parameters, queryStringParameters);\n  });\n};\n\nvar pushRoute = function (name, parameters, queryStringParameters) {\n  FlowRouter.go(name, parameters, queryStringParameters);\n};\n\nvar replaceRoute = function (name, parameters, queryStringParameters) {\n  FlowRouter.withReplaceState(function () {\n    FlowRouter.go(name, parameters, queryStringParameters);\n  });\n};\n\nvar queryRouteParameter = function (name) {\n  return createSubscription(function () {\n    return FlowRouter.getParam(name);\n  });\n};\n\nvar queryQueryStringParameter = function (name) {\n  return createSubscription(function () {\n    return FlowRouter.getQueryParam(name);\n  });\n};\n\nvar queryCurrentRoute = function () {\n  return createSubscription(function () {\n    var _route$group;\n\n    FlowRouter.watchPathChange();\n\n    var _FlowRouter$current = FlowRouter.current(),\n        route = _FlowRouter$current.route,\n        params = _FlowRouter$current.params,\n        queryParams = _FlowRouter$current.queryParams;\n\n    return [route === null || route === void 0 ? void 0 : route.name, params, queryParams, route === null || route === void 0 ? void 0 : (_route$group = route.group) === null || _route$group === void 0 ? void 0 : _route$group.name];\n  });\n};\n\nvar contextValue = {\n  queryRoutePath: queryRoutePath,\n  queryRouteUrl: queryRouteUrl,\n  pushRoute: pushRoute,\n  replaceRoute: replaceRoute,\n  queryRouteParameter: queryRouteParameter,\n  queryQueryStringParameter: queryQueryStringParameter,\n  queryCurrentRoute: queryCurrentRoute\n};\n\nvar RouterProvider = function (_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(RouterContext.Provider, {\n    children: children,\n    value: contextValue\n  });\n};\n\nmodule.exportDefault(RouterProvider);","map":{"version":3,"sources":["client/providers/RouterProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Tracker } from 'meteor/tracker';\nimport React, { FC } from 'react';\nimport { Subscription, Unsubscribe } from 'use-subscription';\n\nimport { RouterContext, RouterContextValue } from '../contexts/RouterContext';\n\nconst createSubscription = function <T>(getValue: () => T): Subscription<T> {\n\tlet currentValue = Tracker.nonreactive(getValue);\n\treturn {\n\t\tgetCurrentValue: (): T => currentValue,\n\t\tsubscribe: (callback: () => void): Unsubscribe => {\n\t\t\tconst computation = Tracker.autorun(() => {\n\t\t\t\tcurrentValue = getValue();\n\t\t\t\tcallback();\n\t\t\t});\n\n\t\t\treturn (): void => {\n\t\t\t\tcomputation.stop();\n\t\t\t};\n\t\t},\n\t};\n};\n\nconst queryRoutePath = (\n\tname: Parameters<RouterContextValue['queryRoutePath']>[0],\n\tparameters: Parameters<RouterContextValue['queryRoutePath']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['queryRoutePath']>[2],\n): ReturnType<RouterContextValue['queryRoutePath']> => createSubscription(() => FlowRouter.path(name, parameters, queryStringParameters));\n\nconst queryRouteUrl = (\n\tname: Parameters<RouterContextValue['queryRouteUrl']>[0],\n\tparameters: Parameters<RouterContextValue['queryRouteUrl']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['queryRouteUrl']>[2],\n): ReturnType<RouterContextValue['queryRouteUrl']> => createSubscription(() => FlowRouter.url(name, parameters, queryStringParameters));\n\nconst pushRoute = (\n\tname: Parameters<RouterContextValue['pushRoute']>[0],\n\tparameters: Parameters<RouterContextValue['pushRoute']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['pushRoute']>[2],\n): ReturnType<RouterContextValue['pushRoute']> => {\n\tFlowRouter.go(name, parameters, queryStringParameters);\n};\n\nconst replaceRoute = (\n\tname: Parameters<RouterContextValue['replaceRoute']>[0],\n\tparameters: Parameters<RouterContextValue['replaceRoute']>[1],\n\tqueryStringParameters: Parameters<RouterContextValue['replaceRoute']>[2],\n): ReturnType<RouterContextValue['replaceRoute']> => {\n\tFlowRouter.withReplaceState(() => {\n\t\tFlowRouter.go(name, parameters, queryStringParameters);\n\t});\n};\n\nconst queryRouteParameter = (\n\tname: Parameters<RouterContextValue['replaceRoute']>[0],\n): ReturnType<RouterContextValue['queryRouteParameter']> => createSubscription(() => FlowRouter.getParam(name));\n\nconst queryQueryStringParameter = (\n\tname: Parameters<RouterContextValue['queryQueryStringParameter']>[0],\n): ReturnType<RouterContextValue['queryQueryStringParameter']> => createSubscription(() => FlowRouter.getQueryParam(name));\n\nconst queryCurrentRoute = (): ReturnType<RouterContextValue['queryCurrentRoute']> =>\n\tcreateSubscription(() => {\n\t\tFlowRouter.watchPathChange();\n\t\tconst { route, params, queryParams } = FlowRouter.current();\n\t\treturn [route?.name, params, queryParams, route?.group?.name];\n\t});\n\nconst contextValue = {\n\tqueryRoutePath,\n\tqueryRouteUrl,\n\tpushRoute,\n\treplaceRoute,\n\tqueryRouteParameter,\n\tqueryQueryStringParameter,\n\tqueryCurrentRoute,\n};\n\nconst RouterProvider: FC = ({ children }) => <RouterContext.Provider children={children} value={contextValue} />;\n\nexport default RouterProvider;\n"],"sourceRoot":""},"sourceType":"module","hash":"6949b2b2d43bc53fbdf23cb8d5172bf205d0f2b6"}
