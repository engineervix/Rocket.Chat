{"head":"","body":"","js":"\nTemplate.__checkName(\"customFieldsForm\");\nTemplate[\"customFieldsForm\"] = new Template(\"Template.customFieldsForm\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"customFields\"));\n  }, function() {\n    return [ \"\\n\\t\", HTML.DIV({\n      class: \"rc-form-group rc-grid\"\n    }, \"\\n\\t\\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"customFields\"));\n    }, function() {\n      return [ \"\\n\\t\\t\\t\", HTML.DIV({\n        class: \"rc-input rc-w50 padded\"\n      }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"field\"), \"type\"), \"select\");\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", Blaze.Unless(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"new\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"input-line\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            for: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            }\n          }, Blaze.View(\"lookup:_\", function() {\n            return Spacebars.mustache(view.lookup(\"_\"), view.lookup(\"fieldName\"));\n          })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.SELECT({\n            name: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            },\n            \"data-customfield\": \"true\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\", Blaze.Each(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"options\"));\n          }, function() {\n            return [ \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.OPTION({\n              value: function() {\n                return Spacebars.mustache(view.lookup(\".\"));\n              },\n              selected: function() {\n                return Spacebars.mustache(view.lookup(\"selectedField\"), view.lookup(\".\"), view.lookup(\"..\"));\n              }\n            }, Blaze.View(\"lookup:_\", function() {\n              return Spacebars.mustache(view.lookup(\"_\"), view.lookup(\".\"));\n            })), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\" ];\n          }), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            class: \"rc-input__label\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__title\"\n          }, Blaze.View(\"lookup:_\", function() {\n            return Spacebars.mustache(view.lookup(\"_\"), view.lookup(\"fieldName\"));\n          })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__wrapper\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.SELECT({\n            name: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            },\n            \"data-customfield\": \"true\",\n            class: \"rc-input__element\"\n          }, HTML.Raw(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\"), Blaze.Each(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"options\"));\n          }, function() {\n            return [ \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.OPTION({\n              value: function() {\n                return Spacebars.mustache(view.lookup(\".\"));\n              },\n              selected: function() {\n                return Spacebars.mustache(view.lookup(\"selectedField\"), view.lookup(\".\"), view.lookup(\"..\"));\n              }\n            }, Blaze.View(\"lookup:_\", function() {\n              return Spacebars.mustache(view.lookup(\"_\"), view.lookup(\".\"));\n            })), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\" ];\n          }), \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"field\"), \"type\"), \"text\");\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", Blaze.Unless(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"new\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"input-line\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            for: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            }\n          }, Blaze.View(\"lookup:_\", function() {\n            return Spacebars.mustache(view.lookup(\"_\"), view.lookup(\"fieldName\"));\n          })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n            type: \"text\",\n            name: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            },\n            id: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            },\n            \"data-customfield\": \"true\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"fieldValue\"));\n            },\n            maxlength: function() {\n              return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"maxLength\"));\n            }\n          }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            class: \"rc-input__label\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__title\"\n          }, Blaze.View(\"lookup:_\", function() {\n            return Spacebars.mustache(view.lookup(\"_\"), view.lookup(\"fieldName\"));\n          })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__wrapper\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n            type: \"text\",\n            class: \"rc-input__element\",\n            name: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            },\n            id: function() {\n              return Spacebars.mustache(view.lookup(\"fieldName\"));\n            },\n            \"data-customfield\": \"true\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"fieldValue\"));\n            },\n            maxlength: function() {\n              return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"maxLength\"));\n            }\n          }), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];\n    }), \"\\n\\t\"), \"\\n\" ];\n  });\n}));\n","bodyAttrs":{}}