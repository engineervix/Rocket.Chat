{"head":"","body":"","js":"\nTemplate.__checkName(\"loginForm\");\nTemplate[\"loginForm\"] = new Template(\"Template.loginForm\", (function() {\n  var view = this;\n  return [ HTML.FORM({\n    id: \"login-card\",\n    class: \"content-background-color color-primary-font-color\",\n    method: \"/\",\n    novalidate: \"\"\n  }, \"\\n\\t\\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"state\"), \"wait-activation\");\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", HTML.HEADER(\"\\n\\t\\t\\t\\t\", HTML.H2({\n      \"data-i18n\": \"Registration_Succeeded\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"_\"), \"Registration_Succeeded\"));\n    })), \"\\n\\t\\t\\t\\t\", HTML.P(Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"Wait_activation_warning\");\n    })), \"\\n\\t\\t\\t\\t\", HTML.P(Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"Please_wait_activation\");\n    })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];\n  }, function() {\n    return Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"state\"), \"wait-email-activation\");\n    }, function() {\n      return [ \"\\n\\t\\t\\t\", HTML.HEADER(\"\\n\\t\\t\\t\\t\", HTML.H2({\n        \"data-i18n\": \"Registration_Succeeded\"\n      }, Blaze.View(\"lookup:_\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"_\"), \"Registration_Succeeded\"));\n      })), \"\\n\\t\\t\\t\\t\", HTML.P(Blaze.View(\"lookup:_\", function() {\n        return Spacebars.mustache(view.lookup(\"_\"), \"We_have_sent_registration_email\");\n      })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];\n    }, function() {\n      return [ \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"loginServices\")), \"\\n\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"needsValidateEmail\"));\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({\n          class: \"alert error-color error-background error-border\"\n        }, \"\\n\\t\\t\\t\\t\\t\", Blaze.View(\"lookup:_\", function() {\n          return Spacebars.mustache(view.lookup(\"_\"), \"You_need_confirm_email\");\n        }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\" ];\n      }), \"\\n\\n\\t\\t\\t\", HTML.DIV({\n        class: \"fields\"\n      }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"state\"), \"login\");\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"showFormLogin\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            class: \"rc-input__label\",\n            for: \"emailOrUsername\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__wrapper\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n            name: \"emailOrUsername\",\n            id: \"emailOrUsername\",\n            type: \"text\",\n            class: \"rc-input__element\",\n            autocapitalize: \"off\",\n            autocorrect: \"off\",\n            placeholder: function() {\n              return Spacebars.mustache(view.lookup(\"emailOrUsernamePlaceholder\"));\n            },\n            autofocus: \"\"\n          }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            class: \"rc-input__label\",\n            for: \"pass\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__wrapper\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n            name: \"pass\",\n            id: \"pass\",\n            type: \"password\",\n            class: \"rc-input__element\",\n            autocapitalize: \"off\",\n            autocorrect: \"off\",\n            placeholder: function() {\n              return Spacebars.mustache(view.lookup(\"passwordPlaceholder\"));\n            },\n            autofocus: \"\"\n          }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"state\"), \"register\");\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n          class: \"rc-input__label\",\n          for: \"name\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input__wrapper\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n          name: \"name\",\n          id: \"name\",\n          type: \"text\",\n          class: \"rc-input__element\",\n          autocapitalize: \"off\",\n          autocorrect: \"off\",\n          placeholder: function() {\n            return Spacebars.mustache(view.lookup(\"namePlaceholder\"));\n          },\n          autofocus: \"\"\n        }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n          class: \"rc-input__label\",\n          for: \"email\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input__wrapper\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n          name: \"email\",\n          id: \"email\",\n          type: \"text\",\n          class: \"rc-input__element\",\n          autocapitalize: \"off\",\n          autocorrect: \"off\",\n          placeholder: function() {\n            return Spacebars.mustache(view.lookup(\"_\"), \"Email\");\n          },\n          autofocus: \"\"\n        }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n          class: \"rc-input__label\",\n          for: \"pass\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input__wrapper\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n          name: \"pass\",\n          id: \"pass\",\n          type: \"password\",\n          class: \"rc-input__element\",\n          autocapitalize: \"off\",\n          autocorrect: \"off\",\n          placeholder: function() {\n            return Spacebars.mustache(view.lookup(\"passwordPlaceholder\"));\n          },\n          autofocus: \"\"\n        }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"requirePasswordConfirmation\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            class: \"rc-input__label\",\n            for: \"confirm-pass\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__wrapper\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n            name: \"confirm-pass\",\n            id: \"confirm-pass\",\n            type: \"password\",\n            class: \"rc-input__element\",\n            autocapitalize: \"off\",\n            autocorrect: \"off\",\n            placeholder: function() {\n              return Spacebars.mustache(view.lookup(\"confirmPasswordPlaceholder\"));\n            },\n            autofocus: \"\"\n          }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"manuallyApproveNewUsers\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n            class: \"rc-input__label\",\n            for: \"confirm-pass\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n            class: \"rc-input__wrapper\"\n          }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n            name: \"reason\",\n            id: \"reason\",\n            type: \"text\",\n            class: \"rc-input__element\",\n            autocapitalize: \"off\",\n            autocorrect: \"off\",\n            placeholder: function() {\n              return Spacebars.mustache(view.lookup(\"_\"), \"Reason_To_Join\");\n            },\n            autofocus: \"\"\n          }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"state\"), \"forgot-password\", \"email-verification\");\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n          class: \"rc-input__label\",\n          for: \"email\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-input__wrapper\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n          name: \"email\",\n          id: \"email\",\n          type: \"text\",\n          class: \"rc-input__element\",\n          autocapitalize: \"off\",\n          autocorrect: \"off\",\n          placeholder: function() {\n            return Spacebars.mustache(view.lookup(\"_\"), \"Email\");\n          },\n          autofocus: \"\",\n          value: function() {\n            return Blaze.If(function() {\n              return Spacebars.dataMustache(view.lookup(\"state\"), \"email-verification\");\n            }, function() {\n              return Blaze.View(\"lookup:typedEmail\", function() {\n                return Spacebars.mustache(view.lookup(\"typedEmail\"));\n              });\n            });\n          }\n        }), HTML.Raw('\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"input-error\"></div>\\n\\t\\t\\t\\t\\t\\t\\t')), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\"), \"\\n\\n\\t\\t\\t\", HTML.DIV({\n        class: \"rc-button__group rc-button__group--vertical\"\n      }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"state\"), \"login\");\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"showFormLogin\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.BUTTON({\n            class: \"rc-button rc-button--primary login\"\n          }, Blaze.View(\"lookup:btnLoginSave\", function() {\n            return Spacebars.mustache(view.lookup(\"btnLoginSave\"));\n          })), \"\\n\\n\\t\\t\\t\\t\\t\\t\", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"passwordResetAllowed\"));\n          }, function() {\n            return [ \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.BUTTON({\n              type: \"button\",\n              class: \"rc-button rc-button--nude forgot-password\"\n            }, Blaze.View(\"lookup:_\", function() {\n              return Spacebars.mustache(view.lookup(\"_\"), \"Forgot_password\");\n            })), \"\\n\\t\\t\\t\\t\\t\\t\" ];\n          }), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"registrationAllowed\"));\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.BUTTON({\n            type: \"button\",\n            class: \"rc-button rc-button--nude register\"\n          }, Blaze.View(\"lookup:_\", function() {\n            return Spacebars.mustache(view.lookup(\"_\"), \"Register_new_account\");\n          })), \"\\n\\t\\t\\t\\t\\t\" ];\n        }, function() {\n          return [ \"\\n\\t\\t\\t\\t\\t\\t\", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"linkReplacementText\"));\n          }, function() {\n            return [ \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n              class: \"register-link-replacement\"\n            }, \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\", Blaze.View(\"lookup:linkReplacementText\", function() {\n              return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"linkReplacementText\")));\n            }), \"\\n\\t\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\" ];\n          }), \"\\n\\t\\t\\t\\t\\t\" ];\n        }), \"\\n\\t\\t\\t\\t\" ];\n      }, function() {\n        return [ \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({\n          class: \"rc-button__group rc-button__group--vertical\"\n        }, \"\\n\\t\\t\\t\\t\\t\\t\", HTML.BUTTON({\n          class: \"rc-button rc-button--primary login\"\n        }, Blaze.View(\"lookup:btnLoginSave\", function() {\n          return Spacebars.mustache(view.lookup(\"btnLoginSave\"));\n        })), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\" ];\n      }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];\n    });\n  }), \"\\n\\t\\t\", Blaze.Unless(function() {\n    return Spacebars.dataMustache(view.lookup(\"state\"), \"login\");\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", HTML.DIV({\n      class: \"rc-button__group rc-button__group--vertical\"\n    }, \"\\n\\t\\t\\t\\t\", HTML.BUTTON({\n      type: \"button\",\n      class: \"rc-button rc-button--nude back-to-login\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"Back_to_login\");\n    })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];\n  }), \"\\n\\t\"), \"\\n\\t\", HTML.DIV({\n    class: \"login-terms\"\n  }, \"\\n\\t\\t\", Blaze.View(\"lookup:loginTerms\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"loginTerms\")));\n  }), HTML.Raw('\\n\\t\\t<div class=\"powered-by\">\\n\\t\\t\\tPowered by <a class=\"color-tertiary-font-color\" href=\"https://rocket.chat\">Open Source Chat Platform Rocket.Chat</a>.\\n\\t\\t</div>\\n\\t')) ];\n}));\n","bodyAttrs":{}}