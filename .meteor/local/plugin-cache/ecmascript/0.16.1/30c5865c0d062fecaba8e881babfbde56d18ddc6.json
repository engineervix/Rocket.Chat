{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs-local/ufs-local.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/jalik:ufs-local/ufs-local.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs-local/ufs-local.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs-local/ufs-local.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jalik:ufs-local/ufs-local.js"}},"code":"var _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  LocalStore: function () {\n    return LocalStore;\n  }\n});\nvar UploadFS;\nmodule.link(\"meteor/jalik:ufs\", {\n  UploadFS: function (v) {\n    UploadFS = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\n\nvar LocalStore = /*#__PURE__*/function (_UploadFS$Store) {\n  _inheritsLoose(LocalStore, _UploadFS$Store);\n\n  function LocalStore(options) {\n    var _this;\n\n    // Default options\n    options = Object.assign({\n      mode: '0744',\n      path: 'ufs/uploads',\n      writeMode: '0744'\n    }, options); // Check options\n\n    if (typeof options.mode !== 'string') {\n      throw new TypeError('LocalStore: mode is not a string');\n    }\n\n    if (typeof options.path !== 'string') {\n      throw new TypeError('LocalStore: path is not a string');\n    }\n\n    if (typeof options.writeMode !== 'string') {\n      throw new TypeError('LocalStore: writeMode is not a string');\n    }\n\n    _this = _UploadFS$Store.call(this, options) || this;\n\n    var self = _assertThisInitialized(_this); // Private attributes\n\n\n    var mode = options.mode;\n    var path = options.path;\n    var writeMode = options.writeMode;\n\n    if (Meteor.isServer) {\n      var fs = Npm.require('fs');\n\n      fs.stat(path, function (err) {\n        if (err) {\n          var mkdirp = Npm.require('mkdirp'); // Create the directory\n\n\n          mkdirp(path, {\n            mode: mode\n          }, function (err) {\n            if (err) {\n              console.error(\"LocalStore: cannot create store at \" + path + \" (\" + err.message + \")\");\n            } else {\n              console.info(\"LocalStore: store created at \" + path);\n            }\n          });\n        } else {\n          // Set directory permissions\n          fs.chmod(path, mode, function (err) {\n            err && console.error(\"LocalStore: cannot set store permissions \" + mode + \" (\" + err.message + \")\");\n          });\n        }\n      });\n    }\n    /**\n     * Returns the path or sub path\n     * @param file\n     * @return {string}\n     */\n\n\n    _this.getPath = function (file) {\n      return path + (file ? \"/\" + file : '');\n    };\n\n    if (Meteor.isServer) {\n      /**\n       * Removes the file\n       * @param fileId\n       * @param callback\n       */\n      _this.delete = function (fileId, callback) {\n        var path = this.getFilePath(fileId);\n\n        if (typeof callback !== 'function') {\n          callback = function (err) {\n            err && console.error(\"LocalStore: cannot delete file \\\"\" + fileId + \"\\\" at \" + path + \" (\" + err.message + \")\");\n          };\n        }\n\n        var fs = Npm.require('fs');\n\n        fs.stat(path, Meteor.bindEnvironment(function (err, stat) {\n          if (!err && stat && stat.isFile()) {\n            fs.unlink(path, Meteor.bindEnvironment(function () {\n              self.getCollection().remove(fileId);\n              callback.call(self);\n            }));\n          }\n        }));\n      };\n      /**\n       * Returns the file read stream\n       * @param fileId\n       * @param file\n       * @param options\n       * @return {*}\n       */\n\n\n      _this.getReadStream = function (fileId, file, options) {\n        var fs = Npm.require('fs');\n\n        options = Object.assign({}, options);\n        return fs.createReadStream(self.getFilePath(fileId, file), {\n          flags: 'r',\n          encoding: null,\n          autoClose: true,\n          start: options.start,\n          end: options.end\n        });\n      };\n      /**\n       * Returns the file write stream\n       * @param fileId\n       * @param file\n       * @param options\n       * @return {*}\n       */\n\n\n      _this.getWriteStream = function (fileId, file, options) {\n        var fs = Npm.require('fs');\n\n        options = Object.assign({}, options);\n        return fs.createWriteStream(self.getFilePath(fileId, file), {\n          flags: 'a',\n          encoding: null,\n          mode: writeMode,\n          start: options.start\n        });\n      };\n    }\n\n    return _this;\n  }\n  /**\n   * Returns the file path\n   * @param fileId\n   * @param file\n   * @return {string}\n   */\n\n\n  var _proto = LocalStore.prototype;\n\n  _proto.getFilePath = function () {\n    function getFilePath(fileId, file) {\n      file = file || this.getCollection().findOne(fileId, {\n        fields: {\n          extension: 1\n        }\n      });\n      return file && this.getPath(fileId + (file.extension ? \".\" + file.extension : ''));\n    }\n\n    return getFilePath;\n  }();\n\n  return LocalStore;\n}(UploadFS.Store);\n\n// Add store to UFS namespace\nUploadFS.store.Local = LocalStore;","map":{"version":3,"sources":["packages/jalik:ufs-local/ufs-local.js"],"names":["_assertThisInitialized","module","link","default","v","_inheritsLoose","export","LocalStore","UploadFS","Meteor","options","Object","assign","mode","path","writeMode","TypeError","self","isServer","fs","Npm","require","stat","err","mkdirp","console","error","message","info","chmod","getPath","file","delete","fileId","callback","getFilePath","bindEnvironment","isFile","unlink","getCollection","remove","call","getReadStream","createReadStream","flags","encoding","autoClose","start","end","getWriteStream","createWriteStream","findOne","fields","extension","Store","store","Local"],"mappings":"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","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nimport { UploadFS } from 'meteor/jalik:ufs';\nimport { Meteor } from 'meteor/meteor';\n\n/**\n * File system store\n * @param options\n * @constructor\n */\nexport class LocalStore extends UploadFS.Store {\n\n  constructor(options) {\n    // Default options\n    options = Object.assign({\n      mode: '0744',\n      path: 'ufs/uploads',\n      writeMode: '0744',\n    }, options);\n\n    // Check options\n    if (typeof options.mode !== 'string') {\n      throw new TypeError('LocalStore: mode is not a string');\n    }\n    if (typeof options.path !== 'string') {\n      throw new TypeError('LocalStore: path is not a string');\n    }\n    if (typeof options.writeMode !== 'string') {\n      throw new TypeError('LocalStore: writeMode is not a string');\n    }\n\n    super(options);\n    let self = this;\n\n    // Private attributes\n    let mode = options.mode;\n    let path = options.path;\n    let writeMode = options.writeMode;\n\n    if (Meteor.isServer) {\n      const fs = Npm.require('fs');\n\n      fs.stat(path, function (err) {\n        if (err) {\n          const mkdirp = Npm.require('mkdirp');\n\n          // Create the directory\n          mkdirp(path, { mode: mode }, function (err) {\n            if (err) {\n              console.error(`LocalStore: cannot create store at ${path} (${err.message})`);\n            } else {\n              console.info(`LocalStore: store created at ${path}`);\n            }\n          });\n        } else {\n          // Set directory permissions\n          fs.chmod(path, mode, function (err) {\n            err && console.error(`LocalStore: cannot set store permissions ${mode} (${err.message})`);\n          });\n        }\n      });\n    }\n\n    /**\n     * Returns the path or sub path\n     * @param file\n     * @return {string}\n     */\n    this.getPath = function (file) {\n      return path + (file ? `/${file}` : '');\n    };\n\n    if (Meteor.isServer) {\n      /**\n       * Removes the file\n       * @param fileId\n       * @param callback\n       */\n      this.delete = function (fileId, callback) {\n        let path = this.getFilePath(fileId);\n\n        if (typeof callback !== 'function') {\n          callback = function (err) {\n            err && console.error(`LocalStore: cannot delete file \"${fileId}\" at ${path} (${err.message})`);\n          };\n        }\n        const fs = Npm.require('fs');\n        fs.stat(path, Meteor.bindEnvironment(function (err, stat) {\n          if (!err && stat && stat.isFile()) {\n            fs.unlink(path, Meteor.bindEnvironment(function () {\n              self.getCollection().remove(fileId);\n              callback.call(self);\n            }));\n          }\n        }));\n      };\n\n      /**\n       * Returns the file read stream\n       * @param fileId\n       * @param file\n       * @param options\n       * @return {*}\n       */\n      this.getReadStream = function (fileId, file, options) {\n        const fs = Npm.require('fs');\n        options = Object.assign({}, options);\n        return fs.createReadStream(self.getFilePath(fileId, file), {\n          flags: 'r',\n          encoding: null,\n          autoClose: true,\n          start: options.start,\n          end: options.end,\n        });\n      };\n\n      /**\n       * Returns the file write stream\n       * @param fileId\n       * @param file\n       * @param options\n       * @return {*}\n       */\n      this.getWriteStream = function (fileId, file, options) {\n        const fs = Npm.require('fs');\n        options = Object.assign({}, options);\n        return fs.createWriteStream(self.getFilePath(fileId, file), {\n          flags: 'a',\n          encoding: null,\n          mode: writeMode,\n          start: options.start,\n        });\n      };\n    }\n  }\n\n  /**\n   * Returns the file path\n   * @param fileId\n   * @param file\n   * @return {string}\n   */\n  getFilePath(fileId, file) {\n    file = file || this.getCollection().findOne(fileId, { fields: { extension: 1 } });\n    return file && this.getPath(fileId + (file.extension ? `.${file.extension}` : ''));\n  }\n}\n\n// Add store to UFS namespace\nUploadFS.store.Local = LocalStore;\n"]},"sourceType":"module","hash":"30c5865c0d062fecaba8e881babfbde56d18ddc6"}
