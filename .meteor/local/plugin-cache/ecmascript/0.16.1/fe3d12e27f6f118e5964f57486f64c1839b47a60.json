{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/customSounds/lib.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/customSounds/lib.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/customSounds/lib.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/customSounds/lib.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/customSounds/lib.js"}},"code":"module.export({\n  validate: () => validate,\n  createSoundData: () => createSoundData\n});\n\nfunction validate(soundData, soundFile) {\n  const errors = [];\n\n  if (!soundData.name) {\n    errors.push('Name');\n  }\n\n  if (!soundData._id && !soundFile) {\n    errors.push('Sound File');\n  }\n\n  if (soundFile) {\n    if (!soundData.previousSound || soundData.previousSound !== soundFile) {\n      if (!/audio\\/mp3/.test(soundFile.type) && !/audio\\/mpeg/.test(soundFile.type) && !/audio\\/x-mpeg/.test(soundFile.type)) {\n        errors.push('FileType');\n      }\n    }\n  }\n\n  return errors;\n}\n\nfunction createSoundData(soundFile) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let previousData = arguments.length > 2 ? arguments[2] : undefined;\n  const soundData = {\n    extension: soundFile.name.split('.').pop()\n  };\n\n  if (previousData) {\n    soundData._id = previousData._id;\n    soundData.previousName = previousData.previousName;\n    soundData.previousSound = previousData.previousSound;\n    soundData.previousExtension = previousData.previousSound.extension;\n    soundData.name = name;\n    soundData.newFile = false;\n  } else {\n    soundData.name = name.trim();\n    soundData.newFile = true;\n  }\n\n  return soundData;\n}","map":{"version":3,"sources":["client/views/admin/customSounds/lib.js"],"names":["module","export","validate","createSoundData","soundData","soundFile","errors","name","push","_id","previousSound","test","type","previousData","extension","split","pop","previousName","previousExtension","newFile","trim"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,QAAQ,EAAC,MAAIA,QAAd;AAAuBC,EAAAA,eAAe,EAAC,MAAIA;AAA3C,CAAd;;AACO,SAASD,QAAT,CAAkBE,SAAlB,EAA6BC,SAA7B,EAAwC;AAC9C,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACF,SAAS,CAACG,IAAf,EAAqB;AACpBD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAZ;AACA;;AAED,MAAI,CAACJ,SAAS,CAACK,GAAX,IAAkB,CAACJ,SAAvB,EAAkC;AACjCC,IAAAA,MAAM,CAACE,IAAP,CAAY,YAAZ;AACA;;AAED,MAAIH,SAAJ,EAAe;AACd,QAAI,CAACD,SAAS,CAACM,aAAX,IAA4BN,SAAS,CAACM,aAAV,KAA4BL,SAA5D,EAAuE;AACtE,UAAI,CAAC,aAAaM,IAAb,CAAkBN,SAAS,CAACO,IAA5B,CAAD,IAAsC,CAAC,cAAcD,IAAd,CAAmBN,SAAS,CAACO,IAA7B,CAAvC,IAA6E,CAAC,gBAAgBD,IAAhB,CAAqBN,SAAS,CAACO,IAA/B,CAAlF,EAAwH;AACvHN,QAAAA,MAAM,CAACE,IAAP,CAAY,UAAZ;AACA;AACD;AACD;;AAED,SAAOF,MAAP;AACA;;AAEM,SAASH,eAAT,CAAyBE,SAAzB,EAA6D;AAAA,MAAzBE,IAAyB,uEAAlB,EAAkB;AAAA,MAAdM,YAAc;AACnE,QAAMT,SAAS,GAAG;AACjBU,IAAAA,SAAS,EAAET,SAAS,CAACE,IAAV,CAAeQ,KAAf,CAAqB,GAArB,EAA0BC,GAA1B;AADM,GAAlB;;AAIA,MAAIH,YAAJ,EAAkB;AACjBT,IAAAA,SAAS,CAACK,GAAV,GAAgBI,YAAY,CAACJ,GAA7B;AACAL,IAAAA,SAAS,CAACa,YAAV,GAAyBJ,YAAY,CAACI,YAAtC;AACAb,IAAAA,SAAS,CAACM,aAAV,GAA0BG,YAAY,CAACH,aAAvC;AACAN,IAAAA,SAAS,CAACc,iBAAV,GAA8BL,YAAY,CAACH,aAAb,CAA2BI,SAAzD;AACAV,IAAAA,SAAS,CAACG,IAAV,GAAiBA,IAAjB;AACAH,IAAAA,SAAS,CAACe,OAAV,GAAoB,KAApB;AACA,GAPD,MAOO;AACNf,IAAAA,SAAS,CAACG,IAAV,GAAiBA,IAAI,CAACa,IAAL,EAAjB;AACAhB,IAAAA,SAAS,CAACe,OAAV,GAAoB,IAApB;AACA;;AAED,SAAOf,SAAP;AACA","sourcesContent":["// Here previousData will define if it is an update or a new entry\nexport function validate(soundData, soundFile) {\n\tconst errors = [];\n\n\tif (!soundData.name) {\n\t\terrors.push('Name');\n\t}\n\n\tif (!soundData._id && !soundFile) {\n\t\terrors.push('Sound File');\n\t}\n\n\tif (soundFile) {\n\t\tif (!soundData.previousSound || soundData.previousSound !== soundFile) {\n\t\t\tif (!/audio\\/mp3/.test(soundFile.type) && !/audio\\/mpeg/.test(soundFile.type) && !/audio\\/x-mpeg/.test(soundFile.type)) {\n\t\t\t\terrors.push('FileType');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn errors;\n}\n\nexport function createSoundData(soundFile, name = '', previousData) {\n\tconst soundData = {\n\t\textension: soundFile.name.split('.').pop(),\n\t};\n\n\tif (previousData) {\n\t\tsoundData._id = previousData._id;\n\t\tsoundData.previousName = previousData.previousName;\n\t\tsoundData.previousSound = previousData.previousSound;\n\t\tsoundData.previousExtension = previousData.previousSound.extension;\n\t\tsoundData.name = name;\n\t\tsoundData.newFile = false;\n\t} else {\n\t\tsoundData.name = name.trim();\n\t\tsoundData.newFile = true;\n\t}\n\n\treturn soundData;\n}\n"]},"sourceType":"module","hash":"fe3d12e27f6f118e5964f57486f64c1839b47a60"}
