{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/importer/lib/Importers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/importer/lib/Importers.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/importer/lib/Importers.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/importer/lib/Importers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/lib/Importers.js"}},"code":"module.export({\n  Importers: function () {\n    return Importers;\n  }\n});\nvar ImporterInfo;\nmodule.link(\"./ImporterInfo\", {\n  ImporterInfo: function (v) {\n    ImporterInfo = v;\n  }\n}, 0);\n\n/** Container class which holds all of the importer details. */\nvar ImportersContainer = /*#__PURE__*/function () {\n  function ImportersContainer() {\n    this.importers = new Map();\n  }\n  /**\n   * Adds an importer to the import collection. Adding it more than once will\n   * overwrite the previous one.\n   *\n   * @param {ImporterInfo} info The information related to the importer.\n   * @param {*} importer The class for the importer, will be undefined on the client.\n   */\n\n\n  var _proto = ImportersContainer.prototype;\n\n  _proto.add = function () {\n    function add(info, importer) {\n      if (!(info instanceof ImporterInfo)) {\n        throw new Error('The importer must be a valid ImporterInfo instance.');\n      }\n\n      info.importer = importer;\n      this.importers.set(info.key, info);\n      return this.importers.get(info.key);\n    }\n\n    return add;\n  }()\n  /**\n   * Gets the importer information that is stored.\n   *\n   * @param {string} key The key of the importer.\n   */\n  ;\n\n  _proto.get = function () {\n    function get(key) {\n      return this.importers.get(key);\n    }\n\n    return get;\n  }()\n  /**\n   * Gets all of the importers in array format.\n   *\n   * @returns {ImporterInfo[]} The array of importer information.\n   */\n  ;\n\n  _proto.getAll = function () {\n    function getAll() {\n      return Array.from(this.importers.values());\n    }\n\n    return getAll;\n  }();\n\n  return ImportersContainer;\n}();\n\nvar Importers = new ImportersContainer();","map":{"version":3,"sources":["app/importer/lib/Importers.js"],"names":["module","export","Importers","ImporterInfo","link","v","ImportersContainer","importers","Map","add","info","importer","Error","set","key","get","getAll","Array","from","values"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,YAAU;AAAC,WAAOA,SAAP;AAAiB;AAAvC,CAAd;AAAwD,IAAIC,YAAJ;AAAiBH,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA6B;AAACD,EAAAA,YAAY,EAAC,UAASE,CAAT,EAAW;AAACF,IAAAA,YAAY,GAACE,CAAb;AAAe;AAAzC,CAA7B,EAAwE,CAAxE;;AAEzE;IACMC,kB;AACL,gCAAc;AACb,SAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;;;SACCC,G;AAAA,iBAAIC,IAAJ,EAAUC,QAAV,EAAoB;AACnB,UAAI,EAAED,IAAI,YAAYP,YAAlB,CAAJ,EAAqC;AACpC,cAAM,IAAIS,KAAJ,CAAU,qDAAV,CAAN;AACA;;AAEDF,MAAAA,IAAI,CAACC,QAAL,GAAgBA,QAAhB;AAEA,WAAKJ,SAAL,CAAeM,GAAf,CAAmBH,IAAI,CAACI,GAAxB,EAA6BJ,IAA7B;AAEA,aAAO,KAAKH,SAAL,CAAeQ,GAAf,CAAmBL,IAAI,CAACI,GAAxB,CAAP;AACA;;;;AAED;AACD;AACA;AACA;AACA;;;SACCC,G;AAAA,iBAAID,GAAJ,EAAS;AACR,aAAO,KAAKP,SAAL,CAAeQ,GAAf,CAAmBD,GAAnB,CAAP;AACA;;;;AAED;AACD;AACA;AACA;AACA;;;SACCE,M;AAAA,sBAAS;AACR,aAAOC,KAAK,CAACC,IAAN,CAAW,KAAKX,SAAL,CAAeY,MAAf,EAAX,CAAP;AACA;;;;;;;;AAGK,IAAMjB,SAAS,GAAG,IAAII,kBAAJ,EAAlB","sourcesContent":["import { ImporterInfo } from './ImporterInfo';\n\n/** Container class which holds all of the importer details. */\nclass ImportersContainer {\n\tconstructor() {\n\t\tthis.importers = new Map();\n\t}\n\n\t/**\n\t * Adds an importer to the import collection. Adding it more than once will\n\t * overwrite the previous one.\n\t *\n\t * @param {ImporterInfo} info The information related to the importer.\n\t * @param {*} importer The class for the importer, will be undefined on the client.\n\t */\n\tadd(info, importer) {\n\t\tif (!(info instanceof ImporterInfo)) {\n\t\t\tthrow new Error('The importer must be a valid ImporterInfo instance.');\n\t\t}\n\n\t\tinfo.importer = importer;\n\n\t\tthis.importers.set(info.key, info);\n\n\t\treturn this.importers.get(info.key);\n\t}\n\n\t/**\n\t * Gets the importer information that is stored.\n\t *\n\t * @param {string} key The key of the importer.\n\t */\n\tget(key) {\n\t\treturn this.importers.get(key);\n\t}\n\n\t/**\n\t * Gets all of the importers in array format.\n\t *\n\t * @returns {ImporterInfo[]} The array of importer information.\n\t */\n\tgetAll() {\n\t\treturn Array.from(this.importers.values());\n\t}\n}\n\nexport const Importers = new ImportersContainer();\n"]},"sourceType":"module","hash":"bc8e748d8227169bccee856d5b68c27456469fe8"}
