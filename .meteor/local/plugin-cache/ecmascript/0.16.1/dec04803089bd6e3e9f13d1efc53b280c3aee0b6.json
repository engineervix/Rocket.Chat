{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/analytics/InterchangeableChart.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/analytics/InterchangeableChart.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/analytics/InterchangeableChart.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/analytics/InterchangeableChart.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/analytics/InterchangeableChart.js"}},"code":"const _excluded = [\"departmentId\", \"dateRange\", \"chartName\"];\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 1);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 2);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 0);\nlet React, useRef, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useRef(v) {\n    useRef = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  }\n\n}, 1);\nlet drawLineChart;\nmodule.link(\"../../../../app/livechat/client/lib/chartHandler\", {\n  drawLineChart(v) {\n    drawLineChart = v;\n  }\n\n}, 2);\nlet secondsToHHMMSS;\nmodule.link(\"../../../../app/utils/lib/timeConverter\", {\n  secondsToHHMMSS(v) {\n    secondsToHHMMSS = v;\n  }\n\n}, 3);\nlet useMethod;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 4);\nlet useToastMessageDispatch;\nmodule.link(\"../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 5);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 6);\nlet Chart;\nmodule.link(\"../realTimeMonitoring/charts/Chart\", {\n  default(v) {\n    Chart = v;\n  }\n\n}, 7);\n\nconst getChartTooltips = chartName => {\n  switch (chartName) {\n    case 'Avg_chat_duration':\n    case 'Avg_first_response_time':\n    case 'Best_first_response_time':\n    case 'Avg_response_time':\n    case 'Avg_reaction_time':\n      return {\n        callbacks: {\n          title(tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          },\n\n          label(tooltipItem, data) {\n            return secondsToHHMMSS(data.datasets[0].data[tooltipItem.index]);\n          }\n\n        }\n      };\n\n    default:\n      return {};\n  }\n};\n\nconst InterchangeableChart = _ref => {\n  let {\n    departmentId,\n    dateRange,\n    chartName\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const canvas = useRef();\n  const context = useRef();\n  const {\n    start,\n    end\n  } = dateRange;\n  const loadData = useMethod('livechat:getAnalyticsChartData');\n  const draw = useMutableCallback(async params => {\n    try {\n      var _params$daterange, _params$daterange2;\n\n      const tooltipCallbacks = getChartTooltips(chartName);\n\n      if (!(params !== null && params !== void 0 && (_params$daterange = params.daterange) !== null && _params$daterange !== void 0 && _params$daterange.from) || !(params !== null && params !== void 0 && (_params$daterange2 = params.daterange) !== null && _params$daterange2 !== void 0 && _params$daterange2.to)) {\n        return;\n      }\n\n      const result = await loadData(params);\n\n      if (!(result !== null && result !== void 0 && result.chartLabel) || !(result !== null && result !== void 0 && result.dataLabels) || !(result !== null && result !== void 0 && result.dataPoints)) {\n        throw new Error('Error! fetching chart data. Details: livechat:getAnalyticsChartData => Missing Data');\n      }\n\n      context.current = await drawLineChart(canvas.current, context.current, [result.chartLabel], result.dataLabels, [result.dataPoints], {\n        tooltipCallbacks\n      });\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  });\n  useEffect(() => {\n    draw(_objectSpread({\n      daterange: {\n        from: start,\n        to: end\n      },\n      chartOptions: {\n        name: chartName\n      }\n    }, departmentId && {\n      departmentId\n    }));\n  }, [chartName, departmentId, draw, end, start, t, loadData]);\n  return /*#__PURE__*/React.createElement(Chart, _extends({\n    border: \"none\",\n    pi: \"none\",\n    ref: canvas\n  }, props));\n};\n\nmodule.exportDefault(InterchangeableChart);","map":{"version":3,"sources":["client/views/omnichannel/analytics/InterchangeableChart.js"],"names":["_extends","module","link","default","v","_objectSpread","_objectWithoutProperties","useMutableCallback","React","useRef","useEffect","drawLineChart","secondsToHHMMSS","useMethod","useToastMessageDispatch","useTranslation","Chart","getChartTooltips","chartName","callbacks","title","tooltipItem","data","labels","index","label","datasets","InterchangeableChart","departmentId","dateRange","props","t","dispatchToastMessage","canvas","context","start","end","loadData","draw","params","tooltipCallbacks","daterange","from","to","result","chartLabel","dataLabels","dataPoints","Error","current","error","type","message","chartOptions","name","exportDefault"],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { useRef, useEffect } from 'react';\n\nimport { drawLineChart } from '../../../../app/livechat/client/lib/chartHandler';\nimport { secondsToHHMMSS } from '../../../../app/utils/lib/timeConverter';\nimport { useMethod } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport Chart from '../realTimeMonitoring/charts/Chart';\n\nconst getChartTooltips = (chartName) => {\n\tswitch (chartName) {\n\t\tcase 'Avg_chat_duration':\n\t\tcase 'Avg_first_response_time':\n\t\tcase 'Best_first_response_time':\n\t\tcase 'Avg_response_time':\n\t\tcase 'Avg_reaction_time':\n\t\t\treturn {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle(tooltipItem, data) {\n\t\t\t\t\t\treturn data.labels[tooltipItem[0].index];\n\t\t\t\t\t},\n\t\t\t\t\tlabel(tooltipItem, data) {\n\t\t\t\t\t\treturn secondsToHHMMSS(data.datasets[0].data[tooltipItem.index]);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n\nconst InterchangeableChart = ({ departmentId, dateRange, chartName, ...props }) => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst canvas = useRef();\n\tconst context = useRef();\n\n\tconst { start, end } = dateRange;\n\n\tconst loadData = useMethod('livechat:getAnalyticsChartData');\n\n\tconst draw = useMutableCallback(async (params) => {\n\t\ttry {\n\t\t\tconst tooltipCallbacks = getChartTooltips(chartName);\n\t\t\tif (!params?.daterange?.from || !params?.daterange?.to) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst result = await loadData(params);\n\t\t\tif (!result?.chartLabel || !result?.dataLabels || !result?.dataPoints) {\n\t\t\t\tthrow new Error('Error! fetching chart data. Details: livechat:getAnalyticsChartData => Missing Data');\n\t\t\t}\n\t\t\tcontext.current = await drawLineChart(canvas.current, context.current, [result.chartLabel], result.dataLabels, [result.dataPoints], {\n\t\t\t\ttooltipCallbacks,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tdraw({\n\t\t\tdaterange: {\n\t\t\t\tfrom: start,\n\t\t\t\tto: end,\n\t\t\t},\n\t\t\tchartOptions: { name: chartName },\n\t\t\t...(departmentId && { departmentId }),\n\t\t});\n\t}, [chartName, departmentId, draw, end, start, t, loadData]);\n\n\treturn <Chart border='none' pi='none' ref={canvas} {...props} />;\n};\n\nexport default InterchangeableChart;\n"]},"sourceType":"module","hash":"dec04803089bd6e3e9f13d1efc53b280c3aee0b6"}
