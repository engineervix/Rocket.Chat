{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/readMessages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/readMessages.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/readMessages.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/readMessages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/readMessages.js"}},"code":"var _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  readMessage: function () {\n    return readMessage;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Session;\nmodule.link(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 1);\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 2);\nvar RoomHistoryManager;\nmodule.link(\"./RoomHistoryManager\", {\n  RoomHistoryManager: function (v) {\n    RoomHistoryManager = v;\n  }\n}, 3);\nvar RoomManager;\nmodule.link(\"./RoomManager\", {\n  RoomManager: function (v) {\n    RoomManager = v;\n  }\n}, 4);\nvar ChatSubscription, ChatMessage;\nmodule.link(\"../../../models\", {\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  },\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  }\n}, 5);\nvar readMessage = new ( /*#__PURE__*/function (_Emitter) {\n  _inheritsLoose(_class, _Emitter);\n\n  function _class() {\n    var _this;\n\n    _this = _Emitter.call(this) || this;\n    _this.debug = false;\n\n    _this.enable();\n\n    return _this;\n  }\n\n  var _proto = _class.prototype;\n\n  _proto.read = function () {\n    function read() {\n      var rid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Session.get('openedRoom');\n\n      if (!this.enabled) {\n        this.log('readMessage -> readNow canceled by enabled: false');\n        return;\n      }\n\n      var subscription = ChatSubscription.findOne({\n        rid: rid\n      });\n\n      if (subscription == null) {\n        this.log('readMessage -> readNow canceled, no subscription found for rid:', rid);\n        return;\n      }\n\n      if (subscription.alert === false && subscription.unread === 0) {\n        this.log('readMessage -> readNow canceled, alert', subscription.alert, 'and unread', subscription.unread);\n        return;\n      }\n\n      var room = RoomManager.getOpenedRoomByRid(rid);\n\n      if (room == null) {\n        this.log('readMessage -> readNow canceled, no room found for typeName:', subscription.t + subscription.name);\n        return;\n      } // Only read messages if user saw the first unread message\n\n\n      var unreadMark = $('.message.first-unread');\n\n      if (unreadMark.length > 0) {\n        var position = unreadMark.position();\n        var visible = (position != null ? position.top : undefined) >= 0;\n\n        if (!visible && room.unreadSince.get()) {\n          this.log('readMessage -> readNow canceled, unread mark visible:', visible, 'unread since exists', room.unreadSince.get() != null);\n          return;\n        } // if unread mark is not visible and there is more more not loaded unread messages\n\n      } else if (RoomHistoryManager.getRoom(rid).unreadNotLoaded.get() > 0) {\n        return;\n      }\n\n      return this.readNow(rid);\n    }\n\n    return read;\n  }();\n\n  _proto.readNow = function () {\n    function readNow() {\n      var _this2 = this;\n\n      var rid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Session.get('openedRoom');\n\n      if (rid == null) {\n        this.log('readMessage -> readNow canceled, no rid informed');\n        return;\n      }\n\n      var subscription = ChatSubscription.findOne({\n        rid: rid\n      });\n\n      if (subscription == null) {\n        this.log('readMessage -> readNow canceled, no subscription found for rid:', rid);\n        return;\n      }\n\n      return Meteor.call('readMessages', rid, function () {\n        RoomHistoryManager.getRoom(rid).unreadNotLoaded.set(0);\n        return _this2.emit(rid);\n      });\n    }\n\n    return readNow;\n  }();\n\n  _proto.log = function () {\n    function log() {\n      var _console;\n\n      return this.debug && (_console = console).log.apply(_console, arguments);\n    }\n\n    return log;\n  }();\n\n  _proto.disable = function () {\n    function disable() {\n      this.enabled = false;\n    }\n\n    return disable;\n  }();\n\n  _proto.enable = function () {\n    function enable() {\n      this.enabled = document.hasFocus();\n    }\n\n    return enable;\n  }();\n\n  _proto.isEnable = function () {\n    function isEnable() {\n      return this.enabled === true;\n    }\n\n    return isEnable;\n  }();\n\n  _proto.refreshUnreadMark = function () {\n    function refreshUnreadMark(rid) {\n      if (rid == null) {\n        return;\n      }\n\n      var subscription = ChatSubscription.findOne({\n        rid: rid\n      }, {\n        reactive: false\n      });\n\n      if (subscription == null) {\n        return;\n      }\n\n      var room = RoomManager.openedRooms[subscription.t + subscription.name];\n\n      if (room == null) {\n        return;\n      }\n\n      if (!subscription.alert && subscription.unread === 0) {\n        $('.message.first-unread').removeClass('first-unread');\n        room.unreadSince.set(undefined);\n        return;\n      }\n\n      var lastReadRecord = ChatMessage.findOne({\n        rid: subscription.rid,\n        ts: {\n          $lt: subscription.ls\n        }\n      }, {\n        sort: {\n          ts: -1\n        }\n      });\n\n      var _RoomHistoryManager$g = RoomHistoryManager.getRoom(rid),\n          unreadNotLoaded = _RoomHistoryManager$g.unreadNotLoaded;\n\n      if (lastReadRecord == null && unreadNotLoaded.get() === 0) {\n        lastReadRecord = {\n          ts: new Date(0)\n        };\n      }\n\n      room.unreadSince.set((lastReadRecord || unreadNotLoaded.get() > 0) && subscription.ls);\n\n      if (!lastReadRecord) {\n        return;\n      }\n\n      var firstUnreadRecord = ChatMessage.findOne({\n        'rid': subscription.rid,\n        'ts': {\n          $gt: lastReadRecord.ts\n        },\n        'u._id': {\n          $ne: Meteor.userId()\n        }\n      }, {\n        sort: {\n          ts: 1\n        }\n      });\n\n      if (firstUnreadRecord) {\n        room.unreadFirstId = firstUnreadRecord._id;\n        $('.message.first-unread').removeClass('first-unread');\n        $(\".message#\" + firstUnreadRecord._id).addClass('first-unread');\n      }\n    }\n\n    return refreshUnreadMark;\n  }();\n\n  return _class;\n}(Emitter))();\nMeteor.startup(function () {\n  $(window).on('blur', function () {\n    return readMessage.disable();\n  }).on('focus', function () {\n    readMessage.enable();\n    readMessage.read();\n  }).on('touchend', function () {\n    readMessage.enable();\n  }).on('keyup', function (e) {\n    var key = e.which;\n\n    if (key === 27) {\n      // ESCAPE KEY\n      var rid = Session.get('openedRoom');\n\n      if (!rid) {\n        return;\n      }\n\n      readMessage.readNow(rid);\n      readMessage.refreshUnreadMark(rid);\n    }\n  });\n});","map":{"version":3,"sources":["app/ui-utils/client/lib/readMessages.js"],"names":["_inheritsLoose","module","link","default","v","export","readMessage","Meteor","Session","Emitter","RoomHistoryManager","RoomManager","ChatSubscription","ChatMessage","debug","enable","read","rid","get","enabled","log","subscription","findOne","alert","unread","room","getOpenedRoomByRid","t","name","unreadMark","$","length","position","visible","top","undefined","unreadSince","getRoom","unreadNotLoaded","readNow","call","set","emit","console","disable","document","hasFocus","isEnable","refreshUnreadMark","reactive","openedRooms","removeClass","lastReadRecord","ts","$lt","ls","sort","Date","firstUnreadRecord","$gt","$ne","userId","unreadFirstId","_id","addClass","startup","window","on","e","key","which"],"mappings":"AAAA,IAAIA,cAAJ;;AAAmBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,IAAAA,cAAc,GAACI,CAAf;AAAiB;AAAtC,CAAnD,EAA2F,CAA3F;AAAnBH,MAAM,CAACI,MAAP,CAAc;AAACC,EAAAA,WAAW,EAAC,YAAU;AAAC,WAAOA,WAAP;AAAmB;AAA3C,CAAd;AAA4D,IAAIC,MAAJ;AAAWN,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACK,EAAAA,MAAM,EAAC,UAASH,CAAT,EAAW;AAACG,IAAAA,MAAM,GAACH,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAII,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACM,EAAAA,OAAO,EAAC,UAASJ,CAAT,EAAW;AAACI,IAAAA,OAAO,GAACJ,CAAR;AAAU;AAA/B,CAA7B,EAA8D,CAA9D;AAAiE,IAAIK,OAAJ;AAAYR,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACO,EAAAA,OAAO,EAAC,UAASL,CAAT,EAAW;AAACK,IAAAA,OAAO,GAACL,CAAR;AAAU;AAA/B,CAAnC,EAAoE,CAApE;AAAuE,IAAIM,kBAAJ;AAAuBT,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACQ,EAAAA,kBAAkB,EAAC,UAASN,CAAT,EAAW;AAACM,IAAAA,kBAAkB,GAACN,CAAnB;AAAqB;AAArD,CAAnC,EAA0F,CAA1F;AAA6F,IAAIO,WAAJ;AAAgBV,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACS,EAAAA,WAAW,EAAC,UAASP,CAAT,EAAW;AAACO,IAAAA,WAAW,GAACP,CAAZ;AAAc;AAAvC,CAA5B,EAAqE,CAArE;AAAwE,IAAIQ,gBAAJ,EAAqBC,WAArB;AAAiCZ,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACU,EAAAA,gBAAgB,EAAC,UAASR,CAAT,EAAW;AAACQ,IAAAA,gBAAgB,GAACR,CAAjB;AAAmB,GAAjD;AAAkDS,EAAAA,WAAW,EAAC,UAAST,CAAT,EAAW;AAACS,IAAAA,WAAW,GAACT,CAAZ;AAAc;AAAxF,CAA9B,EAAwH,CAAxH;AAoB3gB,IAAME,WAAW,GAAG;AAAA;;AAC1B,oBAAc;AAAA;;AACb;AACA,UAAKQ,KAAL,GAAa,KAAb;;AACA,UAAKC,MAAL;;AAHa;AAIb;;AALyB;;AAAA,SAO1BC,IAP0B;AAO1B,oBAAsC;AAAA,UAAjCC,GAAiC,uEAA3BT,OAAO,CAACU,GAAR,CAAY,YAAZ,CAA2B;;AACrC,UAAI,CAAC,KAAKC,OAAV,EAAmB;AAClB,aAAKC,GAAL,CAAS,mDAAT;AACA;AACA;;AAED,UAAMC,YAAY,GAAGT,gBAAgB,CAACU,OAAjB,CAAyB;AAAEL,QAAAA,GAAG,EAAHA;AAAF,OAAzB,CAArB;;AACA,UAAII,YAAY,IAAI,IAApB,EAA0B;AACzB,aAAKD,GAAL,CAAS,iEAAT,EAA4EH,GAA5E;AACA;AACA;;AAED,UAAII,YAAY,CAACE,KAAb,KAAuB,KAAvB,IAAgCF,YAAY,CAACG,MAAb,KAAwB,CAA5D,EAA+D;AAC9D,aAAKJ,GAAL,CAAS,wCAAT,EAAmDC,YAAY,CAACE,KAAhE,EAAuE,YAAvE,EAAqFF,YAAY,CAACG,MAAlG;AACA;AACA;;AAED,UAAMC,IAAI,GAAGd,WAAW,CAACe,kBAAZ,CAA+BT,GAA/B,CAAb;;AACA,UAAIQ,IAAI,IAAI,IAAZ,EAAkB;AACjB,aAAKL,GAAL,CAAS,8DAAT,EAAyEC,YAAY,CAACM,CAAb,GAAiBN,YAAY,CAACO,IAAvG;AACA;AACA,OArBoC,CAuBrC;;;AACA,UAAMC,UAAU,GAAGC,CAAC,CAAC,uBAAD,CAApB;;AACA,UAAID,UAAU,CAACE,MAAX,GAAoB,CAAxB,EAA2B;AAC1B,YAAMC,QAAQ,GAAGH,UAAU,CAACG,QAAX,EAAjB;AACA,YAAMC,OAAO,GAAG,CAACD,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACE,GAA5B,GAAkCC,SAAnC,KAAiD,CAAjE;;AACA,YAAI,CAACF,OAAD,IAAYR,IAAI,CAACW,WAAL,CAAiBlB,GAAjB,EAAhB,EAAwC;AACvC,eAAKE,GAAL,CAAS,uDAAT,EAAkEa,OAAlE,EAA2E,qBAA3E,EAAkGR,IAAI,CAACW,WAAL,CAAiBlB,GAAjB,MAA0B,IAA5H;AACA;AACA,SANyB,CAO1B;;AACA,OARD,MAQO,IAAIR,kBAAkB,CAAC2B,OAAnB,CAA2BpB,GAA3B,EAAgCqB,eAAhC,CAAgDpB,GAAhD,KAAwD,CAA5D,EAA+D;AACrE;AACA;;AAED,aAAO,KAAKqB,OAAL,CAAatB,GAAb,CAAP;AACA;;AA7CyB;AAAA;;AAAA,SA+C1BsB,OA/C0B;AA+C1B,uBAAyC;AAAA;;AAAA,UAAjCtB,GAAiC,uEAA3BT,OAAO,CAACU,GAAR,CAAY,YAAZ,CAA2B;;AACxC,UAAID,GAAG,IAAI,IAAX,EAAiB;AAChB,aAAKG,GAAL,CAAS,kDAAT;AACA;AACA;;AAED,UAAMC,YAAY,GAAGT,gBAAgB,CAACU,OAAjB,CAAyB;AAAEL,QAAAA,GAAG,EAAHA;AAAF,OAAzB,CAArB;;AACA,UAAII,YAAY,IAAI,IAApB,EAA0B;AACzB,aAAKD,GAAL,CAAS,iEAAT,EAA4EH,GAA5E;AACA;AACA;;AAED,aAAOV,MAAM,CAACiC,IAAP,CAAY,cAAZ,EAA4BvB,GAA5B,EAAiC,YAAM;AAC7CP,QAAAA,kBAAkB,CAAC2B,OAAnB,CAA2BpB,GAA3B,EAAgCqB,eAAhC,CAAgDG,GAAhD,CAAoD,CAApD;AACA,eAAO,MAAI,CAACC,IAAL,CAAUzB,GAAV,CAAP;AACA,OAHM,CAAP;AAIA;;AA/DyB;AAAA;;AAAA,SAiE1BG,GAjE0B;AAiE1B,mBAAa;AAAA;;AACZ,aAAO,KAAKN,KAAL,IAAc,YAAA6B,OAAO,EAACvB,GAAR,2BAArB;AACA;;AAnEyB;AAAA;;AAAA,SAqE1BwB,OArE0B;AAqE1B,uBAAU;AACT,WAAKzB,OAAL,GAAe,KAAf;AACA;;AAvEyB;AAAA;;AAAA,SAyE1BJ,MAzE0B;AAyE1B,sBAAS;AACR,WAAKI,OAAL,GAAe0B,QAAQ,CAACC,QAAT,EAAf;AACA;;AA3EyB;AAAA;;AAAA,SA6E1BC,QA7E0B;AA6E1B,wBAAW;AACV,aAAO,KAAK5B,OAAL,KAAiB,IAAxB;AACA;;AA/EyB;AAAA;;AAAA,SAiF1B6B,iBAjF0B;AAiF1B,+BAAkB/B,GAAlB,EAAuB;AACtB,UAAIA,GAAG,IAAI,IAAX,EAAiB;AAChB;AACA;;AAED,UAAMI,YAAY,GAAGT,gBAAgB,CAACU,OAAjB,CAAyB;AAAEL,QAAAA,GAAG,EAAHA;AAAF,OAAzB,EAAkC;AAAEgC,QAAAA,QAAQ,EAAE;AAAZ,OAAlC,CAArB;;AACA,UAAI5B,YAAY,IAAI,IAApB,EAA0B;AACzB;AACA;;AAED,UAAMI,IAAI,GAAGd,WAAW,CAACuC,WAAZ,CAAwB7B,YAAY,CAACM,CAAb,GAAiBN,YAAY,CAACO,IAAtD,CAAb;;AACA,UAAIH,IAAI,IAAI,IAAZ,EAAkB;AACjB;AACA;;AAED,UAAI,CAACJ,YAAY,CAACE,KAAd,IAAuBF,YAAY,CAACG,MAAb,KAAwB,CAAnD,EAAsD;AACrDM,QAAAA,CAAC,CAAC,uBAAD,CAAD,CAA2BqB,WAA3B,CAAuC,cAAvC;AACA1B,QAAAA,IAAI,CAACW,WAAL,CAAiBK,GAAjB,CAAqBN,SAArB;AACA;AACA;;AAED,UAAIiB,cAAc,GAAGvC,WAAW,CAACS,OAAZ,CACpB;AACCL,QAAAA,GAAG,EAAEI,YAAY,CAACJ,GADnB;AAECoC,QAAAA,EAAE,EAAE;AACHC,UAAAA,GAAG,EAAEjC,YAAY,CAACkC;AADf;AAFL,OADoB,EAOpB;AACCC,QAAAA,IAAI,EAAE;AACLH,UAAAA,EAAE,EAAE,CAAC;AADA;AADP,OAPoB,CAArB;;AAaA,kCAA4B3C,kBAAkB,CAAC2B,OAAnB,CAA2BpB,GAA3B,CAA5B;AAAA,UAAQqB,eAAR,yBAAQA,eAAR;;AAEA,UAAIc,cAAc,IAAI,IAAlB,IAA0Bd,eAAe,CAACpB,GAAhB,OAA0B,CAAxD,EAA2D;AAC1DkC,QAAAA,cAAc,GAAG;AAAEC,UAAAA,EAAE,EAAE,IAAII,IAAJ,CAAS,CAAT;AAAN,SAAjB;AACA;;AAEDhC,MAAAA,IAAI,CAACW,WAAL,CAAiBK,GAAjB,CAAqB,CAACW,cAAc,IAAId,eAAe,CAACpB,GAAhB,KAAwB,CAA3C,KAAiDG,YAAY,CAACkC,EAAnF;;AAEA,UAAI,CAACH,cAAL,EAAqB;AACpB;AACA;;AAED,UAAMM,iBAAiB,GAAG7C,WAAW,CAACS,OAAZ,CACzB;AACC,eAAOD,YAAY,CAACJ,GADrB;AAEC,cAAM;AACL0C,UAAAA,GAAG,EAAEP,cAAc,CAACC;AADf,SAFP;AAKC,iBAAS;AACRO,UAAAA,GAAG,EAAErD,MAAM,CAACsD,MAAP;AADG;AALV,OADyB,EAUzB;AACCL,QAAAA,IAAI,EAAE;AACLH,UAAAA,EAAE,EAAE;AADC;AADP,OAVyB,CAA1B;;AAiBA,UAAIK,iBAAJ,EAAuB;AACtBjC,QAAAA,IAAI,CAACqC,aAAL,GAAqBJ,iBAAiB,CAACK,GAAvC;AACAjC,QAAAA,CAAC,CAAC,uBAAD,CAAD,CAA2BqB,WAA3B,CAAuC,cAAvC;AACArB,QAAAA,CAAC,eAAa4B,iBAAiB,CAACK,GAA/B,CAAD,CAAuCC,QAAvC,CAAgD,cAAhD;AACA;AACD;;AArJyB;AAAA;;AAAA;AAAA,EAAmBvD,OAAnB,IAApB;AAwJPF,MAAM,CAAC0D,OAAP,CAAe,YAAY;AAC1BnC,EAAAA,CAAC,CAACoC,MAAD,CAAD,CACEC,EADF,CACK,MADL,EACa;AAAA,WAAM7D,WAAW,CAACsC,OAAZ,EAAN;AAAA,GADb,EAEEuB,EAFF,CAEK,OAFL,EAEc,YAAM;AAClB7D,IAAAA,WAAW,CAACS,MAAZ;AACAT,IAAAA,WAAW,CAACU,IAAZ;AACA,GALF,EAMEmD,EANF,CAMK,UANL,EAMiB,YAAM;AACrB7D,IAAAA,WAAW,CAACS,MAAZ;AACA,GARF,EASEoD,EATF,CASK,OATL,EASc,UAACC,CAAD,EAAO;AACnB,QAAMC,GAAG,GAAGD,CAAC,CAACE,KAAd;;AACA,QAAID,GAAG,KAAK,EAAZ,EAAgB;AACf;AACA,UAAMpD,GAAG,GAAGT,OAAO,CAACU,GAAR,CAAY,YAAZ,CAAZ;;AACA,UAAI,CAACD,GAAL,EAAU;AACT;AACA;;AACDX,MAAAA,WAAW,CAACiC,OAAZ,CAAoBtB,GAApB;AACAX,MAAAA,WAAW,CAAC0C,iBAAZ,CAA8B/B,GAA9B;AACA;AACD,GApBF;AAqBA,CAtBD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport { Emitter } from '@rocket.chat/emitter';\n\nimport { RoomHistoryManager } from './RoomHistoryManager';\nimport { RoomManager } from './RoomManager';\nimport { ChatSubscription, ChatMessage } from '../../../models';\n/* DEFINITIONS\n- If window loses focus user needs to scroll or click/touch some place\n- On hit ESC enable read, force read of current room and remove unread mark\n- When user change room disable read until user interaction\n- Only read if mark of *first-unread* is visible for user or if flag *force* was passed\n- Always read the opened room\n- The default method *read* has a delay of 2000ms to prevent multiple reads and to user be able to see the mark\n*/\n\n// Meteor.startup ->\n// window.addEventListener 'focus', ->\n// readMessage.refreshUnreadMark(undefined, true)\n\nexport const readMessage = new (class extends Emitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.debug = false;\n\t\tthis.enable();\n\t}\n\n\tread(rid = Session.get('openedRoom')) {\n\t\tif (!this.enabled) {\n\t\t\tthis.log('readMessage -> readNow canceled by enabled: false');\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription == null) {\n\t\t\tthis.log('readMessage -> readNow canceled, no subscription found for rid:', rid);\n\t\t\treturn;\n\t\t}\n\n\t\tif (subscription.alert === false && subscription.unread === 0) {\n\t\t\tthis.log('readMessage -> readNow canceled, alert', subscription.alert, 'and unread', subscription.unread);\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = RoomManager.getOpenedRoomByRid(rid);\n\t\tif (room == null) {\n\t\t\tthis.log('readMessage -> readNow canceled, no room found for typeName:', subscription.t + subscription.name);\n\t\t\treturn;\n\t\t}\n\n\t\t// Only read messages if user saw the first unread message\n\t\tconst unreadMark = $('.message.first-unread');\n\t\tif (unreadMark.length > 0) {\n\t\t\tconst position = unreadMark.position();\n\t\t\tconst visible = (position != null ? position.top : undefined) >= 0;\n\t\t\tif (!visible && room.unreadSince.get()) {\n\t\t\t\tthis.log('readMessage -> readNow canceled, unread mark visible:', visible, 'unread since exists', room.unreadSince.get() != null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// if unread mark is not visible and there is more more not loaded unread messages\n\t\t} else if (RoomHistoryManager.getRoom(rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.readNow(rid);\n\t}\n\n\treadNow(rid = Session.get('openedRoom')) {\n\t\tif (rid == null) {\n\t\t\tthis.log('readMessage -> readNow canceled, no rid informed');\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription == null) {\n\t\t\tthis.log('readMessage -> readNow canceled, no subscription found for rid:', rid);\n\t\t\treturn;\n\t\t}\n\n\t\treturn Meteor.call('readMessages', rid, () => {\n\t\t\tRoomHistoryManager.getRoom(rid).unreadNotLoaded.set(0);\n\t\t\treturn this.emit(rid);\n\t\t});\n\t}\n\n\tlog(...args) {\n\t\treturn this.debug && console.log(...args);\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\tenable() {\n\t\tthis.enabled = document.hasFocus();\n\t}\n\n\tisEnable() {\n\t\treturn this.enabled === true;\n\t}\n\n\trefreshUnreadMark(rid) {\n\t\tif (rid == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscription = ChatSubscription.findOne({ rid }, { reactive: false });\n\t\tif (subscription == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = RoomManager.openedRooms[subscription.t + subscription.name];\n\t\tif (room == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!subscription.alert && subscription.unread === 0) {\n\t\t\t$('.message.first-unread').removeClass('first-unread');\n\t\t\troom.unreadSince.set(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tlet lastReadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\trid: subscription.rid,\n\t\t\t\tts: {\n\t\t\t\t\t$lt: subscription.ls,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: -1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tconst { unreadNotLoaded } = RoomHistoryManager.getRoom(rid);\n\n\t\tif (lastReadRecord == null && unreadNotLoaded.get() === 0) {\n\t\t\tlastReadRecord = { ts: new Date(0) };\n\t\t}\n\n\t\troom.unreadSince.set((lastReadRecord || unreadNotLoaded.get() > 0) && subscription.ls);\n\n\t\tif (!lastReadRecord) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: lastReadRecord.ts,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId(),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (firstUnreadRecord) {\n\t\t\troom.unreadFirstId = firstUnreadRecord._id;\n\t\t\t$('.message.first-unread').removeClass('first-unread');\n\t\t\t$(`.message#${firstUnreadRecord._id}`).addClass('first-unread');\n\t\t}\n\t}\n})();\n\nMeteor.startup(function () {\n\t$(window)\n\t\t.on('blur', () => readMessage.disable())\n\t\t.on('focus', () => {\n\t\t\treadMessage.enable();\n\t\t\treadMessage.read();\n\t\t})\n\t\t.on('touchend', () => {\n\t\t\treadMessage.enable();\n\t\t})\n\t\t.on('keyup', (e) => {\n\t\t\tconst key = e.which;\n\t\t\tif (key === 27) {\n\t\t\t\t// ESCAPE KEY\n\t\t\t\tconst rid = Session.get('openedRoom');\n\t\t\t\tif (!rid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treadMessage.readNow(rid);\n\t\t\t\treadMessage.refreshUnreadMark(rid);\n\t\t\t}\n\t\t});\n});\n"]},"sourceType":"module","hash":"ad3551cf67fc5497169bf79ae984cf3b8cf09bb7"}
