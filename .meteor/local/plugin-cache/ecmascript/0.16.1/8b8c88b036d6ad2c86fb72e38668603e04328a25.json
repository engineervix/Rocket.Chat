{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/settings/inputs/MultiSelectSettingInput.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/settings/inputs/MultiSelectSettingInput.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/settings/inputs/MultiSelectSettingInput.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/settings/inputs/MultiSelectSettingInput.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/settings/inputs/MultiSelectSettingInput.js"}},"code":"let Field, Flex, Box, MultiSelectFiltered, MultiSelect;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Field(v) {\n    Field = v;\n  },\n\n  Flex(v) {\n    Flex = v;\n  },\n\n  Box(v) {\n    Box = v;\n  },\n\n  MultiSelectFiltered(v) {\n    MultiSelectFiltered = v;\n  },\n\n  MultiSelect(v) {\n    MultiSelect = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet useTranslation;\nmodule.link(\"../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 2);\nlet ResetSettingButton;\nmodule.link(\"../ResetSettingButton\", {\n  default(v) {\n    ResetSettingButton = v;\n  }\n\n}, 3);\n\nfunction MultiSelectSettingInput(_ref) {\n  let {\n    _id,\n    label,\n    value = [],\n    placeholder,\n    readonly,\n    disabled,\n    values = [],\n    hasResetButton,\n    onChangeValue,\n    onResetButtonClick,\n    autocomplete\n  } = _ref;\n  const t = useTranslation();\n\n  const handleChange = value => {\n    onChangeValue && onChangeValue(value); // onChangeValue && onChangeValue([...event.currentTarget.querySelectorAll('option')].filter((e) => e.selected).map((el) => el.value));\n  };\n\n  const Component = autocomplete ? MultiSelectFiltered : MultiSelect;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex.Container, null, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Field.Label, {\n    htmlFor: _id,\n    title: _id\n  }, label), hasResetButton && /*#__PURE__*/React.createElement(ResetSettingButton, {\n    \"data-qa-reset-setting-id\": _id,\n    onClick: onResetButtonClick\n  }))), /*#__PURE__*/React.createElement(Component, {\n    \"data-qa-setting-id\": _id,\n    id: _id,\n    value: value,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: readonly // autoComplete={autocomplete === false ? 'off' : undefined}\n    ,\n    onChange: handleChange,\n    options: values.map(_ref2 => {\n      let {\n        key,\n        i18nLabel\n      } = _ref2;\n      return [key, t(i18nLabel)];\n    })\n  }));\n}\n\nmodule.exportDefault(MultiSelectSettingInput);","map":{"version":3,"sources":["client/views/admin/settings/inputs/MultiSelectSettingInput.js"],"names":["Field","Flex","Box","MultiSelectFiltered","MultiSelect","module","link","v","React","default","useTranslation","ResetSettingButton","MultiSelectSettingInput","_id","label","value","placeholder","readonly","disabled","values","hasResetButton","onChangeValue","onResetButtonClick","autocomplete","t","handleChange","Component","map","key","i18nLabel","exportDefault"],"mappings":"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","sourcesContent":["import { Field, Flex, Box, MultiSelectFiltered, MultiSelect } from '@rocket.chat/fuselage';\nimport React from 'react';\n\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport ResetSettingButton from '../ResetSettingButton';\n\nfunction MultiSelectSettingInput({\n\t_id,\n\tlabel,\n\tvalue = [],\n\tplaceholder,\n\treadonly,\n\tdisabled,\n\tvalues = [],\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n\tautocomplete,\n}) {\n\tconst t = useTranslation();\n\n\tconst handleChange = (value) => {\n\t\tonChangeValue && onChangeValue(value);\n\t\t// onChangeValue && onChangeValue([...event.currentTarget.querySelectorAll('option')].filter((e) => e.selected).map((el) => el.value));\n\t};\n\tconst Component = autocomplete ? MultiSelectFiltered : MultiSelect;\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<Field.Label htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Field.Label>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<Component\n\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\tid={_id}\n\t\t\t\tvalue={value}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tdisabled={disabled}\n\t\t\t\treadOnly={readonly}\n\t\t\t\t// autoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\tonChange={handleChange}\n\t\t\t\toptions={values.map(({ key, i18nLabel }) => [key, t(i18nLabel)])}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default MultiSelectSettingInput;\n"]},"sourceType":"module","hash":"8b8c88b036d6ad2c86fb72e38668603e04328a25"}
