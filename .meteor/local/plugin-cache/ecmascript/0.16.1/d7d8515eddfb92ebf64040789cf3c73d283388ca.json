{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/chatMessages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui/client/lib/chatMessages.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/chatMessages.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/chatMessages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui/client/lib/chatMessages.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nmodule.export({\n  ChatMessages: function () {\n    return ChatMessages;\n  }\n});\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 3);\nvar FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 4);\nvar Session;\nmodule.link(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 5);\nvar TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n: function (v) {\n    TAPi18n = v;\n  }\n}, 6);\nvar escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML: function (v) {\n    escapeHTML = v;\n  }\n}, 7);\nvar KonchatNotification;\nmodule.link(\"./notification\", {\n  KonchatNotification: function (v) {\n    KonchatNotification = v;\n  }\n}, 8);\nvar UserAction, USER_ACTIVITIES;\nmodule.link(\"../index\", {\n  UserAction: function (v) {\n    UserAction = v;\n  },\n  USER_ACTIVITIES: function (v) {\n    USER_ACTIVITIES = v;\n  }\n}, 9);\nvar fileUpload;\nmodule.link(\"./fileUpload\", {\n  fileUpload: function (v) {\n    fileUpload = v;\n  }\n}, 10);\nvar t, slashCommands, APIClient;\nmodule.link(\"../../../utils/client\", {\n  t: function (v) {\n    t = v;\n  },\n  slashCommands: function (v) {\n    slashCommands = v;\n  },\n  APIClient: function (v) {\n    APIClient = v;\n  }\n}, 11);\nvar messageProperties, MessageTypes, readMessage;\nmodule.link(\"../../../ui-utils/client\", {\n  messageProperties: function (v) {\n    messageProperties = v;\n  },\n  MessageTypes: function (v) {\n    MessageTypes = v;\n  },\n  readMessage: function (v) {\n    readMessage = v;\n  }\n}, 12);\nvar settings;\nmodule.link(\"../../../settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 13);\nvar callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks: function (v) {\n    callbacks = v;\n  }\n}, 14);\nvar hasAtLeastOnePermission;\nmodule.link(\"../../../authorization/client\", {\n  hasAtLeastOnePermission: function (v) {\n    hasAtLeastOnePermission = v;\n  }\n}, 15);\nvar Messages, Rooms, ChatMessage, ChatSubscription;\nmodule.link(\"../../../models/client\", {\n  Messages: function (v) {\n    Messages = v;\n  },\n  Rooms: function (v) {\n    Rooms = v;\n  },\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  }\n}, 16);\nvar emoji;\nmodule.link(\"../../../emoji/client\", {\n  emoji: function (v) {\n    emoji = v;\n  }\n}, 17);\nvar generateTriggerId;\nmodule.link(\"../../../ui-message/client/ActionManager\", {\n  generateTriggerId: function (v) {\n    generateTriggerId = v;\n  }\n}, 18);\nvar imperativeModal;\nmodule.link(\"../../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 19);\nvar GenericModal;\nmodule.link(\"../../../../client/components/GenericModal\", {\n  \"default\": function (v) {\n    GenericModal = v;\n  }\n}, 20);\nvar keyCodes;\nmodule.link(\"../../../../client/lib/utils/keyCodes\", {\n  keyCodes: function (v) {\n    keyCodes = v;\n  }\n}, 21);\nvar prependReplies;\nmodule.link(\"../../../../client/lib/utils/prependReplies\", {\n  prependReplies: function (v) {\n    prependReplies = v;\n  }\n}, 22);\nvar callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 23);\nvar handleError;\nmodule.link(\"../../../../client/lib/utils/handleError\", {\n  handleError: function (v) {\n    handleError = v;\n  }\n}, 24);\nvar dispatchToastMessage;\nmodule.link(\"../../../../client/lib/toast\", {\n  dispatchToastMessage: function (v) {\n    dispatchToastMessage = v;\n  }\n}, 25);\nvar onClientBeforeSendMessage;\nmodule.link(\"../../../../client/lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage: function (v) {\n    onClientBeforeSendMessage = v;\n  }\n}, 26);\nvar messageBoxState = {\n  saveValue: _.debounce(function (_ref, value) {\n    var rid = _ref.rid,\n        tmid = _ref.tmid;\n    var key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n    value ? Meteor._localStorage.setItem(key, value) : Meteor._localStorage.removeItem(key);\n  }, 1000),\n  restoreValue: function (_ref2) {\n    var rid = _ref2.rid,\n        tmid = _ref2.tmid;\n    var key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n    return Meteor._localStorage.getItem(key);\n  },\n  restore: function (_ref3, input) {\n    var rid = _ref3.rid,\n        tmid = _ref3.tmid;\n    var value = messageBoxState.restoreValue({\n      rid: rid,\n      tmid: tmid\n    });\n\n    if (typeof value === 'string') {\n      messageBoxState.set(input, value);\n    }\n  },\n  save: function (_ref4, input) {\n    var rid = _ref4.rid,\n        tmid = _ref4.tmid;\n    messageBoxState.saveValue({\n      rid: rid,\n      tmid: tmid\n    }, input.value);\n  },\n  set: function (input, value) {\n    input.value = value;\n    $(input).trigger('change').trigger('input');\n  },\n  purgeAll: function () {\n    Object.keys(Meteor._localStorage).filter(function (key) {\n      return key.indexOf('messagebox_') === 0;\n    }).forEach(function (key) {\n      return Meteor._localStorage.removeItem(key);\n    });\n  }\n};\ncallbacks.add('afterLogoutCleanUp', messageBoxState.purgeAll, callbacks.priority.MEDIUM, 'chatMessages-after-logout-cleanup');\n\nvar ChatMessages = /*#__PURE__*/function () {\n  function ChatMessages() {\n    var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ChatMessage;\n    this.editing = {};\n    this.records = {};\n    this.collection = collection;\n  }\n\n  var _proto = ChatMessages.prototype;\n\n  _proto.initializeWrapper = function () {\n    function initializeWrapper(wrapper) {\n      this.wrapper = wrapper;\n    }\n\n    return initializeWrapper;\n  }();\n\n  _proto.initializeInput = function () {\n    function initializeInput(input, _ref5) {\n      var rid = _ref5.rid,\n          tmid = _ref5.tmid;\n      this.input = input;\n      this.$input = $(this.input);\n\n      if (!input || !rid) {\n        return;\n      }\n\n      messageBoxState.restore({\n        rid: rid,\n        tmid: tmid\n      }, input);\n      this.restoreReplies();\n      this.requestInputFocus();\n    }\n\n    return initializeInput;\n  }();\n\n  _proto.restoreReplies = function () {\n    function restoreReplies() {\n      var mid, message;\n      return _regeneratorRuntime.async(function () {\n        function restoreReplies$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                mid = FlowRouter.getQueryParam('reply');\n\n                if (mid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.t0 = Messages.findOne(mid);\n\n                if (_context.t0) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('getSingleMessage', mid));\n\n              case 7:\n                _context.t0 = _context.sent;\n\n              case 8:\n                message = _context.t0;\n\n                if (message) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 11:\n                this.$input.data('reply', [message]).trigger('dataChange');\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return restoreReplies$;\n      }(), null, this, null, Promise);\n    }\n\n    return restoreReplies;\n  }();\n\n  _proto.requestInputFocus = function () {\n    function requestInputFocus() {\n      var _this = this;\n\n      setTimeout(function () {\n        if (_this.input && window.matchMedia('screen and (min-device-width: 500px)').matches) {\n          _this.input.focus();\n        }\n      }, 200);\n    }\n\n    return requestInputFocus;\n  }();\n\n  _proto.recordInputAsDraft = function () {\n    function recordInputAsDraft() {\n      var message = this.collection.findOne(this.editing.id);\n      var record = this.records[this.editing.id] || {};\n      var draft = this.input.value;\n\n      if (draft === message.msg) {\n        this.clearCurrentDraft();\n        return;\n      }\n\n      record.draft = draft;\n      this.records[this.editing.id] = record;\n    }\n\n    return recordInputAsDraft;\n  }();\n\n  _proto.clearCurrentDraft = function () {\n    function clearCurrentDraft() {\n      var hasValue = this.records[this.editing.id];\n      delete this.records[this.editing.id];\n      return !!hasValue;\n    }\n\n    return clearCurrentDraft;\n  }();\n\n  _proto.resetToDraft = function () {\n    function resetToDraft(id) {\n      var message = this.collection.findOne(id);\n      var oldValue = this.input.value;\n      messageBoxState.set(this.input, message.msg);\n      return oldValue !== message.msg;\n    }\n\n    return resetToDraft;\n  }();\n\n  _proto.toPrevMessage = function () {\n    function toPrevMessage() {\n      var element = this.editing.element;\n\n      if (!element) {\n        var messages = Array.from(this.wrapper.querySelectorAll('.own:not(.system)'));\n        var message = messages.pop();\n        return message && this.edit(message, false);\n      }\n\n      for (var previous = element.previousElementSibling; previous; previous = previous.previousElementSibling) {\n        if (previous.matches('.own:not(.system)')) {\n          return this.edit(previous, false);\n        }\n      }\n\n      this.clearEditing();\n    }\n\n    return toPrevMessage;\n  }();\n\n  _proto.toNextMessage = function () {\n    function toNextMessage() {\n      var element = this.editing.element;\n\n      if (element) {\n        var next;\n\n        for (next = element.nextElementSibling; next; next = next.nextElementSibling) {\n          if (next.matches('.own:not(.system)')) {\n            break;\n          }\n        }\n\n        next ? this.edit(next, true) : this.clearEditing();\n      } else {\n        this.clearEditing();\n      }\n    }\n\n    return toNextMessage;\n  }();\n\n  _proto.edit = function () {\n    function edit(element, isEditingTheNextOne) {\n      var message = this.collection.findOne(element.dataset.id);\n      var hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n      var editAllowed = settings.get('Message_AllowEditing');\n      var editOwn = message && message.u && message.u._id === Meteor.userId();\n\n      if (!hasPermission && (!editAllowed || !editOwn)) {\n        return;\n      }\n\n      if (element.classList.contains('system')) {\n        return;\n      }\n\n      var blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n\n      if (blockEditInMinutes && blockEditInMinutes !== 0) {\n        var currentTsDiff;\n        var msgTs;\n\n        if (message.ts) {\n          msgTs = moment(message.ts);\n        }\n\n        if (msgTs) {\n          currentTsDiff = moment().diff(msgTs, 'minutes');\n        }\n\n        if (currentTsDiff > blockEditInMinutes) {\n          return;\n        }\n      }\n\n      var draft = this.records[message._id];\n      var msg = draft && draft.draft;\n      msg = msg || message.msg;\n      this.clearEditing();\n      this.editing.element = element;\n      this.editing.id = message._id;\n      this.input.parentElement.classList.add('editing');\n      element.classList.add('editing');\n\n      if (message.attachments && message.attachments[0].description) {\n        messageBoxState.set(this.input, message.attachments[0].description);\n      } else {\n        messageBoxState.set(this.input, msg);\n      }\n\n      var cursorPosition = isEditingTheNextOne ? 0 : -1;\n      this.input.focus();\n      this.$input.setCursorPosition(cursorPosition);\n    }\n\n    return edit;\n  }();\n\n  _proto.clearEditing = function () {\n    function clearEditing() {\n      if (!this.editing.element) {\n        this.editing.saved = this.input.value;\n        this.editing.savedCursor = this.input.selectionEnd;\n        return;\n      }\n\n      this.recordInputAsDraft();\n      this.input.parentElement.classList.remove('editing');\n      this.editing.element.classList.remove('editing');\n      delete this.editing.id;\n      delete this.editing.element;\n      messageBoxState.set(this.input, this.editing.saved || '');\n      var cursorPosition = this.editing.savedCursor ? this.editing.savedCursor : -1;\n      this.$input.setCursorPosition(cursorPosition);\n    }\n\n    return clearEditing;\n  }();\n\n  _proto.send = function () {\n    function send(event, _ref6) {\n      var rid,\n          tmid,\n          value,\n          tshow,\n          done,\n          threadsEnabled,\n          msg,\n          mention,\n          replies,\n          originalMessage,\n          message,\n          _message,\n          isDescription,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.async(function () {\n        function send$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                rid = _ref6.rid, tmid = _ref6.tmid, value = _ref6.value, tshow = _ref6.tshow;\n                done = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : function () {};\n                threadsEnabled = settings.get('Threads_enabled');\n                UserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, {\n                  tmid: tmid\n                });\n\n                if (ChatSubscription.findOne({\n                  rid: rid\n                })) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 7;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('joinRoom', rid));\n\n              case 7:\n                messageBoxState.save({\n                  rid: rid,\n                  tmid: tmid\n                }, this.input);\n                msg = value.trim();\n\n                if (!msg) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                mention = this.$input.data('mention-user') || false;\n                replies = this.$input.data('reply') || [];\n\n                if (!(!mention || !threadsEnabled)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.next = 15;\n                return _regeneratorRuntime.awrap(prependReplies(msg, replies, mention));\n\n              case 15:\n                msg = _context2.sent;\n\n              case 16:\n                if (mention && threadsEnabled && replies.length) {\n                  tmid = replies[0]._id;\n                }\n\n              case 17:\n                // don't add tmid or tshow if the message isn't part of a thread (it can happen if editing the main message of a thread)\n                originalMessage = this.collection.findOne({\n                  _id: this.editing.id\n                }, {\n                  fields: {\n                    tmid: 1\n                  },\n                  reactive: false\n                });\n\n                if (originalMessage && tmid && !originalMessage.tmid) {\n                  tmid = undefined;\n                  tshow = undefined;\n                }\n\n                if (!msg) {\n                  _context2.next = 35;\n                  break;\n                }\n\n                readMessage.readNow(rid);\n                readMessage.refreshUnreadMark(rid);\n                _context2.next = 24;\n                return _regeneratorRuntime.awrap(onClientBeforeSendMessage({\n                  _id: Random.id(),\n                  rid: rid,\n                  tshow: tshow,\n                  tmid: tmid,\n                  msg: msg\n                }));\n\n              case 24:\n                message = _context2.sent;\n                _context2.prev = 25;\n                _context2.next = 28;\n                return _regeneratorRuntime.awrap(this.processMessageSend(message));\n\n              case 28:\n                this.$input.removeData('reply').trigger('dataChange');\n                _context2.next = 34;\n                break;\n\n              case 31:\n                _context2.prev = 31;\n                _context2.t0 = _context2[\"catch\"](25);\n                handleError(_context2.t0);\n\n              case 34:\n                return _context2.abrupt(\"return\", done());\n\n              case 35:\n                if (!this.editing.id) {\n                  _context2.next = 51;\n                  break;\n                }\n\n                _message = this.collection.findOne(this.editing.id);\n                isDescription = _message.attachments && _message.attachments[0] && _message.attachments[0].description;\n                _context2.prev = 38;\n\n                if (!isDescription) {\n                  _context2.next = 43;\n                  break;\n                }\n\n                _context2.next = 42;\n                return _regeneratorRuntime.awrap(this.processMessageEditing({\n                  _id: this.editing.id,\n                  rid: rid,\n                  msg: ''\n                }));\n\n              case 42:\n                return _context2.abrupt(\"return\", done());\n\n              case 43:\n                this.resetToDraft(this.editing.id);\n                this.confirmDeleteMsg(_message, done);\n                return _context2.abrupt(\"return\");\n\n              case 48:\n                _context2.prev = 48;\n                _context2.t1 = _context2[\"catch\"](38);\n                handleError(_context2.t1);\n\n              case 51:\n                return _context2.abrupt(\"return\", done());\n\n              case 52:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }\n\n        return send$;\n      }(), null, this, [[25, 31], [38, 48]], Promise);\n    }\n\n    return send;\n  }();\n\n  _proto.processMessageSend = function () {\n    function processMessageSend(message) {\n      return _regeneratorRuntime.async(function () {\n        function processMessageSend$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(this.processSetReaction(message));\n\n              case 2:\n                if (!_context3.sent) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                this.clearCurrentDraft();\n                _context3.next = 7;\n                return _regeneratorRuntime.awrap(this.processTooLongMessage(message));\n\n              case 7:\n                if (!_context3.sent) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                _context3.next = 11;\n                return _regeneratorRuntime.awrap(this.processMessageEditing(_objectSpread(_objectSpread({}, message), {}, {\n                  _id: this.editing.id\n                })));\n\n              case 11:\n                if (!_context3.sent) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 13:\n                KonchatNotification.removeRoomNotification(message.rid);\n                _context3.next = 16;\n                return _regeneratorRuntime.awrap(this.processSlashCommand(message));\n\n              case 16:\n                if (!_context3.sent) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 18:\n                _context3.next = 20;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('sendMessage', message));\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return processMessageSend$;\n      }(), null, this, null, Promise);\n    }\n\n    return processMessageSend;\n  }();\n\n  _proto.processSetReaction = function () {\n    function processSetReaction(_ref7) {\n      var rid, tmid, msg, reaction, lastMessage;\n      return _regeneratorRuntime.async(function () {\n        function processSetReaction$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                rid = _ref7.rid, tmid = _ref7.tmid, msg = _ref7.msg;\n\n                if (!(msg.slice(0, 2) !== '+:')) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", false);\n\n              case 3:\n                reaction = msg.slice(1).trim();\n\n                if (emoji.list[reaction]) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", false);\n\n              case 6:\n                lastMessage = this.collection.findOne({\n                  rid: rid,\n                  tmid: tmid\n                }, {\n                  fields: {\n                    ts: 1\n                  },\n                  sort: {\n                    ts: -1\n                  }\n                });\n                _context4.next = 9;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('setReaction', reaction, lastMessage._id));\n\n              case 9:\n                return _context4.abrupt(\"return\", true);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }\n\n        return processSetReaction$;\n      }(), null, this, null, Promise);\n    }\n\n    return processSetReaction;\n  }();\n\n  _proto.processTooLongMessage = function () {\n    function processTooLongMessage(_ref8) {\n      var _this2 = this;\n\n      var msg, rid, tmid, adjustedMessage, onConfirm, onClose;\n      return _regeneratorRuntime.async(function () {\n        function processTooLongMessage$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                msg = _ref8.msg, rid = _ref8.rid, tmid = _ref8.tmid;\n                adjustedMessage = messageProperties.messageWithoutEmojiShortnames(msg);\n\n                if (!(messageProperties.length(adjustedMessage) <= settings.get('Message_MaxAllowedSize') && msg)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", false);\n\n              case 4:\n                if (!(!settings.get('FileUpload_Enabled') || !settings.get('Message_AllowConvertLongMessagesToAttachment') || this.editing.id)) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                throw new Error({\n                  error: 'Message_too_long'\n                });\n\n              case 6:\n                onConfirm = function () {\n                  var contentType = 'text/plain';\n                  var messageBlob = new Blob([msg], {\n                    type: contentType\n                  });\n                  var fileName = Meteor.user().username + \" - \" + new Date() + \".txt\";\n                  var file = new File([messageBlob], fileName, {\n                    type: contentType,\n                    lastModified: Date.now()\n                  });\n                  fileUpload([{\n                    file: file,\n                    name: fileName\n                  }], _this2.input, {\n                    rid: rid,\n                    tmid: tmid\n                  });\n                  imperativeModal.close();\n                };\n\n                onClose = function () {\n                  messageBoxState.set(_this2.input, msg);\n                  imperativeModal.close();\n                };\n\n                imperativeModal.open({\n                  component: GenericModal,\n                  props: {\n                    title: t('Message_too_long'),\n                    children: t('Send_it_as_attachment_instead_question'),\n                    onConfirm: onConfirm,\n                    onClose: onClose,\n                    onCancel: onClose,\n                    variant: 'warning'\n                  }\n                });\n                return _context5.abrupt(\"return\", true);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }\n\n        return processTooLongMessage$;\n      }(), null, this, null, Promise);\n    }\n\n    return processTooLongMessage;\n  }();\n\n  _proto.processMessageEditing = function () {\n    function processMessageEditing(message) {\n      return _regeneratorRuntime.async(function () {\n        function processMessageEditing$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (message._id) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", false);\n\n              case 2:\n                if (!MessageTypes.isSystemMessage(message)) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", false);\n\n              case 4:\n                this.clearEditing();\n                _context6.next = 7;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('updateMessage', message));\n\n              case 7:\n                return _context6.abrupt(\"return\", true);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }\n\n        return processMessageEditing$;\n      }(), null, this, null, Promise);\n    }\n\n    return processMessageEditing;\n  }();\n\n  _proto.processSlashCommand = function () {\n    function processSlashCommand(msgObject) {\n      var match, command, commandOptions, param, triggerId, invalidCommandMsg;\n      return _regeneratorRuntime.async(function () {\n        function processSlashCommand$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(msgObject.msg[0] === '/')) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                match = msgObject.msg.match(/^\\/([^\\s]+)(?:\\s+(.*))?$/m);\n\n                if (!match) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                if (!slashCommands.commands[match[1]]) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                commandOptions = slashCommands.commands[match[1]];\n                command = match[1];\n                param = match[2] || '';\n\n                if (!(!commandOptions.permission || hasAtLeastOnePermission(commandOptions.permission, Session.get('openedRoom')))) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                if (commandOptions.clientOnly) {\n                  commandOptions.callback(command, param, msgObject);\n                } else {\n                  APIClient.v1.post('statistics.telemetry', {\n                    params: [{\n                      eventName: 'slashCommandsStats',\n                      timestamp: Date.now(),\n                      command: command\n                    }]\n                  });\n                  triggerId = generateTriggerId(slashCommands.commands[command].appId);\n                  Meteor.call('slashCommand', {\n                    cmd: command,\n                    params: param,\n                    msg: msgObject,\n                    triggerId: triggerId\n                  }, function (err, result) {\n                    typeof commandOptions.result === 'function' && commandOptions.result(err, result, {\n                      cmd: command,\n                      params: param,\n                      msg: msgObject\n                    });\n                  });\n                }\n\n                return _context7.abrupt(\"return\", true);\n\n              case 10:\n                if (settings.get('Message_AllowUnrecognizedSlashCommand')) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                invalidCommandMsg = {\n                  _id: Random.id(),\n                  rid: msgObject.rid,\n                  ts: new Date(),\n                  msg: TAPi18n.__('No_such_command', {\n                    command: escapeHTML(match[1])\n                  }),\n                  u: {\n                    username: settings.get('InternalHubot_Username') || 'rocket.cat'\n                  },\n                  \"private\": true\n                };\n                this.collection.upsert({\n                  _id: invalidCommandMsg._id\n                }, invalidCommandMsg);\n                return _context7.abrupt(\"return\", true);\n\n              case 14:\n                return _context7.abrupt(\"return\", false);\n\n              case 15:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }\n\n        return processSlashCommand$;\n      }(), null, this, null, Promise);\n    }\n\n    return processSlashCommand;\n  }();\n\n  _proto.confirmDeleteMsg = function () {\n    function confirmDeleteMsg(message) {\n      var _this3 = this;\n\n      var done = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      if (MessageTypes.isSystemMessage(message)) {\n        return done();\n      }\n\n      var room = message.drid && Rooms.findOne({\n        _id: message.drid,\n        prid: {\n          $exists: true\n        }\n      });\n\n      var onConfirm = function () {\n        if (_this3.editing.id === message._id) {\n          _this3.clearEditing();\n        }\n\n        _this3.deleteMsg(message);\n\n        _this3.$input.focus();\n\n        done();\n        imperativeModal.close();\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Your_entry_has_been_deleted')\n        });\n      };\n\n      var onCloseModal = function () {\n        imperativeModal.close();\n\n        if (_this3.editing.id === message._id) {\n          _this3.clearEditing();\n        }\n\n        _this3.$input.focus();\n\n        done();\n      };\n\n      imperativeModal.open({\n        component: GenericModal,\n        props: {\n          title: t('Are_you_sure'),\n          children: room ? t('The_message_is_a_discussion_you_will_not_be_able_to_recover') : t('You_will_not_be_able_to_recover'),\n          variant: 'danger',\n          confirmText: t('Yes_delete_it'),\n          onConfirm: onConfirm,\n          onClose: onCloseModal,\n          onCancel: onCloseModal\n        }\n      });\n    }\n\n    return confirmDeleteMsg;\n  }();\n\n  _proto.deleteMsg = function () {\n    function deleteMsg(_ref9) {\n      var _id, rid, ts, forceDelete, blockDeleteInMinutes, msgTs, currentTsDiff;\n\n      return _regeneratorRuntime.async(function () {\n        function deleteMsg$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _id = _ref9._id, rid = _ref9.rid, ts = _ref9.ts;\n                forceDelete = hasAtLeastOnePermission('force-delete-message', rid);\n                blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes');\n\n                if (!(blockDeleteInMinutes && forceDelete === false)) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                if (ts) {\n                  msgTs = moment(ts);\n                }\n\n                if (msgTs) {\n                  currentTsDiff = moment().diff(msgTs, 'minutes');\n                }\n\n                if (!(currentTsDiff > blockDeleteInMinutes)) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                dispatchToastMessage({\n                  type: 'error',\n                  message: t('Message_deleting_blocked')\n                });\n                return _context8.abrupt(\"return\");\n\n              case 9:\n                _context8.next = 11;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('deleteMessage', {\n                  _id: _id\n                }));\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }\n\n        return deleteMsg$;\n      }(), null, null, null, Promise);\n    }\n\n    return deleteMsg;\n  }();\n\n  _proto.keydown = function () {\n    function keydown(event) {\n      var input = event.currentTarget,\n          keyCode = event.which;\n\n      if (keyCode === keyCodes.ESCAPE && this.editing.element) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.resetToDraft(this.editing.id)) {\n          this.clearCurrentDraft();\n          this.clearEditing();\n          return true;\n        }\n\n        return;\n      }\n\n      if (keyCode === keyCodes.ARROW_UP || keyCode === keyCodes.ARROW_DOWN) {\n        if (event.shiftKey) {\n          return;\n        }\n\n        var cursorPosition = input.selectionEnd;\n\n        if (keyCode === keyCodes.ARROW_UP) {\n          if (cursorPosition === 0) {\n            this.toPrevMessage();\n          } else if (!event.altKey) {\n            return;\n          }\n\n          if (event.altKey) {\n            this.$input.setCursorPosition(0);\n          }\n        } else {\n          if (cursorPosition === input.value.length) {\n            this.toNextMessage();\n          } else if (!event.altKey) {\n            return;\n          }\n\n          if (event.altKey) {\n            this.$input.setCursorPosition(-1);\n          }\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n\n    return keydown;\n  }();\n\n  _proto.keyup = function () {\n    function keyup(event, _ref10) {\n      var rid = _ref10.rid,\n          tmid = _ref10.tmid;\n      var input = event.currentTarget,\n          keyCode = event.which;\n\n      if (!Object.values(keyCodes).includes(keyCode)) {\n        if (input.value.trim()) {\n          UserAction.start(rid, USER_ACTIVITIES.USER_TYPING, {\n            tmid: tmid\n          });\n        } else {\n          UserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, {\n            tmid: tmid\n          });\n        }\n      }\n\n      messageBoxState.save({\n        rid: rid,\n        tmid: tmid\n      }, input);\n    }\n\n    return keyup;\n  }();\n\n  _proto.onDestroyed = function () {\n    function onDestroyed(rid, tmid) {\n      var _this$input, _this$input$parentEle;\n\n      UserAction.cancel(rid); // TODO: check why we need too many ?. here :(\n\n      if (((_this$input = this.input) === null || _this$input === void 0 ? void 0 : (_this$input$parentEle = _this$input.parentElement) === null || _this$input$parentEle === void 0 ? void 0 : _this$input$parentEle.classList.contains('editing')) === true) {\n        if (!tmid) {\n          this.clearCurrentDraft();\n          this.clearEditing();\n        }\n\n        messageBoxState.set(this.input, '');\n        messageBoxState.save({\n          rid: rid,\n          tmid: tmid\n        }, this.$input);\n      }\n    }\n\n    return onDestroyed;\n  }();\n\n  return ChatMessages;\n}();","map":{"version":3,"sources":["app/ui/client/lib/chatMessages.js"],"names":["_objectSpread","module","link","default","v","_regeneratorRuntime","export","ChatMessages","moment","_","Meteor","Random","FlowRouter","Session","TAPi18n","escapeHTML","KonchatNotification","UserAction","USER_ACTIVITIES","fileUpload","t","slashCommands","APIClient","messageProperties","MessageTypes","readMessage","settings","callbacks","hasAtLeastOnePermission","Messages","Rooms","ChatMessage","ChatSubscription","emoji","generateTriggerId","imperativeModal","GenericModal","keyCodes","prependReplies","callWithErrorHandling","handleError","dispatchToastMessage","onClientBeforeSendMessage","messageBoxState","saveValue","debounce","value","rid","tmid","key","filter","Boolean","join","_localStorage","setItem","removeItem","restoreValue","getItem","restore","input","set","save","$","trigger","purgeAll","Object","keys","indexOf","forEach","add","priority","MEDIUM","collection","editing","records","initializeWrapper","wrapper","initializeInput","$input","restoreReplies","requestInputFocus","mid","getQueryParam","findOne","message","data","setTimeout","window","matchMedia","matches","focus","recordInputAsDraft","id","record","draft","msg","clearCurrentDraft","hasValue","resetToDraft","oldValue","toPrevMessage","element","messages","Array","from","querySelectorAll","pop","edit","previous","previousElementSibling","clearEditing","toNextMessage","next","nextElementSibling","isEditingTheNextOne","dataset","hasPermission","editAllowed","get","editOwn","u","_id","userId","classList","contains","blockEditInMinutes","currentTsDiff","msgTs","ts","diff","parentElement","attachments","description","cursorPosition","setCursorPosition","saved","savedCursor","selectionEnd","remove","send","event","tshow","done","threadsEnabled","stop","USER_TYPING","trim","mention","replies","length","originalMessage","fields","reactive","undefined","readNow","refreshUnreadMark","processMessageSend","removeData","isDescription","processMessageEditing","confirmDeleteMsg","processSetReaction","processTooLongMessage","removeRoomNotification","processSlashCommand","slice","reaction","list","lastMessage","sort","adjustedMessage","messageWithoutEmojiShortnames","Error","error","onConfirm","contentType","messageBlob","Blob","type","fileName","user","username","Date","file","File","lastModified","now","name","close","onClose","open","component","props","title","children","onCancel","variant","isSystemMessage","msgObject","match","commands","commandOptions","command","param","permission","clientOnly","callback","v1","post","params","eventName","timestamp","triggerId","appId","call","cmd","err","result","invalidCommandMsg","__","upsert","room","drid","prid","$exists","deleteMsg","onCloseModal","confirmText","forceDelete","blockDeleteInMinutes","keydown","currentTarget","keyCode","which","ESCAPE","preventDefault","stopPropagation","ARROW_UP","ARROW_DOWN","shiftKey","altKey","keyup","values","includes","start","onDestroyed","cancel"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;AAArC,CAAnD,EAA0F,CAA1F;;AAA6F,IAAIC,mBAAJ;;AAAwBJ,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACC,EAAAA,OAAO,EAAC,UAASC,CAAT,EAAW;AAACC,IAAAA,mBAAmB,GAACD,CAApB;AAAsB;AAA3C,CAAzC,EAAsF,CAAtF;AAAvIH,MAAM,CAACK,MAAP,CAAc;AAACC,EAAAA,YAAY,EAAC,YAAU;AAAC,WAAOA,YAAP;AAAoB;AAA7C,CAAd;AAA8D,IAAIC,MAAJ;AAAWP,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAAC,aAAQ,UAASE,CAAT,EAAW;AAACI,IAAAA,MAAM,GAACJ,CAAP;AAAS;AAA9B,CAArB,EAAqD,CAArD;;AAAwD,IAAIK,CAAJ;;AAAMR,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAAC,aAAQ,UAASE,CAAT,EAAW;AAACK,IAAAA,CAAC,GAACL,CAAF;AAAI;AAAzB,CAAzB,EAAoD,CAApD;AAAuD,IAAIM,MAAJ;AAAWT,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACQ,EAAAA,MAAM,EAAC,UAASN,CAAT,EAAW;AAACM,IAAAA,MAAM,GAACN,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIO,MAAJ;AAAWV,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACS,EAAAA,MAAM,EAAC,UAASP,CAAT,EAAW;AAACO,IAAAA,MAAM,GAACP,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIQ,UAAJ;AAAeX,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACU,EAAAA,UAAU,EAAC,UAASR,CAAT,EAAW;AAACQ,IAAAA,UAAU,GAACR,CAAX;AAAa;AAArC,CAAxC,EAA+E,CAA/E;AAAkF,IAAIS,OAAJ;AAAYZ,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACW,EAAAA,OAAO,EAAC,UAAST,CAAT,EAAW;AAACS,IAAAA,OAAO,GAACT,CAAR;AAAU;AAA/B,CAA7B,EAA8D,CAA9D;AAAiE,IAAIU,OAAJ;AAAYb,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACY,EAAAA,OAAO,EAAC,UAASV,CAAT,EAAW;AAACU,IAAAA,OAAO,GAACV,CAAR;AAAU;AAA/B,CAAzC,EAA0E,CAA1E;AAA6E,IAAIW,UAAJ;AAAed,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACa,EAAAA,UAAU,EAAC,UAASX,CAAT,EAAW;AAACW,IAAAA,UAAU,GAACX,CAAX;AAAa;AAArC,CAA1C,EAAiF,CAAjF;AAAoF,IAAIY,mBAAJ;AAAwBf,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACc,EAAAA,mBAAmB,EAAC,UAASZ,CAAT,EAAW;AAACY,IAAAA,mBAAmB,GAACZ,CAApB;AAAsB;AAAvD,CAA7B,EAAsF,CAAtF;AAAyF,IAAIa,UAAJ,EAAeC,eAAf;AAA+BjB,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuB;AAACe,EAAAA,UAAU,EAAC,UAASb,CAAT,EAAW;AAACa,IAAAA,UAAU,GAACb,CAAX;AAAa,GAArC;AAAsCc,EAAAA,eAAe,EAAC,UAASd,CAAT,EAAW;AAACc,IAAAA,eAAe,GAACd,CAAhB;AAAkB;AAApF,CAAvB,EAA6G,CAA7G;AAAgH,IAAIe,UAAJ;AAAelB,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACiB,EAAAA,UAAU,EAAC,UAASf,CAAT,EAAW;AAACe,IAAAA,UAAU,GAACf,CAAX;AAAa;AAArC,CAA3B,EAAkE,EAAlE;AAAsE,IAAIgB,CAAJ,EAAMC,aAAN,EAAoBC,SAApB;AAA8BrB,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACkB,EAAAA,CAAC,EAAC,UAAShB,CAAT,EAAW;AAACgB,IAAAA,CAAC,GAAChB,CAAF;AAAI,GAAnB;AAAoBiB,EAAAA,aAAa,EAAC,UAASjB,CAAT,EAAW;AAACiB,IAAAA,aAAa,GAACjB,CAAd;AAAgB,GAA9D;AAA+DkB,EAAAA,SAAS,EAAC,UAASlB,CAAT,EAAW;AAACkB,IAAAA,SAAS,GAAClB,CAAV;AAAY;AAAjG,CAApC,EAAuI,EAAvI;AAA2I,IAAImB,iBAAJ,EAAsBC,YAAtB,EAAmCC,WAAnC;AAA+CxB,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAACqB,EAAAA,iBAAiB,EAAC,UAASnB,CAAT,EAAW;AAACmB,IAAAA,iBAAiB,GAACnB,CAAlB;AAAoB,GAAnD;AAAoDoB,EAAAA,YAAY,EAAC,UAASpB,CAAT,EAAW;AAACoB,IAAAA,YAAY,GAACpB,CAAb;AAAe,GAA5F;AAA6FqB,EAAAA,WAAW,EAAC,UAASrB,CAAT,EAAW;AAACqB,IAAAA,WAAW,GAACrB,CAAZ;AAAc;AAAnI,CAAvC,EAA4K,EAA5K;AAAgL,IAAIsB,QAAJ;AAAazB,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAACwB,EAAAA,QAAQ,EAAC,UAAStB,CAAT,EAAW;AAACsB,IAAAA,QAAQ,GAACtB,CAAT;AAAW;AAAjC,CAAvC,EAA0E,EAA1E;AAA8E,IAAIuB,SAAJ;AAAc1B,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACyB,EAAAA,SAAS,EAAC,UAASvB,CAAT,EAAW;AAACuB,IAAAA,SAAS,GAACvB,CAAV;AAAY;AAAnC,CAAxC,EAA6E,EAA7E;AAAiF,IAAIwB,uBAAJ;AAA4B3B,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAAC0B,EAAAA,uBAAuB,EAAC,UAASxB,CAAT,EAAW;AAACwB,IAAAA,uBAAuB,GAACxB,CAAxB;AAA0B;AAA/D,CAA5C,EAA6G,EAA7G;AAAiH,IAAIyB,QAAJ,EAAaC,KAAb,EAAmBC,WAAnB,EAA+BC,gBAA/B;AAAgD/B,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAAC2B,EAAAA,QAAQ,EAAC,UAASzB,CAAT,EAAW;AAACyB,IAAAA,QAAQ,GAACzB,CAAT;AAAW,GAAjC;AAAkC0B,EAAAA,KAAK,EAAC,UAAS1B,CAAT,EAAW;AAAC0B,IAAAA,KAAK,GAAC1B,CAAN;AAAQ,GAA5D;AAA6D2B,EAAAA,WAAW,EAAC,UAAS3B,CAAT,EAAW;AAAC2B,IAAAA,WAAW,GAAC3B,CAAZ;AAAc,GAAnG;AAAoG4B,EAAAA,gBAAgB,EAAC,UAAS5B,CAAT,EAAW;AAAC4B,IAAAA,gBAAgB,GAAC5B,CAAjB;AAAmB;AAApJ,CAArC,EAA2L,EAA3L;AAA+L,IAAI6B,KAAJ;AAAUhC,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAAC+B,EAAAA,KAAK,EAAC,UAAS7B,CAAT,EAAW;AAAC6B,IAAAA,KAAK,GAAC7B,CAAN;AAAQ;AAA3B,CAApC,EAAiE,EAAjE;AAAqE,IAAI8B,iBAAJ;AAAsBjC,MAAM,CAACC,IAAP,CAAY,0CAAZ,EAAuD;AAACgC,EAAAA,iBAAiB,EAAC,UAAS9B,CAAT,EAAW;AAAC8B,IAAAA,iBAAiB,GAAC9B,CAAlB;AAAoB;AAAnD,CAAvD,EAA4G,EAA5G;AAAgH,IAAI+B,eAAJ;AAAoBlC,MAAM,CAACC,IAAP,CAAY,wCAAZ,EAAqD;AAACiC,EAAAA,eAAe,EAAC,UAAS/B,CAAT,EAAW;AAAC+B,IAAAA,eAAe,GAAC/B,CAAhB;AAAkB;AAA/C,CAArD,EAAsG,EAAtG;AAA0G,IAAIgC,YAAJ;AAAiBnC,MAAM,CAACC,IAAP,CAAY,4CAAZ,EAAyD;AAAC,aAAQ,UAASE,CAAT,EAAW;AAACgC,IAAAA,YAAY,GAAChC,CAAb;AAAe;AAApC,CAAzD,EAA+F,EAA/F;AAAmG,IAAIiC,QAAJ;AAAapC,MAAM,CAACC,IAAP,CAAY,uCAAZ,EAAoD;AAACmC,EAAAA,QAAQ,EAAC,UAASjC,CAAT,EAAW;AAACiC,IAAAA,QAAQ,GAACjC,CAAT;AAAW;AAAjC,CAApD,EAAuF,EAAvF;AAA2F,IAAIkC,cAAJ;AAAmBrC,MAAM,CAACC,IAAP,CAAY,6CAAZ,EAA0D;AAACoC,EAAAA,cAAc,EAAC,UAASlC,CAAT,EAAW;AAACkC,IAAAA,cAAc,GAAClC,CAAf;AAAiB;AAA7C,CAA1D,EAAyG,EAAzG;AAA6G,IAAImC,qBAAJ;AAA0BtC,MAAM,CAACC,IAAP,CAAY,oDAAZ,EAAiE;AAACqC,EAAAA,qBAAqB,EAAC,UAASnC,CAAT,EAAW;AAACmC,IAAAA,qBAAqB,GAACnC,CAAtB;AAAwB;AAA3D,CAAjE,EAA8H,EAA9H;AAAkI,IAAIoC,WAAJ;AAAgBvC,MAAM,CAACC,IAAP,CAAY,0CAAZ,EAAuD;AAACsC,EAAAA,WAAW,EAAC,UAASpC,CAAT,EAAW;AAACoC,IAAAA,WAAW,GAACpC,CAAZ;AAAc;AAAvC,CAAvD,EAAgG,EAAhG;AAAoG,IAAIqC,oBAAJ;AAAyBxC,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACuC,EAAAA,oBAAoB,EAAC,UAASrC,CAAT,EAAW;AAACqC,IAAAA,oBAAoB,GAACrC,CAArB;AAAuB;AAAzD,CAA3C,EAAsG,EAAtG;AAA0G,IAAIsC,yBAAJ;AAA8BzC,MAAM,CAACC,IAAP,CAAY,kDAAZ,EAA+D;AAACwC,EAAAA,yBAAyB,EAAC,UAAStC,CAAT,EAAW;AAACsC,IAAAA,yBAAyB,GAACtC,CAA1B;AAA4B;AAAnE,CAA/D,EAAoI,EAApI;AA6B7iG,IAAMuC,eAAe,GAAG;AACvBC,EAAAA,SAAS,EAAEnC,CAAC,CAACoC,QAAF,CAAW,gBAAgBC,KAAhB,EAA0B;AAAA,QAAvBC,GAAuB,QAAvBA,GAAuB;AAAA,QAAlBC,IAAkB,QAAlBA,IAAkB;AAC/C,QAAMC,GAAG,GAAG,CAAC,YAAD,EAAeF,GAAf,EAAoBC,IAApB,EAA0BE,MAA1B,CAAiCC,OAAjC,EAA0CC,IAA1C,CAA+C,GAA/C,CAAZ;AACAN,IAAAA,KAAK,GAAGpC,MAAM,CAAC2C,aAAP,CAAqBC,OAArB,CAA6BL,GAA7B,EAAkCH,KAAlC,CAAH,GAA8CpC,MAAM,CAAC2C,aAAP,CAAqBE,UAArB,CAAgCN,GAAhC,CAAnD;AACA,GAHU,EAGR,IAHQ,CADY;AAMvBO,EAAAA,YAAY,EAAE,iBAAmB;AAAA,QAAhBT,GAAgB,SAAhBA,GAAgB;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAChC,QAAMC,GAAG,GAAG,CAAC,YAAD,EAAeF,GAAf,EAAoBC,IAApB,EAA0BE,MAA1B,CAAiCC,OAAjC,EAA0CC,IAA1C,CAA+C,GAA/C,CAAZ;AACA,WAAO1C,MAAM,CAAC2C,aAAP,CAAqBI,OAArB,CAA6BR,GAA7B,CAAP;AACA,GATsB;AAWvBS,EAAAA,OAAO,EAAE,iBAAgBC,KAAhB,EAA0B;AAAA,QAAvBZ,GAAuB,SAAvBA,GAAuB;AAAA,QAAlBC,IAAkB,SAAlBA,IAAkB;AAClC,QAAMF,KAAK,GAAGH,eAAe,CAACa,YAAhB,CAA6B;AAAET,MAAAA,GAAG,EAAHA,GAAF;AAAOC,MAAAA,IAAI,EAAJA;AAAP,KAA7B,CAAd;;AACA,QAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC9BH,MAAAA,eAAe,CAACiB,GAAhB,CAAoBD,KAApB,EAA2Bb,KAA3B;AACA;AACD,GAhBsB;AAkBvBe,EAAAA,IAAI,EAAE,iBAAgBF,KAAhB,EAA0B;AAAA,QAAvBZ,GAAuB,SAAvBA,GAAuB;AAAA,QAAlBC,IAAkB,SAAlBA,IAAkB;AAC/BL,IAAAA,eAAe,CAACC,SAAhB,CAA0B;AAAEG,MAAAA,GAAG,EAAHA,GAAF;AAAOC,MAAAA,IAAI,EAAJA;AAAP,KAA1B,EAAyCW,KAAK,CAACb,KAA/C;AACA,GApBsB;AAsBvBc,EAAAA,GAAG,EAAE,UAACD,KAAD,EAAQb,KAAR,EAAkB;AACtBa,IAAAA,KAAK,CAACb,KAAN,GAAcA,KAAd;AACAgB,IAAAA,CAAC,CAACH,KAAD,CAAD,CAASI,OAAT,CAAiB,QAAjB,EAA2BA,OAA3B,CAAmC,OAAnC;AACA,GAzBsB;AA2BvBC,EAAAA,QAAQ,EAAE,YAAM;AACfC,IAAAA,MAAM,CAACC,IAAP,CAAYxD,MAAM,CAAC2C,aAAnB,EACEH,MADF,CACS,UAACD,GAAD;AAAA,aAASA,GAAG,CAACkB,OAAJ,CAAY,aAAZ,MAA+B,CAAxC;AAAA,KADT,EAEEC,OAFF,CAEU,UAACnB,GAAD;AAAA,aAASvC,MAAM,CAAC2C,aAAP,CAAqBE,UAArB,CAAgCN,GAAhC,CAAT;AAAA,KAFV;AAGA;AA/BsB,CAAxB;AAkCAtB,SAAS,CAAC0C,GAAV,CAAc,oBAAd,EAAoC1B,eAAe,CAACqB,QAApD,EAA8DrC,SAAS,CAAC2C,QAAV,CAAmBC,MAAjF,EAAyF,mCAAzF;;IAEahE,Y;AACZ,0BAAsC;AAAA,QAA1BiE,UAA0B,uEAAbzC,WAAa;AAAA,SAItC0C,OAJsC,GAI5B,EAJ4B;AAAA,SAMtCC,OANsC,GAM5B,EAN4B;AACrC,SAAKF,UAAL,GAAkBA,UAAlB;AACA;;;;SAMDG,iB;AAAA,+BAAkBC,OAAlB,EAA2B;AAC1B,WAAKA,OAAL,GAAeA,OAAf;AACA;;;;;SAEDC,e;AAAA,6BAAgBlB,KAAhB,SAAsC;AAAA,UAAbZ,GAAa,SAAbA,GAAa;AAAA,UAARC,IAAQ,SAARA,IAAQ;AACrC,WAAKW,KAAL,GAAaA,KAAb;AACA,WAAKmB,MAAL,GAAchB,CAAC,CAAC,KAAKH,KAAN,CAAf;;AAEA,UAAI,CAACA,KAAD,IAAU,CAACZ,GAAf,EAAoB;AACnB;AACA;;AAEDJ,MAAAA,eAAe,CAACe,OAAhB,CAAwB;AAAEX,QAAAA,GAAG,EAAHA,GAAF;AAAOC,QAAAA,IAAI,EAAJA;AAAP,OAAxB,EAAuCW,KAAvC;AACA,WAAKoB,cAAL;AACA,WAAKC,iBAAL;AACA;;;;;SAEKD,c;AAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACOE,gBAAAA,GADP,GACarE,UAAU,CAACsE,aAAX,CAAyB,OAAzB,CADb;;AAAA,oBAEMD,GAFN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,8BAMiBpD,QAAQ,CAACsD,OAAT,CAAiBF,GAAjB,CANjB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAMiD1C,qBAAqB,CAAC,kBAAD,EAAqB0C,GAArB,CANtE;;AAAA;AAAA;;AAAA;AAMOG,gBAAAA,OANP;;AAAA,oBAOMA,OAPN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAWC,qBAAKN,MAAL,CAAYO,IAAZ,CAAiB,OAAjB,EAA0B,CAACD,OAAD,CAA1B,EAAqCrB,OAArC,CAA6C,YAA7C;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAcAiB,iB;AAAA,iCAAoB;AAAA;;AACnBM,MAAAA,UAAU,CAAC,YAAM;AAChB,YAAI,KAAI,CAAC3B,KAAL,IAAc4B,MAAM,CAACC,UAAP,CAAkB,sCAAlB,EAA0DC,OAA5E,EAAqF;AACpF,UAAA,KAAI,CAAC9B,KAAL,CAAW+B,KAAX;AACA;AACD,OAJS,EAIP,GAJO,CAAV;AAKA;;;;;SAEDC,kB;AAAA,kCAAqB;AACpB,UAAMP,OAAO,GAAG,KAAKZ,UAAL,CAAgBW,OAAhB,CAAwB,KAAKV,OAAL,CAAamB,EAArC,CAAhB;AACA,UAAMC,MAAM,GAAG,KAAKnB,OAAL,CAAa,KAAKD,OAAL,CAAamB,EAA1B,KAAiC,EAAhD;AACA,UAAME,KAAK,GAAG,KAAKnC,KAAL,CAAWb,KAAzB;;AAEA,UAAIgD,KAAK,KAAKV,OAAO,CAACW,GAAtB,EAA2B;AAC1B,aAAKC,iBAAL;AACA;AACA;;AAEDH,MAAAA,MAAM,CAACC,KAAP,GAAeA,KAAf;AACA,WAAKpB,OAAL,CAAa,KAAKD,OAAL,CAAamB,EAA1B,IAAgCC,MAAhC;AACA;;;;;SAEDG,iB;AAAA,iCAAoB;AACnB,UAAMC,QAAQ,GAAG,KAAKvB,OAAL,CAAa,KAAKD,OAAL,CAAamB,EAA1B,CAAjB;AACA,aAAO,KAAKlB,OAAL,CAAa,KAAKD,OAAL,CAAamB,EAA1B,CAAP;AACA,aAAO,CAAC,CAACK,QAAT;AACA;;;;;SAEDC,Y;AAAA,0BAAaN,EAAb,EAAiB;AAChB,UAAMR,OAAO,GAAG,KAAKZ,UAAL,CAAgBW,OAAhB,CAAwBS,EAAxB,CAAhB;AACA,UAAMO,QAAQ,GAAG,KAAKxC,KAAL,CAAWb,KAA5B;AACAH,MAAAA,eAAe,CAACiB,GAAhB,CAAoB,KAAKD,KAAzB,EAAgCyB,OAAO,CAACW,GAAxC;AACA,aAAOI,QAAQ,KAAKf,OAAO,CAACW,GAA5B;AACA;;;;;SAEDK,a;AAAA,6BAAgB;AACf,UAAQC,OAAR,GAAoB,KAAK5B,OAAzB,CAAQ4B,OAAR;;AACA,UAAI,CAACA,OAAL,EAAc;AACb,YAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAK5B,OAAL,CAAa6B,gBAAb,CAA8B,mBAA9B,CAAX,CAAjB;AACA,YAAMrB,OAAO,GAAGkB,QAAQ,CAACI,GAAT,EAAhB;AACA,eAAOtB,OAAO,IAAI,KAAKuB,IAAL,CAAUvB,OAAV,EAAmB,KAAnB,CAAlB;AACA;;AAED,WAAK,IAAIwB,QAAQ,GAAGP,OAAO,CAACQ,sBAA5B,EAAoDD,QAApD,EAA8DA,QAAQ,GAAGA,QAAQ,CAACC,sBAAlF,EAA0G;AACzG,YAAID,QAAQ,CAACnB,OAAT,CAAiB,mBAAjB,CAAJ,EAA2C;AAC1C,iBAAO,KAAKkB,IAAL,CAAUC,QAAV,EAAoB,KAApB,CAAP;AACA;AACD;;AACD,WAAKE,YAAL;AACA;;;;;SAEDC,a;AAAA,6BAAgB;AACf,UAAQV,OAAR,GAAoB,KAAK5B,OAAzB,CAAQ4B,OAAR;;AACA,UAAIA,OAAJ,EAAa;AACZ,YAAIW,IAAJ;;AACA,aAAKA,IAAI,GAAGX,OAAO,CAACY,kBAApB,EAAwCD,IAAxC,EAA8CA,IAAI,GAAGA,IAAI,CAACC,kBAA1D,EAA8E;AAC7E,cAAID,IAAI,CAACvB,OAAL,CAAa,mBAAb,CAAJ,EAAuC;AACtC;AACA;AACD;;AAEDuB,QAAAA,IAAI,GAAG,KAAKL,IAAL,CAAUK,IAAV,EAAgB,IAAhB,CAAH,GAA2B,KAAKF,YAAL,EAA/B;AACA,OATD,MASO;AACN,aAAKA,YAAL;AACA;AACD;;;;;SAEDH,I;AAAA,kBAAKN,OAAL,EAAca,mBAAd,EAAmC;AAClC,UAAM9B,OAAO,GAAG,KAAKZ,UAAL,CAAgBW,OAAhB,CAAwBkB,OAAO,CAACc,OAAR,CAAgBvB,EAAxC,CAAhB;AAEA,UAAMwB,aAAa,GAAGxF,uBAAuB,CAAC,cAAD,EAAiBwD,OAAO,CAACrC,GAAzB,CAA7C;AACA,UAAMsE,WAAW,GAAG3F,QAAQ,CAAC4F,GAAT,CAAa,sBAAb,CAApB;AACA,UAAMC,OAAO,GAAGnC,OAAO,IAAIA,OAAO,CAACoC,CAAnB,IAAwBpC,OAAO,CAACoC,CAAR,CAAUC,GAAV,KAAkB/G,MAAM,CAACgH,MAAP,EAA1D;;AAEA,UAAI,CAACN,aAAD,KAAmB,CAACC,WAAD,IAAgB,CAACE,OAApC,CAAJ,EAAkD;AACjD;AACA;;AAED,UAAIlB,OAAO,CAACsB,SAAR,CAAkBC,QAAlB,CAA2B,QAA3B,CAAJ,EAA0C;AACzC;AACA;;AAED,UAAMC,kBAAkB,GAAGnG,QAAQ,CAAC4F,GAAT,CAAa,yCAAb,CAA3B;;AACA,UAAIO,kBAAkB,IAAIA,kBAAkB,KAAK,CAAjD,EAAoD;AACnD,YAAIC,aAAJ;AACA,YAAIC,KAAJ;;AACA,YAAI3C,OAAO,CAAC4C,EAAZ,EAAgB;AACfD,UAAAA,KAAK,GAAGvH,MAAM,CAAC4E,OAAO,CAAC4C,EAAT,CAAd;AACA;;AACD,YAAID,KAAJ,EAAW;AACVD,UAAAA,aAAa,GAAGtH,MAAM,GAAGyH,IAAT,CAAcF,KAAd,EAAqB,SAArB,CAAhB;AACA;;AACD,YAAID,aAAa,GAAGD,kBAApB,EAAwC;AACvC;AACA;AACD;;AAED,UAAM/B,KAAK,GAAG,KAAKpB,OAAL,CAAaU,OAAO,CAACqC,GAArB,CAAd;AACA,UAAI1B,GAAG,GAAGD,KAAK,IAAIA,KAAK,CAACA,KAAzB;AACAC,MAAAA,GAAG,GAAGA,GAAG,IAAIX,OAAO,CAACW,GAArB;AAEA,WAAKe,YAAL;AAEA,WAAKrC,OAAL,CAAa4B,OAAb,GAAuBA,OAAvB;AACA,WAAK5B,OAAL,CAAamB,EAAb,GAAkBR,OAAO,CAACqC,GAA1B;AACA,WAAK9D,KAAL,CAAWuE,aAAX,CAAyBP,SAAzB,CAAmCtD,GAAnC,CAAuC,SAAvC;AACAgC,MAAAA,OAAO,CAACsB,SAAR,CAAkBtD,GAAlB,CAAsB,SAAtB;;AAEA,UAAIe,OAAO,CAAC+C,WAAR,IAAuB/C,OAAO,CAAC+C,WAAR,CAAoB,CAApB,EAAuBC,WAAlD,EAA+D;AAC9DzF,QAAAA,eAAe,CAACiB,GAAhB,CAAoB,KAAKD,KAAzB,EAAgCyB,OAAO,CAAC+C,WAAR,CAAoB,CAApB,EAAuBC,WAAvD;AACA,OAFD,MAEO;AACNzF,QAAAA,eAAe,CAACiB,GAAhB,CAAoB,KAAKD,KAAzB,EAAgCoC,GAAhC;AACA;;AAED,UAAMsC,cAAc,GAAGnB,mBAAmB,GAAG,CAAH,GAAO,CAAC,CAAlD;AACA,WAAKvD,KAAL,CAAW+B,KAAX;AACA,WAAKZ,MAAL,CAAYwD,iBAAZ,CAA8BD,cAA9B;AACA;;;;;SAEDvB,Y;AAAA,4BAAe;AACd,UAAI,CAAC,KAAKrC,OAAL,CAAa4B,OAAlB,EAA2B;AAC1B,aAAK5B,OAAL,CAAa8D,KAAb,GAAqB,KAAK5E,KAAL,CAAWb,KAAhC;AACA,aAAK2B,OAAL,CAAa+D,WAAb,GAA2B,KAAK7E,KAAL,CAAW8E,YAAtC;AACA;AACA;;AAED,WAAK9C,kBAAL;AACA,WAAKhC,KAAL,CAAWuE,aAAX,CAAyBP,SAAzB,CAAmCe,MAAnC,CAA0C,SAA1C;AACA,WAAKjE,OAAL,CAAa4B,OAAb,CAAqBsB,SAArB,CAA+Be,MAA/B,CAAsC,SAAtC;AACA,aAAO,KAAKjE,OAAL,CAAamB,EAApB;AACA,aAAO,KAAKnB,OAAL,CAAa4B,OAApB;AAEA1D,MAAAA,eAAe,CAACiB,GAAhB,CAAoB,KAAKD,KAAzB,EAAgC,KAAKc,OAAL,CAAa8D,KAAb,IAAsB,EAAtD;AACA,UAAMF,cAAc,GAAG,KAAK5D,OAAL,CAAa+D,WAAb,GAA2B,KAAK/D,OAAL,CAAa+D,WAAxC,GAAsD,CAAC,CAA9E;AACA,WAAK1D,MAAL,CAAYwD,iBAAZ,CAA8BD,cAA9B;AACA;;;;;SAEKM,I;AAAN,kBAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoB7F,gBAAAA,GAApB,SAAoBA,GAApB,EAAyBC,IAAzB,SAAyBA,IAAzB,EAA+BF,KAA/B,SAA+BA,KAA/B,EAAsC+F,KAAtC,SAAsCA,KAAtC;AAA+CC,gBAAAA,IAA/C,8DAAsD,YAAM,CAAE,CAA9D;AACOC,gBAAAA,cADP,GACwBrH,QAAQ,CAAC4F,GAAT,CAAa,iBAAb,CADxB;AAGCrG,gBAAAA,UAAU,CAAC+H,IAAX,CAAgBjG,GAAhB,EAAqB7B,eAAe,CAAC+H,WAArC,EAAkD;AAAEjG,kBAAAA,IAAI,EAAJA;AAAF,iBAAlD;;AAHD,oBAKMhB,gBAAgB,CAACmD,OAAjB,CAAyB;AAAEpC,kBAAAA,GAAG,EAAHA;AAAF,iBAAzB,CALN;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAMQR,qBAAqB,CAAC,UAAD,EAAaQ,GAAb,CAN7B;;AAAA;AASCJ,gBAAAA,eAAe,CAACkB,IAAhB,CAAqB;AAAEd,kBAAAA,GAAG,EAAHA,GAAF;AAAOC,kBAAAA,IAAI,EAAJA;AAAP,iBAArB,EAAoC,KAAKW,KAAzC;AAEIoC,gBAAAA,GAXL,GAWWjD,KAAK,CAACoG,IAAN,EAXX;;AAAA,qBAYKnD,GAZL;AAAA;AAAA;AAAA;;AAaQoD,gBAAAA,OAbR,GAakB,KAAKrE,MAAL,CAAYO,IAAZ,CAAiB,cAAjB,KAAoC,KAbtD;AAcQ+D,gBAAAA,OAdR,GAckB,KAAKtE,MAAL,CAAYO,IAAZ,CAAiB,OAAjB,KAA6B,EAd/C;;AAAA,sBAeM,CAAC8D,OAAD,IAAY,CAACJ,cAfnB;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAgBezG,cAAc,CAACyD,GAAD,EAAMqD,OAAN,EAAeD,OAAf,CAhB7B;;AAAA;AAgBGpD,gBAAAA,GAhBH;;AAAA;AAmBE,oBAAIoD,OAAO,IAAIJ,cAAX,IAA6BK,OAAO,CAACC,MAAzC,EAAiD;AAChDrG,kBAAAA,IAAI,GAAGoG,OAAO,CAAC,CAAD,CAAP,CAAW3B,GAAlB;AACA;;AArBH;AAwBC;AACM6B,gBAAAA,eAzBP,GAyByB,KAAK9E,UAAL,CAAgBW,OAAhB,CAAwB;AAAEsC,kBAAAA,GAAG,EAAE,KAAKhD,OAAL,CAAamB;AAApB,iBAAxB,EAAkD;AAAE2D,kBAAAA,MAAM,EAAE;AAAEvG,oBAAAA,IAAI,EAAE;AAAR,mBAAV;AAAuBwG,kBAAAA,QAAQ,EAAE;AAAjC,iBAAlD,CAzBzB;;AA0BC,oBAAIF,eAAe,IAAItG,IAAnB,IAA2B,CAACsG,eAAe,CAACtG,IAAhD,EAAsD;AACrDA,kBAAAA,IAAI,GAAGyG,SAAP;AACAZ,kBAAAA,KAAK,GAAGY,SAAR;AACA;;AA7BF,qBA+BK1D,GA/BL;AAAA;AAAA;AAAA;;AAgCEtE,gBAAAA,WAAW,CAACiI,OAAZ,CAAoB3G,GAApB;AACAtB,gBAAAA,WAAW,CAACkI,iBAAZ,CAA8B5G,GAA9B;AAjCF;AAAA,iDAmCwBL,yBAAyB,CAAC;AAC/C+E,kBAAAA,GAAG,EAAE9G,MAAM,CAACiF,EAAP,EAD0C;AAE/C7C,kBAAAA,GAAG,EAAHA,GAF+C;AAG/C8F,kBAAAA,KAAK,EAALA,KAH+C;AAI/C7F,kBAAAA,IAAI,EAAJA,IAJ+C;AAK/C+C,kBAAAA,GAAG,EAAHA;AAL+C,iBAAD,CAnCjD;;AAAA;AAmCQX,gBAAAA,OAnCR;AAAA;AAAA;AAAA,iDA4CS,KAAKwE,kBAAL,CAAwBxE,OAAxB,CA5CT;;AAAA;AA6CG,qBAAKN,MAAL,CAAY+E,UAAZ,CAAuB,OAAvB,EAAgC9F,OAAhC,CAAwC,YAAxC;AA7CH;AAAA;;AAAA;AAAA;AAAA;AA+CGvB,gBAAAA,WAAW,cAAX;;AA/CH;AAAA,kDAiDSsG,IAAI,EAjDb;;AAAA;AAAA,qBAoDK,KAAKrE,OAAL,CAAamB,EApDlB;AAAA;AAAA;AAAA;;AAqDQR,gBAAAA,QArDR,GAqDkB,KAAKZ,UAAL,CAAgBW,OAAhB,CAAwB,KAAKV,OAAL,CAAamB,EAArC,CArDlB;AAsDQkE,gBAAAA,aAtDR,GAsDwB1E,QAAO,CAAC+C,WAAR,IAAuB/C,QAAO,CAAC+C,WAAR,CAAoB,CAApB,CAAvB,IAAiD/C,QAAO,CAAC+C,WAAR,CAAoB,CAApB,EAAuBC,WAtDhG;AAAA;;AAAA,qBAyDO0B,aAzDP;AAAA;AAAA;AAAA;;AAAA;AAAA,iDA0DU,KAAKC,qBAAL,CAA2B;AAAEtC,kBAAAA,GAAG,EAAE,KAAKhD,OAAL,CAAamB,EAApB;AAAwB7C,kBAAAA,GAAG,EAAHA,GAAxB;AAA6BgD,kBAAAA,GAAG,EAAE;AAAlC,iBAA3B,CA1DV;;AAAA;AAAA,kDA2DW+C,IAAI,EA3Df;;AAAA;AA8DG,qBAAK5C,YAAL,CAAkB,KAAKzB,OAAL,CAAamB,EAA/B;AACA,qBAAKoE,gBAAL,CAAsB5E,QAAtB,EAA+B0D,IAA/B;AA/DH;;AAAA;AAAA;AAAA;AAkEGtG,gBAAAA,WAAW,cAAX;;AAlEH;AAAA,kDAsEQsG,IAAI,EAtEZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAyEMc,kB;AAAN,gCAAyBxE,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACW,KAAK6E,kBAAL,CAAwB7E,OAAxB,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKC,qBAAKY,iBAAL;AALD;AAAA,iDAOW,KAAKkE,qBAAL,CAA2B9E,OAA3B,CAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,iDAWW,KAAK2E,qBAAL,iCAAgC3E,OAAhC;AAAyCqC,kBAAAA,GAAG,EAAE,KAAKhD,OAAL,CAAamB;AAA3D,mBAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAeC5E,gBAAAA,mBAAmB,CAACmJ,sBAApB,CAA2C/E,OAAO,CAACrC,GAAnD;AAfD;AAAA,iDAiBW,KAAKqH,mBAAL,CAAyBhF,OAAzB,CAjBX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,iDAqBO7C,qBAAqB,CAAC,aAAD,EAAgB6C,OAAhB,CArB5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAwBM6E,kB;AAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BlH,gBAAAA,GAA3B,SAA2BA,GAA3B,EAAgCC,IAAhC,SAAgCA,IAAhC,EAAsC+C,GAAtC,SAAsCA,GAAtC;;AAAA,sBACKA,GAAG,CAACsE,KAAJ,CAAU,CAAV,EAAa,CAAb,MAAoB,IADzB;AAAA;AAAA;AAAA;;AAAA,kDAES,KAFT;;AAAA;AAKOC,gBAAAA,QALP,GAKkBvE,GAAG,CAACsE,KAAJ,CAAU,CAAV,EAAanB,IAAb,EALlB;;AAAA,oBAMMjH,KAAK,CAACsI,IAAN,CAAWD,QAAX,CANN;AAAA;AAAA;AAAA;;AAAA,kDAOS,KAPT;;AAAA;AAUOE,gBAAAA,WAVP,GAUqB,KAAKhG,UAAL,CAAgBW,OAAhB,CAAwB;AAAEpC,kBAAAA,GAAG,EAAHA,GAAF;AAAOC,kBAAAA,IAAI,EAAJA;AAAP,iBAAxB,EAAuC;AAAEuG,kBAAAA,MAAM,EAAE;AAAEvB,oBAAAA,EAAE,EAAE;AAAN,mBAAV;AAAqByC,kBAAAA,IAAI,EAAE;AAAEzC,oBAAAA,EAAE,EAAE,CAAC;AAAP;AAA3B,iBAAvC,CAVrB;AAAA;AAAA,iDAWOzF,qBAAqB,CAAC,aAAD,EAAgB+H,QAAhB,EAA0BE,WAAW,CAAC/C,GAAtC,CAX5B;;AAAA;AAAA,kDAYQ,IAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAeMyC,qB;AAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BnE,gBAAAA,GAA9B,SAA8BA,GAA9B,EAAmChD,GAAnC,SAAmCA,GAAnC,EAAwCC,IAAxC,SAAwCA,IAAxC;AACO0H,gBAAAA,eADP,GACyBnJ,iBAAiB,CAACoJ,6BAAlB,CAAgD5E,GAAhD,CADzB;;AAAA,sBAEKxE,iBAAiB,CAAC8H,MAAlB,CAAyBqB,eAAzB,KAA6ChJ,QAAQ,CAAC4F,GAAT,CAAa,wBAAb,CAA7C,IAAuFvB,GAF5F;AAAA;AAAA;AAAA;;AAAA,kDAGS,KAHT;;AAAA;AAAA,sBAMK,CAACrE,QAAQ,CAAC4F,GAAT,CAAa,oBAAb,CAAD,IAAuC,CAAC5F,QAAQ,CAAC4F,GAAT,CAAa,8CAAb,CAAxC,IAAwG,KAAK7C,OAAL,CAAamB,EAN1H;AAAA;AAAA;AAAA;;AAAA,sBAOQ,IAAIgF,KAAJ,CAAU;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAAV,CAPR;;AAAA;AAUOC,gBAAAA,SAVP,GAUmB,YAAM;AACvB,sBAAMC,WAAW,GAAG,YAApB;AACA,sBAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,CAAClF,GAAD,CAAT,EAAgB;AAAEmF,oBAAAA,IAAI,EAAEH;AAAR,mBAAhB,CAApB;AACA,sBAAMI,QAAQ,GAAMzK,MAAM,CAAC0K,IAAP,GAAcC,QAApB,WAAkC,IAAIC,IAAJ,EAAlC,SAAd;AACA,sBAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACR,WAAD,CAAT,EAAwBG,QAAxB,EAAkC;AAC9CD,oBAAAA,IAAI,EAAEH,WADwC;AAE9CU,oBAAAA,YAAY,EAAEH,IAAI,CAACI,GAAL;AAFgC,mBAAlC,CAAb;AAIAvK,kBAAAA,UAAU,CAAC,CAAC;AAAEoK,oBAAAA,IAAI,EAAJA,IAAF;AAAQI,oBAAAA,IAAI,EAAER;AAAd,mBAAD,CAAD,EAA6B,MAAI,CAACxH,KAAlC,EAAyC;AAAEZ,oBAAAA,GAAG,EAAHA,GAAF;AAAOC,oBAAAA,IAAI,EAAJA;AAAP,mBAAzC,CAAV;AACAb,kBAAAA,eAAe,CAACyJ,KAAhB;AACA,iBApBF;;AAsBOC,gBAAAA,OAtBP,GAsBiB,YAAM;AACrBlJ,kBAAAA,eAAe,CAACiB,GAAhB,CAAoB,MAAI,CAACD,KAAzB,EAAgCoC,GAAhC;AACA5D,kBAAAA,eAAe,CAACyJ,KAAhB;AACA,iBAzBF;;AA2BCzJ,gBAAAA,eAAe,CAAC2J,IAAhB,CAAqB;AACpBC,kBAAAA,SAAS,EAAE3J,YADS;AAEpB4J,kBAAAA,KAAK,EAAE;AACNC,oBAAAA,KAAK,EAAE7K,CAAC,CAAC,kBAAD,CADF;AAEN8K,oBAAAA,QAAQ,EAAE9K,CAAC,CAAC,wCAAD,CAFL;AAGN0J,oBAAAA,SAAS,EAATA,SAHM;AAINe,oBAAAA,OAAO,EAAPA,OAJM;AAKNM,oBAAAA,QAAQ,EAAEN,OALJ;AAMNO,oBAAAA,OAAO,EAAE;AANH;AAFa,iBAArB;AA3BD,kDAuCQ,IAvCR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SA0CMrC,qB;AAAN,mCAA4B3E,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACMA,OAAO,CAACqC,GADd;AAAA;AAAA;AAAA;;AAAA,kDAES,KAFT;;AAAA;AAAA,qBAKKjG,YAAY,CAAC6K,eAAb,CAA6BjH,OAA7B,CALL;AAAA;AAAA;AAAA;;AAAA,kDAMS,KANT;;AAAA;AASC,qBAAK0B,YAAL;AATD;AAAA,iDAUOvE,qBAAqB,CAAC,eAAD,EAAkB6C,OAAlB,CAV5B;;AAAA;AAAA,kDAWQ,IAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAcMgF,mB;AAAN,iCAA0BkC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACKA,SAAS,CAACvG,GAAV,CAAc,CAAd,MAAqB,GAD1B;AAAA;AAAA;AAAA;;AAEQwG,gBAAAA,KAFR,GAEgBD,SAAS,CAACvG,GAAV,CAAcwG,KAAd,CAAoB,2BAApB,CAFhB;;AAAA,qBAGMA,KAHN;AAAA;AAAA;AAAA;;AAAA,qBAKOlL,aAAa,CAACmL,QAAd,CAAuBD,KAAK,CAAC,CAAD,CAA5B,CALP;AAAA;AAAA;AAAA;;AAMUE,gBAAAA,cANV,GAM2BpL,aAAa,CAACmL,QAAd,CAAuBD,KAAK,CAAC,CAAD,CAA5B,CAN3B;AAOIG,gBAAAA,OAAO,GAAGH,KAAK,CAAC,CAAD,CAAf;AACMI,gBAAAA,KARV,GAQkBJ,KAAK,CAAC,CAAD,CAAL,IAAY,EAR9B;;AAAA,sBAUQ,CAACE,cAAc,CAACG,UAAhB,IAA8BhL,uBAAuB,CAAC6K,cAAc,CAACG,UAAhB,EAA4B/L,OAAO,CAACyG,GAAR,CAAY,YAAZ,CAA5B,CAV7D;AAAA;AAAA;AAAA;;AAWK,oBAAImF,cAAc,CAACI,UAAnB,EAA+B;AAC9BJ,kBAAAA,cAAc,CAACK,QAAf,CAAwBJ,OAAxB,EAAiCC,KAAjC,EAAwCL,SAAxC;AACA,iBAFD,MAEO;AACNhL,kBAAAA,SAAS,CAACyL,EAAV,CAAaC,IAAb,CAAkB,sBAAlB,EAA0C;AAAEC,oBAAAA,MAAM,EAAE,CAAC;AAAEC,sBAAAA,SAAS,EAAE,oBAAb;AAAmCC,sBAAAA,SAAS,EAAE7B,IAAI,CAACI,GAAL,EAA9C;AAA0DgB,sBAAAA,OAAO,EAAPA;AAA1D,qBAAD;AAAV,mBAA1C;AACMU,kBAAAA,SAFA,GAEYlL,iBAAiB,CAACb,aAAa,CAACmL,QAAd,CAAuBE,OAAvB,EAAgCW,KAAjC,CAF7B;AAGN3M,kBAAAA,MAAM,CAAC4M,IAAP,CAAY,cAAZ,EAA4B;AAAEC,oBAAAA,GAAG,EAAEb,OAAP;AAAgBO,oBAAAA,MAAM,EAAEN,KAAxB;AAA+B5G,oBAAAA,GAAG,EAAEuG,SAApC;AAA+Cc,oBAAAA,SAAS,EAATA;AAA/C,mBAA5B,EAAwF,UAACI,GAAD,EAAMC,MAAN,EAAiB;AACxG,2BAAOhB,cAAc,CAACgB,MAAtB,KAAiC,UAAjC,IACChB,cAAc,CAACgB,MAAf,CAAsBD,GAAtB,EAA2BC,MAA3B,EAAmC;AAClCF,sBAAAA,GAAG,EAAEb,OAD6B;AAElCO,sBAAAA,MAAM,EAAEN,KAF0B;AAGlC5G,sBAAAA,GAAG,EAAEuG;AAH6B,qBAAnC,CADD;AAMA,mBAPD;AAQA;;AAxBN,kDA0BY,IA1BZ;;AAAA;AAAA,oBA8BQ5K,QAAQ,CAAC4F,GAAT,CAAa,uCAAb,CA9BR;AAAA;AAAA;AAAA;;AA+BUoG,gBAAAA,iBA/BV,GA+B8B;AACzBjG,kBAAAA,GAAG,EAAE9G,MAAM,CAACiF,EAAP,EADoB;AAEzB7C,kBAAAA,GAAG,EAAEuJ,SAAS,CAACvJ,GAFU;AAGzBiF,kBAAAA,EAAE,EAAE,IAAIsD,IAAJ,EAHqB;AAIzBvF,kBAAAA,GAAG,EAAEjF,OAAO,CAAC6M,EAAR,CAAW,iBAAX,EAA8B;AAAEjB,oBAAAA,OAAO,EAAE3L,UAAU,CAACwL,KAAK,CAAC,CAAD,CAAN;AAArB,mBAA9B,CAJoB;AAKzB/E,kBAAAA,CAAC,EAAE;AACF6D,oBAAAA,QAAQ,EAAE3J,QAAQ,CAAC4F,GAAT,CAAa,wBAAb,KAA0C;AADlD,mBALsB;AAQzB,6BAAS;AARgB,iBA/B9B;AA0CI,qBAAK9C,UAAL,CAAgBoJ,MAAhB,CAAuB;AAAEnG,kBAAAA,GAAG,EAAEiG,iBAAiB,CAACjG;AAAzB,iBAAvB,EAAuDiG,iBAAvD;AA1CJ,kDA2CW,IA3CX;;AAAA;AAAA,kDAgDQ,KAhDR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAmDA1D,gB;AAAA,8BAAiB5E,OAAjB,EAA2C;AAAA;;AAAA,UAAjB0D,IAAiB,uEAAV,YAAM,CAAE,CAAE;;AAC1C,UAAItH,YAAY,CAAC6K,eAAb,CAA6BjH,OAA7B,CAAJ,EAA2C;AAC1C,eAAO0D,IAAI,EAAX;AACA;;AAED,UAAM+E,IAAI,GACTzI,OAAO,CAAC0I,IAAR,IACAhM,KAAK,CAACqD,OAAN,CAAc;AACbsC,QAAAA,GAAG,EAAErC,OAAO,CAAC0I,IADA;AAEbC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAFO,OAAd,CAFD;;AAOA,UAAMlD,SAAS,GAAG,YAAM;AACvB,YAAI,MAAI,CAACrG,OAAL,CAAamB,EAAb,KAAoBR,OAAO,CAACqC,GAAhC,EAAqC;AACpC,UAAA,MAAI,CAACX,YAAL;AACA;;AAED,QAAA,MAAI,CAACmH,SAAL,CAAe7I,OAAf;;AAEA,QAAA,MAAI,CAACN,MAAL,CAAYY,KAAZ;;AACAoD,QAAAA,IAAI;AAEJ3G,QAAAA,eAAe,CAACyJ,KAAhB;AACAnJ,QAAAA,oBAAoB,CAAC;AAAEyI,UAAAA,IAAI,EAAE,SAAR;AAAmB9F,UAAAA,OAAO,EAAEhE,CAAC,CAAC,6BAAD;AAA7B,SAAD,CAApB;AACA,OAZD;;AAcA,UAAM8M,YAAY,GAAG,YAAM;AAC1B/L,QAAAA,eAAe,CAACyJ,KAAhB;;AACA,YAAI,MAAI,CAACnH,OAAL,CAAamB,EAAb,KAAoBR,OAAO,CAACqC,GAAhC,EAAqC;AACpC,UAAA,MAAI,CAACX,YAAL;AACA;;AACD,QAAA,MAAI,CAAChC,MAAL,CAAYY,KAAZ;;AACAoD,QAAAA,IAAI;AACJ,OAPD;;AASA3G,MAAAA,eAAe,CAAC2J,IAAhB,CAAqB;AACpBC,QAAAA,SAAS,EAAE3J,YADS;AAEpB4J,QAAAA,KAAK,EAAE;AACNC,UAAAA,KAAK,EAAE7K,CAAC,CAAC,cAAD,CADF;AAEN8K,UAAAA,QAAQ,EAAE2B,IAAI,GAAGzM,CAAC,CAAC,6DAAD,CAAJ,GAAsEA,CAAC,CAAC,iCAAD,CAF/E;AAGNgL,UAAAA,OAAO,EAAE,QAHH;AAIN+B,UAAAA,WAAW,EAAE/M,CAAC,CAAC,eAAD,CAJR;AAKN0J,UAAAA,SAAS,EAATA,SALM;AAMNe,UAAAA,OAAO,EAAEqC,YANH;AAON/B,UAAAA,QAAQ,EAAE+B;AAPJ;AAFa,OAArB;AAYA;;;;;SAEKD,S;AAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBxG,gBAAAA,GAAlB,SAAkBA,GAAlB,EAAuB1E,GAAvB,SAAuBA,GAAvB,EAA4BiF,EAA5B,SAA4BA,EAA5B;AACOoG,gBAAAA,WADP,GACqBxM,uBAAuB,CAAC,sBAAD,EAAyBmB,GAAzB,CAD5C;AAEOsL,gBAAAA,oBAFP,GAE8B3M,QAAQ,CAAC4F,GAAT,CAAa,4CAAb,CAF9B;;AAAA,sBAGK+G,oBAAoB,IAAID,WAAW,KAAK,KAH7C;AAAA;AAAA;AAAA;;AAKE,oBAAIpG,EAAJ,EAAQ;AACPD,kBAAAA,KAAK,GAAGvH,MAAM,CAACwH,EAAD,CAAd;AACA;;AAED,oBAAID,KAAJ,EAAW;AACVD,kBAAAA,aAAa,GAAGtH,MAAM,GAAGyH,IAAT,CAAcF,KAAd,EAAqB,SAArB,CAAhB;AACA;;AAXH,sBAYMD,aAAa,GAAGuG,oBAZtB;AAAA;AAAA;AAAA;;AAaG5L,gBAAAA,oBAAoB,CAAC;AAAEyI,kBAAAA,IAAI,EAAE,OAAR;AAAiB9F,kBAAAA,OAAO,EAAEhE,CAAC,CAAC,0BAAD;AAA3B,iBAAD,CAApB;AAbH;;AAAA;AAAA;AAAA,iDAkBOmB,qBAAqB,CAAC,eAAD,EAAkB;AAAEkF,kBAAAA,GAAG,EAAHA;AAAF,iBAAlB,CAlB5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;SAqBA6G,O;AAAA,qBAAQ1F,KAAR,EAAe;AACd,UAAuBjF,KAAvB,GAAiDiF,KAAjD,CAAQ2F,aAAR;AAAA,UAAqCC,OAArC,GAAiD5F,KAAjD,CAA8B6F,KAA9B;;AAEA,UAAID,OAAO,KAAKnM,QAAQ,CAACqM,MAArB,IAA+B,KAAKjK,OAAL,CAAa4B,OAAhD,EAAyD;AACxDuC,QAAAA,KAAK,CAAC+F,cAAN;AACA/F,QAAAA,KAAK,CAACgG,eAAN;;AAEA,YAAI,CAAC,KAAK1I,YAAL,CAAkB,KAAKzB,OAAL,CAAamB,EAA/B,CAAL,EAAyC;AACxC,eAAKI,iBAAL;AACA,eAAKc,YAAL;AACA,iBAAO,IAAP;AACA;;AAED;AACA;;AAED,UAAI0H,OAAO,KAAKnM,QAAQ,CAACwM,QAArB,IAAiCL,OAAO,KAAKnM,QAAQ,CAACyM,UAA1D,EAAsE;AACrE,YAAIlG,KAAK,CAACmG,QAAV,EAAoB;AACnB;AACA;;AAED,YAAM1G,cAAc,GAAG1E,KAAK,CAAC8E,YAA7B;;AAEA,YAAI+F,OAAO,KAAKnM,QAAQ,CAACwM,QAAzB,EAAmC;AAClC,cAAIxG,cAAc,KAAK,CAAvB,EAA0B;AACzB,iBAAKjC,aAAL;AACA,WAFD,MAEO,IAAI,CAACwC,KAAK,CAACoG,MAAX,EAAmB;AACzB;AACA;;AAED,cAAIpG,KAAK,CAACoG,MAAV,EAAkB;AACjB,iBAAKlK,MAAL,CAAYwD,iBAAZ,CAA8B,CAA9B;AACA;AACD,SAVD,MAUO;AACN,cAAID,cAAc,KAAK1E,KAAK,CAACb,KAAN,CAAYuG,MAAnC,EAA2C;AAC1C,iBAAKtC,aAAL;AACA,WAFD,MAEO,IAAI,CAAC6B,KAAK,CAACoG,MAAX,EAAmB;AACzB;AACA;;AAED,cAAIpG,KAAK,CAACoG,MAAV,EAAkB;AACjB,iBAAKlK,MAAL,CAAYwD,iBAAZ,CAA8B,CAAC,CAA/B;AACA;AACD;;AAEDM,QAAAA,KAAK,CAAC+F,cAAN;AACA/F,QAAAA,KAAK,CAACgG,eAAN;AACA;AACD;;;;;SAEDK,K;AAAA,mBAAMrG,KAAN,UAA4B;AAAA,UAAb7F,GAAa,UAAbA,GAAa;AAAA,UAARC,IAAQ,UAARA,IAAQ;AAC3B,UAAuBW,KAAvB,GAAiDiF,KAAjD,CAAQ2F,aAAR;AAAA,UAAqCC,OAArC,GAAiD5F,KAAjD,CAA8B6F,KAA9B;;AAEA,UAAI,CAACxK,MAAM,CAACiL,MAAP,CAAc7M,QAAd,EAAwB8M,QAAxB,CAAiCX,OAAjC,CAAL,EAAgD;AAC/C,YAAI7K,KAAK,CAACb,KAAN,CAAYoG,IAAZ,EAAJ,EAAwB;AACvBjI,UAAAA,UAAU,CAACmO,KAAX,CAAiBrM,GAAjB,EAAsB7B,eAAe,CAAC+H,WAAtC,EAAmD;AAAEjG,YAAAA,IAAI,EAAJA;AAAF,WAAnD;AACA,SAFD,MAEO;AACN/B,UAAAA,UAAU,CAAC+H,IAAX,CAAgBjG,GAAhB,EAAqB7B,eAAe,CAAC+H,WAArC,EAAkD;AAAEjG,YAAAA,IAAI,EAAJA;AAAF,WAAlD;AACA;AACD;;AAEDL,MAAAA,eAAe,CAACkB,IAAhB,CAAqB;AAAEd,QAAAA,GAAG,EAAHA,GAAF;AAAOC,QAAAA,IAAI,EAAJA;AAAP,OAArB,EAAoCW,KAApC;AACA;;;;;SAED0L,W;AAAA,yBAAYtM,GAAZ,EAAiBC,IAAjB,EAAuB;AAAA;;AACtB/B,MAAAA,UAAU,CAACqO,MAAX,CAAkBvM,GAAlB,EADsB,CAEtB;;AACA,UAAI,qBAAKY,KAAL,qFAAYuE,aAAZ,gFAA2BP,SAA3B,CAAqCC,QAArC,CAA8C,SAA9C,OAA6D,IAAjE,EAAuE;AACtE,YAAI,CAAC5E,IAAL,EAAW;AACV,eAAKgD,iBAAL;AACA,eAAKc,YAAL;AACA;;AACDnE,QAAAA,eAAe,CAACiB,GAAhB,CAAoB,KAAKD,KAAzB,EAAgC,EAAhC;AACAhB,QAAAA,eAAe,CAACkB,IAAhB,CAAqB;AAAEd,UAAAA,GAAG,EAAHA,GAAF;AAAOC,UAAAA,IAAI,EAAJA;AAAP,SAArB,EAAoC,KAAK8B,MAAzC;AACA;AACD","sourcesContent":["import moment from 'moment';\nimport _ from 'underscore';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { KonchatNotification } from './notification';\nimport { UserAction, USER_ACTIVITIES } from '../index';\nimport { fileUpload } from './fileUpload';\nimport { t, slashCommands, APIClient } from '../../../utils/client';\nimport { messageProperties, MessageTypes, readMessage } from '../../../ui-utils/client';\nimport { settings } from '../../../settings/client';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { hasAtLeastOnePermission } from '../../../authorization/client';\nimport { Messages, Rooms, ChatMessage, ChatSubscription } from '../../../models/client';\nimport { emoji } from '../../../emoji/client';\nimport { generateTriggerId } from '../../../ui-message/client/ActionManager';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport GenericModal from '../../../../client/components/GenericModal';\nimport { keyCodes } from '../../../../client/lib/utils/keyCodes';\nimport { prependReplies } from '../../../../client/lib/utils/prependReplies';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { handleError } from '../../../../client/lib/utils/handleError';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { onClientBeforeSendMessage } from '../../../../client/lib/onClientBeforeSendMessage';\n\nconst messageBoxState = {\n\tsaveValue: _.debounce(({ rid, tmid }, value) => {\n\t\tconst key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n\t\tvalue ? Meteor._localStorage.setItem(key, value) : Meteor._localStorage.removeItem(key);\n\t}, 1000),\n\n\trestoreValue: ({ rid, tmid }) => {\n\t\tconst key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n\t\treturn Meteor._localStorage.getItem(key);\n\t},\n\n\trestore: ({ rid, tmid }, input) => {\n\t\tconst value = messageBoxState.restoreValue({ rid, tmid });\n\t\tif (typeof value === 'string') {\n\t\t\tmessageBoxState.set(input, value);\n\t\t}\n\t},\n\n\tsave: ({ rid, tmid }, input) => {\n\t\tmessageBoxState.saveValue({ rid, tmid }, input.value);\n\t},\n\n\tset: (input, value) => {\n\t\tinput.value = value;\n\t\t$(input).trigger('change').trigger('input');\n\t},\n\n\tpurgeAll: () => {\n\t\tObject.keys(Meteor._localStorage)\n\t\t\t.filter((key) => key.indexOf('messagebox_') === 0)\n\t\t\t.forEach((key) => Meteor._localStorage.removeItem(key));\n\t},\n};\n\ncallbacks.add('afterLogoutCleanUp', messageBoxState.purgeAll, callbacks.priority.MEDIUM, 'chatMessages-after-logout-cleanup');\n\nexport class ChatMessages {\n\tconstructor(collection = ChatMessage) {\n\t\tthis.collection = collection;\n\t}\n\n\tediting = {};\n\n\trecords = {};\n\n\tinitializeWrapper(wrapper) {\n\t\tthis.wrapper = wrapper;\n\t}\n\n\tinitializeInput(input, { rid, tmid }) {\n\t\tthis.input = input;\n\t\tthis.$input = $(this.input);\n\n\t\tif (!input || !rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tmessageBoxState.restore({ rid, tmid }, input);\n\t\tthis.restoreReplies();\n\t\tthis.requestInputFocus();\n\t}\n\n\tasync restoreReplies() {\n\t\tconst mid = FlowRouter.getQueryParam('reply');\n\t\tif (!mid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = Messages.findOne(mid) || (await callWithErrorHandling('getSingleMessage', mid));\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$input.data('reply', [message]).trigger('dataChange');\n\t}\n\n\trequestInputFocus() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.input && window.matchMedia('screen and (min-device-width: 500px)').matches) {\n\t\t\t\tthis.input.focus();\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\trecordInputAsDraft() {\n\t\tconst message = this.collection.findOne(this.editing.id);\n\t\tconst record = this.records[this.editing.id] || {};\n\t\tconst draft = this.input.value;\n\n\t\tif (draft === message.msg) {\n\t\t\tthis.clearCurrentDraft();\n\t\t\treturn;\n\t\t}\n\n\t\trecord.draft = draft;\n\t\tthis.records[this.editing.id] = record;\n\t}\n\n\tclearCurrentDraft() {\n\t\tconst hasValue = this.records[this.editing.id];\n\t\tdelete this.records[this.editing.id];\n\t\treturn !!hasValue;\n\t}\n\n\tresetToDraft(id) {\n\t\tconst message = this.collection.findOne(id);\n\t\tconst oldValue = this.input.value;\n\t\tmessageBoxState.set(this.input, message.msg);\n\t\treturn oldValue !== message.msg;\n\t}\n\n\ttoPrevMessage() {\n\t\tconst { element } = this.editing;\n\t\tif (!element) {\n\t\t\tconst messages = Array.from(this.wrapper.querySelectorAll('.own:not(.system)'));\n\t\t\tconst message = messages.pop();\n\t\t\treturn message && this.edit(message, false);\n\t\t}\n\n\t\tfor (let previous = element.previousElementSibling; previous; previous = previous.previousElementSibling) {\n\t\t\tif (previous.matches('.own:not(.system)')) {\n\t\t\t\treturn this.edit(previous, false);\n\t\t\t}\n\t\t}\n\t\tthis.clearEditing();\n\t}\n\n\ttoNextMessage() {\n\t\tconst { element } = this.editing;\n\t\tif (element) {\n\t\t\tlet next;\n\t\t\tfor (next = element.nextElementSibling; next; next = next.nextElementSibling) {\n\t\t\t\tif (next.matches('.own:not(.system)')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext ? this.edit(next, true) : this.clearEditing();\n\t\t} else {\n\t\t\tthis.clearEditing();\n\t\t}\n\t}\n\n\tedit(element, isEditingTheNextOne) {\n\t\tconst message = this.collection.findOne(element.dataset.id);\n\n\t\tconst hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n\t\tconst editAllowed = settings.get('Message_AllowEditing');\n\t\tconst editOwn = message && message.u && message.u._id === Meteor.userId();\n\n\t\tif (!hasPermission && (!editAllowed || !editOwn)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (element.classList.contains('system')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n\t\tif (blockEditInMinutes && blockEditInMinutes !== 0) {\n\t\t\tlet currentTsDiff;\n\t\t\tlet msgTs;\n\t\t\tif (message.ts) {\n\t\t\t\tmsgTs = moment(message.ts);\n\t\t\t}\n\t\t\tif (msgTs) {\n\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t}\n\t\t\tif (currentTsDiff > blockEditInMinutes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst draft = this.records[message._id];\n\t\tlet msg = draft && draft.draft;\n\t\tmsg = msg || message.msg;\n\n\t\tthis.clearEditing();\n\n\t\tthis.editing.element = element;\n\t\tthis.editing.id = message._id;\n\t\tthis.input.parentElement.classList.add('editing');\n\t\telement.classList.add('editing');\n\n\t\tif (message.attachments && message.attachments[0].description) {\n\t\t\tmessageBoxState.set(this.input, message.attachments[0].description);\n\t\t} else {\n\t\t\tmessageBoxState.set(this.input, msg);\n\t\t}\n\n\t\tconst cursorPosition = isEditingTheNextOne ? 0 : -1;\n\t\tthis.input.focus();\n\t\tthis.$input.setCursorPosition(cursorPosition);\n\t}\n\n\tclearEditing() {\n\t\tif (!this.editing.element) {\n\t\t\tthis.editing.saved = this.input.value;\n\t\t\tthis.editing.savedCursor = this.input.selectionEnd;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.recordInputAsDraft();\n\t\tthis.input.parentElement.classList.remove('editing');\n\t\tthis.editing.element.classList.remove('editing');\n\t\tdelete this.editing.id;\n\t\tdelete this.editing.element;\n\n\t\tmessageBoxState.set(this.input, this.editing.saved || '');\n\t\tconst cursorPosition = this.editing.savedCursor ? this.editing.savedCursor : -1;\n\t\tthis.$input.setCursorPosition(cursorPosition);\n\t}\n\n\tasync send(event, { rid, tmid, value, tshow }, done = () => {}) {\n\t\tconst threadsEnabled = settings.get('Threads_enabled');\n\n\t\tUserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, { tmid });\n\n\t\tif (!ChatSubscription.findOne({ rid })) {\n\t\t\tawait callWithErrorHandling('joinRoom', rid);\n\t\t}\n\n\t\tmessageBoxState.save({ rid, tmid }, this.input);\n\n\t\tlet msg = value.trim();\n\t\tif (msg) {\n\t\t\tconst mention = this.$input.data('mention-user') || false;\n\t\t\tconst replies = this.$input.data('reply') || [];\n\t\t\tif (!mention || !threadsEnabled) {\n\t\t\t\tmsg = await prependReplies(msg, replies, mention);\n\t\t\t}\n\n\t\t\tif (mention && threadsEnabled && replies.length) {\n\t\t\t\ttmid = replies[0]._id;\n\t\t\t}\n\t\t}\n\n\t\t// don't add tmid or tshow if the message isn't part of a thread (it can happen if editing the main message of a thread)\n\t\tconst originalMessage = this.collection.findOne({ _id: this.editing.id }, { fields: { tmid: 1 }, reactive: false });\n\t\tif (originalMessage && tmid && !originalMessage.tmid) {\n\t\t\ttmid = undefined;\n\t\t\ttshow = undefined;\n\t\t}\n\n\t\tif (msg) {\n\t\t\treadMessage.readNow(rid);\n\t\t\treadMessage.refreshUnreadMark(rid);\n\n\t\t\tconst message = await onClientBeforeSendMessage({\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid,\n\t\t\t\ttshow,\n\t\t\t\ttmid,\n\t\t\t\tmsg,\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tawait this.processMessageSend(message);\n\t\t\t\tthis.$input.removeData('reply').trigger('dataChange');\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t\treturn done();\n\t\t}\n\n\t\tif (this.editing.id) {\n\t\t\tconst message = this.collection.findOne(this.editing.id);\n\t\t\tconst isDescription = message.attachments && message.attachments[0] && message.attachments[0].description;\n\n\t\t\ttry {\n\t\t\t\tif (isDescription) {\n\t\t\t\t\tawait this.processMessageEditing({ _id: this.editing.id, rid, msg: '' });\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\n\t\t\t\tthis.resetToDraft(this.editing.id);\n\t\t\t\tthis.confirmDeleteMsg(message, done);\n\t\t\t\treturn;\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}\n\n\t\treturn done();\n\t}\n\n\tasync processMessageSend(message) {\n\t\tif (await this.processSetReaction(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearCurrentDraft();\n\n\t\tif (await this.processTooLongMessage(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (await this.processMessageEditing({ ...message, _id: this.editing.id })) {\n\t\t\treturn;\n\t\t}\n\n\t\tKonchatNotification.removeRoomNotification(message.rid);\n\n\t\tif (await this.processSlashCommand(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait callWithErrorHandling('sendMessage', message);\n\t}\n\n\tasync processSetReaction({ rid, tmid, msg }) {\n\t\tif (msg.slice(0, 2) !== '+:') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst reaction = msg.slice(1).trim();\n\t\tif (!emoji.list[reaction]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst lastMessage = this.collection.findOne({ rid, tmid }, { fields: { ts: 1 }, sort: { ts: -1 } });\n\t\tawait callWithErrorHandling('setReaction', reaction, lastMessage._id);\n\t\treturn true;\n\t}\n\n\tasync processTooLongMessage({ msg, rid, tmid }) {\n\t\tconst adjustedMessage = messageProperties.messageWithoutEmojiShortnames(msg);\n\t\tif (messageProperties.length(adjustedMessage) <= settings.get('Message_MaxAllowedSize') && msg) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!settings.get('FileUpload_Enabled') || !settings.get('Message_AllowConvertLongMessagesToAttachment') || this.editing.id) {\n\t\t\tthrow new Error({ error: 'Message_too_long' });\n\t\t}\n\n\t\tconst onConfirm = () => {\n\t\t\tconst contentType = 'text/plain';\n\t\t\tconst messageBlob = new Blob([msg], { type: contentType });\n\t\t\tconst fileName = `${Meteor.user().username} - ${new Date()}.txt`;\n\t\t\tconst file = new File([messageBlob], fileName, {\n\t\t\t\ttype: contentType,\n\t\t\t\tlastModified: Date.now(),\n\t\t\t});\n\t\t\tfileUpload([{ file, name: fileName }], this.input, { rid, tmid });\n\t\t\timperativeModal.close();\n\t\t};\n\n\t\tconst onClose = () => {\n\t\t\tmessageBoxState.set(this.input, msg);\n\t\t\timperativeModal.close();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Message_too_long'),\n\t\t\t\tchildren: t('Send_it_as_attachment_instead_question'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose,\n\t\t\t\tonCancel: onClose,\n\t\t\t\tvariant: 'warning',\n\t\t\t},\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tasync processMessageEditing(message) {\n\t\tif (!message._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.clearEditing();\n\t\tawait callWithErrorHandling('updateMessage', message);\n\t\treturn true;\n\t}\n\n\tasync processSlashCommand(msgObject) {\n\t\tif (msgObject.msg[0] === '/') {\n\t\t\tconst match = msgObject.msg.match(/^\\/([^\\s]+)(?:\\s+(.*))?$/m);\n\t\t\tif (match) {\n\t\t\t\tlet command;\n\t\t\t\tif (slashCommands.commands[match[1]]) {\n\t\t\t\t\tconst commandOptions = slashCommands.commands[match[1]];\n\t\t\t\t\tcommand = match[1];\n\t\t\t\t\tconst param = match[2] || '';\n\n\t\t\t\t\tif (!commandOptions.permission || hasAtLeastOnePermission(commandOptions.permission, Session.get('openedRoom'))) {\n\t\t\t\t\t\tif (commandOptions.clientOnly) {\n\t\t\t\t\t\t\tcommandOptions.callback(command, param, msgObject);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPIClient.v1.post('statistics.telemetry', { params: [{ eventName: 'slashCommandsStats', timestamp: Date.now(), command }] });\n\t\t\t\t\t\t\tconst triggerId = generateTriggerId(slashCommands.commands[command].appId);\n\t\t\t\t\t\t\tMeteor.call('slashCommand', { cmd: command, params: param, msg: msgObject, triggerId }, (err, result) => {\n\t\t\t\t\t\t\t\ttypeof commandOptions.result === 'function' &&\n\t\t\t\t\t\t\t\t\tcommandOptions.result(err, result, {\n\t\t\t\t\t\t\t\t\t\tcmd: command,\n\t\t\t\t\t\t\t\t\t\tparams: param,\n\t\t\t\t\t\t\t\t\t\tmsg: msgObject,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!settings.get('Message_AllowUnrecognizedSlashCommand')) {\n\t\t\t\t\tconst invalidCommandMsg = {\n\t\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\t\trid: msgObject.rid,\n\t\t\t\t\t\tts: new Date(),\n\t\t\t\t\t\tmsg: TAPi18n.__('No_such_command', { command: escapeHTML(match[1]) }),\n\t\t\t\t\t\tu: {\n\t\t\t\t\t\t\tusername: settings.get('InternalHubot_Username') || 'rocket.cat',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprivate: true,\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.collection.upsert({ _id: invalidCommandMsg._id }, invalidCommandMsg);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconfirmDeleteMsg(message, done = () => {}) {\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn done();\n\t\t}\n\n\t\tconst room =\n\t\t\tmessage.drid &&\n\t\t\tRooms.findOne({\n\t\t\t\t_id: message.drid,\n\t\t\t\tprid: { $exists: true },\n\t\t\t});\n\n\t\tconst onConfirm = () => {\n\t\t\tif (this.editing.id === message._id) {\n\t\t\t\tthis.clearEditing();\n\t\t\t}\n\n\t\t\tthis.deleteMsg(message);\n\n\t\t\tthis.$input.focus();\n\t\t\tdone();\n\n\t\t\timperativeModal.close();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_entry_has_been_deleted') });\n\t\t};\n\n\t\tconst onCloseModal = () => {\n\t\t\timperativeModal.close();\n\t\t\tif (this.editing.id === message._id) {\n\t\t\t\tthis.clearEditing();\n\t\t\t}\n\t\t\tthis.$input.focus();\n\t\t\tdone();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Are_you_sure'),\n\t\t\t\tchildren: room ? t('The_message_is_a_discussion_you_will_not_be_able_to_recover') : t('You_will_not_be_able_to_recover'),\n\t\t\t\tvariant: 'danger',\n\t\t\t\tconfirmText: t('Yes_delete_it'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose: onCloseModal,\n\t\t\t\tonCancel: onCloseModal,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync deleteMsg({ _id, rid, ts }) {\n\t\tconst forceDelete = hasAtLeastOnePermission('force-delete-message', rid);\n\t\tconst blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes');\n\t\tif (blockDeleteInMinutes && forceDelete === false) {\n\t\t\tlet msgTs;\n\t\t\tif (ts) {\n\t\t\t\tmsgTs = moment(ts);\n\t\t\t}\n\t\t\tlet currentTsDiff;\n\t\t\tif (msgTs) {\n\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t}\n\t\t\tif (currentTsDiff > blockDeleteInMinutes) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Message_deleting_blocked') });\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tawait callWithErrorHandling('deleteMessage', { _id });\n\t}\n\n\tkeydown(event) {\n\t\tconst { currentTarget: input, which: keyCode } = event;\n\n\t\tif (keyCode === keyCodes.ESCAPE && this.editing.element) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tif (!this.resetToDraft(this.editing.id)) {\n\t\t\t\tthis.clearCurrentDraft();\n\t\t\t\tthis.clearEditing();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (keyCode === keyCodes.ARROW_UP || keyCode === keyCodes.ARROW_DOWN) {\n\t\t\tif (event.shiftKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst cursorPosition = input.selectionEnd;\n\n\t\t\tif (keyCode === keyCodes.ARROW_UP) {\n\t\t\t\tif (cursorPosition === 0) {\n\t\t\t\t\tthis.toPrevMessage();\n\t\t\t\t} else if (!event.altKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event.altKey) {\n\t\t\t\t\tthis.$input.setCursorPosition(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (cursorPosition === input.value.length) {\n\t\t\t\t\tthis.toNextMessage();\n\t\t\t\t} else if (!event.altKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event.altKey) {\n\t\t\t\t\tthis.$input.setCursorPosition(-1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\tkeyup(event, { rid, tmid }) {\n\t\tconst { currentTarget: input, which: keyCode } = event;\n\n\t\tif (!Object.values(keyCodes).includes(keyCode)) {\n\t\t\tif (input.value.trim()) {\n\t\t\t\tUserAction.start(rid, USER_ACTIVITIES.USER_TYPING, { tmid });\n\t\t\t} else {\n\t\t\t\tUserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, { tmid });\n\t\t\t}\n\t\t}\n\n\t\tmessageBoxState.save({ rid, tmid }, input);\n\t}\n\n\tonDestroyed(rid, tmid) {\n\t\tUserAction.cancel(rid);\n\t\t// TODO: check why we need too many ?. here :(\n\t\tif (this.input?.parentElement?.classList.contains('editing') === true) {\n\t\t\tif (!tmid) {\n\t\t\t\tthis.clearCurrentDraft();\n\t\t\t\tthis.clearEditing();\n\t\t\t}\n\t\t\tmessageBoxState.set(this.input, '');\n\t\t\tmessageBoxState.save({ rid, tmid }, this.$input);\n\t\t}\n\t}\n}\n"]},"sourceType":"module","hash":"d7d8515eddfb92ebf64040789cf3c73d283388ca"}
