{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/mentions/lib/MentionsParser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/mentions/lib/MentionsParser.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/mentions/lib/MentionsParser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/mentions/lib/MentionsParser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/mentions/lib/MentionsParser.js"}},"code":"var _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\n\nvar _createClass;\n\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 1);\nmodule.export({\n  MentionsParser: function () {\n    return MentionsParser;\n  }\n});\nvar escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML: function (v) {\n    escapeHTML = v;\n  }\n}, 0);\n\nvar userTemplateDefault = function (_ref) {\n  var prefix = _ref.prefix,\n      className = _ref.className,\n      mention = _ref.mention,\n      title = _ref.title,\n      label = _ref.label,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'username' : _ref$type;\n  return prefix + \"<a class=\\\"\" + className + \"\\\" data-\" + type + \"=\\\"\" + mention + \"\\\"\" + (title ? \" title=\\\"\" + title + \"\\\"\" : '') + \">\" + label + \"</a>\";\n};\n\nvar roomTemplateDefault = function (_ref2) {\n  var prefix = _ref2.prefix,\n      reference = _ref2.reference,\n      mention = _ref2.mention;\n  return prefix + \"<a class=\\\"mention-link mention-link--room\\\" data-channel=\\\"\" + reference + \"\\\">\" + (\"#\" + mention) + \"</a>\";\n};\n\nvar MentionsParser = /*#__PURE__*/function () {\n  function MentionsParser(_ref3) {\n    var _this = this;\n\n    var pattern = _ref3.pattern,\n        useRealName = _ref3.useRealName,\n        _me = _ref3.me,\n        _ref3$roomTemplate = _ref3.roomTemplate,\n        roomTemplate = _ref3$roomTemplate === void 0 ? roomTemplateDefault : _ref3$roomTemplate,\n        _ref3$userTemplate = _ref3.userTemplate,\n        userTemplate = _ref3$userTemplate === void 0 ? userTemplateDefault : _ref3$userTemplate;\n\n    this.replaceUsers = function (msg, _ref4, me) {\n      var mentions = _ref4.mentions,\n          temp = _ref4.temp;\n      return msg.replace(_this.userMentionRegex, function (match, prefix, mention) {\n        var classNames = ['mention-link'];\n\n        if (mention === 'all') {\n          classNames.push('mention-link--all');\n          classNames.push('mention-link--group');\n        } else if (mention === 'here') {\n          classNames.push('mention-link--here');\n          classNames.push('mention-link--group');\n        } else if (mention === me) {\n          classNames.push('mention-link--me');\n          classNames.push('mention-link--user');\n        } else {\n          classNames.push('mention-link--user');\n        }\n\n        var className = classNames.join(' ');\n\n        if (mention === 'all' || mention === 'here') {\n          return _this.userTemplate({\n            prefix: prefix,\n            className: className,\n            mention: mention,\n            label: mention,\n            type: 'group'\n          });\n        }\n\n        var filterUser = function (_ref5) {\n          var username = _ref5.username,\n              type = _ref5.type;\n          return (!type || type === 'user') && username === mention;\n        };\n\n        var filterTeam = function (_ref6) {\n          var name = _ref6.name,\n              type = _ref6.type;\n          return type === 'team' && name === mention;\n        };\n\n        var _filter = (mentions || []).filter(function (m) {\n          return filterUser(m) || filterTeam(m);\n        }),\n            _filter2 = _slicedToArray(_filter, 1),\n            mentionObj = _filter2[0];\n\n        var label = temp ? mention && escapeHTML(mention) : mentionObj && escapeHTML(mentionObj.type === 'team' || _this.useRealName ? mentionObj.name : mentionObj.username);\n\n        if (!label) {\n          return match;\n        }\n\n        return _this.userTemplate({\n          prefix: prefix,\n          className: className,\n          mention: mention,\n          label: label,\n          type: (mentionObj === null || mentionObj === void 0 ? void 0 : mentionObj.type) === 'team' ? 'team' : 'username',\n          title: _this.useRealName ? mention : label\n        });\n      });\n    };\n\n    this.replaceChannels = function (msg, _ref7) {\n      var temp = _ref7.temp,\n          channels = _ref7.channels;\n      return msg.replace(/&#39;/g, \"'\").replace(_this.channelMentionRegex, function (match, prefix, mention) {\n        if (!temp && !(channels && channels.find(function (c) {\n          return c.dname ? c.dname === mention : c.name === mention;\n        }))) {\n          return match;\n        }\n\n        var channel = channels && channels.find(function (_ref8) {\n          var name = _ref8.name,\n              dname = _ref8.dname;\n          return dname ? dname === mention : name === mention;\n        });\n        var reference = channel ? channel._id : mention;\n        return _this.roomTemplate({\n          prefix: prefix,\n          reference: reference,\n          channel: channel,\n          mention: mention\n        });\n      });\n    };\n\n    this.pattern = pattern;\n    this.useRealName = useRealName;\n    this.me = _me;\n    this.userTemplate = userTemplate;\n    this.roomTemplate = roomTemplate;\n  }\n\n  var _proto = MentionsParser.prototype;\n\n  _proto.getUserMentions = function () {\n    function getUserMentions(str) {\n      return (str.match(this.userMentionRegex) || []).map(function (match) {\n        return match.trim();\n      });\n    }\n\n    return getUserMentions;\n  }();\n\n  _proto.getChannelMentions = function () {\n    function getChannelMentions(str) {\n      return (str.match(this.channelMentionRegex) || []).map(function (match) {\n        return match.trim();\n      });\n    }\n\n    return getChannelMentions;\n  }();\n\n  _proto.parse = function () {\n    function parse(message) {\n      var msg = message && message.html || '';\n\n      if (!msg.trim()) {\n        return message;\n      }\n\n      msg = this.replaceUsers(msg, message, this.me);\n      msg = this.replaceChannels(msg, message, this.me);\n      message.html = msg;\n      return message;\n    }\n\n    return parse;\n  }();\n\n  _createClass(MentionsParser, [{\n    key: \"me\",\n    get: function () {\n      return typeof this._me === 'function' ? this._me() : this._me;\n    },\n    set: function (m) {\n      this._me = m;\n    }\n  }, {\n    key: \"pattern\",\n    get: function () {\n      return typeof this._pattern === 'function' ? this._pattern() : this._pattern;\n    },\n    set: function (p) {\n      this._pattern = p;\n    }\n  }, {\n    key: \"useRealName\",\n    get: function () {\n      return typeof this._useRealName === 'function' ? this._useRealName() : this._useRealName;\n    },\n    set: function (s) {\n      this._useRealName = s;\n    }\n  }, {\n    key: \"userMentionRegex\",\n    get: function () {\n      return new RegExp(\"(^|\\\\s|> ?)@(\" + this.pattern + \"(@(\" + this.pattern + \"))?)\", 'gm');\n    }\n  }, {\n    key: \"channelMentionRegex\",\n    get: function () {\n      return new RegExp(\"(^|\\\\s|>)#(\" + this.pattern + \"(@(\" + this.pattern + \"))?)\", 'gm');\n    }\n  }]);\n\n  return MentionsParser;\n}();","map":{"version":3,"sources":["app/mentions/lib/MentionsParser.js"],"names":["_slicedToArray","module","link","default","v","_createClass","export","MentionsParser","escapeHTML","userTemplateDefault","prefix","className","mention","title","label","type","roomTemplateDefault","reference","pattern","useRealName","me","roomTemplate","userTemplate","replaceUsers","msg","mentions","temp","replace","userMentionRegex","match","classNames","push","join","filterUser","username","filterTeam","name","filter","m","mentionObj","replaceChannels","channels","channelMentionRegex","find","c","dname","channel","_id","getUserMentions","str","map","trim","getChannelMentions","parse","message","html","_me","_pattern","p","_useRealName","s","RegExp"],"mappings":"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","sourcesContent":["import { escapeHTML } from '@rocket.chat/string-helpers';\n\nconst userTemplateDefault = ({ prefix, className, mention, title, label, type = 'username' }) =>\n\t`${prefix}<a class=\"${className}\" data-${type}=\"${mention}\"${title ? ` title=\"${title}\"` : ''}>${label}</a>`;\nconst roomTemplateDefault = ({ prefix, reference, mention }) =>\n\t`${prefix}<a class=\"mention-link mention-link--room\" data-channel=\"${reference}\">${`#${mention}`}</a>`;\nexport class MentionsParser {\n\tconstructor({ pattern, useRealName, me, roomTemplate = roomTemplateDefault, userTemplate = userTemplateDefault }) {\n\t\tthis.pattern = pattern;\n\t\tthis.useRealName = useRealName;\n\t\tthis.me = me;\n\t\tthis.userTemplate = userTemplate;\n\t\tthis.roomTemplate = roomTemplate;\n\t}\n\n\tset me(m) {\n\t\tthis._me = m;\n\t}\n\n\tget me() {\n\t\treturn typeof this._me === 'function' ? this._me() : this._me;\n\t}\n\n\tset pattern(p) {\n\t\tthis._pattern = p;\n\t}\n\n\tget pattern() {\n\t\treturn typeof this._pattern === 'function' ? this._pattern() : this._pattern;\n\t}\n\n\tset useRealName(s) {\n\t\tthis._useRealName = s;\n\t}\n\n\tget useRealName() {\n\t\treturn typeof this._useRealName === 'function' ? this._useRealName() : this._useRealName;\n\t}\n\n\tget userMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|> ?)@(${this.pattern}(@(${this.pattern}))?)`, 'gm');\n\t}\n\n\tget channelMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)#(${this.pattern}(@(${this.pattern}))?)`, 'gm');\n\t}\n\n\treplaceUsers = (msg, { mentions, temp }, me) =>\n\t\tmsg.replace(this.userMentionRegex, (match, prefix, mention) => {\n\t\t\tconst classNames = ['mention-link'];\n\n\t\t\tif (mention === 'all') {\n\t\t\t\tclassNames.push('mention-link--all');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === 'here') {\n\t\t\t\tclassNames.push('mention-link--here');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === me) {\n\t\t\t\tclassNames.push('mention-link--me');\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t} else {\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t}\n\n\t\t\tconst className = classNames.join(' ');\n\n\t\t\tif (mention === 'all' || mention === 'here') {\n\t\t\t\treturn this.userTemplate({ prefix, className, mention, label: mention, type: 'group' });\n\t\t\t}\n\n\t\t\tconst filterUser = ({ username, type }) => (!type || type === 'user') && username === mention;\n\t\t\tconst filterTeam = ({ name, type }) => type === 'team' && name === mention;\n\n\t\t\tconst [mentionObj] = (mentions || []).filter((m) => filterUser(m) || filterTeam(m));\n\n\t\t\tconst label = temp\n\t\t\t\t? mention && escapeHTML(mention)\n\t\t\t\t: mentionObj && escapeHTML(mentionObj.type === 'team' || this.useRealName ? mentionObj.name : mentionObj.username);\n\n\t\t\tif (!label) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\treturn this.userTemplate({\n\t\t\t\tprefix,\n\t\t\t\tclassName,\n\t\t\t\tmention,\n\t\t\t\tlabel,\n\t\t\t\ttype: mentionObj?.type === 'team' ? 'team' : 'username',\n\t\t\t\ttitle: this.useRealName ? mention : label,\n\t\t\t});\n\t\t});\n\n\treplaceChannels = (msg, { temp, channels }) =>\n\t\tmsg.replace(/&#39;/g, \"'\").replace(this.channelMentionRegex, (match, prefix, mention) => {\n\t\t\tif (\n\t\t\t\t!temp &&\n\t\t\t\t!(\n\t\t\t\t\tchannels &&\n\t\t\t\t\tchannels.find(function (c) {\n\t\t\t\t\t\treturn c.dname ? c.dname === mention : c.name === mention;\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tconst channel =\n\t\t\t\tchannels &&\n\t\t\t\tchannels.find(function ({ name, dname }) {\n\t\t\t\t\treturn dname ? dname === mention : name === mention;\n\t\t\t\t});\n\t\t\tconst reference = channel ? channel._id : mention;\n\t\t\treturn this.roomTemplate({ prefix, reference, channel, mention });\n\t\t});\n\n\tgetUserMentions(str) {\n\t\treturn (str.match(this.userMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tgetChannelMentions(str) {\n\t\treturn (str.match(this.channelMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tparse(message) {\n\t\tlet msg = (message && message.html) || '';\n\t\tif (!msg.trim()) {\n\t\t\treturn message;\n\t\t}\n\t\tmsg = this.replaceUsers(msg, message, this.me);\n\t\tmsg = this.replaceChannels(msg, message, this.me);\n\t\tmessage.html = msg;\n\t\treturn message;\n\t}\n}\n"]},"sourceType":"module","hash":"040b0c06530ebdb55644288515585c47c26da06f"}
