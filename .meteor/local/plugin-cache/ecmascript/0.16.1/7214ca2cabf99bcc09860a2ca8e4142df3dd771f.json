{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js"}},"code":"let useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet React, useCallback, useEffect, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 2);\nlet GenericModal;\nmodule.link(\"../../../../components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n\n}, 3);\nlet useSetModal;\nmodule.link(\"../../../../contexts/ModalContext\", {\n  useSetModal(v) {\n    useSetModal = v;\n  }\n\n}, 4);\nlet useEndpoint;\nmodule.link(\"../../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 5);\nlet useToastMessageDispatch;\nmodule.link(\"../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 6);\nlet useTranslation;\nmodule.link(\"../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 7);\nlet useUserRoom;\nmodule.link(\"../../../../contexts/UserContext\", {\n  useUserRoom(v) {\n    useUserRoom = v;\n  }\n\n}, 8);\nlet useForm;\nmodule.link(\"../../../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 9);\nlet PruneMessages;\nmodule.link(\"./PruneMessages\", {\n  default(v) {\n    PruneMessages = v;\n  }\n\n}, 10);\n\nconst getTimeZoneOffset = function () {\n  const offset = new Date().getTimezoneOffset();\n  const absOffset = Math.abs(offset);\n  return \"\".concat(offset < 0 ? '+' : '-').concat(\"00\".concat(Math.floor(absOffset / 60)).slice(-2), \":\").concat(\"00\".concat(absOffset % 60).slice(-2));\n};\n\nconst initialValues = {\n  newerDate: '',\n  newerTime: '',\n  olderDate: '',\n  olderTime: '',\n  users: [],\n  inclusive: false,\n  pinned: false,\n  discussion: false,\n  threads: false,\n  attached: false\n};\n\nconst PruneMessagesWithData = _ref => {\n  let {\n    rid,\n    tabBar\n  } = _ref;\n  const t = useTranslation();\n  const room = useUserRoom(rid);\n  room.type = room.t;\n  room.rid = rid;\n  const {\n    name,\n    usernames\n  } = room;\n  const setModal = useSetModal();\n  const onClickClose = useMutableCallback(() => tabBar && tabBar.close());\n  const closeModal = useCallback(() => setModal(null), [setModal]);\n  const dispatchToastMessage = useToastMessageDispatch();\n  const pruneMessages = useEndpoint('POST', 'rooms.cleanHistory');\n  const [fromDate, setFromDate] = useState(new Date('0001-01-01T00:00:00Z'));\n  const [toDate, setToDate] = useState(new Date('9999-12-31T23:59:59Z'));\n  const [callOutText, setCallOutText] = useState();\n  const [validateText, setValidateText] = useState();\n  const [counter, setCounter] = useState(0);\n  const {\n    values,\n    handlers,\n    reset\n  } = useForm(initialValues);\n  const {\n    newerDate,\n    newerTime,\n    olderDate,\n    olderTime,\n    users,\n    inclusive,\n    pinned,\n    discussion,\n    threads,\n    attached\n  } = values;\n  const {\n    handleNewerDate,\n    handleNewerTime,\n    handleOlderDate,\n    handleOlderTime,\n    handleUsers,\n    handleInclusive,\n    handlePinned,\n    handleDiscussion,\n    handleThreads,\n    handleAttached\n  } = handlers;\n  const onChangeUsers = useMutableCallback((value, action) => {\n    if (!action) {\n      if (users.includes(value)) {\n        return;\n      }\n\n      return handleUsers([...users, value]);\n    }\n\n    handleUsers(users.filter(current => current !== value));\n  });\n  const handlePrune = useMutableCallback(async () => {\n    const limit = 2000;\n\n    try {\n      if (counter === limit) {\n        return;\n      }\n\n      const {\n        count\n      } = await pruneMessages({\n        roomId: rid,\n        latest: toDate,\n        oldest: fromDate,\n        inclusive,\n        limit,\n        excludePinned: pinned,\n        filesOnly: attached,\n        ignoreDiscussion: discussion,\n        ignoreThreads: threads,\n        users\n      });\n      setCounter(count);\n\n      if (count < 1) {\n        throw new Error(t('No_messages_found_to_prune'));\n      }\n\n      dispatchToastMessage({\n        type: 'success',\n        message: \"\".concat(count, \" \").concat(t('messages_pruned'))\n      });\n      closeModal();\n      reset();\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error.message\n      });\n      closeModal();\n    }\n  });\n\n  const handleModal = () => {\n    setModal( /*#__PURE__*/React.createElement(GenericModal, {\n      variant: \"danger\",\n      onClose: closeModal,\n      onCancel: closeModal,\n      onConfirm: handlePrune,\n      confirmText: t('Yes_prune_them')\n    }, t('Prune_Modal')));\n  };\n\n  useEffect(() => {\n    if (newerDate) {\n      setFromDate(new Date(\"\".concat(newerDate, \"T\").concat(newerTime || '00:00', \":00\").concat(getTimeZoneOffset())));\n    }\n\n    if (olderDate) {\n      setToDate(new Date(\"\".concat(olderDate, \"T\").concat(olderTime || '24:00', \":00\").concat(getTimeZoneOffset())));\n    }\n  }, [newerDate, newerTime, olderDate, olderTime]);\n  useEffect(() => {\n    const exceptPinned = pinned ? \" \".concat(t('except_pinned', {})) : '';\n    const ifFrom = users.length ? \" \".concat(t('if_they_are_from', {\n      postProcess: 'sprintf',\n      sprintf: [users.map(element => element).join(', ')]\n    })) : '';\n    const filesOrMessages = t(attached ? 'files' : 'messages', {});\n\n    if (newerDate && olderDate) {\n      setCallOutText(t('Prune_Warning_between', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name, moment(fromDate).format('L LT'), moment(toDate).format('L LT')]\n      }) + exceptPinned + ifFrom);\n    } else if (newerDate) {\n      setCallOutText(t('Prune_Warning_after', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name, moment(fromDate).format('L LT')]\n      }) + exceptPinned + ifFrom);\n    } else if (olderDate) {\n      setCallOutText(t('Prune_Warning_before', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name, moment(toDate).format('L LT')]\n      }) + exceptPinned + ifFrom);\n    } else {\n      setCallOutText(t('Prune_Warning_all', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name || (usernames === null || usernames === void 0 ? void 0 : usernames.join(' x '))]\n      }) + exceptPinned + ifFrom);\n    }\n\n    if (fromDate > toDate) {\n      return setValidateText(t('Newer_than_may_not_exceed_Older_than', {\n        postProcess: 'sprintf',\n        sprintf: []\n      }));\n    }\n\n    if (isNaN(fromDate.getTime()) || isNaN(toDate.getTime())) {\n      return setValidateText(t('error-invalid-date', {\n        postProcess: 'sprintf',\n        sprintf: []\n      }));\n    }\n\n    setValidateText();\n  }, [newerDate, olderDate, fromDate, toDate, attached, name, t, pinned, users, usernames]);\n  return /*#__PURE__*/React.createElement(PruneMessages, {\n    callOutText: callOutText,\n    validateText: validateText,\n    newerDateTime: {\n      date: newerDate,\n      time: newerTime\n    },\n    handleNewerDateTime: {\n      date: handleNewerDate,\n      time: handleNewerTime\n    },\n    olderDateTime: {\n      date: olderDate,\n      time: olderTime\n    },\n    handleOlderDateTime: {\n      date: handleOlderDate,\n      time: handleOlderTime\n    },\n    users: users,\n    inclusive: inclusive,\n    pinned: pinned,\n    discussion: discussion,\n    threads: threads,\n    attached: attached,\n    handleInclusive: handleInclusive,\n    handlePinned: handlePinned,\n    handleDiscussion: handleDiscussion,\n    handleThreads: handleThreads,\n    handleAttached: handleAttached,\n    onClickClose: onClickClose,\n    onClickPrune: handleModal,\n    onChangeUsers: onChangeUsers\n  });\n};\n\nmodule.exportDefault(PruneMessagesWithData);","map":{"version":3,"sources":["client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js"],"names":["useMutableCallback","module","link","v","moment","default","React","useCallback","useEffect","useState","GenericModal","useSetModal","useEndpoint","useToastMessageDispatch","useTranslation","useUserRoom","useForm","PruneMessages","getTimeZoneOffset","offset","Date","getTimezoneOffset","absOffset","Math","abs","floor","slice","initialValues","newerDate","newerTime","olderDate","olderTime","users","inclusive","pinned","discussion","threads","attached","PruneMessagesWithData","rid","tabBar","t","room","type","name","usernames","setModal","onClickClose","close","closeModal","dispatchToastMessage","pruneMessages","fromDate","setFromDate","toDate","setToDate","callOutText","setCallOutText","validateText","setValidateText","counter","setCounter","values","handlers","reset","handleNewerDate","handleNewerTime","handleOlderDate","handleOlderTime","handleUsers","handleInclusive","handlePinned","handleDiscussion","handleThreads","handleAttached","onChangeUsers","value","action","includes","filter","current","handlePrune","limit","count","roomId","latest","oldest","excludePinned","filesOnly","ignoreDiscussion","ignoreThreads","Error","message","error","handleModal","exceptPinned","ifFrom","length","postProcess","sprintf","map","element","join","filesOrMessages","format","isNaN","getTime","date","time","exportDefault"],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport GenericModal from '../../../../components/GenericModal';\nimport { useSetModal } from '../../../../contexts/ModalContext';\nimport { useEndpoint } from '../../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { useUserRoom } from '../../../../contexts/UserContext';\nimport { useForm } from '../../../../hooks/useForm';\nimport PruneMessages from './PruneMessages';\n\nconst getTimeZoneOffset = function () {\n\tconst offset = new Date().getTimezoneOffset();\n\tconst absOffset = Math.abs(offset);\n\treturn `${offset < 0 ? '+' : '-'}${`00${Math.floor(absOffset / 60)}`.slice(-2)}:${`00${absOffset % 60}`.slice(-2)}`;\n};\n\nconst initialValues = {\n\tnewerDate: '',\n\tnewerTime: '',\n\tolderDate: '',\n\tolderTime: '',\n\tusers: [],\n\tinclusive: false,\n\tpinned: false,\n\tdiscussion: false,\n\tthreads: false,\n\tattached: false,\n};\n\nconst PruneMessagesWithData = ({ rid, tabBar }) => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\troom.type = room.t;\n\troom.rid = rid;\n\tconst { name, usernames } = room;\n\n\tconst setModal = useSetModal();\n\tconst onClickClose = useMutableCallback(() => tabBar && tabBar.close());\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst pruneMessages = useEndpoint('POST', 'rooms.cleanHistory');\n\n\tconst [fromDate, setFromDate] = useState(new Date('0001-01-01T00:00:00Z'));\n\tconst [toDate, setToDate] = useState(new Date('9999-12-31T23:59:59Z'));\n\tconst [callOutText, setCallOutText] = useState();\n\tconst [validateText, setValidateText] = useState();\n\tconst [counter, setCounter] = useState(0);\n\n\tconst { values, handlers, reset } = useForm(initialValues);\n\tconst { newerDate, newerTime, olderDate, olderTime, users, inclusive, pinned, discussion, threads, attached } = values;\n\n\tconst {\n\t\thandleNewerDate,\n\t\thandleNewerTime,\n\t\thandleOlderDate,\n\t\thandleOlderTime,\n\t\thandleUsers,\n\t\thandleInclusive,\n\t\thandlePinned,\n\t\thandleDiscussion,\n\t\thandleThreads,\n\t\thandleAttached,\n\t} = handlers;\n\n\tconst onChangeUsers = useMutableCallback((value, action) => {\n\t\tif (!action) {\n\t\t\tif (users.includes(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn handleUsers([...users, value]);\n\t\t}\n\t\thandleUsers(users.filter((current) => current !== value));\n\t});\n\n\tconst handlePrune = useMutableCallback(async () => {\n\t\tconst limit = 2000;\n\n\t\ttry {\n\t\t\tif (counter === limit) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { count } = await pruneMessages({\n\t\t\t\troomId: rid,\n\t\t\t\tlatest: toDate,\n\t\t\t\toldest: fromDate,\n\t\t\t\tinclusive,\n\t\t\t\tlimit,\n\t\t\t\texcludePinned: pinned,\n\t\t\t\tfilesOnly: attached,\n\t\t\t\tignoreDiscussion: discussion,\n\t\t\t\tignoreThreads: threads,\n\t\t\t\tusers,\n\t\t\t});\n\n\t\t\tsetCounter(count);\n\n\t\t\tif (count < 1) {\n\t\t\t\tthrow new Error(t('No_messages_found_to_prune'));\n\t\t\t}\n\n\t\t\tdispatchToastMessage({ type: 'success', message: `${count} ${t('messages_pruned')}` });\n\t\t\tcloseModal();\n\t\t\treset();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error.message });\n\t\t\tcloseModal();\n\t\t}\n\t});\n\n\tconst handleModal = () => {\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onClose={closeModal} onCancel={closeModal} onConfirm={handlePrune} confirmText={t('Yes_prune_them')}>\n\t\t\t\t{t('Prune_Modal')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tif (newerDate) {\n\t\t\tsetFromDate(new Date(`${newerDate}T${newerTime || '00:00'}:00${getTimeZoneOffset()}`));\n\t\t}\n\n\t\tif (olderDate) {\n\t\t\tsetToDate(new Date(`${olderDate}T${olderTime || '24:00'}:00${getTimeZoneOffset()}`));\n\t\t}\n\t}, [newerDate, newerTime, olderDate, olderTime]);\n\n\tuseEffect(() => {\n\t\tconst exceptPinned = pinned ? ` ${t('except_pinned', {})}` : '';\n\t\tconst ifFrom = users.length\n\t\t\t? ` ${t('if_they_are_from', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [users.map((element) => element).join(', ')],\n\t\t\t  })}`\n\t\t\t: '';\n\t\tconst filesOrMessages = t(attached ? 'files' : 'messages', {});\n\n\t\tif (newerDate && olderDate) {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_between', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT'), moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t} else if (newerDate) {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_after', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t} else if (olderDate) {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_before', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t} else {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_all', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name || usernames?.join(' x ')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t}\n\n\t\tif (fromDate > toDate) {\n\t\t\treturn setValidateText(\n\t\t\t\tt('Newer_than_may_not_exceed_Older_than', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [],\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tif (isNaN(fromDate.getTime()) || isNaN(toDate.getTime())) {\n\t\t\treturn setValidateText(\n\t\t\t\tt('error-invalid-date', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [],\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tsetValidateText();\n\t}, [newerDate, olderDate, fromDate, toDate, attached, name, t, pinned, users, usernames]);\n\n\treturn (\n\t\t<PruneMessages\n\t\t\tcallOutText={callOutText}\n\t\t\tvalidateText={validateText}\n\t\t\tnewerDateTime={{ date: newerDate, time: newerTime }}\n\t\t\thandleNewerDateTime={{ date: handleNewerDate, time: handleNewerTime }}\n\t\t\tolderDateTime={{ date: olderDate, time: olderTime }}\n\t\t\thandleOlderDateTime={{ date: handleOlderDate, time: handleOlderTime }}\n\t\t\tusers={users}\n\t\t\tinclusive={inclusive}\n\t\t\tpinned={pinned}\n\t\t\tdiscussion={discussion}\n\t\t\tthreads={threads}\n\t\t\tattached={attached}\n\t\t\thandleInclusive={handleInclusive}\n\t\t\thandlePinned={handlePinned}\n\t\t\thandleDiscussion={handleDiscussion}\n\t\t\thandleThreads={handleThreads}\n\t\t\thandleAttached={handleAttached}\n\t\t\tonClickClose={onClickClose}\n\t\t\tonClickPrune={handleModal}\n\t\t\tonChangeUsers={onChangeUsers}\n\t\t/>\n\t);\n};\n\nexport default PruneMessagesWithData;\n"]},"sourceType":"module","hash":"7214ca2cabf99bcc09860a2ca8e4142df3dd771f"}
