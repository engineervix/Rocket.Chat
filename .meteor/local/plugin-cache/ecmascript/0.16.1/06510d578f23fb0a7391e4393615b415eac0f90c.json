{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.js"}},"code":"const _excluded = [\"value\", \"label\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 1);\nlet AutoComplete, Option;\nmodule.link(\"@rocket.chat/fuselage\", {\n  AutoComplete(v) {\n    AutoComplete = v;\n  },\n\n  Option(v) {\n    Option = v;\n  }\n\n}, 0);\nlet React, memo, useMemo, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  memo(v) {\n    memo = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 1);\nlet useEndpointData;\nmodule.link(\"../../../../hooks/useEndpointData\", {\n  useEndpointData(v) {\n    useEndpointData = v;\n  }\n\n}, 2);\nlet Avatar;\nmodule.link(\"./Avatar\", {\n  default(v) {\n    Avatar = v;\n  }\n\n}, 3);\n\nconst TeamAutocomplete = props => {\n  const [filter, setFilter] = useState('');\n  const {\n    value: data\n  } = useEndpointData('teams.autocomplete', useMemo(() => ({\n    name: filter\n  }), [filter]));\n  const options = useMemo(() => data && data.teams.map(_ref => {\n    let {\n      name,\n      teamId,\n      _id,\n      avatarETag,\n      t\n    } = _ref;\n    return {\n      value: teamId,\n      label: {\n        name,\n        avatarETag,\n        type: t,\n        _id\n      }\n    };\n  }) || [], [data]);\n  return /*#__PURE__*/React.createElement(AutoComplete, _extends({}, props, {\n    filter: filter,\n    setFilter: setFilter,\n    renderSelected: _ref2 => {\n      let {\n        label\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Avatar, _extends({\n        size: \"x20\"\n      }, label, {\n        test: \"selected\"\n      })), \" \", label.name);\n    },\n    renderItem: _ref3 => {\n      let {\n        value,\n        label\n      } = _ref3,\n          props = _objectWithoutProperties(_ref3, _excluded);\n\n      return /*#__PURE__*/React.createElement(Option, _extends({\n        key: value\n      }, props, {\n        label: label.name,\n        avatar: /*#__PURE__*/React.createElement(Avatar, label)\n      }));\n    },\n    options: options\n  }));\n};\n\nmodule.exportDefault( /*#__PURE__*/memo(TeamAutocomplete));","map":{"version":3,"sources":["client/views/teams/contextualBar/TeamAutocomplete/TeamAutocomplete.js"],"names":["_objectWithoutProperties","module","link","default","v","_extends","AutoComplete","Option","React","memo","useMemo","useState","useEndpointData","Avatar","TeamAutocomplete","props","filter","setFilter","value","data","name","options","teams","map","teamId","_id","avatarETag","t","label","type","exportDefault"],"mappings":"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","sourcesContent":["import { AutoComplete, Option } from '@rocket.chat/fuselage';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useEndpointData } from '../../../../hooks/useEndpointData';\nimport Avatar from './Avatar';\n\nconst TeamAutocomplete = (props) => {\n\tconst [filter, setFilter] = useState('');\n\n\tconst { value: data } = useEndpointData(\n\t\t'teams.autocomplete',\n\t\tuseMemo(() => ({ name: filter }), [filter]),\n\t);\n\n\tconst options = useMemo(\n\t\t() =>\n\t\t\t(data &&\n\t\t\t\tdata.teams.map(({ name, teamId, _id, avatarETag, t }) => ({\n\t\t\t\t\tvalue: teamId,\n\t\t\t\t\tlabel: { name, avatarETag, type: t, _id },\n\t\t\t\t}))) ||\n\t\t\t[],\n\t\t[data],\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\tsetFilter={setFilter}\n\t\t\trenderSelected={({ label }) => (\n\t\t\t\t<>\n\t\t\t\t\t<Avatar size='x20' {...label} test='selected' /> {label.name}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\trenderItem={({ value, label, ...props }) => <Option key={value} {...props} label={label.name} avatar={<Avatar {...label} />} />}\n\t\t\toptions={options}\n\t\t/>\n\t);\n};\n\nexport default memo(TeamAutocomplete);\n"]},"sourceType":"module","hash":"06510d578f23fb0a7391e4393615b415eac0f90c"}
