{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/import/PrepareImportPage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/import/PrepareImportPage.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/import/PrepareImportPage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/import/PrepareImportPage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/PrepareImportPage.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Badge, Box, Button, ButtonGroup, Icon, Margins, Throbber, Tabs;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Badge(v) {\n    Badge = v;\n  },\n\n  Box(v) {\n    Box = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n\n  Icon(v) {\n    Icon = v;\n  },\n\n  Margins(v) {\n    Margins = v;\n  },\n\n  Throbber(v) {\n    Throbber = v;\n  },\n\n  Tabs(v) {\n    Tabs = v;\n  }\n\n}, 0);\nlet useDebouncedValue, useSafely;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue(v) {\n    useDebouncedValue = v;\n  },\n\n  useSafely(v) {\n    useSafely = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet React, useEffect, useState, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useEffect(v) {\n    useEffect = v;\n  },\n\n  useState(v) {\n    useState = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 3);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 4);\nlet ProgressStep, ImportWaitingStates, ImportFileReadyStates, ImportPreparingStartedStates, ImportingStartedStates, ImportingErrorStates;\nmodule.link(\"../../../../app/importer/lib/ImporterProgressStep\", {\n  ProgressStep(v) {\n    ProgressStep = v;\n  },\n\n  ImportWaitingStates(v) {\n    ImportWaitingStates = v;\n  },\n\n  ImportFileReadyStates(v) {\n    ImportFileReadyStates = v;\n  },\n\n  ImportPreparingStartedStates(v) {\n    ImportPreparingStartedStates = v;\n  },\n\n  ImportingStartedStates(v) {\n    ImportingStartedStates = v;\n  },\n\n  ImportingErrorStates(v) {\n    ImportingErrorStates = v;\n  }\n\n}, 5);\nlet Page;\nmodule.link(\"../../../components/Page\", {\n  default(v) {\n    Page = v;\n  }\n\n}, 6);\nlet useRoute;\nmodule.link(\"../../../contexts/RouterContext\", {\n  useRoute(v) {\n    useRoute = v;\n  }\n\n}, 7);\nlet useEndpoint;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 8);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 9);\nlet PrepareChannels;\nmodule.link(\"./PrepareChannels\", {\n  default(v) {\n    PrepareChannels = v;\n  }\n\n}, 10);\nlet PrepareUsers;\nmodule.link(\"./PrepareUsers\", {\n  default(v) {\n    PrepareUsers = v;\n  }\n\n}, 11);\nlet useErrorHandler;\nmodule.link(\"./useErrorHandler\", {\n  useErrorHandler(v) {\n    useErrorHandler = v;\n  }\n\n}, 12);\n\nconst waitFor = (fn, predicate) => new Promise((resolve, reject) => {\n  const callPromise = () => {\n    fn().then(result => {\n      if (predicate(result)) {\n        resolve(result);\n        return;\n      }\n\n      setTimeout(callPromise, 1000);\n    }, reject);\n  };\n\n  callPromise();\n});\n\nfunction PrepareImportPage() {\n  const t = useTranslation();\n  const handleError = useErrorHandler();\n  const [isPreparing, setPreparing] = useSafely(useState(true));\n  const [progressRate, setProgressRate] = useSafely(useState(null));\n  const [status, setStatus] = useSafely(useState(null));\n  const [messageCount, setMessageCount] = useSafely(useState(0));\n  const [users, setUsers] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [isImporting, setImporting] = useSafely(useState(false));\n  const usersCount = useMemo(() => users.filter(_ref => {\n    let {\n      do_import\n    } = _ref;\n    return do_import;\n  }).length, [users]);\n  const channelsCount = useMemo(() => channels.filter(_ref2 => {\n    let {\n      do_import\n    } = _ref2;\n    return do_import;\n  }).length, [channels]);\n  const importHistoryRoute = useRoute('admin-import');\n  const newImportRoute = useRoute('admin-import-new');\n  const importProgressRoute = useRoute('admin-import-progress');\n  const getImportFileData = useEndpoint('GET', 'getImportFileData');\n  const getCurrentImportOperation = useEndpoint('GET', 'getCurrentImportOperation');\n  const startImport = useEndpoint('POST', 'startImport');\n  useEffect(() => {\n    const streamer = new Meteor.Streamer('importers');\n\n    const handleProgressUpdated = _ref3 => {\n      let {\n        rate\n      } = _ref3;\n      setProgressRate(rate);\n    };\n\n    streamer.on('progress', handleProgressUpdated);\n    return () => {\n      streamer.removeListener('progress', handleProgressUpdated);\n    };\n  }, [setProgressRate]);\n  useEffect(() => {\n    const loadImportFileData = async () => {\n      try {\n        const data = await waitFor(getImportFileData, data => data && !data.waiting);\n\n        if (!data) {\n          handleError(t('Importer_not_setup'));\n          importHistoryRoute.push();\n          return;\n        }\n\n        if (data.step) {\n          handleError(t('Failed_To_Load_Import_Data'));\n          importHistoryRoute.push();\n          return;\n        }\n\n        setMessageCount(data.message_count);\n        setUsers(data.users.map(user => _objectSpread(_objectSpread({}, user), {}, {\n          do_import: true\n        })));\n        setChannels(data.channels.map(channel => _objectSpread(_objectSpread({}, channel), {}, {\n          do_import: true\n        })));\n        setPreparing(false);\n        setProgressRate(null);\n      } catch (error) {\n        handleError(error, t('Failed_To_Load_Import_Data'));\n        importHistoryRoute.push();\n      }\n    };\n\n    const loadCurrentOperation = async () => {\n      try {\n        const {\n          operation\n        } = await waitFor(getCurrentImportOperation, _ref4 => {\n          let {\n            operation\n          } = _ref4;\n          return operation.valid && !ImportWaitingStates.includes(operation.status);\n        });\n\n        if (!operation.valid) {\n          newImportRoute.push();\n          return;\n        }\n\n        if (ImportingStartedStates.includes(operation.status)) {\n          importProgressRoute.push();\n          return;\n        }\n\n        if (operation.status === ProgressStep.USER_SELECTION || ImportPreparingStartedStates.includes(operation.status) || ImportFileReadyStates.includes(operation.status)) {\n          setStatus(operation.status);\n          loadImportFileData();\n          return;\n        }\n\n        if (ImportingErrorStates.includes(operation.status)) {\n          handleError(t('Import_Operation_Failed'));\n          importHistoryRoute.push();\n          return;\n        }\n\n        if (operation.status === ProgressStep.DONE) {\n          importHistoryRoute.push();\n          return;\n        }\n\n        handleError(t('Unknown_Import_State'));\n        importHistoryRoute.push();\n      } catch (error) {\n        handleError(t('Failed_To_Load_Import_Data'));\n        importHistoryRoute.push();\n      }\n    };\n\n    loadCurrentOperation();\n  }, [getCurrentImportOperation, getImportFileData, handleError, importHistoryRoute, importProgressRoute, newImportRoute, setMessageCount, setPreparing, setProgressRate, setStatus, t]);\n\n  const handleBackToImportsButtonClick = () => {\n    importHistoryRoute.push();\n  };\n\n  const handleStartButtonClick = async () => {\n    setImporting(true);\n\n    try {\n      await startImport({\n        input: {\n          users,\n          channels\n        }\n      });\n      importProgressRoute.push();\n    } catch (error) {\n      handleError(error, t('Failed_To_Start_Import'));\n      importHistoryRoute.push();\n    }\n  };\n\n  const [tab, setTab] = useState('users');\n  const handleTabClick = useMemo(() => tab => () => setTab(tab), []);\n  const statusDebounced = useDebouncedValue(status, 100);\n\n  const handleMinimumImportData = () => !!(!usersCount && !channelsCount && !messageCount || !usersCount && !channelsCount && messageCount !== 0);\n\n  return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(Page.Header, {\n    title: t('Importing_Data')\n  }, /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(Button, {\n    ghost: true,\n    onClick: handleBackToImportsButtonClick\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"back\"\n  }), \" \", t('Back_to_imports')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    disabled: isImporting || handleMinimumImportData(),\n    onClick: handleStartButtonClick\n  }, t('Importer_Prepare_Start_Import')))), /*#__PURE__*/React.createElement(Page.ScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    marginInline: \"auto\",\n    marginBlock: \"x24\",\n    width: \"full\",\n    maxWidth: \"590px\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    is: \"h2\",\n    fontScale: \"p2m\"\n  }, statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_'))), !isPreparing && /*#__PURE__*/React.createElement(Tabs, {\n    flexShrink: 0\n  }, /*#__PURE__*/React.createElement(Tabs.Item, {\n    selected: tab === 'users',\n    onClick: handleTabClick('users')\n  }, t('Users'), \" \", /*#__PURE__*/React.createElement(Badge, null, usersCount)), /*#__PURE__*/React.createElement(Tabs.Item, {\n    selected: tab === 'channels',\n    onClick: handleTabClick('channels')\n  }, t('Channels'), \" \", /*#__PURE__*/React.createElement(Badge, null, channelsCount)), /*#__PURE__*/React.createElement(Tabs.Item, {\n    disabled: true\n  }, t('Messages'), /*#__PURE__*/React.createElement(Badge, null, messageCount))), /*#__PURE__*/React.createElement(Margins, {\n    block: \"x24\"\n  }, isPreparing && /*#__PURE__*/React.createElement(React.Fragment, null, progressRate ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontScale: \"p2\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    is: \"progress\",\n    value: (progressRate * 10).toFixed(0),\n    max: \"1000\",\n    marginInlineEnd: \"x24\"\n  }), /*#__PURE__*/React.createElement(Box, {\n    is: \"span\"\n  }, s.numberFormat(progressRate, 0), \"%\")) : /*#__PURE__*/React.createElement(Throbber, {\n    justifyContent: \"center\"\n  })), !isPreparing && tab === 'users' && /*#__PURE__*/React.createElement(PrepareUsers, {\n    usersCount: usersCount,\n    users: users,\n    setUsers: setUsers\n  }), !isPreparing && tab === 'channels' && /*#__PURE__*/React.createElement(PrepareChannels, {\n    channels: channels,\n    channelsCount: channelsCount,\n    setChannels: setChannels\n  })))));\n}\n\nmodule.exportDefault(PrepareImportPage);","map":{"version":3,"sources":["client/views/admin/import/PrepareImportPage.js"],"names":["_objectSpread","module","link","default","v","Badge","Box","Button","ButtonGroup","Icon","Margins","Throbber","Tabs","useDebouncedValue","useSafely","Meteor","React","useEffect","useState","useMemo","s","ProgressStep","ImportWaitingStates","ImportFileReadyStates","ImportPreparingStartedStates","ImportingStartedStates","ImportingErrorStates","Page","useRoute","useEndpoint","useTranslation","PrepareChannels","PrepareUsers","useErrorHandler","waitFor","fn","predicate","Promise","resolve","reject","callPromise","then","result","setTimeout","PrepareImportPage","t","handleError","isPreparing","setPreparing","progressRate","setProgressRate","status","setStatus","messageCount","setMessageCount","users","setUsers","channels","setChannels","isImporting","setImporting","usersCount","filter","do_import","length","channelsCount","importHistoryRoute","newImportRoute","importProgressRoute","getImportFileData","getCurrentImportOperation","startImport","streamer","Streamer","handleProgressUpdated","rate","on","removeListener","loadImportFileData","data","waiting","push","step","message_count","map","user","channel","error","loadCurrentOperation","operation","valid","includes","USER_SELECTION","DONE","handleBackToImportsButtonClick","handleStartButtonClick","input","tab","setTab","handleTabClick","statusDebounced","handleMinimumImportData","replace","toFixed","numberFormat","exportDefault"],"mappings":"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","sourcesContent":["import { Badge, Box, Button, ButtonGroup, Icon, Margins, Throbber, Tabs } from '@rocket.chat/fuselage';\nimport { useDebouncedValue, useSafely } from '@rocket.chat/fuselage-hooks';\nimport { Meteor } from 'meteor/meteor';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport s from 'underscore.string';\n\nimport {\n\tProgressStep,\n\tImportWaitingStates,\n\tImportFileReadyStates,\n\tImportPreparingStartedStates,\n\tImportingStartedStates,\n\tImportingErrorStates,\n} from '../../../../app/importer/lib/ImporterProgressStep';\nimport Page from '../../../components/Page';\nimport { useRoute } from '../../../contexts/RouterContext';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport PrepareChannels from './PrepareChannels';\nimport PrepareUsers from './PrepareUsers';\nimport { useErrorHandler } from './useErrorHandler';\n\nconst waitFor = (fn, predicate) =>\n\tnew Promise((resolve, reject) => {\n\t\tconst callPromise = () => {\n\t\t\tfn().then((result) => {\n\t\t\t\tif (predicate(result)) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(callPromise, 1000);\n\t\t\t}, reject);\n\t\t};\n\n\t\tcallPromise();\n\t});\n\nfunction PrepareImportPage() {\n\tconst t = useTranslation();\n\tconst handleError = useErrorHandler();\n\n\tconst [isPreparing, setPreparing] = useSafely(useState(true));\n\tconst [progressRate, setProgressRate] = useSafely(useState(null));\n\tconst [status, setStatus] = useSafely(useState(null));\n\tconst [messageCount, setMessageCount] = useSafely(useState(0));\n\tconst [users, setUsers] = useState([]);\n\tconst [channels, setChannels] = useState([]);\n\tconst [isImporting, setImporting] = useSafely(useState(false));\n\n\tconst usersCount = useMemo(() => users.filter(({ do_import }) => do_import).length, [users]);\n\tconst channelsCount = useMemo(() => channels.filter(({ do_import }) => do_import).length, [channels]);\n\n\tconst importHistoryRoute = useRoute('admin-import');\n\tconst newImportRoute = useRoute('admin-import-new');\n\tconst importProgressRoute = useRoute('admin-import-progress');\n\n\tconst getImportFileData = useEndpoint('GET', 'getImportFileData');\n\tconst getCurrentImportOperation = useEndpoint('GET', 'getCurrentImportOperation');\n\tconst startImport = useEndpoint('POST', 'startImport');\n\n\tuseEffect(() => {\n\t\tconst streamer = new Meteor.Streamer('importers');\n\n\t\tconst handleProgressUpdated = ({ rate }) => {\n\t\t\tsetProgressRate(rate);\n\t\t};\n\n\t\tstreamer.on('progress', handleProgressUpdated);\n\n\t\treturn () => {\n\t\t\tstreamer.removeListener('progress', handleProgressUpdated);\n\t\t};\n\t}, [setProgressRate]);\n\n\tuseEffect(() => {\n\t\tconst loadImportFileData = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await waitFor(getImportFileData, (data) => data && !data.waiting);\n\n\t\t\t\tif (!data) {\n\t\t\t\t\thandleError(t('Importer_not_setup'));\n\t\t\t\t\timportHistoryRoute.push();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (data.step) {\n\t\t\t\t\thandleError(t('Failed_To_Load_Import_Data'));\n\t\t\t\t\timportHistoryRoute.push();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetMessageCount(data.message_count);\n\t\t\t\tsetUsers(data.users.map((user) => ({ ...user, do_import: true })));\n\t\t\t\tsetChannels(data.channels.map((channel) => ({ ...channel, do_import: true })));\n\t\t\t\tsetPreparing(false);\n\t\t\t\tsetProgressRate(null);\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\timportHistoryRoute.push();\n\t\t\t}\n\t\t};\n\n\t\tconst loadCurrentOperation = async () => {\n\t\t\ttry {\n\t\t\t\tconst { operation } = await waitFor(\n\t\t\t\t\tgetCurrentImportOperation,\n\t\t\t\t\t({ operation }) => operation.valid && !ImportWaitingStates.includes(operation.status),\n\t\t\t\t);\n\n\t\t\t\tif (!operation.valid) {\n\t\t\t\t\tnewImportRoute.push();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingStartedStates.includes(operation.status)) {\n\t\t\t\t\timportProgressRoute.push();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\toperation.status === ProgressStep.USER_SELECTION ||\n\t\t\t\t\tImportPreparingStartedStates.includes(operation.status) ||\n\t\t\t\t\tImportFileReadyStates.includes(operation.status)\n\t\t\t\t) {\n\t\t\t\t\tsetStatus(operation.status);\n\t\t\t\t\tloadImportFileData();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingErrorStates.includes(operation.status)) {\n\t\t\t\t\thandleError(t('Import_Operation_Failed'));\n\t\t\t\t\timportHistoryRoute.push();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (operation.status === ProgressStep.DONE) {\n\t\t\t\t\timportHistoryRoute.push();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thandleError(t('Unknown_Import_State'));\n\t\t\t\timportHistoryRoute.push();\n\t\t\t} catch (error) {\n\t\t\t\thandleError(t('Failed_To_Load_Import_Data'));\n\t\t\t\timportHistoryRoute.push();\n\t\t\t}\n\t\t};\n\n\t\tloadCurrentOperation();\n\t}, [\n\t\tgetCurrentImportOperation,\n\t\tgetImportFileData,\n\t\thandleError,\n\t\timportHistoryRoute,\n\t\timportProgressRoute,\n\t\tnewImportRoute,\n\t\tsetMessageCount,\n\t\tsetPreparing,\n\t\tsetProgressRate,\n\t\tsetStatus,\n\t\tt,\n\t]);\n\n\tconst handleBackToImportsButtonClick = () => {\n\t\timportHistoryRoute.push();\n\t};\n\n\tconst handleStartButtonClick = async () => {\n\t\tsetImporting(true);\n\n\t\ttry {\n\t\t\tawait startImport({ input: { users, channels } });\n\t\t\timportProgressRoute.push();\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_Start_Import'));\n\t\t\timportHistoryRoute.push();\n\t\t}\n\t};\n\n\tconst [tab, setTab] = useState('users');\n\tconst handleTabClick = useMemo(() => (tab) => () => setTab(tab), []);\n\n\tconst statusDebounced = useDebouncedValue(status, 100);\n\n\tconst handleMinimumImportData = () =>\n\t\t!!((!usersCount && !channelsCount && !messageCount) || (!usersCount && !channelsCount && messageCount !== 0));\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Importing_Data')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button ghost onClick={handleBackToImportsButtonClick}>\n\t\t\t\t\t\t<Icon name='back' /> {t('Back_to_imports')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary disabled={isImporting || handleMinimumImportData()} onClick={handleStartButtonClick}>\n\t\t\t\t\t\t{t('Importer_Prepare_Start_Import')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Page.Header>\n\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='x24' width='full' maxWidth='590px'>\n\t\t\t\t\t<Box is='h2' fontScale='p2m'>\n\t\t\t\t\t\t{statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_'))}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{!isPreparing && (\n\t\t\t\t\t\t<Tabs flexShrink={0}>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'users'} onClick={handleTabClick('users')}>\n\t\t\t\t\t\t\t\t{t('Users')} <Badge>{usersCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'channels'} onClick={handleTabClick('channels')}>\n\t\t\t\t\t\t\t\t{t('Channels')} <Badge>{channelsCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item disabled>\n\t\t\t\t\t\t\t\t{t('Messages')}\n\t\t\t\t\t\t\t\t<Badge>{messageCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t)}\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t{isPreparing && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{progressRate ? (\n\t\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t\t<Box is='progress' value={(progressRate * 10).toFixed(0)} max='1000' marginInlineEnd='x24' />\n\t\t\t\t\t\t\t\t\t\t<Box is='span'>{s.numberFormat(progressRate, 0)}%</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Throbber justifyContent='center' />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isPreparing && tab === 'users' && <PrepareUsers usersCount={usersCount} users={users} setUsers={setUsers} />}\n\t\t\t\t\t\t{!isPreparing && tab === 'channels' && (\n\t\t\t\t\t\t\t<PrepareChannels channels={channels} channelsCount={channelsCount} setChannels={setChannels} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default PrepareImportPage;\n"]},"sourceType":"module","hash":"35a0f5522d41188ee0da96e18972caa793fa6d59"}
