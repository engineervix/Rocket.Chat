{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/openRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-utils/client/lib/openRoom.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/openRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/openRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/openRoom.js"}},"code":"module.export({\n  openRoom: () => openRoom\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 1);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 2);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 4);\nlet appLayout;\nmodule.link(\"../../../../client/lib/appLayout\", {\n  appLayout(v) {\n    appLayout = v;\n  }\n\n}, 5);\nlet Messages, ChatSubscription;\nmodule.link(\"../../../models\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 6);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 7);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 8);\nlet callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n\n}, 9);\nlet call;\nmodule.link(\"../../../../client/lib/utils/call\", {\n  call(v) {\n    call = v;\n  }\n\n}, 10);\nlet RoomManager, RoomHistoryManager;\nmodule.link(\"..\", {\n  RoomManager(v) {\n    RoomManager = v;\n  },\n\n  RoomHistoryManager(v) {\n    RoomHistoryManager = v;\n  }\n\n}, 11);\nlet NewRoomManager;\nmodule.link(\"../../../../client/lib/RoomManager\", {\n  RoomManager(v) {\n    NewRoomManager = v;\n  }\n\n}, 12);\nlet Rooms;\nmodule.link(\"../../../models/client\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 13);\nlet fireGlobalEvent;\nmodule.link(\"../../../../client/lib/utils/fireGlobalEvent\", {\n  fireGlobalEvent(v) {\n    fireGlobalEvent = v;\n  }\n\n}, 14);\nlet roomCoordinator;\nmodule.link(\"../../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 15);\nwindow.currentTracker = undefined; // cleanup session when hot reloading\n\nSession.set('openedRoom', null);\nNewRoomManager.on('changed', rid => {\n  Session.set('openedRoom', rid);\n  RoomManager.openedRoom = rid;\n});\n\nconst openRoom = async function (type, name) {\n  let render = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  window.currentTracker && window.currentTracker.stop();\n  window.currentTracker = Tracker.autorun(async function (c) {\n    const user = Meteor.user();\n\n    if (user && user.username == null || user == null && settings.get('Accounts_AllowAnonymousRead') === false) {\n      appLayout.renderMainLayout();\n      return;\n    }\n\n    try {\n      var _roomCoordinator$getR;\n\n      const room = ((_roomCoordinator$getR = roomCoordinator.getRoomDirectives(type)) === null || _roomCoordinator$getR === void 0 ? void 0 : _roomCoordinator$getR.findRoom(name)) || (await call('getRoomByTypeAndName', type, name));\n      Rooms.upsert({\n        _id: room._id\n      }, _.omit(room, '_id'));\n\n      if (room._id !== name && type === 'd') {\n        // Redirect old url using username to rid\n        RoomManager.close(type + name);\n        return FlowRouter.go('direct', {\n          rid: room._id\n        }, FlowRouter.current().queryParams);\n      }\n\n      if (room._id === Session.get('openedRoom') && !FlowRouter.getQueryParam('msg')) {\n        return;\n      }\n\n      RoomManager.open({\n        typeName: type + name,\n        rid: room._id\n      });\n\n      if (render) {\n        appLayout.renderMainLayout({\n          center: 'room'\n        });\n      }\n\n      c.stop();\n\n      if (window.currentTracker) {\n        window.currentTracker = undefined;\n      }\n\n      NewRoomManager.open(room._id);\n      Session.set('openedRoom', room._id);\n      fireGlobalEvent('room-opened', _.omit(room, 'usernames'));\n      Session.set('editRoomTitle', false); // KonchatNotification.removeRoomNotification(params._id)\n      // update user's room subscription\n\n      const sub = ChatSubscription.findOne({\n        rid: room._id\n      });\n\n      if (sub && sub.open === false) {\n        callWithErrorHandling('openRoom', room._id);\n      }\n\n      if (FlowRouter.getQueryParam('msg')) {\n        const messageId = FlowRouter.getQueryParam('msg');\n        const msg = {\n          _id: messageId,\n          rid: room._id\n        };\n        const message = Messages.findOne({\n          _id: msg._id\n        }) || (await callWithErrorHandling('getMessages', [msg._id]))[0];\n\n        if (message && (message.tmid || message.tcount)) {\n          return FlowRouter.setParams({\n            tab: 'thread',\n            context: message.tmid || message._id\n          });\n        }\n\n        RoomHistoryManager.getSurroundingMessages(msg);\n        FlowRouter.setQueryParams({\n          msg: undefined\n        });\n      }\n\n      return callbacks.run('enter-room', sub);\n    } catch (error) {\n      c.stop();\n\n      if (type === 'd') {\n        try {\n          const {\n            rid\n          } = await call('createDirectMessage', ...name.split(', '));\n          return FlowRouter.go('direct', {\n            rid\n          }, FlowRouter.current().queryParams);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      Session.set('roomNotFound', {\n        type,\n        name,\n        error\n      });\n      appLayout.renderMainLayout({\n        center: 'roomNotFound'\n      });\n    }\n  });\n};","map":{"version":3,"sources":["app/ui-utils/client/lib/openRoom.js"],"names":["module","export","openRoom","Meteor","link","v","Tracker","FlowRouter","Session","_","default","appLayout","Messages","ChatSubscription","settings","callbacks","callWithErrorHandling","call","RoomManager","RoomHistoryManager","NewRoomManager","Rooms","fireGlobalEvent","roomCoordinator","window","currentTracker","undefined","set","on","rid","openedRoom","type","name","render","stop","autorun","c","user","username","get","renderMainLayout","room","getRoomDirectives","findRoom","upsert","_id","omit","close","go","current","queryParams","getQueryParam","open","typeName","center","sub","findOne","messageId","msg","message","tmid","tcount","setParams","tab","context","getSurroundingMessages","setQueryParams","run","error","split","console"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport _ from 'underscore';\n\nimport { appLayout } from '../../../../client/lib/appLayout';\nimport { Messages, ChatSubscription } from '../../../models';\nimport { settings } from '../../../settings';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { call } from '../../../../client/lib/utils/call';\nimport { RoomManager, RoomHistoryManager } from '..';\nimport { RoomManager as NewRoomManager } from '../../../../client/lib/RoomManager';\nimport { Rooms } from '../../../models/client';\nimport { fireGlobalEvent } from '../../../../client/lib/utils/fireGlobalEvent';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\n\nwindow.currentTracker = undefined;\n\n// cleanup session when hot reloading\nSession.set('openedRoom', null);\n\nNewRoomManager.on('changed', (rid) => {\n\tSession.set('openedRoom', rid);\n\tRoomManager.openedRoom = rid;\n});\n\nexport const openRoom = async function (type, name, render = true) {\n\twindow.currentTracker && window.currentTracker.stop();\n\twindow.currentTracker = Tracker.autorun(async function (c) {\n\t\tconst user = Meteor.user();\n\t\tif ((user && user.username == null) || (user == null && settings.get('Accounts_AllowAnonymousRead') === false)) {\n\t\t\tappLayout.renderMainLayout();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst room = roomCoordinator.getRoomDirectives(type)?.findRoom(name) || (await call('getRoomByTypeAndName', type, name));\n\t\t\tRooms.upsert({ _id: room._id }, _.omit(room, '_id'));\n\n\t\t\tif (room._id !== name && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tRoomManager.close(type + name);\n\t\t\t\treturn FlowRouter.go('direct', { rid: room._id }, FlowRouter.current().queryParams);\n\t\t\t}\n\n\t\t\tif (room._id === Session.get('openedRoom') && !FlowRouter.getQueryParam('msg')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tRoomManager.open({ typeName: type + name, rid: room._id });\n\n\t\t\tif (render) {\n\t\t\t\tappLayout.renderMainLayout({ center: 'room' });\n\t\t\t}\n\n\t\t\tc.stop();\n\n\t\t\tif (window.currentTracker) {\n\t\t\t\twindow.currentTracker = undefined;\n\t\t\t}\n\n\t\t\tNewRoomManager.open(room._id);\n\t\t\tSession.set('openedRoom', room._id);\n\n\t\t\tfireGlobalEvent('room-opened', _.omit(room, 'usernames'));\n\n\t\t\tSession.set('editRoomTitle', false);\n\t\t\t// KonchatNotification.removeRoomNotification(params._id)\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && sub.open === false) {\n\t\t\t\tcallWithErrorHandling('openRoom', room._id);\n\t\t\t}\n\n\t\t\tif (FlowRouter.getQueryParam('msg')) {\n\t\t\t\tconst messageId = FlowRouter.getQueryParam('msg');\n\t\t\t\tconst msg = { _id: messageId, rid: room._id };\n\n\t\t\t\tconst message = Messages.findOne({ _id: msg._id }) || (await callWithErrorHandling('getMessages', [msg._id]))[0];\n\n\t\t\t\tif (message && (message.tmid || message.tcount)) {\n\t\t\t\t\treturn FlowRouter.setParams({ tab: 'thread', context: message.tmid || message._id });\n\t\t\t\t}\n\n\t\t\t\tRoomHistoryManager.getSurroundingMessages(msg);\n\t\t\t\tFlowRouter.setQueryParams({\n\t\t\t\t\tmsg: undefined,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn callbacks.run('enter-room', sub);\n\t\t} catch (error) {\n\t\t\tc.stop();\n\t\t\tif (type === 'd') {\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await call('createDirectMessage', ...name.split(', '));\n\t\t\t\t\treturn FlowRouter.go('direct', { rid }, FlowRouter.current().queryParams);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSession.set('roomNotFound', { type, name, error });\n\t\t\tappLayout.renderMainLayout({ center: 'roomNotFound' });\n\t\t}\n\t});\n};\n"]},"sourceType":"module","hash":"b8d8ba0ed0b94530af513190cc51de5c15addc9d"}
