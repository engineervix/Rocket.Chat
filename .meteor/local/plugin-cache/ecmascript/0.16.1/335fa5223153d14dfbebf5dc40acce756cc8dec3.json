{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/hooks/useUserInfoActions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/hooks/useUserInfoActions.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/hooks/useUserInfoActions.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/hooks/useUserInfoActions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useUserInfoActions.js"}},"code":"var _excluded = [\"text\", \"confirmText\", \"close\", \"confirm\"];\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\n\nvar _toConsumableArray;\n\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 2);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 3);\nmodule.export({\n  useUserInfoActions: function () {\n    return useUserInfoActions;\n  }\n});\nvar Button, ButtonGroup, Icon, Modal, Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Button: function (v) {\n    Button = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  Icon: function (v) {\n    Icon = v;\n  },\n  Modal: function (v) {\n    Modal = v;\n  },\n  Box: function (v) {\n    Box = v;\n  }\n}, 0);\nvar useAutoFocus, useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useAutoFocus: function (v) {\n    useAutoFocus = v;\n  },\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  }\n}, 1);\nvar escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML: function (v) {\n    escapeHTML = v;\n  }\n}, 2);\nvar React, useCallback, useMemo;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 3);\nvar RoomRoles;\nmodule.link(\"../../../../app/models/client\", {\n  RoomRoles: function (v) {\n    RoomRoles = v;\n  }\n}, 4);\nvar RoomMemberActions;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomMemberActions: function (v) {\n    RoomMemberActions = v;\n  }\n}, 5);\nvar usePermission, useAllPermissions;\nmodule.link(\"../../../contexts/AuthorizationContext\", {\n  usePermission: function (v) {\n    usePermission = v;\n  },\n  useAllPermissions: function (v) {\n    useAllPermissions = v;\n  }\n}, 6);\nvar useSetModal;\nmodule.link(\"../../../contexts/ModalContext\", {\n  useSetModal: function (v) {\n    useSetModal = v;\n  }\n}, 7);\nvar useRoute;\nmodule.link(\"../../../contexts/RouterContext\", {\n  useRoute: function (v) {\n    useRoute = v;\n  }\n}, 8);\nvar useMethod;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useMethod: function (v) {\n    useMethod = v;\n  }\n}, 9);\nvar useToastMessageDispatch;\nmodule.link(\"../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  }\n}, 10);\nvar useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 11);\nvar useUserId, useUserSubscription, useUserSubscriptionByName;\nmodule.link(\"../../../contexts/UserContext\", {\n  useUserId: function (v) {\n    useUserId = v;\n  },\n  useUserSubscription: function (v) {\n    useUserSubscription = v;\n  },\n  useUserSubscriptionByName: function (v) {\n    useUserSubscriptionByName = v;\n  }\n}, 12);\nvar useEndpointActionExperimental;\nmodule.link(\"../../../hooks/useEndpointActionExperimental\", {\n  useEndpointActionExperimental: function (v) {\n    useEndpointActionExperimental = v;\n  }\n}, 13);\nvar useReactiveValue;\nmodule.link(\"../../../hooks/useReactiveValue\", {\n  useReactiveValue: function (v) {\n    useReactiveValue = v;\n  }\n}, 14);\nvar roomCoordinator;\nmodule.link(\"../../../lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 15);\nvar RemoveUsersModal;\nmodule.link(\"../../teams/contextualBar/members/RemoveUsersModal\", {\n  \"default\": function (v) {\n    RemoveUsersModal = v;\n  }\n}, 16);\nvar useUserRoom;\nmodule.link(\"./useUserRoom\", {\n  useUserRoom: function (v) {\n    useUserRoom = v;\n  }\n}, 17);\nvar useWebRTC;\nmodule.link(\"./useWebRTC\", {\n  useWebRTC: function (v) {\n    useWebRTC = v;\n  }\n}, 18);\n\nvar useUserHasRoomRole = function (uid, rid, role) {\n  return useReactiveValue(useCallback(function () {\n    return !!RoomRoles.findOne({\n      rid: rid,\n      'u._id': uid,\n      'roles': role\n    });\n  }, [uid, rid, role]));\n};\n\nvar getShouldOpenDirectMessage = function (currentSubscription, usernameSubscription, canOpenDirectMessage, username) {\n  var canOpenDm = canOpenDirectMessage || usernameSubscription;\n  var directMessageIsNotAlreadyOpen = currentSubscription && currentSubscription.name !== username;\n  return canOpenDm && directMessageIsNotAlreadyOpen;\n};\n\nvar getUserIsMuted = function (room, user, userCanPostReadonly) {\n  if (room && room.ro) {\n    if (Array.isArray(room.unmuted) && room.unmuted.indexOf(user && user.username) !== -1) {\n      return false;\n    }\n\n    if (userCanPostReadonly) {\n      return Array.isArray(room.muted) && room.muted.indexOf(user && user.username) !== -1;\n    }\n\n    return true;\n  }\n\n  return room && Array.isArray(room.muted) && room.muted.indexOf(user && user.username) > -1;\n};\n\nvar WarningModal = function (_ref) {\n  var text = _ref.text,\n      confirmText = _ref.confirmText,\n      close = _ref.close,\n      confirm = _ref.confirm,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var refAutoFocus = useAutoFocus(true);\n  var t = useTranslation();\n  return /*#__PURE__*/React.createElement(Modal, props, /*#__PURE__*/React.createElement(Modal.Header, null, /*#__PURE__*/React.createElement(Icon, {\n    color: \"warning\",\n    name: \"modal-warning\",\n    size: 20\n  }), /*#__PURE__*/React.createElement(Modal.Title, null, t('Are_you_sure')), /*#__PURE__*/React.createElement(Modal.Close, {\n    onClick: close\n  })), /*#__PURE__*/React.createElement(Modal.Content, {\n    fontScale: \"p2\"\n  }, text), /*#__PURE__*/React.createElement(Modal.Footer, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    align: \"end\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    ghost: true,\n    onClick: close\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    ref: refAutoFocus,\n    primary: true,\n    danger: true,\n    onClick: confirm\n  }, confirmText))));\n};\n\nvar useUserInfoActions = function () {\n  var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var rid = arguments.length > 1 ? arguments[1] : undefined;\n  var reload = arguments.length > 2 ? arguments[2] : undefined;\n  var t = useTranslation();\n  var dispatchToastMessage = useToastMessageDispatch();\n  var directRoute = useRoute('direct');\n  var setModal = useSetModal();\n  var uid = user._id;\n  var ownUserId = useUserId();\n  var closeModal = useMutableCallback(function () {\n    return setModal(null);\n  });\n  var room = useUserRoom(rid);\n  var currentSubscription = useUserSubscription(rid);\n  var usernameSubscription = useUserSubscriptionByName(user.username);\n  var isLeader = useUserHasRoomRole(uid, rid, 'leader');\n  var isModerator = useUserHasRoomRole(uid, rid, 'moderator');\n  var isOwner = useUserHasRoomRole(uid, rid, 'owner');\n  var otherUserCanPostReadonly = useAllPermissions('post-readonly', rid);\n  var isIgnored = currentSubscription && currentSubscription.ignored && currentSubscription.ignored.indexOf(uid) > -1;\n  var isMuted = getUserIsMuted(room, user, otherUserCanPostReadonly);\n  var endpointPrefix = room.t === 'p' ? 'groups' : 'channels';\n  var roomDirectives = room && room.t && roomCoordinator.getRoomDirectives(room.t);\n\n  var _ref2 = _toConsumableArray(roomDirectives && [roomDirectives.allowMemberAction(room, RoomMemberActions.SET_AS_OWNER), roomDirectives.allowMemberAction(room, RoomMemberActions.SET_AS_LEADER), roomDirectives.allowMemberAction(room, RoomMemberActions.SET_AS_MODERATOR), roomDirectives.allowMemberAction(room, RoomMemberActions.IGNORE), roomDirectives.allowMemberAction(room, RoomMemberActions.BLOCK), roomDirectives.allowMemberAction(room, RoomMemberActions.MUTE), roomDirectives.allowMemberAction(room, RoomMemberActions.REMOVE_USER)]),\n      roomCanSetOwner = _ref2[0],\n      roomCanSetLeader = _ref2[1],\n      roomCanSetModerator = _ref2[2],\n      roomCanIgnore = _ref2[3],\n      roomCanBlock = _ref2[4],\n      roomCanMute = _ref2[5],\n      roomCanRemove = _ref2[6];\n\n  var roomName = room && room.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n  var userCanSetOwner = usePermission('set-owner', rid);\n  var userCanSetLeader = usePermission('set-leader', rid);\n  var userCanSetModerator = usePermission('set-moderator', rid);\n  var userCanMute = usePermission('mute-user', rid);\n  var userCanRemove = usePermission('remove-user', rid);\n  var userCanDirectMessage = usePermission('create-d');\n\n  var _useWebRTC = useWebRTC(rid),\n      shouldAllowCalls = _useWebRTC.shouldAllowCalls,\n      callInProgress = _useWebRTC.callInProgress,\n      joinCall = _useWebRTC.joinCall,\n      startCall = _useWebRTC.startCall;\n\n  var shouldOpenDirectMessage = getShouldOpenDirectMessage(currentSubscription, usernameSubscription, userCanDirectMessage, user.username);\n  var openDirectDm = useMutableCallback(function () {\n    return directRoute.push({\n      rid: user.username\n    });\n  });\n  var openDirectMessageOption = useMemo(function () {\n    return shouldOpenDirectMessage && {\n      label: t('Direct_Message'),\n      icon: 'balloon',\n      action: openDirectDm\n    };\n  }, [openDirectDm, shouldOpenDirectMessage, t]);\n  var videoCallOption = useMemo(function () {\n    var handleJoinCall = function () {\n      joinCall({\n        audio: true,\n        video: true\n      });\n    };\n\n    var handleStartCall = function () {\n      startCall({\n        audio: true,\n        video: true\n      });\n    };\n\n    var action = callInProgress ? handleJoinCall : handleStartCall;\n    return shouldAllowCalls && {\n      label: t(callInProgress ? 'Join_video_call' : 'Start_video_call'),\n      icon: 'video',\n      action: action\n    };\n  }, [callInProgress, shouldAllowCalls, t, joinCall, startCall]);\n  var audioCallOption = useMemo(function () {\n    var handleJoinCall = function () {\n      joinCall({\n        audio: true,\n        video: false\n      });\n    };\n\n    var handleStartCall = function () {\n      startCall({\n        audio: true,\n        video: false\n      });\n    };\n\n    var action = callInProgress ? handleJoinCall : handleStartCall;\n    return shouldAllowCalls && {\n      label: t(callInProgress ? 'Join_audio_call' : 'Start_audio_call'),\n      icon: 'mic',\n      action: action\n    };\n  }, [callInProgress, shouldAllowCalls, t, joinCall, startCall]);\n  var changeOwnerEndpoint = isOwner ? 'removeOwner' : 'addOwner';\n  var changeOwnerMessage = isOwner ? 'User__username__removed_from__room_name__owners' : 'User__username__is_now_a_owner_of__room_name_';\n  var changeOwner = useEndpointActionExperimental('POST', endpointPrefix + \".\" + changeOwnerEndpoint, t(changeOwnerMessage, {\n    username: user.username,\n    room_name: roomName\n  }));\n  var changeOwnerAction = useMutableCallback(function () {\n    function _callee() {\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", changeOwner({\n                  roomId: rid,\n                  userId: uid\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n\n    return _callee;\n  }());\n  var changeOwnerOption = useMemo(function () {\n    return roomCanSetOwner && userCanSetOwner && {\n      label: t(isOwner ? 'Remove_as_owner' : 'Set_as_owner'),\n      icon: 'shield-check',\n      action: changeOwnerAction\n    };\n  }, [changeOwnerAction, isOwner, t, roomCanSetOwner, userCanSetOwner]);\n  var changeLeaderEndpoint = isLeader ? 'removeLeader' : 'addLeader';\n  var changeLeaderMessage = isLeader ? 'User__username__removed_from__room_name__leaders' : 'User__username__is_now_a_leader_of__room_name_';\n  var changeLeader = useEndpointActionExperimental('POST', endpointPrefix + \".\" + changeLeaderEndpoint, t(changeLeaderMessage, {\n    username: user.username,\n    room_name: roomName\n  }));\n  var changeLeaderAction = useMutableCallback(function () {\n    return changeLeader({\n      roomId: rid,\n      userId: uid\n    });\n  });\n  var changeLeaderOption = useMemo(function () {\n    return roomCanSetLeader && userCanSetLeader && {\n      label: t(isLeader ? 'Remove_as_leader' : 'Set_as_leader'),\n      icon: 'shield-alt',\n      action: changeLeaderAction\n    };\n  }, [isLeader, roomCanSetLeader, t, userCanSetLeader, changeLeaderAction]);\n  var changeModeratorEndpoint = isModerator ? 'removeModerator' : 'addModerator';\n  var changeModeratorMessage = isModerator ? 'User__username__removed_from__room_name__moderators' : 'User__username__is_now_a_moderator_of__room_name_';\n  var changeModerator = useEndpointActionExperimental('POST', endpointPrefix + \".\" + changeModeratorEndpoint, t(changeModeratorMessage, {\n    username: user.username,\n    room_name: roomName\n  }));\n  var changeModeratorAction = useMutableCallback(function () {\n    return changeModerator({\n      roomId: rid,\n      userId: uid\n    });\n  });\n  var changeModeratorOption = useMemo(function () {\n    return roomCanSetModerator && userCanSetModerator && {\n      label: t(isModerator ? 'Remove_as_moderator' : 'Set_as_moderator'),\n      icon: 'shield',\n      action: changeModeratorAction\n    };\n  }, [changeModeratorAction, isModerator, roomCanSetModerator, t, userCanSetModerator]);\n  var ignoreUser = useMethod('ignoreUser');\n  var ignoreUserAction = useMutableCallback(function () {\n    function _callee2() {\n      return _regeneratorRuntime.async(function () {\n        function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(ignoreUser({\n                  rid: rid,\n                  userId: uid,\n                  ignore: !isIgnored\n                }));\n\n              case 3:\n                if (isIgnored) {\n                  dispatchToastMessage({\n                    type: 'success',\n                    message: t('User_has_been_unignored')\n                  });\n                } else {\n                  dispatchToastMessage({\n                    type: 'success',\n                    message: t('User_has_been_ignored')\n                  });\n                }\n\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context2.t0\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }\n\n        return _callee2$;\n      }(), null, null, [[0, 6]], Promise);\n    }\n\n    return _callee2;\n  }());\n  var ignoreUserOption = useMemo(function () {\n    return roomCanIgnore && uid !== ownUserId && {\n      label: t(isIgnored ? 'Unignore' : 'Ignore'),\n      icon: 'ban',\n      action: ignoreUserAction\n    };\n  }, [ignoreUserAction, isIgnored, ownUserId, roomCanIgnore, t, uid]);\n  var isUserBlocked = currentSubscription && currentSubscription.blocker;\n  var toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n  var toggleBlockUserAction = useMutableCallback(function () {\n    function _callee3() {\n      return _regeneratorRuntime.async(function () {\n        function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(toggleBlock({\n                  rid: rid,\n                  blocked: uid\n                }));\n\n              case 3:\n                dispatchToastMessage({\n                  type: 'success',\n                  message: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked')\n                });\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context3.t0\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return _callee3$;\n      }(), null, null, [[0, 6]], Promise);\n    }\n\n    return _callee3;\n  }());\n  var toggleBlockUserOption = useMemo(function () {\n    return roomCanBlock && uid !== ownUserId && {\n      label: t(isUserBlocked ? 'Unblock' : 'Block'),\n      icon: 'ban',\n      action: toggleBlockUserAction\n    };\n  }, [isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid]);\n  var muteFn = useMethod(isMuted ? 'unmuteUserInRoom' : 'muteUserInRoom');\n  var muteUserOption = useMemo(function () {\n    var action = function () {\n      var onConfirm = function () {\n        function _callee4() {\n          return _regeneratorRuntime.async(function () {\n            function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.prev = 0;\n                    _context4.next = 3;\n                    return _regeneratorRuntime.awrap(muteFn({\n                      rid: rid,\n                      username: user.username\n                    }));\n\n                  case 3:\n                    closeModal();\n                    dispatchToastMessage({\n                      type: 'success',\n                      message: t(isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__', {\n                        username: user.username,\n                        roomName: roomName\n                      })\n                    });\n                    _context4.next = 10;\n                    break;\n\n                  case 7:\n                    _context4.prev = 7;\n                    _context4.t0 = _context4[\"catch\"](0);\n                    dispatchToastMessage({\n                      type: 'error',\n                      message: _context4.t0\n                    });\n\n                  case 10:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }\n\n            return _callee4$;\n          }(), null, null, [[0, 7]], Promise);\n        }\n\n        return _callee4;\n      }();\n\n      if (isMuted) {\n        return onConfirm();\n      }\n\n      setModal( /*#__PURE__*/React.createElement(WarningModal, {\n        text: t('The_user_wont_be_able_to_type_in_s', roomName),\n        close: closeModal,\n        confirmText: t('Yes_mute_user'),\n        confirm: onConfirm\n      }));\n    };\n\n    return roomCanMute && userCanMute && {\n      label: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n      icon: isMuted ? 'mic' : 'mic-off',\n      action: action\n    };\n  }, [closeModal, dispatchToastMessage, isMuted, muteFn, rid, roomCanMute, roomName, setModal, t, user.username, userCanMute]);\n  var removeFromTeam = useEndpointActionExperimental('POST', 'teams.removeMember', t('User_has_been_removed_from_team'));\n  var removeUserAction = useEndpointActionExperimental('POST', endpointPrefix + \".kick\", t('User_has_been_removed_from_s', roomName));\n  var removeUserOptionAction = useMutableCallback(function () {\n    if (room.teamMain && room.teamId) {\n      return setModal( /*#__PURE__*/React.createElement(RemoveUsersModal, {\n        teamId: room === null || room === void 0 ? void 0 : room.teamId,\n        userId: uid,\n        onClose: closeModal,\n        onCancel: closeModal,\n        onConfirm: function () {\n          function _callee5(rooms) {\n            var roomKeys;\n            return _regeneratorRuntime.async(function () {\n              function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      roomKeys = Object.keys(rooms);\n                      _context5.next = 3;\n                      return _regeneratorRuntime.awrap(removeFromTeam(_objectSpread({\n                        teamId: room.teamId,\n                        userId: uid\n                      }, roomKeys.length && {\n                        rooms: roomKeys\n                      })));\n\n                    case 3:\n                      closeModal();\n                      reload && reload();\n\n                    case 5:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }\n\n              return _callee5$;\n            }(), null, null, null, Promise);\n          }\n\n          return _callee5;\n        }()\n      }));\n    }\n\n    setModal( /*#__PURE__*/React.createElement(WarningModal, {\n      text: t('The_user_will_be_removed_from_s', roomName),\n      close: closeModal,\n      confirmText: t('Yes_remove_user'),\n      confirm: function () {\n        function _callee6() {\n          return _regeneratorRuntime.async(function () {\n            function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return _regeneratorRuntime.awrap(removeUserAction({\n                      roomId: rid,\n                      userId: uid\n                    }));\n\n                  case 2:\n                    closeModal();\n                    reload && reload();\n\n                  case 4:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }\n\n            return _callee6$;\n          }(), null, null, null, Promise);\n        }\n\n        return _callee6;\n      }()\n    }));\n  });\n  var removeUserOption = useMemo(function () {\n    return roomCanRemove && userCanRemove && {\n      label: /*#__PURE__*/React.createElement(Box, {\n        color: \"danger\"\n      }, room.teamMain ? t('Remove_from_team') : t('Remove_from_room')),\n      icon: 'sign-out',\n      action: removeUserOptionAction\n    };\n  }, [room, roomCanRemove, userCanRemove, removeUserOptionAction, t]);\n  return useMemo(function () {\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, openDirectMessageOption && {\n      openDirectMessage: openDirectMessageOption\n    }), videoCallOption && {\n      video: videoCallOption\n    }), audioCallOption && {\n      audio: audioCallOption\n    }), changeOwnerOption && {\n      changeOwner: changeOwnerOption\n    }), changeLeaderOption && {\n      changeLeader: changeLeaderOption\n    }), changeModeratorOption && {\n      changeModerator: changeModeratorOption\n    }), ignoreUserOption && {\n      ignoreUser: ignoreUserOption\n    }), muteUserOption && {\n      muteUser: muteUserOption\n    }), removeUserOption && {\n      removeUser: removeUserOption\n    }), toggleBlockUserOption && {\n      toggleBlock: toggleBlockUserOption\n    });\n  }, [audioCallOption, changeLeaderOption, changeModeratorOption, changeOwnerOption, ignoreUserOption, muteUserOption, openDirectMessageOption, removeUserOption, videoCallOption, toggleBlockUserOption]);\n};","map":{"version":3,"sources":["client/views/room/hooks/useUserInfoActions.js"],"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_toConsumableArray","_objectWithoutProperties","export","useUserInfoActions","Button","ButtonGroup","Icon","Modal","Box","useAutoFocus","useMutableCallback","escapeHTML","React","useCallback","useMemo","RoomRoles","RoomMemberActions","usePermission","useAllPermissions","useSetModal","useRoute","useMethod","useToastMessageDispatch","useTranslation","useUserId","useUserSubscription","useUserSubscriptionByName","useEndpointActionExperimental","useReactiveValue","roomCoordinator","RemoveUsersModal","useUserRoom","useWebRTC","useUserHasRoomRole","uid","rid","role","findOne","getShouldOpenDirectMessage","currentSubscription","usernameSubscription","canOpenDirectMessage","username","canOpenDm","directMessageIsNotAlreadyOpen","name","getUserIsMuted","room","user","userCanPostReadonly","ro","Array","isArray","unmuted","indexOf","muted","WarningModal","text","confirmText","close","confirm","props","refAutoFocus","t","reload","dispatchToastMessage","directRoute","setModal","_id","ownUserId","closeModal","isLeader","isModerator","isOwner","otherUserCanPostReadonly","isIgnored","ignored","isMuted","endpointPrefix","roomDirectives","getRoomDirectives","allowMemberAction","SET_AS_OWNER","SET_AS_LEADER","SET_AS_MODERATOR","IGNORE","BLOCK","MUTE","REMOVE_USER","roomCanSetOwner","roomCanSetLeader","roomCanSetModerator","roomCanIgnore","roomCanBlock","roomCanMute","roomCanRemove","roomName","getRoomName","userCanSetOwner","userCanSetLeader","userCanSetModerator","userCanMute","userCanRemove","userCanDirectMessage","shouldAllowCalls","callInProgress","joinCall","startCall","shouldOpenDirectMessage","openDirectDm","push","openDirectMessageOption","label","icon","action","videoCallOption","handleJoinCall","audio","video","handleStartCall","audioCallOption","changeOwnerEndpoint","changeOwnerMessage","changeOwner","room_name","changeOwnerAction","roomId","userId","changeOwnerOption","changeLeaderEndpoint","changeLeaderMessage","changeLeader","changeLeaderAction","changeLeaderOption","changeModeratorEndpoint","changeModeratorMessage","changeModerator","changeModeratorAction","changeModeratorOption","ignoreUser","ignoreUserAction","ignore","type","message","ignoreUserOption","isUserBlocked","blocker","toggleBlock","toggleBlockUserAction","blocked","toggleBlockUserOption","muteFn","muteUserOption","onConfirm","removeFromTeam","removeUserAction","removeUserOptionAction","teamMain","teamId","rooms","roomKeys","Object","keys","length","removeUserOption","openDirectMessage","muteUser","removeUser"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup, Icon, Modal, Box } from '@rocket.chat/fuselage';\nimport { useAutoFocus, useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { RoomRoles } from '../../../../app/models/client';\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { usePermission, useAllPermissions } from '../../../contexts/AuthorizationContext';\nimport { useSetModal } from '../../../contexts/ModalContext';\nimport { useRoute } from '../../../contexts/RouterContext';\nimport { useMethod } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useUserId, useUserSubscription, useUserSubscriptionByName } from '../../../contexts/UserContext';\nimport { useEndpointActionExperimental } from '../../../hooks/useEndpointActionExperimental';\nimport { useReactiveValue } from '../../../hooks/useReactiveValue';\nimport { roomCoordinator } from '../../../lib/rooms/roomCoordinator';\nimport RemoveUsersModal from '../../teams/contextualBar/members/RemoveUsersModal';\nimport { useUserRoom } from './useUserRoom';\nimport { useWebRTC } from './useWebRTC';\n\nconst useUserHasRoomRole = (uid, rid, role) =>\n\tuseReactiveValue(useCallback(() => !!RoomRoles.findOne({ rid, 'u._id': uid, 'roles': role }), [uid, rid, role]));\n\nconst getShouldOpenDirectMessage = (currentSubscription, usernameSubscription, canOpenDirectMessage, username) => {\n\tconst canOpenDm = canOpenDirectMessage || usernameSubscription;\n\tconst directMessageIsNotAlreadyOpen = currentSubscription && currentSubscription.name !== username;\n\treturn canOpenDm && directMessageIsNotAlreadyOpen;\n};\n\nconst getUserIsMuted = (room, user, userCanPostReadonly) => {\n\tif (room && room.ro) {\n\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user && user.username) !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (userCanPostReadonly) {\n\t\t\treturn Array.isArray(room.muted) && room.muted.indexOf(user && user.username) !== -1;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user && user.username) > -1;\n};\n\nconst WarningModal = ({ text, confirmText, close, confirm, ...props }) => {\n\tconst refAutoFocus = useAutoFocus(true);\n\tconst t = useTranslation();\n\treturn (\n\t\t<Modal {...props}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Icon color='warning' name='modal-warning' size={20} />\n\t\t\t\t<Modal.Title>{t('Are_you_sure')}</Modal.Title>\n\t\t\t\t<Modal.Close onClick={close} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content fontScale='p2'>{text}</Modal.Content>\n\t\t\t<Modal.Footer>\n\t\t\t\t<ButtonGroup align='end'>\n\t\t\t\t\t<Button ghost onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button ref={refAutoFocus} primary danger onClick={confirm}>\n\t\t\t\t\t\t{confirmText}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport const useUserInfoActions = (user = {}, rid, reload) => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst directRoute = useRoute('direct');\n\n\tconst setModal = useSetModal();\n\n\tconst { _id: uid } = user;\n\tconst ownUserId = useUserId();\n\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\n\tconst room = useUserRoom(rid);\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst usernameSubscription = useUserSubscriptionByName(user.username);\n\n\tconst isLeader = useUserHasRoomRole(uid, rid, 'leader');\n\tconst isModerator = useUserHasRoomRole(uid, rid, 'moderator');\n\tconst isOwner = useUserHasRoomRole(uid, rid, 'owner');\n\n\tconst otherUserCanPostReadonly = useAllPermissions('post-readonly', rid);\n\n\tconst isIgnored = currentSubscription && currentSubscription.ignored && currentSubscription.ignored.indexOf(uid) > -1;\n\tconst isMuted = getUserIsMuted(room, user, otherUserCanPostReadonly);\n\n\tconst endpointPrefix = room.t === 'p' ? 'groups' : 'channels';\n\n\tconst roomDirectives = room && room.t && roomCoordinator.getRoomDirectives(room.t);\n\n\tconst [roomCanSetOwner, roomCanSetLeader, roomCanSetModerator, roomCanIgnore, roomCanBlock, roomCanMute, roomCanRemove] = [\n\t\t...(roomDirectives && [\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.SET_AS_OWNER),\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.SET_AS_LEADER),\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.SET_AS_MODERATOR),\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.IGNORE),\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.BLOCK),\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.MUTE),\n\t\t\troomDirectives.allowMemberAction(room, RoomMemberActions.REMOVE_USER),\n\t\t]),\n\t];\n\n\tconst roomName = room && room.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tconst userCanSetOwner = usePermission('set-owner', rid);\n\tconst userCanSetLeader = usePermission('set-leader', rid);\n\tconst userCanSetModerator = usePermission('set-moderator', rid);\n\tconst userCanMute = usePermission('mute-user', rid);\n\tconst userCanRemove = usePermission('remove-user', rid);\n\tconst userCanDirectMessage = usePermission('create-d');\n\tconst { shouldAllowCalls, callInProgress, joinCall, startCall } = useWebRTC(rid);\n\n\tconst shouldOpenDirectMessage = getShouldOpenDirectMessage(\n\t\tcurrentSubscription,\n\t\tusernameSubscription,\n\t\tuserCanDirectMessage,\n\t\tuser.username,\n\t);\n\n\tconst openDirectDm = useMutableCallback(() =>\n\t\tdirectRoute.push({\n\t\t\trid: user.username,\n\t\t}),\n\t);\n\n\tconst openDirectMessageOption = useMemo(\n\t\t() =>\n\t\t\tshouldOpenDirectMessage && {\n\t\t\t\tlabel: t('Direct_Message'),\n\t\t\t\ticon: 'balloon',\n\t\t\t\taction: openDirectDm,\n\t\t\t},\n\t\t[openDirectDm, shouldOpenDirectMessage, t],\n\t);\n\n\tconst videoCallOption = useMemo(() => {\n\t\tconst handleJoinCall = () => {\n\t\t\tjoinCall({ audio: true, video: true });\n\t\t};\n\t\tconst handleStartCall = () => {\n\t\t\tstartCall({ audio: true, video: true });\n\t\t};\n\t\tconst action = callInProgress ? handleJoinCall : handleStartCall;\n\n\t\treturn (\n\t\t\tshouldAllowCalls && {\n\t\t\t\tlabel: t(callInProgress ? 'Join_video_call' : 'Start_video_call'),\n\t\t\t\ticon: 'video',\n\t\t\t\taction,\n\t\t\t}\n\t\t);\n\t}, [callInProgress, shouldAllowCalls, t, joinCall, startCall]);\n\n\tconst audioCallOption = useMemo(() => {\n\t\tconst handleJoinCall = () => {\n\t\t\tjoinCall({ audio: true, video: false });\n\t\t};\n\t\tconst handleStartCall = () => {\n\t\t\tstartCall({ audio: true, video: false });\n\t\t};\n\t\tconst action = callInProgress ? handleJoinCall : handleStartCall;\n\n\t\treturn (\n\t\t\tshouldAllowCalls && {\n\t\t\t\tlabel: t(callInProgress ? 'Join_audio_call' : 'Start_audio_call'),\n\t\t\t\ticon: 'mic',\n\t\t\t\taction,\n\t\t\t}\n\t\t);\n\t}, [callInProgress, shouldAllowCalls, t, joinCall, startCall]);\n\n\tconst changeOwnerEndpoint = isOwner ? 'removeOwner' : 'addOwner';\n\tconst changeOwnerMessage = isOwner ? 'User__username__removed_from__room_name__owners' : 'User__username__is_now_a_owner_of__room_name_';\n\tconst changeOwner = useEndpointActionExperimental(\n\t\t'POST',\n\t\t`${endpointPrefix}.${changeOwnerEndpoint}`,\n\t\tt(changeOwnerMessage, { username: user.username, room_name: roomName }),\n\t);\n\tconst changeOwnerAction = useMutableCallback(async () => changeOwner({ roomId: rid, userId: uid }));\n\tconst changeOwnerOption = useMemo(\n\t\t() =>\n\t\t\troomCanSetOwner &&\n\t\t\tuserCanSetOwner && {\n\t\t\t\tlabel: t(isOwner ? 'Remove_as_owner' : 'Set_as_owner'),\n\t\t\t\ticon: 'shield-check',\n\t\t\t\taction: changeOwnerAction,\n\t\t\t},\n\t\t[changeOwnerAction, isOwner, t, roomCanSetOwner, userCanSetOwner],\n\t);\n\n\tconst changeLeaderEndpoint = isLeader ? 'removeLeader' : 'addLeader';\n\tconst changeLeaderMessage = isLeader\n\t\t? 'User__username__removed_from__room_name__leaders'\n\t\t: 'User__username__is_now_a_leader_of__room_name_';\n\tconst changeLeader = useEndpointActionExperimental(\n\t\t'POST',\n\t\t`${endpointPrefix}.${changeLeaderEndpoint}`,\n\t\tt(changeLeaderMessage, { username: user.username, room_name: roomName }),\n\t);\n\tconst changeLeaderAction = useMutableCallback(() => changeLeader({ roomId: rid, userId: uid }));\n\tconst changeLeaderOption = useMemo(\n\t\t() =>\n\t\t\troomCanSetLeader &&\n\t\t\tuserCanSetLeader && {\n\t\t\t\tlabel: t(isLeader ? 'Remove_as_leader' : 'Set_as_leader'),\n\t\t\t\ticon: 'shield-alt',\n\t\t\t\taction: changeLeaderAction,\n\t\t\t},\n\t\t[isLeader, roomCanSetLeader, t, userCanSetLeader, changeLeaderAction],\n\t);\n\n\tconst changeModeratorEndpoint = isModerator ? 'removeModerator' : 'addModerator';\n\tconst changeModeratorMessage = isModerator\n\t\t? 'User__username__removed_from__room_name__moderators'\n\t\t: 'User__username__is_now_a_moderator_of__room_name_';\n\tconst changeModerator = useEndpointActionExperimental(\n\t\t'POST',\n\t\t`${endpointPrefix}.${changeModeratorEndpoint}`,\n\t\tt(changeModeratorMessage, { username: user.username, room_name: roomName }),\n\t);\n\tconst changeModeratorAction = useMutableCallback(() => changeModerator({ roomId: rid, userId: uid }));\n\tconst changeModeratorOption = useMemo(\n\t\t() =>\n\t\t\troomCanSetModerator &&\n\t\t\tuserCanSetModerator && {\n\t\t\t\tlabel: t(isModerator ? 'Remove_as_moderator' : 'Set_as_moderator'),\n\t\t\t\ticon: 'shield',\n\t\t\t\taction: changeModeratorAction,\n\t\t\t},\n\t\t[changeModeratorAction, isModerator, roomCanSetModerator, t, userCanSetModerator],\n\t);\n\n\tconst ignoreUser = useMethod('ignoreUser');\n\tconst ignoreUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait ignoreUser({ rid, userId: uid, ignore: !isIgnored });\n\t\t\tif (isIgnored) {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_has_been_unignored') });\n\t\t\t} else {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_has_been_ignored') });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\tconst ignoreUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanIgnore &&\n\t\t\tuid !== ownUserId && {\n\t\t\t\tlabel: t(isIgnored ? 'Unignore' : 'Ignore'),\n\t\t\t\ticon: 'ban',\n\t\t\t\taction: ignoreUserAction,\n\t\t\t},\n\t\t[ignoreUserAction, isIgnored, ownUserId, roomCanIgnore, t, uid],\n\t);\n\n\tconst isUserBlocked = currentSubscription && currentSubscription.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock &&\n\t\t\tuid !== ownUserId && {\n\t\t\t\tlabel: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\ticon: 'ban',\n\t\t\t\taction: toggleBlockUserAction,\n\t\t\t},\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\tconst muteFn = useMethod(isMuted ? 'unmuteUserInRoom' : 'muteUserInRoom');\n\tconst muteUserOption = useMemo(() => {\n\t\tconst action = () => {\n\t\t\tconst onConfirm = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait muteFn({ rid, username: user.username });\n\t\t\t\t\tcloseModal();\n\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: t(isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__', {\n\t\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t\t\troomName,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (isMuted) {\n\t\t\t\treturn onConfirm();\n\t\t\t}\n\n\t\t\tsetModal(\n\t\t\t\t<WarningModal\n\t\t\t\t\ttext={t('The_user_wont_be_able_to_type_in_s', roomName)}\n\t\t\t\t\tclose={closeModal}\n\t\t\t\t\tconfirmText={t('Yes_mute_user')}\n\t\t\t\t\tconfirm={onConfirm}\n\t\t\t\t/>,\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\troomCanMute &&\n\t\t\tuserCanMute && {\n\t\t\t\tlabel: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n\t\t\t\ticon: isMuted ? 'mic' : 'mic-off',\n\t\t\t\taction,\n\t\t\t}\n\t\t);\n\t}, [closeModal, dispatchToastMessage, isMuted, muteFn, rid, roomCanMute, roomName, setModal, t, user.username, userCanMute]);\n\n\tconst removeFromTeam = useEndpointActionExperimental('POST', 'teams.removeMember', t('User_has_been_removed_from_team'));\n\n\tconst removeUserAction = useEndpointActionExperimental('POST', `${endpointPrefix}.kick`, t('User_has_been_removed_from_s', roomName));\n\tconst removeUserOptionAction = useMutableCallback(() => {\n\t\tif (room.teamMain && room.teamId) {\n\t\t\treturn setModal(\n\t\t\t\t<RemoveUsersModal\n\t\t\t\t\tteamId={room?.teamId}\n\t\t\t\t\tuserId={uid}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\tonConfirm={async (rooms) => {\n\t\t\t\t\t\tconst roomKeys = Object.keys(rooms);\n\t\t\t\t\t\tawait removeFromTeam({\n\t\t\t\t\t\t\tteamId: room.teamId,\n\t\t\t\t\t\t\tuserId: uid,\n\t\t\t\t\t\t\t...(roomKeys.length && { rooms: roomKeys }),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\treload && reload();\n\t\t\t\t\t}}\n\t\t\t\t/>,\n\t\t\t);\n\t\t}\n\n\t\tsetModal(\n\t\t\t<WarningModal\n\t\t\t\ttext={t('The_user_will_be_removed_from_s', roomName)}\n\t\t\t\tclose={closeModal}\n\t\t\t\tconfirmText={t('Yes_remove_user')}\n\t\t\t\tconfirm={async () => {\n\t\t\t\t\tawait removeUserAction({ roomId: rid, userId: uid });\n\t\t\t\t\tcloseModal();\n\t\t\t\t\treload && reload();\n\t\t\t\t}}\n\t\t\t/>,\n\t\t);\n\t});\n\n\tconst removeUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanRemove &&\n\t\t\tuserCanRemove && {\n\t\t\t\tlabel: <Box color='danger'>{room.teamMain ? t('Remove_from_team') : t('Remove_from_room')}</Box>,\n\t\t\t\ticon: 'sign-out',\n\t\t\t\taction: removeUserOptionAction,\n\t\t\t},\n\t\t[room, roomCanRemove, userCanRemove, removeUserOptionAction, t],\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\t...(openDirectMessageOption && { openDirectMessage: openDirectMessageOption }),\n\t\t\t...(videoCallOption && { video: videoCallOption }),\n\t\t\t...(audioCallOption && { audio: audioCallOption }),\n\t\t\t...(changeOwnerOption && { changeOwner: changeOwnerOption }),\n\t\t\t...(changeLeaderOption && { changeLeader: changeLeaderOption }),\n\t\t\t...(changeModeratorOption && { changeModerator: changeModeratorOption }),\n\t\t\t...(ignoreUserOption && { ignoreUser: ignoreUserOption }),\n\t\t\t...(muteUserOption && { muteUser: muteUserOption }),\n\t\t\t...(removeUserOption && { removeUser: removeUserOption }),\n\t\t\t...(toggleBlockUserOption && { toggleBlock: toggleBlockUserOption }),\n\t\t}),\n\t\t[\n\t\t\taudioCallOption,\n\t\t\tchangeLeaderOption,\n\t\t\tchangeModeratorOption,\n\t\t\tchangeOwnerOption,\n\t\t\tignoreUserOption,\n\t\t\tmuteUserOption,\n\t\t\topenDirectMessageOption,\n\t\t\tremoveUserOption,\n\t\t\tvideoCallOption,\n\t\t\ttoggleBlockUserOption,\n\t\t],\n\t);\n};\n"]},"sourceType":"module","hash":"335fa5223153d14dfbebf5dc40acce756cc8dec3"}
