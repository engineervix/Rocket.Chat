{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/RoomHistoryManager.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/RoomHistoryManager.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/RoomHistoryManager.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.js"}},"code":"var _excluded = [\"_id\"];\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 2);\n\nvar _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 3);\nmodule.export({\n  normalizeThreadMessage: function () {\n    return normalizeThreadMessage;\n  },\n  waitUntilWrapperExists: function () {\n    return waitUntilWrapperExists;\n  },\n  upsertMessage: function () {\n    return upsertMessage;\n  },\n  upsertMessageBulk: function () {\n    return upsertMessageBulk;\n  },\n  RoomHistoryManager: function () {\n    return RoomHistoryManager;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 2);\nvar Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze: function (v) {\n    Blaze = v;\n  }\n}, 3);\nvar uuidv4;\nmodule.link(\"uuid\", {\n  v4: function (v) {\n    uuidv4 = v;\n  }\n}, 4);\nvar differenceInMilliseconds;\nmodule.link(\"date-fns/differenceInMilliseconds\", {\n  \"default\": function (v) {\n    differenceInMilliseconds = v;\n  }\n}, 5);\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 6);\nvar escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML: function (v) {\n    escapeHTML = v;\n  }\n}, 7);\nvar RoomManager;\nmodule.link(\"./RoomManager\", {\n  RoomManager: function (v) {\n    RoomManager = v;\n  }\n}, 8);\nvar readMessage;\nmodule.link(\"./readMessages\", {\n  readMessage: function (v) {\n    readMessage = v;\n  }\n}, 9);\nvar renderMessageBody;\nmodule.link(\"../../../../client/lib/utils/renderMessageBody\", {\n  renderMessageBody: function (v) {\n    renderMessageBody = v;\n  }\n}, 10);\nvar getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 11);\nvar ChatMessage, ChatSubscription, ChatRoom;\nmodule.link(\"../../../models\", {\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  },\n  ChatRoom: function (v) {\n    ChatRoom = v;\n  }\n}, 12);\nvar callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 13);\nvar filterMarkdown;\nmodule.link(\"../../../markdown/lib/markdown\", {\n  filterMarkdown: function (v) {\n    filterMarkdown = v;\n  }\n}, 14);\nvar getUserPreference;\nmodule.link(\"../../../utils/client\", {\n  getUserPreference: function (v) {\n    getUserPreference = v;\n  }\n}, 15);\nvar onClientMessageReceived;\nmodule.link(\"../../../../client/lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 16);\n\nvar normalizeThreadMessage = function (_ref) {\n  var message = _extends({}, _ref);\n\n  if (message.msg) {\n    message.msg = filterMarkdown(message.msg);\n    delete message.mentions;\n    return renderMessageBody(message).replace(/<br\\s?\\\\?>/g, ' ');\n  }\n\n  if (message.attachments) {\n    var attachment = message.attachments.find(function (attachment) {\n      return attachment.title || attachment.description;\n    });\n\n    if (attachment && attachment.description) {\n      return escapeHTML(attachment.description);\n    }\n\n    if (attachment && attachment.title) {\n      return escapeHTML(attachment.title);\n    }\n  }\n};\n\nvar waitUntilWrapperExists = function () {\n  function _callee() {\n    var selector,\n        _args = arguments;\n    return _regeneratorRuntime.async(function () {\n      function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              selector = _args.length > 0 && _args[0] !== undefined ? _args[0] : '.messages-box .wrapper';\n              return _context.abrupt(\"return\", document.querySelector(selector) || new Promise(function (resolve) {\n                var observer = new MutationObserver(function (mutations, obs) {\n                  var element = document.querySelector(selector);\n\n                  if (element) {\n                    obs.disconnect(); // stop observing\n\n                    // stop observing\n                    return resolve(element);\n                  }\n                });\n                observer.observe(document, {\n                  childList: true,\n                  subtree: true\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }\n\n      return _callee$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee;\n}();\n\nvar upsertMessage = function () {\n  function _callee2(_ref2) {\n    var msg,\n        subscription,\n        _ref2$uid,\n        uid,\n        collection,\n        userId,\n        _msg,\n        _id,\n        messageToUpsert,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.async(function () {\n      function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              msg = _ref2.msg, subscription = _ref2.subscription, _ref2$uid = _ref2.uid, uid = _ref2$uid === void 0 ? Tracker.nonreactive(function () {\n                return Meteor.userId();\n              }) : _ref2$uid;\n              collection = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : ChatMessage;\n              userId = msg.u && msg.u._id;\n\n              if (subscription && subscription.ignored && subscription.ignored.indexOf(userId) > -1) {\n                msg.ignored = true;\n              } // const roles = [\n              // \t(userId && UserRoles.findOne(userId, { fields: { roles: 1 } })) || {},\n              // \t(userId && RoomRoles.findOne({ rid: msg.rid, 'u._id': userId })) || {},\n              // ].map((e) => e.roles);\n              // msg.roles = _.union.apply(_.union, roles);\n\n\n              if (msg.t === 'e2e' && !msg.file) {\n                msg.e2e = 'pending';\n              }\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(onClientMessageReceived(msg));\n\n            case 7:\n              _context2.t0 = _context2.sent;\n\n              if (_context2.t0) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t0 = msg;\n\n            case 10:\n              msg = _context2.t0;\n              _msg = msg, _id = _msg._id, messageToUpsert = _objectWithoutProperties(_msg, _excluded);\n\n              if (msg.tcount) {\n                collection.direct.update({\n                  tmid: _id\n                }, {\n                  $set: {\n                    following: msg.replies && msg.replies.indexOf(uid) > -1,\n                    threadMsg: normalizeThreadMessage(messageToUpsert),\n                    repliesCount: msg.tcount\n                  }\n                }, {\n                  multi: true\n                });\n              }\n\n              return _context2.abrupt(\"return\", collection.direct.upsert({\n                _id: _id\n              }, messageToUpsert));\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }\n\n      return _callee2$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee2;\n}();\n\nfunction upsertMessageBulk(_ref3) {\n  var msgs = _ref3.msgs,\n      subscription = _ref3.subscription;\n  var collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ChatMessage;\n  var uid = Tracker.nonreactive(function () {\n    return Meteor.userId();\n  });\n  var _ChatMessage = ChatMessage,\n      queries = _ChatMessage.queries;\n  collection.queries = [];\n  msgs.forEach(function (msg, index) {\n    if (index === msgs.length - 1) {\n      ChatMessage.queries = queries;\n    }\n\n    upsertMessage({\n      msg: msg,\n      subscription: subscription,\n      uid: uid\n    }, collection);\n  });\n}\n\nvar defaultLimit = parseInt(getConfig('roomListLimit')) || 50;\n\nvar waitAfterFlush = function (fn) {\n  return setTimeout(function () {\n    return Tracker.afterFlush(fn);\n  }, 10);\n};\n\nvar RoomHistoryManager = new ( /*#__PURE__*/function (_Emitter) {\n  _inheritsLoose(_class, _Emitter);\n\n  function _class() {\n    var _this;\n\n    _this = _Emitter.call(this) || this;\n    _this.histories = {};\n    _this.requestsList = [];\n    return _this;\n  }\n\n  var _proto = _class.prototype;\n\n  _proto.getRoom = function () {\n    function getRoom(rid) {\n      if (!this.histories[rid]) {\n        this.histories[rid] = {\n          hasMore: new ReactiveVar(true),\n          hasMoreNext: new ReactiveVar(false),\n          isLoading: new ReactiveVar(false),\n          unreadNotLoaded: new ReactiveVar(0),\n          firstUnread: new ReactiveVar(),\n          loaded: undefined\n        };\n      }\n\n      return this.histories[rid];\n    }\n\n    return getRoom;\n  }();\n\n  _proto.queue = function () {\n    function queue() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function () {\n        function queue$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new Promise(function (resolve) {\n                  var requestId = uuidv4();\n\n                  var done = function () {\n                    _this2.lastRequest = new Date();\n                    resolve();\n                  };\n\n                  if (_this2.requestsList.length === 0) {\n                    return _this2.run(done);\n                  }\n\n                  _this2.requestsList.push(requestId);\n\n                  _this2.once(requestId, done);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return queue$;\n      }(), null, null, null, Promise);\n    }\n\n    return queue;\n  }();\n\n  _proto.run = function () {\n    function run(fn) {\n      var difference = differenceInMilliseconds(new Date(), this.lastRequest);\n\n      if (!this.lastRequest || difference > 500) {\n        return fn();\n      }\n\n      return setTimeout(fn, 500 - difference);\n    }\n\n    return run;\n  }();\n\n  _proto.unqueue = function () {\n    function unqueue() {\n      var _this3 = this;\n\n      var requestId = this.requestsList.pop();\n\n      if (!requestId) {\n        return;\n      }\n\n      this.run(function () {\n        return _this3.emit(requestId);\n      });\n    }\n\n    return unqueue;\n  }();\n\n  _proto.getMore = function () {\n    function getMore(rid) {\n      var limit,\n          ts,\n          room,\n          lastMessage,\n          ls,\n          typeName,\n          subscription,\n          curRoomDoc,\n          showMessageInMainThread,\n          result,\n          previousHeight,\n          scroll,\n          _result$messages,\n          messages,\n          wrapper,\n          visibleMessages,\n          _args4 = arguments;\n\n      return _regeneratorRuntime.async(function () {\n        function getMore$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                limit = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : defaultLimit;\n                room = this.getRoom(rid);\n\n                if (!(room.hasMore.curValue !== true)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 4:\n                room.isLoading.set(true);\n                _context4.next = 7;\n                return _regeneratorRuntime.awrap(this.queue());\n\n              case 7:\n                // ScrollListener.setLoader true\n                lastMessage = ChatMessage.findOne({\n                  rid: rid,\n                  _hidden: {\n                    $ne: true\n                  }\n                }, {\n                  sort: {\n                    ts: 1\n                  }\n                }); // lastMessage ?= ChatMessage.findOne({rid: rid}, {sort: {ts: 1}})\n\n                if (lastMessage) {\n                  ts = lastMessage.ts;\n                } else {\n                  ts = undefined;\n                }\n\n                ls = undefined;\n                typeName = undefined;\n                subscription = ChatSubscription.findOne({\n                  rid: rid\n                });\n\n                if (subscription) {\n                  ls = subscription.ls;\n                  typeName = subscription.t + subscription.name;\n                } else {\n                  curRoomDoc = ChatRoom.findOne({\n                    _id: rid\n                  });\n                  typeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n                }\n\n                showMessageInMainThread = getUserPreference(Meteor.userId(), 'showMessageInMainThread', false);\n                _context4.next = 16;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('loadHistory', rid, ts, limit, ls, showMessageInMainThread));\n\n              case 16:\n                result = _context4.sent;\n                this.unqueue();\n                _result$messages = result.messages, messages = _result$messages === void 0 ? [] : _result$messages;\n                room.unreadNotLoaded.set(result.unreadNotLoaded);\n                room.firstUnread.set(result.firstUnread);\n                _context4.next = 23;\n                return _regeneratorRuntime.awrap(waitUntilWrapperExists());\n\n              case 23:\n                wrapper = _context4.sent;\n\n                if (wrapper) {\n                  previousHeight = wrapper.scrollHeight;\n                  scroll = wrapper.scrollTop;\n                }\n\n                upsertMessageBulk({\n                  msgs: messages.filter(function (msg) {\n                    return msg.t !== 'command';\n                  }),\n                  subscription: subscription\n                });\n\n                if (!room.loaded) {\n                  room.loaded = 0;\n                }\n\n                visibleMessages = messages.filter(function (msg) {\n                  return !msg.tmid || showMessageInMainThread || msg.tshow;\n                });\n                room.loaded += visibleMessages.length;\n\n                if (messages.length < limit) {\n                  room.hasMore.set(false);\n                }\n\n                if (!(room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit))) {\n                  _context4.next = 32;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.getMore(rid));\n\n              case 32:\n                waitAfterFlush(function () {\n                  var heightDiff = wrapper.scrollHeight - previousHeight;\n                  wrapper.scrollTop = scroll + heightDiff;\n                });\n                room.isLoading.set(false);\n                waitAfterFlush(function () {\n                  readMessage.refreshUnreadMark(rid);\n                  return RoomManager.updateMentionsMarksOfRoom(typeName);\n                });\n\n              case 35:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }\n\n        return getMore$;\n      }(), null, this, null, Promise);\n    }\n\n    return getMore;\n  }();\n\n  _proto.getMoreNext = function () {\n    function getMoreNext(rid) {\n      var limit,\n          room,\n          instance,\n          lastMessage,\n          typeName,\n          subscription,\n          curRoomDoc,\n          ts,\n          result,\n          _args5 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function getMoreNext$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                limit = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : defaultLimit;\n                room = this.getRoom(rid);\n\n                if (!(room.hasMoreNext.curValue !== true)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 4:\n                _context5.next = 6;\n                return _regeneratorRuntime.awrap(this.queue());\n\n              case 6:\n                instance = Blaze.getView($('.messages-box .wrapper')[0]).templateInstance();\n                instance.atBottom = false;\n                room.isLoading.set(true);\n                lastMessage = ChatMessage.findOne({\n                  rid: rid,\n                  _hidden: {\n                    $ne: true\n                  }\n                }, {\n                  sort: {\n                    ts: -1\n                  }\n                });\n                typeName = undefined;\n                subscription = ChatSubscription.findOne({\n                  rid: rid\n                });\n\n                if (subscription) {\n                  // const { ls } = subscription;\n                  typeName = subscription.t + subscription.name;\n                } else {\n                  curRoomDoc = ChatRoom.findOne({\n                    _id: rid\n                  });\n                  typeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n                }\n\n                ts = lastMessage.ts;\n\n                if (!ts) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                _context5.next = 17;\n                return _regeneratorRuntime.awrap(callWithErrorHandling('loadNextMessages', rid, ts, limit));\n\n              case 17:\n                result = _context5.sent;\n                upsertMessageBulk({\n                  msgs: Array.from(result.messages).filter(function (msg) {\n                    return msg.t !== 'command';\n                  }),\n                  subscription: subscription\n                });\n                Meteor.defer(function () {\n                  return RoomManager.updateMentionsMarksOfRoom(typeName);\n                });\n                room.isLoading.set(false);\n\n                if (!room.loaded) {\n                  room.loaded = 0;\n                }\n\n                room.loaded += result.messages.length;\n\n                if (result.messages.length < limit) {\n                  room.hasMoreNext.set(false);\n                }\n\n              case 24:\n                _context5.next = 26;\n                return _regeneratorRuntime.awrap(this.unqueue());\n\n              case 26:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }\n\n        return getMoreNext$;\n      }(), null, this, null, Promise);\n    }\n\n    return getMoreNext;\n  }();\n\n  _proto.getSurroundingMessages = function () {\n    function getSurroundingMessages(message) {\n      var limit,\n          w,\n          instance,\n          msgElement,\n          wrapper,\n          pos,\n          room,\n          typeName,\n          subscription,\n          curRoomDoc,\n          _args6 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function getSurroundingMessages$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                limit = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : defaultLimit;\n\n                if (!(!message || !message.rid)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 3:\n                _context6.next = 5;\n                return _regeneratorRuntime.awrap(waitUntilWrapperExists());\n\n              case 5:\n                w = _context6.sent;\n                instance = Blaze.getView(w).templateInstance();\n\n                if (!ChatMessage.findOne({\n                  _id: message._id,\n                  _hidden: {\n                    $ne: true\n                  }\n                })) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                msgElement = $(\"#\" + message._id, w);\n\n                if (!(msgElement.length === 0)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 11:\n                wrapper = $('.messages-box .wrapper');\n                pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n                wrapper.animate({\n                  scrollTop: pos\n                }, 500);\n                return _context6.abrupt(\"return\", setTimeout(function () {\n                  return msgElement.removeClass('highlight');\n                }, 500));\n\n              case 15:\n                room = this.getRoom(message.rid);\n                room.isLoading.set(true);\n                typeName = undefined;\n                subscription = ChatSubscription.findOne({\n                  rid: message.rid\n                });\n\n                if (subscription) {\n                  // const { ls } = subscription;\n                  typeName = subscription.t + subscription.name;\n                } else {\n                  curRoomDoc = ChatRoom.findOne({\n                    _id: message.rid\n                  });\n                  typeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n                }\n\n                return _context6.abrupt(\"return\", Meteor.call('loadSurroundingMessages', message, limit, function (err, result) {\n                  if (!result || !result.messages) {\n                    return;\n                  }\n\n                  ChatMessage.remove({\n                    rid: message.rid\n                  });\n\n                  for (var _i = 0, _Array$from = Array.from(result.messages); _i < _Array$from.length; _i++) {\n                    var msg = _Array$from[_i];\n\n                    if (msg.t !== 'command') {\n                      upsertMessage({\n                        msg: msg,\n                        subscription: subscription\n                      });\n                    }\n                  }\n\n                  readMessage.refreshUnreadMark(message.rid);\n                  RoomManager.updateMentionsMarksOfRoom(typeName);\n                  Tracker.afterFlush(function () {\n                    var wrapper = $('.messages-box .wrapper');\n                    var msgElement = $(\"#\" + message._id, wrapper);\n                    var pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n                    wrapper.animate({\n                      scrollTop: pos\n                    }, 500);\n                    msgElement.addClass('highlight');\n                    room.isLoading.set(false);\n                    var messages = wrapper[0];\n                    instance.atBottom = !result.moreAfter && messages.scrollTop >= messages.scrollHeight - messages.clientHeight;\n                    setTimeout(function () {\n                      return msgElement.removeClass('highlight');\n                    }, 500);\n                  });\n\n                  if (!room.loaded) {\n                    room.loaded = 0;\n                  }\n\n                  room.loaded += result.messages.length;\n                  room.hasMore.set(result.moreBefore);\n                  return room.hasMoreNext.set(result.moreAfter);\n                }));\n\n              case 21:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }\n\n        return getSurroundingMessages$;\n      }(), null, this, null, Promise);\n    }\n\n    return getSurroundingMessages;\n  }();\n\n  _proto.hasMore = function () {\n    function hasMore(rid) {\n      var room = this.getRoom(rid);\n      return room.hasMore.get();\n    }\n\n    return hasMore;\n  }();\n\n  _proto.hasMoreNext = function () {\n    function hasMoreNext(rid) {\n      var room = this.getRoom(rid);\n      return room.hasMoreNext.get();\n    }\n\n    return hasMoreNext;\n  }();\n\n  _proto.getMoreIfIsEmpty = function () {\n    function getMoreIfIsEmpty(rid) {\n      var room = this.getRoom(rid);\n\n      if (room.loaded === undefined) {\n        return this.getMore(rid);\n      }\n    }\n\n    return getMoreIfIsEmpty;\n  }();\n\n  _proto.isLoading = function () {\n    function isLoading(rid) {\n      var room = this.getRoom(rid);\n      return room.isLoading.get();\n    }\n\n    return isLoading;\n  }();\n\n  _proto.clear = function () {\n    function clear(rid) {\n      ChatMessage.remove({\n        rid: rid\n      });\n\n      if (this.histories[rid]) {\n        this.histories[rid].hasMore.set(true);\n        this.histories[rid].isLoading.set(false);\n        this.histories[rid].loaded = undefined;\n      }\n    }\n\n    return clear;\n  }();\n\n  return _class;\n}(Emitter))();","map":{"version":3,"sources":["app/ui-utils/client/lib/RoomHistoryManager.js"],"names":["_inheritsLoose","module","link","default","v","_objectWithoutProperties","_regeneratorRuntime","_extends","export","normalizeThreadMessage","waitUntilWrapperExists","upsertMessage","upsertMessageBulk","RoomHistoryManager","Meteor","Tracker","ReactiveVar","Blaze","uuidv4","v4","differenceInMilliseconds","Emitter","escapeHTML","RoomManager","readMessage","renderMessageBody","getConfig","ChatMessage","ChatSubscription","ChatRoom","callWithErrorHandling","filterMarkdown","getUserPreference","onClientMessageReceived","message","msg","mentions","replace","attachments","attachment","find","title","description","selector","document","querySelector","Promise","resolve","observer","MutationObserver","mutations","obs","element","disconnect","observe","childList","subtree","subscription","uid","nonreactive","userId","collection","u","_id","ignored","indexOf","t","file","e2e","messageToUpsert","tcount","direct","update","tmid","$set","following","replies","threadMsg","repliesCount","multi","upsert","msgs","queries","forEach","index","length","defaultLimit","parseInt","waitAfterFlush","fn","setTimeout","afterFlush","histories","requestsList","getRoom","rid","hasMore","hasMoreNext","isLoading","unreadNotLoaded","firstUnread","loaded","undefined","queue","requestId","done","lastRequest","Date","run","push","once","difference","unqueue","pop","emit","getMore","limit","room","curValue","set","lastMessage","findOne","_hidden","$ne","sort","ts","ls","typeName","name","curRoomDoc","showMessageInMainThread","result","messages","wrapper","previousHeight","scrollHeight","scroll","scrollTop","filter","visibleMessages","tshow","get","heightDiff","refreshUnreadMark","updateMentionsMarksOfRoom","getMoreNext","instance","getView","$","templateInstance","atBottom","Array","from","defer","getSurroundingMessages","w","msgElement","pos","offset","top","height","animate","removeClass","call","err","remove","addClass","moreAfter","clientHeight","moreBefore","getMoreIfIsEmpty","clear"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Blaze } from 'meteor/blaze';\nimport { v4 as uuidv4 } from 'uuid';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { RoomManager } from './RoomManager';\nimport { readMessage } from './readMessages';\nimport { renderMessageBody } from '../../../../client/lib/utils/renderMessageBody';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { ChatMessage, ChatSubscription, ChatRoom } from '../../../models';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { filterMarkdown } from '../../../markdown/lib/markdown';\nimport { getUserPreference } from '../../../utils/client';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\n\nexport const normalizeThreadMessage = ({ ...message }) => {\n\tif (message.msg) {\n\t\tmessage.msg = filterMarkdown(message.msg);\n\t\tdelete message.mentions;\n\t\treturn renderMessageBody(message).replace(/<br\\s?\\\\?>/g, ' ');\n\t}\n\n\tif (message.attachments) {\n\t\tconst attachment = message.attachments.find((attachment) => attachment.title || attachment.description);\n\n\t\tif (attachment && attachment.description) {\n\t\t\treturn escapeHTML(attachment.description);\n\t\t}\n\n\t\tif (attachment && attachment.title) {\n\t\t\treturn escapeHTML(attachment.title);\n\t\t}\n\t}\n};\n\nexport const waitUntilWrapperExists = async (selector = '.messages-box .wrapper') =>\n\tdocument.querySelector(selector) ||\n\tnew Promise((resolve) => {\n\t\tconst observer = new MutationObserver(function (mutations, obs) {\n\t\t\tconst element = document.querySelector(selector);\n\t\t\tif (element) {\n\t\t\t\tobs.disconnect(); // stop observing\n\t\t\t\treturn resolve(element);\n\t\t\t}\n\t\t});\n\t\tobserver.observe(document, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t});\n\t});\n\nexport const upsertMessage = async ({ msg, subscription, uid = Tracker.nonreactive(() => Meteor.userId()) }, collection = ChatMessage) => {\n\tconst userId = msg.u && msg.u._id;\n\n\tif (subscription && subscription.ignored && subscription.ignored.indexOf(userId) > -1) {\n\t\tmsg.ignored = true;\n\t}\n\n\t// const roles = [\n\t// \t(userId && UserRoles.findOne(userId, { fields: { roles: 1 } })) || {},\n\t// \t(userId && RoomRoles.findOne({ rid: msg.rid, 'u._id': userId })) || {},\n\t// ].map((e) => e.roles);\n\t// msg.roles = _.union.apply(_.union, roles);\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id, ...messageToUpsert } = msg;\n\n\tif (msg.tcount) {\n\t\tcollection.direct.update(\n\t\t\t{ tmid: _id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tfollowing: msg.replies && msg.replies.indexOf(uid) > -1,\n\t\t\t\t\tthreadMsg: normalizeThreadMessage(messageToUpsert),\n\t\t\t\t\trepliesCount: msg.tcount,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ multi: true },\n\t\t);\n\t}\n\n\treturn collection.direct.upsert({ _id }, messageToUpsert);\n};\n\nexport function upsertMessageBulk({ msgs, subscription }, collection = ChatMessage) {\n\tconst uid = Tracker.nonreactive(() => Meteor.userId());\n\tconst { queries } = ChatMessage;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tChatMessage.queries = queries;\n\t\t}\n\t\tupsertMessage({ msg, subscription, uid }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit')) || 50;\n\nconst waitAfterFlush = (fn) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nexport const RoomHistoryManager = new (class extends Emitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.histories = {};\n\t\tthis.requestsList = [];\n\t}\n\n\tgetRoom(rid) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tasync queue() {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\trun(fn) {\n\t\tconst difference = differenceInMilliseconds(new Date(), this.lastRequest);\n\t\tif (!this.lastRequest || difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tunqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tasync getMore(rid, limit = defaultLimit) {\n\t\tlet ts;\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.hasMore.curValue !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\t// ScrollListener.setLoader true\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: 1 } });\n\t\t// lastMessage ?= ChatMessage.findOne({rid: rid}, {sort: {ts: 1}})\n\n\t\tif (lastMessage) {\n\t\t\t({ ts } = lastMessage);\n\t\t} else {\n\t\t\tts = undefined;\n\t\t}\n\n\t\tlet ls = undefined;\n\t\tlet typeName = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t\ttypeName = subscription.t + subscription.name;\n\t\t} else {\n\t\t\tconst curRoomDoc = ChatRoom.findOne({ _id: rid });\n\t\t\ttypeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n\t\t}\n\n\t\tconst showMessageInMainThread = getUserPreference(Meteor.userId(), 'showMessageInMainThread', false);\n\t\tconst result = await callWithErrorHandling('loadHistory', rid, ts, limit, ls, showMessageInMainThread);\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight;\n\t\tlet scroll;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tconst wrapper = await waitUntilWrapperExists();\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showMessageInMainThread || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tconst heightDiff = wrapper.scrollHeight - previousHeight;\n\t\t\twrapper.scrollTop = scroll + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t\twaitAfterFlush(() => {\n\t\t\treadMessage.refreshUnreadMark(rid);\n\t\t\treturn RoomManager.updateMentionsMarksOfRoom(typeName);\n\t\t});\n\t}\n\n\tasync getMoreNext(rid, limit = defaultLimit) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (room.hasMoreNext.curValue !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tconst instance = Blaze.getView($('.messages-box .wrapper')[0]).templateInstance();\n\t\tinstance.atBottom = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tlet typeName = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t// const { ls } = subscription;\n\t\t\ttypeName = subscription.t + subscription.name;\n\t\t} else {\n\t\t\tconst curRoomDoc = ChatRoom.findOne({ _id: rid });\n\t\t\ttypeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n\t\t}\n\n\t\tconst { ts } = lastMessage;\n\n\t\tif (ts) {\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, limit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\tMeteor.defer(() => RoomManager.updateMentionsMarksOfRoom(typeName));\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < limit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tawait this.unqueue();\n\t}\n\n\tasync getSurroundingMessages(message, limit = defaultLimit) {\n\t\tif (!message || !message.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = await waitUntilWrapperExists();\n\n\t\tconst instance = Blaze.getView(w).templateInstance();\n\n\t\tif (ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } })) {\n\t\t\tconst msgElement = $(`#${message._id}`, w);\n\t\t\tif (msgElement.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst wrapper = $('.messages-box .wrapper');\n\t\t\tconst pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n\t\t\twrapper.animate(\n\t\t\t\t{\n\t\t\t\t\tscrollTop: pos,\n\t\t\t\t},\n\t\t\t\t500,\n\t\t\t);\n\n\t\t\treturn setTimeout(() => msgElement.removeClass('highlight'), 500);\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\troom.isLoading.set(true);\n\t\tlet typeName = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\t\tif (subscription) {\n\t\t\t// const { ls } = subscription;\n\t\t\ttypeName = subscription.t + subscription.name;\n\t\t} else {\n\t\t\tconst curRoomDoc = ChatRoom.findOne({ _id: message.rid });\n\t\t\ttypeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n\t\t}\n\n\t\treturn Meteor.call('loadSurroundingMessages', message, limit, function (err, result) {\n\t\t\tif (!result || !result.messages) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tChatMessage.remove({ rid: message.rid });\n\t\t\tfor (const msg of Array.from(result.messages)) {\n\t\t\t\tif (msg.t !== 'command') {\n\t\t\t\t\tupsertMessage({ msg, subscription });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treadMessage.refreshUnreadMark(message.rid);\n\t\t\tRoomManager.updateMentionsMarksOfRoom(typeName);\n\n\t\t\tTracker.afterFlush(() => {\n\t\t\t\tconst wrapper = $('.messages-box .wrapper');\n\t\t\t\tconst msgElement = $(`#${message._id}`, wrapper);\n\t\t\t\tconst pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n\t\t\t\twrapper.animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: pos,\n\t\t\t\t\t},\n\t\t\t\t\t500,\n\t\t\t\t);\n\n\t\t\t\tmsgElement.addClass('highlight');\n\t\t\t\troom.isLoading.set(false);\n\t\t\t\tconst messages = wrapper[0];\n\t\t\t\tinstance.atBottom = !result.moreAfter && messages.scrollTop >= messages.scrollHeight - messages.clientHeight;\n\t\t\t\tsetTimeout(() => msgElement.removeClass('highlight'), 500);\n\t\t\t});\n\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\t\t\troom.loaded += result.messages.length;\n\t\t\troom.hasMore.set(result.moreBefore);\n\t\t\treturn room.hasMoreNext.set(result.moreAfter);\n\t\t});\n\t}\n\n\thasMore(rid) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\thasMoreNext(rid) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tgetMoreIfIsEmpty(rid) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tisLoading(rid) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tclear(rid) {\n\t\tChatMessage.remove({ rid });\n\t\tif (this.histories[rid]) {\n\t\t\tthis.histories[rid].hasMore.set(true);\n\t\t\tthis.histories[rid].isLoading.set(false);\n\t\t\tthis.histories[rid].loaded = undefined;\n\t\t}\n\t}\n})();\n"]},"sourceType":"module","hash":"bead57567b03f6c3e57f8f5a3986ecdfaa7bcb79"}
