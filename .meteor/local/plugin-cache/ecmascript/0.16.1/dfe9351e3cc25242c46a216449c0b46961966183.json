{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/utils/lib/getUserNotificationPreference.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/utils/lib/getUserNotificationPreference.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/utils/lib/getUserNotificationPreference.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/utils/lib/getUserNotificationPreference.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/lib/getUserNotificationPreference.js"}},"code":"module.export({\n  getUserNotificationPreference: () => getUserNotificationPreference\n});\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../models\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\n\nconst getUserNotificationPreference = (user, pref) => {\n  var _user, _user$settings;\n\n  if (typeof user === 'string') {\n    user = Users.findOneById(user);\n  }\n\n  let preferenceKey;\n\n  switch (pref) {\n    case 'desktop':\n      preferenceKey = 'desktopNotifications';\n      break;\n\n    case 'mobile':\n      preferenceKey = 'pushNotifications';\n      break;\n\n    case 'email':\n      preferenceKey = 'emailNotificationMode';\n      break;\n  }\n\n  if ((_user = user) !== null && _user !== void 0 && (_user$settings = _user.settings) !== null && _user$settings !== void 0 && _user$settings.preferences && typeof user.settings.preferences[preferenceKey] !== 'undefined' && user.settings.preferences[preferenceKey] !== 'default') {\n    return {\n      value: user.settings.preferences[preferenceKey],\n      origin: 'user'\n    };\n  }\n\n  const serverValue = settings.get(\"Accounts_Default_User_Preferences_\".concat(preferenceKey));\n\n  if (serverValue) {\n    return {\n      value: serverValue,\n      origin: 'server'\n    };\n  }\n\n  return null;\n};","map":{"version":3,"sources":["app/utils/lib/getUserNotificationPreference.js"],"names":["module","export","getUserNotificationPreference","settings","link","v","Users","user","pref","findOneById","preferenceKey","preferences","value","origin","serverValue","get"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,6BAA6B,EAAC,MAAIA;AAAnC,CAAd;AAAiF,IAAIC,QAAJ;AAAaH,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA6B;AAACD,EAAAA,QAAQ,CAACE,CAAD,EAAG;AAACF,IAAAA,QAAQ,GAACE,CAAT;AAAW;;AAAxB,CAA7B,EAAuD,CAAvD;AAA0D,IAAIC,KAAJ;AAAUN,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACE,EAAAA,KAAK,CAACD,CAAD,EAAG;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;;AAG3J,MAAMH,6BAA6B,GAAG,CAACK,IAAD,EAAOC,IAAP,KAAgB;AAAA;;AAC5D,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC7BA,IAAAA,IAAI,GAAGD,KAAK,CAACG,WAAN,CAAkBF,IAAlB,CAAP;AACA;;AAED,MAAIG,aAAJ;;AACA,UAAQF,IAAR;AACC,SAAK,SAAL;AACCE,MAAAA,aAAa,GAAG,sBAAhB;AACA;;AACD,SAAK,QAAL;AACCA,MAAAA,aAAa,GAAG,mBAAhB;AACA;;AACD,SAAK,OAAL;AACCA,MAAAA,aAAa,GAAG,uBAAhB;AACA;AATF;;AAYA,MACC,SAAAH,IAAI,UAAJ,gDAAMJ,QAAN,0DAAgBQ,WAAhB,IACA,OAAOJ,IAAI,CAACJ,QAAL,CAAcQ,WAAd,CAA0BD,aAA1B,CAAP,KAAoD,WADpD,IAEAH,IAAI,CAACJ,QAAL,CAAcQ,WAAd,CAA0BD,aAA1B,MAA6C,SAH9C,EAIE;AACD,WAAO;AACNE,MAAAA,KAAK,EAAEL,IAAI,CAACJ,QAAL,CAAcQ,WAAd,CAA0BD,aAA1B,CADD;AAENG,MAAAA,MAAM,EAAE;AAFF,KAAP;AAIA;;AACD,QAAMC,WAAW,GAAGX,QAAQ,CAACY,GAAT,6CAAkDL,aAAlD,EAApB;;AACA,MAAII,WAAJ,EAAiB;AAChB,WAAO;AACNF,MAAAA,KAAK,EAAEE,WADD;AAEND,MAAAA,MAAM,EAAE;AAFF,KAAP;AAIA;;AAED,SAAO,IAAP;AACA,CArCM","sourcesContent":["import { settings } from '../../settings';\nimport { Users } from '../../models';\n\nexport const getUserNotificationPreference = (user, pref) => {\n\tif (typeof user === 'string') {\n\t\tuser = Users.findOneById(user);\n\t}\n\n\tlet preferenceKey;\n\tswitch (pref) {\n\t\tcase 'desktop':\n\t\t\tpreferenceKey = 'desktopNotifications';\n\t\t\tbreak;\n\t\tcase 'mobile':\n\t\t\tpreferenceKey = 'pushNotifications';\n\t\t\tbreak;\n\t\tcase 'email':\n\t\t\tpreferenceKey = 'emailNotificationMode';\n\t\t\tbreak;\n\t}\n\n\tif (\n\t\tuser?.settings?.preferences &&\n\t\ttypeof user.settings.preferences[preferenceKey] !== 'undefined' &&\n\t\tuser.settings.preferences[preferenceKey] !== 'default'\n\t) {\n\t\treturn {\n\t\t\tvalue: user.settings.preferences[preferenceKey],\n\t\t\torigin: 'user',\n\t\t};\n\t}\n\tconst serverValue = settings.get(`Accounts_Default_User_Preferences_${preferenceKey}`);\n\tif (serverValue) {\n\t\treturn {\n\t\t\tvalue: serverValue,\n\t\t\torigin: 'server',\n\t\t};\n\t}\n\n\treturn null;\n};\n"]},"sourceType":"module","hash":"dfe9351e3cc25242c46a216449c0b46961966183"}
