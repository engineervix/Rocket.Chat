{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-login/client/login/form.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-login/client/login/form.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-login/client/login/form.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-login/client/login/form.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-login/client/login/form.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 3);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 4);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 5);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 6);\nlet settings;\nmodule.link(\"../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 7);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 8);\nlet t;\nmodule.link(\"../../../utils\", {\n  t(v) {\n    t = v;\n  }\n\n}, 9);\nlet handleError;\nmodule.link(\"../../../../client/lib/utils/handleError\", {\n  handleError(v) {\n    handleError = v;\n  }\n\n}, 10);\nlet dispatchToastMessage;\nmodule.link(\"../../../../client/lib/toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n\n}, 11);\nTemplate.loginForm.helpers({\n  userName() {\n    const user = Meteor.user();\n    return user && user.username;\n  },\n\n  namePlaceholder() {\n    if (settings.get('Accounts_RequireNameForSignUp')) {\n      return t('Name');\n    }\n\n    return t('Name_optional');\n  },\n\n  showFormLogin() {\n    return settings.get('Accounts_ShowFormLogin');\n  },\n\n  state() {\n    for (var _len = arguments.length, state = new Array(_len), _key = 0; _key < _len; _key++) {\n      state[_key] = arguments[_key];\n    }\n\n    return state.indexOf(Template.instance().state.get()) > -1;\n  },\n\n  btnLoginSave() {\n    if (Template.instance().loading.get()) {\n      return \"\".concat(t('Please_wait'), \"...\");\n    }\n\n    switch (Template.instance().state.get()) {\n      case 'register':\n        return t('Register_new_account');\n\n      case 'login':\n        return t('Login');\n\n      case 'email-verification':\n        return t('Send_confirmation_email');\n\n      case 'forgot-password':\n        return t('Reset_password');\n    }\n  },\n\n  loginTerms() {\n    return settings.get('Layout_Login_Terms');\n  },\n\n  registrationAllowed() {\n    const validSecretUrl = Template.instance().validSecretURL;\n    return settings.get('Accounts_RegistrationForm') === 'Public' || validSecretUrl && validSecretUrl.get();\n  },\n\n  linkReplacementText() {\n    return settings.get('Accounts_RegistrationForm_LinkReplacementText');\n  },\n\n  passwordResetAllowed() {\n    return settings.get('Accounts_PasswordReset');\n  },\n\n  requirePasswordConfirmation() {\n    return settings.get('Accounts_RequirePasswordConfirmation');\n  },\n\n  emailOrUsernamePlaceholder() {\n    return settings.get('Accounts_EmailOrUsernamePlaceholder') || t('Email_or_username');\n  },\n\n  passwordPlaceholder() {\n    return settings.get('Accounts_PasswordPlaceholder') || t('Password');\n  },\n\n  confirmPasswordPlaceholder() {\n    return settings.get('Accounts_ConfirmPasswordPlaceholder') || t('Confirm_password');\n  },\n\n  manuallyApproveNewUsers() {\n    return settings.get('Accounts_ManuallyApproveNewUsers');\n  },\n\n  typedEmail() {\n    var _Template$instance$ty;\n\n    return (_Template$instance$ty = Template.instance().typedEmail) === null || _Template$instance$ty === void 0 ? void 0 : _Template$instance$ty.trim();\n  }\n\n});\nTemplate.loginForm.events({\n  'submit #login-card'(event, instance) {\n    event.preventDefault();\n    $(event.target).find('button.login').focus();\n    instance.loading.set(true);\n    const formData = instance.validate();\n    const state = instance.state.get();\n\n    if (formData) {\n      var _formData$emailOrUser;\n\n      if (state === 'email-verification') {\n        var _formData$email;\n\n        Meteor.call('sendConfirmationEmail', (_formData$email = formData.email) === null || _formData$email === void 0 ? void 0 : _formData$email.trim(), () => {\n          instance.loading.set(false);\n          callbacks.run('userConfirmationEmailRequested');\n          dispatchToastMessage({\n            type: 'success',\n            message: t('We_have_sent_registration_email')\n          });\n          return instance.state.set('login');\n        });\n        return;\n      }\n\n      if (state === 'forgot-password') {\n        var _formData$email2;\n\n        Meteor.call('sendForgotPasswordEmail', (_formData$email2 = formData.email) === null || _formData$email2 === void 0 ? void 0 : _formData$email2.trim(), err => {\n          if (err) {\n            handleError(err);\n            return instance.state.set('login');\n          }\n\n          instance.loading.set(false);\n          callbacks.run('userForgotPasswordEmailRequested');\n          dispatchToastMessage({\n            type: 'success',\n            message: t('If_this_email_is_registered')\n          });\n          return instance.state.set('login');\n        });\n        return;\n      }\n\n      if (state === 'register') {\n        formData.secretURL = FlowRouter.getParam('hash');\n        return Meteor.call('registerUser', formData, function (error) {\n          var _formData$email3;\n\n          instance.loading.set(false);\n\n          if (error != null) {\n            if (error.reason === 'Email already exists.') {\n              dispatchToastMessage({\n                type: 'error',\n                message: t('Email_already_exists')\n              });\n            } else {\n              handleError(error);\n            }\n\n            return;\n          }\n\n          callbacks.run('userRegistered');\n          return Meteor.loginWithPassword((_formData$email3 = formData.email) === null || _formData$email3 === void 0 ? void 0 : _formData$email3.trim(), formData.pass, function (error) {\n            if (error && error.error === 'error-invalid-email') {\n              return instance.state.set('wait-email-activation');\n            }\n\n            if (error && error.error === 'error-user-is-not-activated') {\n              return instance.state.set('wait-activation');\n            }\n\n            Session.set('forceLogin', false);\n\n            if (formData.secretURL) {\n              FlowRouter.go('home');\n            }\n          });\n        });\n      }\n\n      let loginMethod = 'loginWithPassword';\n\n      if (settings.get('LDAP_Enable')) {\n        loginMethod = 'loginWithLDAP';\n      }\n\n      if (settings.get('CROWD_Enable')) {\n        loginMethod = 'loginWithCrowd';\n      }\n\n      return Meteor[loginMethod]((_formData$emailOrUser = formData.emailOrUsername) === null || _formData$emailOrUser === void 0 ? void 0 : _formData$emailOrUser.trim(), formData.pass, function (error) {\n        instance.loading.set(false);\n\n        if (error != null) {\n          switch (error.error) {\n            case 'error-user-is-not-activated':\n              return dispatchToastMessage({\n                type: 'error',\n                message: t('Wait_activation_warning')\n              });\n\n            case 'error-invalid-email':\n              instance.typedEmail = formData.emailOrUsername;\n              return instance.state.set('email-verification');\n\n            case 'error-app-user-is-not-allowed-to-login':\n              dispatchToastMessage({\n                type: 'error',\n                message: t('App_user_not_allowed_to_login')\n              });\n              break;\n\n            case 'error-login-blocked-for-ip':\n              dispatchToastMessage({\n                type: 'error',\n                message: t('Error_login_blocked_for_ip')\n              });\n              break;\n\n            case 'error-login-blocked-for-user':\n              dispatchToastMessage({\n                type: 'error',\n                message: t('Error_login_blocked_for_user')\n              });\n              break;\n\n            case 'error-license-user-limit-reached':\n              dispatchToastMessage({\n                type: 'error',\n                message: t('error-license-user-limit-reached')\n              });\n              break;\n\n            default:\n              return dispatchToastMessage({\n                type: 'error',\n                message: t('User_not_found_or_incorrect_password')\n              });\n          }\n        }\n\n        Session.set('forceLogin', false);\n      });\n    }\n  },\n\n  'click .register'() {\n    Template.instance().state.set('register');\n    return callbacks.run('loginPageStateChange', Template.instance().state.get());\n  },\n\n  'click .back-to-login'() {\n    Template.instance().state.set('login');\n    return callbacks.run('loginPageStateChange', Template.instance().state.get());\n  },\n\n  'click .forgot-password'() {\n    Template.instance().state.set('forgot-password');\n    return callbacks.run('loginPageStateChange', Template.instance().state.get());\n  }\n\n});\nTemplate.loginForm.onCreated(function () {\n  const instance = this;\n  this.loading = new ReactiveVar(false);\n\n  if (Session.get('loginDefaultState')) {\n    this.state = new ReactiveVar(Session.get('loginDefaultState'));\n  } else {\n    this.state = new ReactiveVar('login');\n  }\n\n  Tracker.autorun(() => {\n    const registrationForm = settings.get('Accounts_RegistrationForm');\n\n    if (registrationForm === 'Disabled' && this.state.get() === 'register') {\n      this.state.set('login');\n    }\n  });\n  this.validSecretURL = new ReactiveVar(false);\n\n  this.validate = function () {\n    const formData = $('#login-card').serializeArray();\n    const formObj = {};\n    const validationObj = {};\n    formData.forEach(field => {\n      formObj[field.name] = field.value;\n    });\n    const state = instance.state.get();\n\n    if (state !== 'login') {\n      if (!(formObj.email && /\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]+\\b/i.test(formObj.email))) {\n        validationObj.email = t('Invalid_email');\n      }\n    }\n\n    if (state === 'login') {\n      if (!formObj.emailOrUsername) {\n        validationObj.emailOrUsername = t('Invalid_email');\n      }\n    }\n\n    if (state !== 'forgot-password' && state !== 'email-verification') {\n      if (!formObj.pass) {\n        validationObj.pass = t('Invalid_pass');\n      }\n    }\n\n    if (state === 'register') {\n      if (settings.get('Accounts_RequireNameForSignUp') && !formObj.name) {\n        validationObj.name = t('Invalid_name');\n      }\n\n      if (settings.get('Accounts_RequirePasswordConfirmation') && formObj['confirm-pass'] !== formObj.pass) {\n        validationObj['confirm-pass'] = t('Invalid_confirm_pass');\n      }\n\n      if (settings.get('Accounts_ManuallyApproveNewUsers') && !formObj.reason) {\n        validationObj.reason = t('Invalid_reason');\n      }\n    }\n\n    $('#login-card h2').removeClass('error');\n    $('#login-card input.error, #login-card select.error').removeClass('error');\n    $('#login-card .input-error').text('');\n\n    if (!_.isEmpty(validationObj)) {\n      $('#login-card h2').addClass('error');\n      Object.keys(validationObj).forEach(key => {\n        const value = validationObj[key];\n        $(\"#login-card input[name=\".concat(key, \"], #login-card select[name=\").concat(key, \"]\")).addClass('error');\n        $(\"#login-card input[name=\".concat(key, \"]~.input-error, #login-card select[name=\").concat(key, \"]~.input-error\")).text(value);\n      });\n      instance.loading.set(false);\n      return false;\n    }\n\n    return formObj;\n  };\n\n  if (FlowRouter.getParam('hash')) {\n    return Meteor.call('checkRegistrationSecretURL', FlowRouter.getParam('hash'), () => this.validSecretURL.set(true));\n  }\n});\nTemplate.loginForm.onRendered(function () {\n  Session.set('loginDefaultState');\n  return Tracker.autorun(() => {\n    callbacks.run('loginPageStateChange', this.state.get());\n\n    switch (this.state.get()) {\n      case 'login':\n      case 'forgot-password':\n      case 'email-verification':\n        return Meteor.defer(function () {\n          return $('input[name=email]').select().focus();\n        });\n\n      case 'register':\n        return Meteor.defer(function () {\n          return $('input[name=name]').select().focus();\n        });\n    }\n  });\n});","map":{"version":3,"sources":["app/ui-login/client/login/form.js"],"names":["Meteor","module","link","v","ReactiveVar","Tracker","FlowRouter","Session","Template","_","default","settings","callbacks","t","handleError","dispatchToastMessage","loginForm","helpers","userName","user","username","namePlaceholder","get","showFormLogin","state","indexOf","instance","btnLoginSave","loading","loginTerms","registrationAllowed","validSecretUrl","validSecretURL","linkReplacementText","passwordResetAllowed","requirePasswordConfirmation","emailOrUsernamePlaceholder","passwordPlaceholder","confirmPasswordPlaceholder","manuallyApproveNewUsers","typedEmail","trim","events","event","preventDefault","$","target","find","focus","set","formData","validate","call","email","run","type","message","err","secretURL","getParam","error","reason","loginWithPassword","pass","go","loginMethod","emailOrUsername","onCreated","autorun","registrationForm","serializeArray","formObj","validationObj","forEach","field","name","value","test","removeClass","text","isEmpty","addClass","Object","keys","key","onRendered","defer","select"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport { Template } from 'meteor/templating';\nimport _ from 'underscore';\n\nimport { settings } from '../../../settings';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { t } from '../../../utils';\nimport { handleError } from '../../../../client/lib/utils/handleError';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\n\nTemplate.loginForm.helpers({\n\tuserName() {\n\t\tconst user = Meteor.user();\n\t\treturn user && user.username;\n\t},\n\tnamePlaceholder() {\n\t\tif (settings.get('Accounts_RequireNameForSignUp')) {\n\t\t\treturn t('Name');\n\t\t}\n\t\treturn t('Name_optional');\n\t},\n\tshowFormLogin() {\n\t\treturn settings.get('Accounts_ShowFormLogin');\n\t},\n\tstate(...state) {\n\t\treturn state.indexOf(Template.instance().state.get()) > -1;\n\t},\n\tbtnLoginSave() {\n\t\tif (Template.instance().loading.get()) {\n\t\t\treturn `${t('Please_wait')}...`;\n\t\t}\n\t\tswitch (Template.instance().state.get()) {\n\t\t\tcase 'register':\n\t\t\t\treturn t('Register_new_account');\n\t\t\tcase 'login':\n\t\t\t\treturn t('Login');\n\t\t\tcase 'email-verification':\n\t\t\t\treturn t('Send_confirmation_email');\n\t\t\tcase 'forgot-password':\n\t\t\t\treturn t('Reset_password');\n\t\t}\n\t},\n\tloginTerms() {\n\t\treturn settings.get('Layout_Login_Terms');\n\t},\n\tregistrationAllowed() {\n\t\tconst validSecretUrl = Template.instance().validSecretURL;\n\t\treturn settings.get('Accounts_RegistrationForm') === 'Public' || (validSecretUrl && validSecretUrl.get());\n\t},\n\tlinkReplacementText() {\n\t\treturn settings.get('Accounts_RegistrationForm_LinkReplacementText');\n\t},\n\tpasswordResetAllowed() {\n\t\treturn settings.get('Accounts_PasswordReset');\n\t},\n\trequirePasswordConfirmation() {\n\t\treturn settings.get('Accounts_RequirePasswordConfirmation');\n\t},\n\temailOrUsernamePlaceholder() {\n\t\treturn settings.get('Accounts_EmailOrUsernamePlaceholder') || t('Email_or_username');\n\t},\n\tpasswordPlaceholder() {\n\t\treturn settings.get('Accounts_PasswordPlaceholder') || t('Password');\n\t},\n\tconfirmPasswordPlaceholder() {\n\t\treturn settings.get('Accounts_ConfirmPasswordPlaceholder') || t('Confirm_password');\n\t},\n\tmanuallyApproveNewUsers() {\n\t\treturn settings.get('Accounts_ManuallyApproveNewUsers');\n\t},\n\ttypedEmail() {\n\t\treturn Template.instance().typedEmail?.trim();\n\t},\n});\n\nTemplate.loginForm.events({\n\t'submit #login-card'(event, instance) {\n\t\tevent.preventDefault();\n\t\t$(event.target).find('button.login').focus();\n\t\tinstance.loading.set(true);\n\t\tconst formData = instance.validate();\n\t\tconst state = instance.state.get();\n\t\tif (formData) {\n\t\t\tif (state === 'email-verification') {\n\t\t\t\tMeteor.call('sendConfirmationEmail', formData.email?.trim(), () => {\n\t\t\t\t\tinstance.loading.set(false);\n\t\t\t\t\tcallbacks.run('userConfirmationEmailRequested');\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('We_have_sent_registration_email') });\n\t\t\t\t\treturn instance.state.set('login');\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (state === 'forgot-password') {\n\t\t\t\tMeteor.call('sendForgotPasswordEmail', formData.email?.trim(), (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\thandleError(err);\n\t\t\t\t\t\treturn instance.state.set('login');\n\t\t\t\t\t}\n\t\t\t\t\tinstance.loading.set(false);\n\t\t\t\t\tcallbacks.run('userForgotPasswordEmailRequested');\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('If_this_email_is_registered') });\n\t\t\t\t\treturn instance.state.set('login');\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (state === 'register') {\n\t\t\t\tformData.secretURL = FlowRouter.getParam('hash');\n\t\t\t\treturn Meteor.call('registerUser', formData, function (error) {\n\t\t\t\t\tinstance.loading.set(false);\n\t\t\t\t\tif (error != null) {\n\t\t\t\t\t\tif (error.reason === 'Email already exists.') {\n\t\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Email_already_exists') });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thandleError(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbacks.run('userRegistered');\n\t\t\t\t\treturn Meteor.loginWithPassword(formData.email?.trim(), formData.pass, function (error) {\n\t\t\t\t\t\tif (error && error.error === 'error-invalid-email') {\n\t\t\t\t\t\t\treturn instance.state.set('wait-email-activation');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (error && error.error === 'error-user-is-not-activated') {\n\t\t\t\t\t\t\treturn instance.state.set('wait-activation');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSession.set('forceLogin', false);\n\t\t\t\t\t\tif (formData.secretURL) {\n\t\t\t\t\t\t\tFlowRouter.go('home');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tlet loginMethod = 'loginWithPassword';\n\t\t\tif (settings.get('LDAP_Enable')) {\n\t\t\t\tloginMethod = 'loginWithLDAP';\n\t\t\t}\n\t\t\tif (settings.get('CROWD_Enable')) {\n\t\t\t\tloginMethod = 'loginWithCrowd';\n\t\t\t}\n\t\t\treturn Meteor[loginMethod](formData.emailOrUsername?.trim(), formData.pass, function (error) {\n\t\t\t\tinstance.loading.set(false);\n\t\t\t\tif (error != null) {\n\t\t\t\t\tswitch (error.error) {\n\t\t\t\t\t\tcase 'error-user-is-not-activated':\n\t\t\t\t\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Wait_activation_warning') });\n\t\t\t\t\t\tcase 'error-invalid-email':\n\t\t\t\t\t\t\tinstance.typedEmail = formData.emailOrUsername;\n\t\t\t\t\t\t\treturn instance.state.set('email-verification');\n\t\t\t\t\t\tcase 'error-app-user-is-not-allowed-to-login':\n\t\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('App_user_not_allowed_to_login') });\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'error-login-blocked-for-ip':\n\t\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Error_login_blocked_for_ip') });\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'error-login-blocked-for-user':\n\t\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Error_login_blocked_for_user') });\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'error-license-user-limit-reached':\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('error-license-user-limit-reached'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('User_not_found_or_incorrect_password'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSession.set('forceLogin', false);\n\t\t\t});\n\t\t}\n\t},\n\t'click .register'() {\n\t\tTemplate.instance().state.set('register');\n\t\treturn callbacks.run('loginPageStateChange', Template.instance().state.get());\n\t},\n\t'click .back-to-login'() {\n\t\tTemplate.instance().state.set('login');\n\t\treturn callbacks.run('loginPageStateChange', Template.instance().state.get());\n\t},\n\t'click .forgot-password'() {\n\t\tTemplate.instance().state.set('forgot-password');\n\t\treturn callbacks.run('loginPageStateChange', Template.instance().state.get());\n\t},\n});\n\nTemplate.loginForm.onCreated(function () {\n\tconst instance = this;\n\tthis.loading = new ReactiveVar(false);\n\n\tif (Session.get('loginDefaultState')) {\n\t\tthis.state = new ReactiveVar(Session.get('loginDefaultState'));\n\t} else {\n\t\tthis.state = new ReactiveVar('login');\n\t}\n\n\tTracker.autorun(() => {\n\t\tconst registrationForm = settings.get('Accounts_RegistrationForm');\n\t\tif (registrationForm === 'Disabled' && this.state.get() === 'register') {\n\t\t\tthis.state.set('login');\n\t\t}\n\t});\n\n\tthis.validSecretURL = new ReactiveVar(false);\n\tthis.validate = function () {\n\t\tconst formData = $('#login-card').serializeArray();\n\t\tconst formObj = {};\n\t\tconst validationObj = {};\n\t\tformData.forEach((field) => {\n\t\t\tformObj[field.name] = field.value;\n\t\t});\n\t\tconst state = instance.state.get();\n\t\tif (state !== 'login') {\n\t\t\tif (!(formObj.email && /\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]+\\b/i.test(formObj.email))) {\n\t\t\t\tvalidationObj.email = t('Invalid_email');\n\t\t\t}\n\t\t}\n\t\tif (state === 'login') {\n\t\t\tif (!formObj.emailOrUsername) {\n\t\t\t\tvalidationObj.emailOrUsername = t('Invalid_email');\n\t\t\t}\n\t\t}\n\t\tif (state !== 'forgot-password' && state !== 'email-verification') {\n\t\t\tif (!formObj.pass) {\n\t\t\t\tvalidationObj.pass = t('Invalid_pass');\n\t\t\t}\n\t\t}\n\t\tif (state === 'register') {\n\t\t\tif (settings.get('Accounts_RequireNameForSignUp') && !formObj.name) {\n\t\t\t\tvalidationObj.name = t('Invalid_name');\n\t\t\t}\n\t\t\tif (settings.get('Accounts_RequirePasswordConfirmation') && formObj['confirm-pass'] !== formObj.pass) {\n\t\t\t\tvalidationObj['confirm-pass'] = t('Invalid_confirm_pass');\n\t\t\t}\n\t\t\tif (settings.get('Accounts_ManuallyApproveNewUsers') && !formObj.reason) {\n\t\t\t\tvalidationObj.reason = t('Invalid_reason');\n\t\t\t}\n\t\t}\n\t\t$('#login-card h2').removeClass('error');\n\t\t$('#login-card input.error, #login-card select.error').removeClass('error');\n\t\t$('#login-card .input-error').text('');\n\t\tif (!_.isEmpty(validationObj)) {\n\t\t\t$('#login-card h2').addClass('error');\n\n\t\t\tObject.keys(validationObj).forEach((key) => {\n\t\t\t\tconst value = validationObj[key];\n\t\t\t\t$(`#login-card input[name=${key}], #login-card select[name=${key}]`).addClass('error');\n\t\t\t\t$(`#login-card input[name=${key}]~.input-error, #login-card select[name=${key}]~.input-error`).text(value);\n\t\t\t});\n\t\t\tinstance.loading.set(false);\n\t\t\treturn false;\n\t\t}\n\t\treturn formObj;\n\t};\n\tif (FlowRouter.getParam('hash')) {\n\t\treturn Meteor.call('checkRegistrationSecretURL', FlowRouter.getParam('hash'), () => this.validSecretURL.set(true));\n\t}\n});\n\nTemplate.loginForm.onRendered(function () {\n\tSession.set('loginDefaultState');\n\treturn Tracker.autorun(() => {\n\t\tcallbacks.run('loginPageStateChange', this.state.get());\n\t\tswitch (this.state.get()) {\n\t\t\tcase 'login':\n\t\t\tcase 'forgot-password':\n\t\t\tcase 'email-verification':\n\t\t\t\treturn Meteor.defer(function () {\n\t\t\t\t\treturn $('input[name=email]').select().focus();\n\t\t\t\t});\n\t\t\tcase 'register':\n\t\t\t\treturn Meteor.defer(function () {\n\t\t\t\t\treturn $('input[name=name]').select().focus();\n\t\t\t\t});\n\t\t}\n\t});\n});\n"]},"sourceType":"module","hash":"74185fae07dc17e189b3b33c08761a9d4a6823fa"}
