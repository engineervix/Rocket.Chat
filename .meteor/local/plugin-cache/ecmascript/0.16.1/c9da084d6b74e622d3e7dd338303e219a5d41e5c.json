{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/meteor-autocomplete/client/autocomplete-client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/meteor-autocomplete/client/autocomplete-client.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/meteor-autocomplete/client/autocomplete-client.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/meteor-autocomplete/client/autocomplete-client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-autocomplete/client/autocomplete-client.js"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nmodule.export({\n  \"default\": function () {\n    return AutoComplete;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Match;\nmodule.link(\"meteor/check\", {\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\nvar Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze: function (v) {\n    Blaze = v;\n  }\n}, 2);\nvar Deps;\nmodule.link(\"meteor/deps\", {\n  Deps: function (v) {\n    Deps = v;\n  }\n}, 3);\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 4);\nvar getCaretCoordinates;\nmodule.link(\"meteor/dandv:caret-position\", {\n  getCaretCoordinates: function (v) {\n    getCaretCoordinates = v;\n  }\n}, 5);\nvar AutoCompleteRecords;\nmodule.link(\"./collection\", {\n  \"default\": function (v) {\n    AutoCompleteRecords = v;\n  }\n}, 6);\nvar APIClient;\nmodule.link(\"../../utils/client\", {\n  APIClient: function (v) {\n    APIClient = v;\n  }\n}, 7);\n\nvar isServerSearch = function (rule) {\n  return _.isString(rule.collection);\n};\n\nvar validateRule = function (rule) {\n  if (rule.subscription != null && !Match.test(rule.collection, String)) {\n    throw new Error('Collection name must be specified as string for server-side search');\n  } // XXX back-compat message, to be removed\n\n\n  if (rule.callback) {\n    console.warn('autocomplete no longer supports callbacks; use event listeners instead.');\n  }\n};\n\nvar isWholeField = function (rule) {\n  // either '' or null both count as whole field.\n  return !rule.token;\n};\n\nvar getRegExp = function (rule) {\n  if (!isWholeField(rule)) {\n    // Expressions for the range from the last word break to the current cursor position\n    return new RegExp(\"(^|\\\\b|\\\\s)\" + rule.token + \"([\\\\w.]*)$\");\n  } // Whole-field behavior - word characters or spaces\n\n\n  return new RegExp('(^)(.*)$');\n};\n\nvar getFindParams = function (rule, filter, limit) {\n  // This is a different 'filter' - the selector from the settings\n  // We need to extend so that we don't copy over rule.filter\n  var selector = _.extend({}, rule.filter || {});\n\n  var options = {\n    limit: limit\n  };\n\n  if (!filter) {\n    // Match anything, no sort, limit X\n    return [selector, options];\n  }\n\n  if (rule.sort && rule.field) {\n    var sortspec = {}; // Only sort if there is a filter, for faster performance on a match of anything\n\n    sortspec[rule.field] = 1;\n    options.sort = sortspec;\n  }\n\n  if (_.isFunction(rule.selector)) {\n    // Custom selector\n    _.extend(selector, rule.selector(filter));\n  } else {\n    selector[rule.field] = {\n      $regex: rule.matchAll ? filter : \"^\" + filter,\n      // default is case insensitive search - empty string is not the same as undefined!\n      $options: typeof rule.options === 'undefined' ? 'i' : rule.options\n    };\n  }\n\n  return [selector, options];\n};\n\nvar getField = function (obj, str) {\n  var string = str.split('.');\n  string.forEach(function (key) {\n    obj = obj[key];\n  });\n  return obj;\n};\n\nvar AutoComplete = /*#__PURE__*/function () {\n  function AutoComplete(settings) {\n    var _this = this;\n\n    this.KEYS = [40, 38, 13, 27, 9];\n    this.limit = settings.limit || 5;\n    this.position = settings.position || 'bottom';\n    this.rules = settings.rules;\n    this.selector = _objectSpread({\n      container: '.-autocomplete-container',\n      item: '.-autocomplete-item'\n    }, settings.selector);\n    var rules = this.rules;\n    Object.keys(rules).forEach(function (key) {\n      var rule = rules[key];\n      validateRule(rule);\n    });\n    this.onSelect = settings.onSelect;\n\n    this.expressions = function () {\n      return Object.keys(rules).map(function (key) {\n        var rule = rules[key];\n        return getRegExp(rule);\n      });\n    }();\n\n    this.matched = -1;\n    this.loaded = true; // Reactive dependencies for current matching rule and filter\n\n    this.ruleDep = new Deps.Dependency();\n    this.filterDep = new Deps.Dependency();\n    this.loadingDep = new Deps.Dependency(); // Autosubscribe to the record set published by the server based on the filter\n    // This will tear down server subscriptions when they are no longer being used.\n\n    this.sub = null;\n    this.comp = Deps.autorun(function () {\n      function _callee() {\n        var rule, filter, _getFindParams, _getFindParams2, selector, endpointName, _await$APIClient$v1$g, items;\n\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  rule = _this.matchedRule();\n                  filter = _this.getFilter();\n\n                  if (_this.sub) {\n                    // Stop any existing sub immediately, don't wait\n                    _this.sub.stop();\n                  }\n\n                  if (rule && filter) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 5:\n                  if (isServerSearch(rule)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _this.setLoaded(true);\n\n                  return _context.abrupt(\"return\");\n\n                case 8:\n                  _getFindParams = getFindParams(rule, filter, _this.limit), _getFindParams2 = _slicedToArray(_getFindParams, 1), selector = _getFindParams2[0]; // console.debug 'Subscribing to <%s> in <%s>.<%s>', filter, rule.collection, rule.field\n\n                  _this.setLoaded(false);\n\n                  endpointName = rule.endpoint || 'users.autocomplete';\n                  _context.next = 13;\n                  return _regeneratorRuntime.awrap(APIClient.v1.get(endpointName + \"?selector=\" + JSON.stringify(selector)));\n\n                case 13:\n                  _await$APIClient$v1$g = _context.sent;\n                  items = _await$APIClient$v1$g.items;\n                  AutoCompleteRecords.remove({});\n                  items.forEach(function (item) {\n                    return AutoCompleteRecords.insert(item);\n                  });\n\n                  _this.setLoaded(true);\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }\n\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n\n      return _callee;\n    }());\n  }\n\n  var _proto = AutoComplete.prototype;\n\n  _proto.teardown = function () {\n    function teardown() {\n      // Stop the reactive computation we started for this autocomplete instance\n      this.comp.stop();\n    }\n\n    return teardown;\n  }();\n\n  _proto.matchedRule = function () {\n    function matchedRule() {\n      // reactive getters and setters for @filter and the currently matched rule\n      this.ruleDep.depend();\n\n      if (this.matched >= 0) {\n        return this.rules[this.matched];\n      }\n\n      return null;\n    }\n\n    return matchedRule;\n  }();\n\n  _proto.setMatchedRule = function () {\n    function setMatchedRule(i) {\n      this.matched = i;\n      this.ruleDep.changed();\n    }\n\n    return setMatchedRule;\n  }();\n\n  _proto.getFilter = function () {\n    function getFilter() {\n      this.filterDep.depend();\n      return this.filter;\n    }\n\n    return getFilter;\n  }();\n\n  _proto.setFilter = function () {\n    function setFilter(x) {\n      this.filter = x;\n      this.filterDep.changed();\n      return this.filter;\n    }\n\n    return setFilter;\n  }();\n\n  _proto.isLoaded = function () {\n    function isLoaded() {\n      this.loadingDep.depend();\n      return this.loaded;\n    }\n\n    return isLoaded;\n  }();\n\n  _proto.setLoaded = function () {\n    function setLoaded(val) {\n      if (val === this.loaded) {\n        return; // Don't cause redraws unnecessarily\n      }\n\n      this.loaded = val;\n      this.loadingDep.changed();\n    }\n\n    return setLoaded;\n  }();\n\n  _proto.onKeyUp = function () {\n    function onKeyUp() {\n      var _this2 = this;\n\n      if (!this.$element) {\n        return; // Don't try to do this while loading\n      }\n\n      if (this._timeoutHandler) {\n        clearTimeout(this._timeoutHandler);\n      }\n\n      this._timeoutHandler = setTimeout(function () {\n        _this2._timeoutHandler = 0;\n        var startpos = _this2.element.selectionStart;\n\n        var val = _this2.getText().substring(0, startpos);\n        /*\n        \tMatching on multiple expressions.\n        \tWe always go from a matched state to an unmatched one\n        \tbefore going to a different matched one.\n         */\n\n\n        var i = 0;\n        var breakLoop = false;\n\n        while (i < _this2.expressions.length) {\n          var matches = val.match(_this2.expressions[i]); // matching -> not matching\n\n          if (!matches && _this2.matched === i) {\n            _this2.setMatchedRule(-1);\n\n            breakLoop = true;\n          } // not matching -> matching\n\n\n          if (matches && _this2.matched === -1) {\n            _this2.setMatchedRule(i);\n\n            breakLoop = true;\n          } // Did filter change?\n\n\n          if (matches && _this2.filter !== matches[2]) {\n            _this2.setFilter(matches[2]);\n\n            breakLoop = true;\n          }\n\n          if (breakLoop) {\n            break;\n          }\n\n          i++;\n        }\n      }, 300);\n    }\n\n    return onKeyUp;\n  }();\n\n  _proto.onKeyDown = function () {\n    function onKeyDown(e) {\n      if (this.matched === -1 || this.KEYS.indexOf(e.keyCode) < 0) {\n        return;\n      }\n\n      switch (e.keyCode) {\n        case 9: // TAB\n\n        case 13:\n          // ENTER\n          if (this.select()) {\n            // Don't jump fields or submit if select successful\n            e.preventDefault();\n            e.stopPropagation();\n          }\n\n          break;\n        // preventDefault needed below to avoid moving cursor when selecting\n\n        case 40:\n          // DOWN\n          e.preventDefault();\n          this.next();\n          break;\n\n        case 38:\n          // UP\n          e.preventDefault();\n          this.prev();\n          break;\n\n        case 27:\n          // ESCAPE\n          this.$element.blur();\n          this.hideList();\n      }\n    }\n\n    return onKeyDown;\n  }();\n\n  _proto.onFocus = function () {\n    function onFocus() {\n      var _this3 = this;\n\n      // We need to run onKeyUp after the focus resolves,\n      // or the caret position (selectionStart) will not be correct\n      Meteor.defer(function () {\n        return _this3.onKeyUp();\n      });\n    }\n\n    return onFocus;\n  }();\n\n  _proto.onBlur = function () {\n    function onBlur() {\n      var _this4 = this;\n\n      // We need to delay this so click events work\n      // TODO this is a bit of a hack, see if we can't be smarter\n      Meteor.setTimeout(function () {\n        _this4.hideList();\n      }, 500);\n    }\n\n    return onBlur;\n  }();\n\n  _proto.onItemClick = function () {\n    function onItemClick(doc) {\n      this.processSelection(doc, this.rules[this.matched]);\n    }\n\n    return onItemClick;\n  }();\n\n  _proto.onItemHover = function () {\n    function onItemHover(doc, e) {\n      this.tmplInst.$(this.selector.item).removeClass('selected');\n      $(e.target).closest(this.selector.item).addClass('selected');\n    }\n\n    return onItemHover;\n  }();\n\n  _proto.filteredList = function () {\n    function filteredList() {\n      var _this5 = this;\n\n      // @ruleDep.depend() # optional as long as we use depend on filter, because list will always get re-rendered\n      var filter = this.getFilter(); // Reactively depend on the filter\n\n      if (this.matched === -1) {\n        return null;\n      }\n\n      var rule = this.rules[this.matched]; // Don't display list unless we have a token or a filter (or both)\n      // Single field: nothing displayed until something is typed\n\n      if (!(rule.token || filter)) {\n        return null;\n      }\n\n      var params = getFindParams(rule, filter, this.limit);\n      var selector = params[0];\n      var options = params[1];\n      Meteor.defer(function () {\n        return _this5.ensureSelection();\n      }); // if server collection, the server has already done the filtering work\n\n      if (isServerSearch(rule)) {\n        return AutoCompleteRecords.find({}, options);\n      } // Otherwise, search on client\n\n\n      return rule.collection.find(selector, options);\n    }\n\n    return filteredList;\n  }();\n\n  _proto.isShowing = function () {\n    function isShowing() {\n      var _this6 = this;\n\n      var rule = this.matchedRule(); // Same rules as above\n\n      var showing = rule && (rule.token || this.getFilter()); // Do this after the render\n\n      if (showing) {\n        Meteor.defer(function () {\n          _this6.positionContainer();\n\n          _this6.ensureSelection();\n        });\n      }\n\n      return showing;\n    }\n\n    return isShowing;\n  }() // Replace text with currently selected item\n  ;\n\n  _proto.select = function () {\n    function select() {\n      var node = this.tmplInst.find(this.selector.item + \".selected\");\n\n      if (node == null) {\n        return false;\n      }\n\n      var doc = Blaze.getData(node);\n\n      if (!doc) {\n        return false; // Don't select if nothing matched\n      }\n\n      this.processSelection(doc, this.rules[this.matched]);\n      return true;\n    }\n\n    return select;\n  }();\n\n  _proto.processSelection = function () {\n    function processSelection(doc, rule) {\n      var replacement = getField(doc, rule.field);\n\n      if (!isWholeField(rule)) {\n        this.replace(replacement, rule);\n        this.hideList();\n      } else {\n        // Empty string or doesn't exist?\n        // Single-field replacement: replace whole field\n        this.setText(replacement); // Field retains focus, but list is hidden unless another key is pressed\n        // Must be deferred or onKeyUp will trigger and match again\n        // TODO this is a hack; see above\n\n        this.onBlur();\n      }\n\n      this.onSelect && this.onSelect(doc);\n      this.$element.trigger('autocompleteselect', doc);\n    }\n\n    return processSelection;\n  }() // Replace the appropriate region\n  ;\n\n  _proto.replace = function () {\n    function replace(replacement) {\n      var startpos = this.element.selectionStart;\n      var fullStuff = this.getText();\n      var val = fullStuff.substring(0, startpos);\n      val = val.replace(this.expressions[this.matched], \"$1\" + this.rules[this.matched].token + replacement);\n      var posfix = fullStuff.substring(startpos, fullStuff.length);\n      var separator = posfix.match(/^\\s/) ? '' : ' ';\n      var finalFight = val + separator + posfix;\n      this.setText(finalFight);\n      var newPosition = val.length + 1;\n      this.element.setSelectionRange(newPosition, newPosition);\n    }\n\n    return replace;\n  }();\n\n  _proto.hideList = function () {\n    function hideList() {\n      this.setMatchedRule(-1);\n      this.setFilter(null);\n    }\n\n    return hideList;\n  }();\n\n  _proto.getText = function () {\n    function getText() {\n      return this.$element.val() || this.$element.text();\n    }\n\n    return getText;\n  }();\n\n  _proto.setText = function () {\n    function setText(text) {\n      if (this.$element.is('input,textarea')) {\n        return this.$element.val(text);\n      }\n\n      this.$element.html(text);\n    }\n\n    return setText;\n  }()\n  /*\n  \tRendering functions\n   */\n  ;\n\n  _proto.positionContainer = function () {\n    function positionContainer() {\n      // First render; Pick the first item and set css whenever list gets shown\n      var pos = {};\n      var element = this.selector.anchor ? this.tmplInst.$(this.selector.anchor) : this.$element;\n\n      if (this.position === 'fixed') {\n        var width = element.outerWidth();\n        return this.tmplInst.$(this.selector.container).css({\n          width: width,\n          position: 'fixed'\n        });\n      }\n\n      var position = element.position();\n\n      if (!position) {\n        return;\n      }\n\n      var rule = this.matchedRule();\n      var offset = getCaretCoordinates(this.element, this.element.selectionStart); // In whole-field positioning, we don't move the container and make it the\n      // full width of the field.\n\n      if (rule && isWholeField(rule)) {\n        pos.left = position.left;\n\n        if (rule.doNotChangeWidth !== false) {\n          pos.width = element.outerWidth(); // position.offsetWidth\n        }\n      } else {\n        // Normal positioning, at token word\n        pos = {\n          left: position.left + offset.left\n        };\n      } // Position menu from top (above) or from bottom of caret (below, default)\n\n\n      if (this.position === 'top') {\n        pos.bottom = element.offsetParent().height() - position.top - offset.top;\n      } else {\n        pos.top = position.top + offset.top + parseInt(element.css('font-size'));\n      }\n\n      this.tmplInst.$(this.selector.container).css(_objectSpread(_objectSpread({}, pos), {}, {\n        position: 'absolute'\n      }));\n    }\n\n    return positionContainer;\n  }();\n\n  _proto.ensureSelection = function () {\n    function ensureSelection() {\n      // Re-render; make sure selected item is something in the list or none if list empty\n      var selectedItem = this.tmplInst.$(this.selector.item + \".selected\");\n\n      if (!selectedItem.length) {\n        // Select anything\n        this.tmplInst.$(this.selector.item + \":first-child\").addClass('selected');\n      }\n    }\n\n    return ensureSelection;\n  }() // Select next item in list\n  ;\n\n  _proto.next = function () {\n    function next() {\n      var currentItem = this.tmplInst.$(this.selector.item + \".selected\");\n\n      if (!currentItem.length) {\n        return this.tmplInst.$(this.selector.item + \":first-child\").addClass('selected');\n      }\n\n      currentItem.removeClass('selected');\n      var next = currentItem.next();\n\n      if (next.length) {\n        next.addClass('selected');\n      } else {\n        // End of list or lost selection; Go back to first item\n        this.tmplInst.$(this.selector.item + \":first-child\").addClass('selected');\n      }\n    }\n\n    return next;\n  }() // Select previous item in list\n  ;\n\n  _proto.prev = function () {\n    function prev() {\n      var currentItem = this.tmplInst.$(this.selector.item + \".selected\");\n\n      if (!currentItem.length) {\n        return; // Don't try to iterate an empty list\n      }\n\n      currentItem.removeClass('selected');\n      var prev = currentItem.prev();\n\n      if (prev.length) {\n        prev.addClass('selected');\n      } else {\n        // Beginning of list or lost selection; Go to end of list\n        this.tmplInst.$(this.selector.item + \":last-child\").addClass('selected');\n      }\n    }\n\n    return prev;\n  }() // This doesn't need to be reactive because list already changes reactively\n  // and will cause all of the items to re-render anyway\n  ;\n\n  _proto.currentTemplate = function () {\n    function currentTemplate() {\n      return this.rules[this.matched].template;\n    }\n\n    return currentTemplate;\n  }();\n\n  return AutoComplete;\n}();","map":{"version":3,"sources":["app/meteor-autocomplete/client/autocomplete-client.js"],"names":["_regeneratorRuntime","module","link","default","v","_slicedToArray","_objectSpread","export","AutoComplete","Meteor","Match","Blaze","Deps","_","getCaretCoordinates","AutoCompleteRecords","APIClient","isServerSearch","rule","isString","collection","validateRule","subscription","test","String","Error","callback","console","warn","isWholeField","token","getRegExp","RegExp","getFindParams","filter","limit","selector","extend","options","sort","field","sortspec","isFunction","$regex","matchAll","$options","getField","obj","str","string","split","forEach","key","settings","KEYS","position","rules","container","item","Object","keys","onSelect","expressions","map","matched","loaded","ruleDep","Dependency","filterDep","loadingDep","sub","comp","autorun","matchedRule","getFilter","stop","setLoaded","endpointName","endpoint","v1","get","JSON","stringify","items","remove","insert","teardown","depend","setMatchedRule","i","changed","setFilter","x","isLoaded","val","onKeyUp","$element","_timeoutHandler","clearTimeout","setTimeout","startpos","element","selectionStart","getText","substring","breakLoop","length","matches","match","onKeyDown","e","indexOf","keyCode","select","preventDefault","stopPropagation","next","prev","blur","hideList","onFocus","defer","onBlur","onItemClick","doc","processSelection","onItemHover","tmplInst","$","removeClass","target","closest","addClass","filteredList","params","ensureSelection","find","isShowing","showing","positionContainer","node","getData","replacement","replace","setText","trigger","fullStuff","posfix","separator","finalFight","newPosition","setSelectionRange","text","is","html","pos","anchor","width","outerWidth","css","offset","left","doNotChangeWidth","bottom","offsetParent","height","top","parseInt","selectedItem","currentItem","currentTemplate","template"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport { Blaze } from 'meteor/blaze';\nimport { Deps } from 'meteor/deps';\nimport _ from 'underscore';\nimport { getCaretCoordinates } from 'meteor/dandv:caret-position';\n\nimport AutoCompleteRecords from './collection';\nimport { APIClient } from '../../utils/client';\n\nconst isServerSearch = function (rule) {\n\treturn _.isString(rule.collection);\n};\n\nconst validateRule = function (rule) {\n\tif (rule.subscription != null && !Match.test(rule.collection, String)) {\n\t\tthrow new Error('Collection name must be specified as string for server-side search');\n\t}\n\t// XXX back-compat message, to be removed\n\tif (rule.callback) {\n\t\tconsole.warn('autocomplete no longer supports callbacks; use event listeners instead.');\n\t}\n};\n\nconst isWholeField = function (rule) {\n\t// either '' or null both count as whole field.\n\treturn !rule.token;\n};\n\nconst getRegExp = function (rule) {\n\tif (!isWholeField(rule)) {\n\t\t// Expressions for the range from the last word break to the current cursor position\n\t\treturn new RegExp(`(^|\\\\b|\\\\s)${rule.token}([\\\\w.]*)$`);\n\t}\n\t// Whole-field behavior - word characters or spaces\n\treturn new RegExp('(^)(.*)$');\n};\n\nconst getFindParams = function (rule, filter, limit) {\n\t// This is a different 'filter' - the selector from the settings\n\t// We need to extend so that we don't copy over rule.filter\n\tconst selector = _.extend({}, rule.filter || {});\n\tconst options = {\n\t\tlimit,\n\t};\n\tif (!filter) {\n\t\t// Match anything, no sort, limit X\n\t\treturn [selector, options];\n\t}\n\tif (rule.sort && rule.field) {\n\t\tconst sortspec = {};\n\t\t// Only sort if there is a filter, for faster performance on a match of anything\n\t\tsortspec[rule.field] = 1;\n\t\toptions.sort = sortspec;\n\t}\n\tif (_.isFunction(rule.selector)) {\n\t\t// Custom selector\n\t\t_.extend(selector, rule.selector(filter));\n\t} else {\n\t\tselector[rule.field] = {\n\t\t\t$regex: rule.matchAll ? filter : `^${filter}`,\n\t\t\t// default is case insensitive search - empty string is not the same as undefined!\n\t\t\t$options: typeof rule.options === 'undefined' ? 'i' : rule.options,\n\t\t};\n\t}\n\treturn [selector, options];\n};\n\nconst getField = function (obj, str) {\n\tconst string = str.split('.');\n\tstring.forEach((key) => {\n\t\tobj = obj[key];\n\t});\n\treturn obj;\n};\n\nexport default class AutoComplete {\n\tconstructor(settings) {\n\t\tthis.KEYS = [40, 38, 13, 27, 9];\n\t\tthis.limit = settings.limit || 5;\n\t\tthis.position = settings.position || 'bottom';\n\t\tthis.rules = settings.rules;\n\t\tthis.selector = {\n\t\t\tcontainer: '.-autocomplete-container',\n\t\t\titem: '.-autocomplete-item',\n\t\t\t...settings.selector,\n\t\t};\n\t\tconst { rules } = this;\n\n\t\tObject.keys(rules).forEach((key) => {\n\t\t\tconst rule = rules[key];\n\t\t\tvalidateRule(rule);\n\t\t});\n\n\t\tthis.onSelect = settings.onSelect;\n\n\t\tthis.expressions = (() =>\n\t\t\tObject.keys(rules).map((key) => {\n\t\t\t\tconst rule = rules[key];\n\t\t\t\treturn getRegExp(rule);\n\t\t\t}))();\n\t\tthis.matched = -1;\n\t\tthis.loaded = true;\n\n\t\t// Reactive dependencies for current matching rule and filter\n\t\tthis.ruleDep = new Deps.Dependency();\n\t\tthis.filterDep = new Deps.Dependency();\n\t\tthis.loadingDep = new Deps.Dependency();\n\n\t\t// Autosubscribe to the record set published by the server based on the filter\n\t\t// This will tear down server subscriptions when they are no longer being used.\n\t\tthis.sub = null;\n\t\tthis.comp = Deps.autorun(async () => {\n\t\t\tconst rule = this.matchedRule();\n\t\t\tconst filter = this.getFilter();\n\t\t\tif (this.sub) {\n\t\t\t\t// Stop any existing sub immediately, don't wait\n\t\t\t\tthis.sub.stop();\n\t\t\t}\n\t\t\tif (!(rule && filter)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// subscribe only for server-side collections\n\t\t\tif (!isServerSearch(rule)) {\n\t\t\t\tthis.setLoaded(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst [selector] = getFindParams(rule, filter, this.limit);\n\n\t\t\t// console.debug 'Subscribing to <%s> in <%s>.<%s>', filter, rule.collection, rule.field\n\t\t\tthis.setLoaded(false);\n\t\t\tconst endpointName = rule.endpoint || 'users.autocomplete';\n\t\t\tconst { items } = await APIClient.v1.get(`${endpointName}?selector=${JSON.stringify(selector)}`);\n\t\t\tAutoCompleteRecords.remove({});\n\t\t\titems.forEach((item) => AutoCompleteRecords.insert(item));\n\t\t\tthis.setLoaded(true);\n\t\t});\n\t}\n\n\tteardown() {\n\t\t// Stop the reactive computation we started for this autocomplete instance\n\t\tthis.comp.stop();\n\t}\n\n\tmatchedRule() {\n\t\t// reactive getters and setters for @filter and the currently matched rule\n\t\tthis.ruleDep.depend();\n\t\tif (this.matched >= 0) {\n\t\t\treturn this.rules[this.matched];\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetMatchedRule(i) {\n\t\tthis.matched = i;\n\t\tthis.ruleDep.changed();\n\t}\n\n\tgetFilter() {\n\t\tthis.filterDep.depend();\n\t\treturn this.filter;\n\t}\n\n\tsetFilter(x) {\n\t\tthis.filter = x;\n\t\tthis.filterDep.changed();\n\t\treturn this.filter;\n\t}\n\n\tisLoaded() {\n\t\tthis.loadingDep.depend();\n\t\treturn this.loaded;\n\t}\n\n\tsetLoaded(val) {\n\t\tif (val === this.loaded) {\n\t\t\treturn; // Don't cause redraws unnecessarily\n\t\t}\n\t\tthis.loaded = val;\n\t\tthis.loadingDep.changed();\n\t}\n\n\tonKeyUp() {\n\t\tif (!this.$element) {\n\t\t\treturn; // Don't try to do this while loading\n\t\t}\n\n\t\tif (this._timeoutHandler) {\n\t\t\tclearTimeout(this._timeoutHandler);\n\t\t}\n\n\t\tthis._timeoutHandler = setTimeout(() => {\n\t\t\tthis._timeoutHandler = 0;\n\n\t\t\tconst startpos = this.element.selectionStart;\n\t\t\tconst val = this.getText().substring(0, startpos);\n\n\t\t\t/*\n\t\t\t\tMatching on multiple expressions.\n\t\t\t\tWe always go from a matched state to an unmatched one\n\t\t\t\tbefore going to a different matched one.\n\t\t\t */\n\t\t\tlet i = 0;\n\t\t\tlet breakLoop = false;\n\t\t\twhile (i < this.expressions.length) {\n\t\t\t\tconst matches = val.match(this.expressions[i]);\n\n\t\t\t\t// matching -> not matching\n\t\t\t\tif (!matches && this.matched === i) {\n\t\t\t\t\tthis.setMatchedRule(-1);\n\t\t\t\t\tbreakLoop = true;\n\t\t\t\t}\n\n\t\t\t\t// not matching -> matching\n\t\t\t\tif (matches && this.matched === -1) {\n\t\t\t\t\tthis.setMatchedRule(i);\n\t\t\t\t\tbreakLoop = true;\n\t\t\t\t}\n\n\t\t\t\t// Did filter change?\n\t\t\t\tif (matches && this.filter !== matches[2]) {\n\t\t\t\t\tthis.setFilter(matches[2]);\n\t\t\t\t\tbreakLoop = true;\n\t\t\t\t}\n\t\t\t\tif (breakLoop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}, 300);\n\t}\n\n\tonKeyDown(e) {\n\t\tif (this.matched === -1 || this.KEYS.indexOf(e.keyCode) < 0) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (e.keyCode) {\n\t\t\tcase 9: // TAB\n\t\t\tcase 13: // ENTER\n\t\t\t\tif (this.select()) {\n\t\t\t\t\t// Don't jump fields or submit if select successful\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// preventDefault needed below to avoid moving cursor when selecting\n\t\t\tcase 40: // DOWN\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.next();\n\t\t\t\tbreak;\n\t\t\tcase 38: // UP\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.prev();\n\t\t\t\tbreak;\n\t\t\tcase 27: // ESCAPE\n\t\t\t\tthis.$element.blur();\n\t\t\t\tthis.hideList();\n\t\t}\n\t}\n\n\tonFocus() {\n\t\t// We need to run onKeyUp after the focus resolves,\n\t\t// or the caret position (selectionStart) will not be correct\n\t\tMeteor.defer(() => this.onKeyUp());\n\t}\n\n\tonBlur() {\n\t\t// We need to delay this so click events work\n\t\t// TODO this is a bit of a hack, see if we can't be smarter\n\t\tMeteor.setTimeout(() => {\n\t\t\tthis.hideList();\n\t\t}, 500);\n\t}\n\n\tonItemClick(doc) {\n\t\tthis.processSelection(doc, this.rules[this.matched]);\n\t}\n\n\tonItemHover(doc, e) {\n\t\tthis.tmplInst.$(this.selector.item).removeClass('selected');\n\t\t$(e.target).closest(this.selector.item).addClass('selected');\n\t}\n\n\tfilteredList() {\n\t\t// @ruleDep.depend() # optional as long as we use depend on filter, because list will always get re-rendered\n\t\tconst filter = this.getFilter(); // Reactively depend on the filter\n\t\tif (this.matched === -1) {\n\t\t\treturn null;\n\t\t}\n\t\tconst rule = this.rules[this.matched];\n\n\t\t// Don't display list unless we have a token or a filter (or both)\n\t\t// Single field: nothing displayed until something is typed\n\t\tif (!(rule.token || filter)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst params = getFindParams(rule, filter, this.limit);\n\t\tconst selector = params[0];\n\t\tconst options = params[1];\n\t\tMeteor.defer(() => this.ensureSelection());\n\n\t\t// if server collection, the server has already done the filtering work\n\t\tif (isServerSearch(rule)) {\n\t\t\treturn AutoCompleteRecords.find({}, options);\n\t\t}\n\t\t// Otherwise, search on client\n\t\treturn rule.collection.find(selector, options);\n\t}\n\n\tisShowing() {\n\t\tconst rule = this.matchedRule();\n\t\t// Same rules as above\n\t\tconst showing = rule && (rule.token || this.getFilter());\n\n\t\t// Do this after the render\n\t\tif (showing) {\n\t\t\tMeteor.defer(() => {\n\t\t\t\tthis.positionContainer();\n\t\t\t\tthis.ensureSelection();\n\t\t\t});\n\t\t}\n\t\treturn showing;\n\t}\n\n\t// Replace text with currently selected item\n\tselect() {\n\t\tconst node = this.tmplInst.find(`${this.selector.item}.selected`);\n\t\tif (node == null) {\n\t\t\treturn false;\n\t\t}\n\t\tconst doc = Blaze.getData(node);\n\t\tif (!doc) {\n\t\t\treturn false; // Don't select if nothing matched\n\t\t}\n\t\tthis.processSelection(doc, this.rules[this.matched]);\n\t\treturn true;\n\t}\n\n\tprocessSelection(doc, rule) {\n\t\tconst replacement = getField(doc, rule.field);\n\t\tif (!isWholeField(rule)) {\n\t\t\tthis.replace(replacement, rule);\n\t\t\tthis.hideList();\n\t\t} else {\n\t\t\t// Empty string or doesn't exist?\n\t\t\t// Single-field replacement: replace whole field\n\t\t\tthis.setText(replacement);\n\n\t\t\t// Field retains focus, but list is hidden unless another key is pressed\n\t\t\t// Must be deferred or onKeyUp will trigger and match again\n\t\t\t// TODO this is a hack; see above\n\t\t\tthis.onBlur();\n\t\t}\n\t\tthis.onSelect && this.onSelect(doc);\n\t\tthis.$element.trigger('autocompleteselect', doc);\n\t}\n\n\t// Replace the appropriate region\n\treplace(replacement) {\n\t\tconst startpos = this.element.selectionStart;\n\t\tconst fullStuff = this.getText();\n\t\tlet val = fullStuff.substring(0, startpos);\n\t\tval = val.replace(this.expressions[this.matched], `$1${this.rules[this.matched].token}${replacement}`);\n\t\tconst posfix = fullStuff.substring(startpos, fullStuff.length);\n\t\tconst separator = posfix.match(/^\\s/) ? '' : ' ';\n\t\tconst finalFight = val + separator + posfix;\n\t\tthis.setText(finalFight);\n\t\tconst newPosition = val.length + 1;\n\t\tthis.element.setSelectionRange(newPosition, newPosition);\n\t}\n\n\thideList() {\n\t\tthis.setMatchedRule(-1);\n\t\tthis.setFilter(null);\n\t}\n\n\tgetText() {\n\t\treturn this.$element.val() || this.$element.text();\n\t}\n\n\tsetText(text) {\n\t\tif (this.$element.is('input,textarea')) {\n\t\t\treturn this.$element.val(text);\n\t\t}\n\t\tthis.$element.html(text);\n\t}\n\n\t/*\n\t\tRendering functions\n\t */\n\n\tpositionContainer() {\n\t\t// First render; Pick the first item and set css whenever list gets shown\n\t\tlet pos = {};\n\t\tconst element = this.selector.anchor ? this.tmplInst.$(this.selector.anchor) : this.$element;\n\n\t\tif (this.position === 'fixed') {\n\t\t\tconst width = element.outerWidth();\n\t\t\treturn this.tmplInst.$(this.selector.container).css({ width, position: 'fixed' });\n\t\t}\n\n\t\tconst position = element.position();\n\t\tif (!position) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rule = this.matchedRule();\n\t\tconst offset = getCaretCoordinates(this.element, this.element.selectionStart);\n\n\t\t// In whole-field positioning, we don't move the container and make it the\n\t\t// full width of the field.\n\t\tif (rule && isWholeField(rule)) {\n\t\t\tpos.left = position.left;\n\t\t\tif (rule.doNotChangeWidth !== false) {\n\t\t\t\tpos.width = element.outerWidth(); // position.offsetWidth\n\t\t\t}\n\t\t} else {\n\t\t\t// Normal positioning, at token word\n\t\t\tpos = { left: position.left + offset.left };\n\t\t}\n\n\t\t// Position menu from top (above) or from bottom of caret (below, default)\n\t\tif (this.position === 'top') {\n\t\t\tpos.bottom = element.offsetParent().height() - position.top - offset.top;\n\t\t} else {\n\t\t\tpos.top = position.top + offset.top + parseInt(element.css('font-size'));\n\t\t}\n\n\t\tthis.tmplInst.$(this.selector.container).css({ ...pos, position: 'absolute' });\n\t}\n\n\tensureSelection() {\n\t\t// Re-render; make sure selected item is something in the list or none if list empty\n\t\tconst selectedItem = this.tmplInst.$(`${this.selector.item}.selected`);\n\t\tif (!selectedItem.length) {\n\t\t\t// Select anything\n\t\t\tthis.tmplInst.$(`${this.selector.item}:first-child`).addClass('selected');\n\t\t}\n\t}\n\n\t// Select next item in list\n\tnext() {\n\t\tconst currentItem = this.tmplInst.$(`${this.selector.item}.selected`);\n\t\tif (!currentItem.length) {\n\t\t\treturn this.tmplInst.$(`${this.selector.item}:first-child`).addClass('selected');\n\t\t}\n\t\tcurrentItem.removeClass('selected');\n\t\tconst next = currentItem.next();\n\t\tif (next.length) {\n\t\t\tnext.addClass('selected');\n\t\t} else {\n\t\t\t// End of list or lost selection; Go back to first item\n\t\t\tthis.tmplInst.$(`${this.selector.item}:first-child`).addClass('selected');\n\t\t}\n\t}\n\n\t// Select previous item in list\n\tprev() {\n\t\tconst currentItem = this.tmplInst.$(`${this.selector.item}.selected`);\n\t\tif (!currentItem.length) {\n\t\t\treturn; // Don't try to iterate an empty list\n\t\t}\n\t\tcurrentItem.removeClass('selected');\n\t\tconst prev = currentItem.prev();\n\t\tif (prev.length) {\n\t\t\tprev.addClass('selected');\n\t\t} else {\n\t\t\t// Beginning of list or lost selection; Go to end of list\n\t\t\tthis.tmplInst.$(`${this.selector.item}:last-child`).addClass('selected');\n\t\t}\n\t}\n\n\t// This doesn't need to be reactive because list already changes reactively\n\t// and will cause all of the items to re-render anyway\n\tcurrentTemplate() {\n\t\treturn this.rules[this.matched].template;\n\t}\n}\n"]},"sourceType":"module","hash":"c9da084d6b74e622d3e7dd338303e219a5d41e5c"}
