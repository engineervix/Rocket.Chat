{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/otr/client/rocketchat.otr.room.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/otr/client/rocketchat.otr.room.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/otr/client/rocketchat.otr.room.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/otr/client/rocketchat.otr.room.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/otr/client/rocketchat.otr.room.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 3);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 4);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 5);\nlet TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync(v) {\n    TimeSync = v;\n  }\n\n}, 6);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 7);\nlet OTR;\nmodule.link(\"./rocketchat.otr\", {\n  OTR(v) {\n    OTR = v;\n  }\n\n}, 8);\nlet Notifications;\nmodule.link(\"../../notifications\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 9);\nlet getUidDirectMessage;\nmodule.link(\"../../../client/lib/utils/getUidDirectMessage\", {\n  getUidDirectMessage(v) {\n    getUidDirectMessage = v;\n  }\n\n}, 10);\nlet Presence;\nmodule.link(\"../../../client/lib/presence\", {\n  Presence(v) {\n    Presence = v;\n  }\n\n}, 11);\nlet goToRoomById;\nmodule.link(\"../../../client/lib/utils/goToRoomById\", {\n  goToRoomById(v) {\n    goToRoomById = v;\n  }\n\n}, 12);\nlet imperativeModal;\nmodule.link(\"../../../client/lib/imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n\n}, 13);\nlet GenericModal;\nmodule.link(\"../../../client/components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n\n}, 14);\nlet dispatchToastMessage;\nmodule.link(\"../../../client/lib/toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n\n}, 15);\nlet otrSystemMessages;\nmodule.link(\"../lib/constants\", {\n  otrSystemMessages(v) {\n    otrSystemMessages = v;\n  }\n\n}, 16);\nlet APIClient;\nmodule.link(\"../../utils/client\", {\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 17);\nOTR.Room = class {\n  constructor(userId, roomId) {\n    this.userId = userId;\n    this.roomId = roomId;\n    this.peerId = getUidDirectMessage(roomId);\n    this.established = new ReactiveVar(false);\n    this.establishing = new ReactiveVar(false);\n    this.isFirstOTR = true;\n    this.userOnlineComputation = null;\n    this.keyPair = null;\n    this.exportedPublicKey = null;\n    this.sessionKey = null;\n  }\n\n  handshake(refresh) {\n    this.establishing.set(true);\n    this.firstPeer = true;\n    this.generateKeyPair().then(() => {\n      Notifications.notifyUser(this.peerId, 'otr', 'handshake', {\n        roomId: this.roomId,\n        userId: this.userId,\n        publicKey: EJSON.stringify(this.exportedPublicKey),\n        refresh\n      });\n    });\n\n    if (refresh) {\n      Meteor.call('sendSystemMessages', this.roomId, Meteor.user(), otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH);\n      this.isFirstOTR = false;\n    }\n  }\n\n  acknowledge() {\n    APIClient.v1.post('statistics.telemetry', {\n      params: [{\n        eventName: 'otrStats',\n        timestamp: Date.now(),\n        rid: this.roomId\n      }]\n    });\n    Notifications.notifyUser(this.peerId, 'otr', 'acknowledge', {\n      roomId: this.roomId,\n      userId: this.userId,\n      publicKey: EJSON.stringify(this.exportedPublicKey)\n    });\n  }\n\n  deny() {\n    this.reset();\n    Notifications.notifyUser(this.peerId, 'otr', 'deny', {\n      roomId: this.roomId,\n      userId: this.userId\n    });\n  }\n\n  end() {\n    this.isFirstOTR = true;\n    this.reset();\n    Notifications.notifyUser(this.peerId, 'otr', 'end', {\n      roomId: this.roomId,\n      userId: this.userId\n    });\n  }\n\n  reset() {\n    this.establishing.set(false);\n    this.established.set(false);\n    this.keyPair = null;\n    this.exportedPublicKey = null;\n    this.sessionKey = null;\n    Meteor.call('deleteOldOTRMessages', this.roomId);\n  }\n\n  generateKeyPair() {\n    if (this.userOnlineComputation) {\n      this.userOnlineComputation.stop();\n    }\n\n    this.userOnlineComputation = Tracker.autorun(() => {\n      const $room = $(\"#chat-window-\".concat(this.roomId));\n      const $title = $('.rc-header__title', $room);\n\n      if (this.established.get()) {\n        if ($room.length && $title.length && !$('.otr-icon', $title).length) {\n          $title.prepend(\"<i class='otr-icon icon-key'></i>\");\n        }\n      } else if ($title.length) {\n        $('.otr-icon', $title).remove();\n      }\n    }); // Generate an ephemeral key pair.\n\n    return OTR.crypto.generateKey({\n      name: 'ECDH',\n      namedCurve: 'P-256'\n    }, false, ['deriveKey', 'deriveBits']).then(keyPair => {\n      this.keyPair = keyPair;\n      return OTR.crypto.exportKey('jwk', keyPair.publicKey);\n    }).then(exportedPublicKey => {\n      this.exportedPublicKey = exportedPublicKey; // Once we have generated new keys, it's safe to delete old messages\n\n      Meteor.call('deleteOldOTRMessages', this.roomId);\n    }).catch(e => {\n      dispatchToastMessage({\n        type: 'error',\n        message: e\n      });\n    });\n  }\n\n  importPublicKey(publicKey) {\n    return OTR.crypto.importKey('jwk', EJSON.parse(publicKey), {\n      name: 'ECDH',\n      namedCurve: 'P-256'\n    }, false, []).then(peerPublicKey => OTR.crypto.deriveBits({\n      name: 'ECDH',\n      namedCurve: 'P-256',\n      public: peerPublicKey\n    }, this.keyPair.privateKey, 256)).then(bits => OTR.crypto.digest({\n      name: 'SHA-256'\n    }, bits)).then(hashedBits => {\n      // We truncate the hash to 128 bits.\n      const sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n      return OTR.crypto.importKey('raw', sessionKeyData, {\n        name: 'AES-GCM'\n      }, false, ['encrypt', 'decrypt']);\n    }).then(sessionKey => {\n      // Session key available.\n      this.sessionKey = sessionKey;\n    });\n  }\n\n  encryptText(data) {\n    if (!_.isObject(data)) {\n      data = new TextEncoder('UTF-8').encode(EJSON.stringify({\n        text: data,\n        ack: Random.id((Random.fraction() + 1) * 20)\n      }));\n    }\n\n    const iv = crypto.getRandomValues(new Uint8Array(12));\n    return OTR.crypto.encrypt({\n      name: 'AES-GCM',\n      iv\n    }, this.sessionKey, data).then(cipherText => {\n      cipherText = new Uint8Array(cipherText);\n      const output = new Uint8Array(iv.length + cipherText.length);\n      output.set(iv, 0);\n      output.set(cipherText, iv.length);\n      return EJSON.stringify(output);\n    }).catch(() => {\n      throw new Meteor.Error('encryption-error', 'Encryption error.');\n    });\n  }\n\n  encrypt(message) {\n    let ts;\n\n    if (isNaN(TimeSync.serverOffset())) {\n      ts = new Date();\n    } else {\n      ts = new Date(Date.now() + TimeSync.serverOffset());\n    }\n\n    const data = new TextEncoder('UTF-8').encode(EJSON.stringify({\n      _id: message._id,\n      text: message.msg,\n      userId: this.userId,\n      ack: Random.id((Random.fraction() + 1) * 20),\n      ts\n    }));\n    const enc = this.encryptText(data);\n    return enc;\n  }\n\n  decrypt(message) {\n    let cipherText = EJSON.parse(message);\n    const iv = cipherText.slice(0, 12);\n    cipherText = cipherText.slice(12);\n    return OTR.crypto.decrypt({\n      name: 'AES-GCM',\n      iv\n    }, this.sessionKey, cipherText).then(data => {\n      data = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n      return data;\n    }).catch(e => {\n      dispatchToastMessage({\n        type: 'error',\n        message: e\n      });\n      return message;\n    });\n  }\n\n  onUserStream(type, data) {\n    switch (type) {\n      case 'handshake':\n        let timeout = null;\n\n        const establishConnection = () => {\n          this.establishing.set(true);\n          Meteor.clearTimeout(timeout);\n          this.generateKeyPair().then(() => {\n            this.importPublicKey(data.publicKey).then(() => {\n              this.firstPeer = false;\n              goToRoomById(data.roomId);\n              Meteor.defer(() => {\n                this.established.set(true);\n                this.acknowledge();\n\n                if (data.refresh) {\n                  Meteor.call('sendSystemMessages', this.roomId, Meteor.user(), otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY);\n                }\n              });\n            });\n          });\n        };\n\n        (async () => {\n          const {\n            username\n          } = await Presence.get(data.userId);\n\n          if (data.refresh && this.established.get()) {\n            this.reset();\n            establishConnection();\n          } else {\n            if (this.established.get()) {\n              this.reset();\n            }\n\n            imperativeModal.open({\n              component: GenericModal,\n              props: {\n                variant: 'warning',\n                title: TAPi18n.__('OTR'),\n                children: TAPi18n.__('Username_wants_to_start_otr_Do_you_want_to_accept', {\n                  username\n                }),\n                confirmText: TAPi18n.__('Yes'),\n                cancelText: TAPi18n.__('No'),\n                onClose: () => imperativeModal.close,\n                onCancel: () => {\n                  Meteor.clearTimeout(timeout);\n                  this.deny();\n                  imperativeModal.close();\n                },\n                onConfirm: () => {\n                  establishConnection();\n                  imperativeModal.close();\n                }\n              }\n            });\n          }\n\n          timeout = Meteor.setTimeout(() => {\n            this.establishing.set(false);\n            imperativeModal.close();\n          }, 10000);\n        })();\n\n        break;\n\n      case 'acknowledge':\n        this.importPublicKey(data.publicKey).then(() => {\n          this.established.set(true);\n        });\n\n        if (this.isFirstOTR) {\n          Meteor.call('sendSystemMessages', this.roomId, Meteor.user(), otrSystemMessages.USER_JOINED_OTR);\n        }\n\n        this.isFirstOTR = false;\n        break;\n\n      case 'deny':\n        (async () => {\n          const {\n            username\n          } = await Presence.get(this.peerId);\n\n          if (this.establishing.get()) {\n            this.reset();\n            imperativeModal.open({\n              component: GenericModal,\n              props: {\n                variant: 'warning',\n                title: TAPi18n.__('OTR'),\n                children: TAPi18n.__('Username_denied_the_OTR_session', {\n                  username\n                }),\n                onClose: imperativeModal.close,\n                onConfirm: imperativeModal.close\n              }\n            });\n          }\n        })();\n\n        break;\n\n      case 'end':\n        (async () => {\n          const {\n            username\n          } = await Presence.get(this.peerId);\n\n          if (this.established.get()) {\n            this.reset();\n            imperativeModal.open({\n              component: GenericModal,\n              props: {\n                variant: 'warning',\n                title: TAPi18n.__('OTR'),\n                children: TAPi18n.__('Username_ended_the_OTR_session', {\n                  username\n                }),\n                confirmText: TAPi18n.__('Ok'),\n                onClose: imperativeModal.close,\n                onConfirm: imperativeModal.close\n              }\n            });\n          }\n        })();\n\n        break;\n    }\n  }\n\n};","map":{"version":3,"sources":["app/otr/client/rocketchat.otr.room.js"],"names":["Meteor","module","link","v","ReactiveVar","Random","EJSON","Tracker","TAPi18n","TimeSync","_","default","OTR","Notifications","getUidDirectMessage","Presence","goToRoomById","imperativeModal","GenericModal","dispatchToastMessage","otrSystemMessages","APIClient","Room","constructor","userId","roomId","peerId","established","establishing","isFirstOTR","userOnlineComputation","keyPair","exportedPublicKey","sessionKey","handshake","refresh","set","firstPeer","generateKeyPair","then","notifyUser","publicKey","stringify","call","user","USER_REQUESTED_OTR_KEY_REFRESH","acknowledge","v1","post","params","eventName","timestamp","Date","now","rid","deny","reset","end","stop","autorun","$room","$","$title","get","length","prepend","remove","crypto","generateKey","name","namedCurve","exportKey","catch","e","type","message","importPublicKey","importKey","parse","peerPublicKey","deriveBits","public","privateKey","bits","digest","hashedBits","sessionKeyData","Uint8Array","slice","encryptText","data","isObject","TextEncoder","encode","text","ack","id","fraction","iv","getRandomValues","encrypt","cipherText","output","Error","ts","isNaN","serverOffset","_id","msg","enc","decrypt","TextDecoder","decode","onUserStream","timeout","establishConnection","clearTimeout","defer","USER_KEY_REFRESHED_SUCCESSFULLY","username","open","component","props","variant","title","__","children","confirmText","cancelText","onClose","close","onCancel","onConfirm","setTimeout","USER_JOINED_OTR"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,WAAJ;AAAgBH,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACE,EAAAA,WAAW,CAACD,CAAD,EAAG;AAACC,IAAAA,WAAW,GAACD,CAAZ;AAAc;;AAA9B,CAAlC,EAAkE,CAAlE;AAAqE,IAAIE,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACG,EAAAA,MAAM,CAACF,CAAD,EAAG;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIG,KAAJ;AAAUL,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACI,EAAAA,KAAK,CAACH,CAAD,EAAG;AAACG,IAAAA,KAAK,GAACH,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAII,OAAJ;AAAYN,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACK,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACI,IAAAA,OAAO,GAACJ,CAAR;AAAU;;AAAtB,CAA7B,EAAqD,CAArD;AAAwD,IAAIK,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACM,EAAAA,OAAO,CAACL,CAAD,EAAG;AAACK,IAAAA,OAAO,GAACL,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;AAAoE,IAAIM,QAAJ;AAAaR,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACO,EAAAA,QAAQ,CAACN,CAAD,EAAG;AAACM,IAAAA,QAAQ,GAACN,CAAT;AAAW;;AAAxB,CAArC,EAA+D,CAA/D;;AAAkE,IAAIO,CAAJ;;AAAMT,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACS,EAAAA,OAAO,CAACR,CAAD,EAAG;AAACO,IAAAA,CAAC,GAACP,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIS,GAAJ;AAAQX,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAA+B;AAACU,EAAAA,GAAG,CAACT,CAAD,EAAG;AAACS,IAAAA,GAAG,GAACT,CAAJ;AAAM;;AAAd,CAA/B,EAA+C,CAA/C;AAAkD,IAAIU,aAAJ;AAAkBZ,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACW,EAAAA,aAAa,CAACV,CAAD,EAAG;AAACU,IAAAA,aAAa,GAACV,CAAd;AAAgB;;AAAlC,CAAlC,EAAsE,CAAtE;AAAyE,IAAIW,mBAAJ;AAAwBb,MAAM,CAACC,IAAP,CAAY,+CAAZ,EAA4D;AAACY,EAAAA,mBAAmB,CAACX,CAAD,EAAG;AAACW,IAAAA,mBAAmB,GAACX,CAApB;AAAsB;;AAA9C,CAA5D,EAA4G,EAA5G;AAAgH,IAAIY,QAAJ;AAAad,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACa,EAAAA,QAAQ,CAACZ,CAAD,EAAG;AAACY,IAAAA,QAAQ,GAACZ,CAAT;AAAW;;AAAxB,CAA3C,EAAqE,EAArE;AAAyE,IAAIa,YAAJ;AAAiBf,MAAM,CAACC,IAAP,CAAY,wCAAZ,EAAqD;AAACc,EAAAA,YAAY,CAACb,CAAD,EAAG;AAACa,IAAAA,YAAY,GAACb,CAAb;AAAe;;AAAhC,CAArD,EAAuF,EAAvF;AAA2F,IAAIc,eAAJ;AAAoBhB,MAAM,CAACC,IAAP,CAAY,qCAAZ,EAAkD;AAACe,EAAAA,eAAe,CAACd,CAAD,EAAG;AAACc,IAAAA,eAAe,GAACd,CAAhB;AAAkB;;AAAtC,CAAlD,EAA0F,EAA1F;AAA8F,IAAIe,YAAJ;AAAiBjB,MAAM,CAACC,IAAP,CAAY,yCAAZ,EAAsD;AAACS,EAAAA,OAAO,CAACR,CAAD,EAAG;AAACe,IAAAA,YAAY,GAACf,CAAb;AAAe;;AAA3B,CAAtD,EAAmF,EAAnF;AAAuF,IAAIgB,oBAAJ;AAAyBlB,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACiB,EAAAA,oBAAoB,CAAChB,CAAD,EAAG;AAACgB,IAAAA,oBAAoB,GAAChB,CAArB;AAAuB;;AAAhD,CAAxC,EAA0F,EAA1F;AAA8F,IAAIiB,iBAAJ;AAAsBnB,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAA+B;AAACkB,EAAAA,iBAAiB,CAACjB,CAAD,EAAG;AAACiB,IAAAA,iBAAiB,GAACjB,CAAlB;AAAoB;;AAA1C,CAA/B,EAA2E,EAA3E;AAA+E,IAAIkB,SAAJ;AAAcpB,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC;AAACmB,EAAAA,SAAS,CAAClB,CAAD,EAAG;AAACkB,IAAAA,SAAS,GAAClB,CAAV;AAAY;;AAA1B,CAAjC,EAA6D,EAA7D;AAoB38CS,GAAG,CAACU,IAAJ,GAAW,MAAM;AAChBC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcZ,mBAAmB,CAACW,MAAD,CAAjC;AACA,SAAKE,WAAL,GAAmB,IAAIvB,WAAJ,CAAgB,KAAhB,CAAnB;AACA,SAAKwB,YAAL,GAAoB,IAAIxB,WAAJ,CAAgB,KAAhB,CAApB;AACA,SAAKyB,UAAL,GAAkB,IAAlB;AAEA,SAAKC,qBAAL,GAA6B,IAA7B;AAEA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA;;AAEDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,SAAKP,YAAL,CAAkBQ,GAAlB,CAAsB,IAAtB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,eAAL,GAAuBC,IAAvB,CAA4B,MAAM;AACjC1B,MAAAA,aAAa,CAAC2B,UAAd,CAAyB,KAAKd,MAA9B,EAAsC,KAAtC,EAA6C,WAA7C,EAA0D;AACzDD,QAAAA,MAAM,EAAE,KAAKA,MAD4C;AAEzDD,QAAAA,MAAM,EAAE,KAAKA,MAF4C;AAGzDiB,QAAAA,SAAS,EAAEnC,KAAK,CAACoC,SAAN,CAAgB,KAAKV,iBAArB,CAH8C;AAIzDG,QAAAA;AAJyD,OAA1D;AAMA,KAPD;;AAQA,QAAIA,OAAJ,EAAa;AACZnC,MAAAA,MAAM,CAAC2C,IAAP,CAAY,oBAAZ,EAAkC,KAAKlB,MAAvC,EAA+CzB,MAAM,CAAC4C,IAAP,EAA/C,EAA8DxB,iBAAiB,CAACyB,8BAAhF;AACA,WAAKhB,UAAL,GAAkB,KAAlB;AACA;AACD;;AAEDiB,EAAAA,WAAW,GAAG;AACbzB,IAAAA,SAAS,CAAC0B,EAAV,CAAaC,IAAb,CAAkB,sBAAlB,EAA0C;AAAEC,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,SAAS,EAAE,UAAb;AAAyBC,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAApC;AAAgDC,QAAAA,GAAG,EAAE,KAAK7B;AAA1D,OAAD;AAAV,KAA1C;AAEAZ,IAAAA,aAAa,CAAC2B,UAAd,CAAyB,KAAKd,MAA9B,EAAsC,KAAtC,EAA6C,aAA7C,EAA4D;AAC3DD,MAAAA,MAAM,EAAE,KAAKA,MAD8C;AAE3DD,MAAAA,MAAM,EAAE,KAAKA,MAF8C;AAG3DiB,MAAAA,SAAS,EAAEnC,KAAK,CAACoC,SAAN,CAAgB,KAAKV,iBAArB;AAHgD,KAA5D;AAKA;;AAEDuB,EAAAA,IAAI,GAAG;AACN,SAAKC,KAAL;AACA3C,IAAAA,aAAa,CAAC2B,UAAd,CAAyB,KAAKd,MAA9B,EAAsC,KAAtC,EAA6C,MAA7C,EAAqD;AACpDD,MAAAA,MAAM,EAAE,KAAKA,MADuC;AAEpDD,MAAAA,MAAM,EAAE,KAAKA;AAFuC,KAArD;AAIA;;AAEDiC,EAAAA,GAAG,GAAG;AACL,SAAK5B,UAAL,GAAkB,IAAlB;AACA,SAAK2B,KAAL;AACA3C,IAAAA,aAAa,CAAC2B,UAAd,CAAyB,KAAKd,MAA9B,EAAsC,KAAtC,EAA6C,KAA7C,EAAoD;AACnDD,MAAAA,MAAM,EAAE,KAAKA,MADsC;AAEnDD,MAAAA,MAAM,EAAE,KAAKA;AAFsC,KAApD;AAIA;;AAEDgC,EAAAA,KAAK,GAAG;AACP,SAAK5B,YAAL,CAAkBQ,GAAlB,CAAsB,KAAtB;AACA,SAAKT,WAAL,CAAiBS,GAAjB,CAAqB,KAArB;AACA,SAAKL,OAAL,GAAe,IAAf;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACAjC,IAAAA,MAAM,CAAC2C,IAAP,CAAY,sBAAZ,EAAoC,KAAKlB,MAAzC;AACA;;AAEDa,EAAAA,eAAe,GAAG;AACjB,QAAI,KAAKR,qBAAT,EAAgC;AAC/B,WAAKA,qBAAL,CAA2B4B,IAA3B;AACA;;AAED,SAAK5B,qBAAL,GAA6BvB,OAAO,CAACoD,OAAR,CAAgB,MAAM;AAClD,YAAMC,KAAK,GAAGC,CAAC,wBAAiB,KAAKpC,MAAtB,EAAf;AACA,YAAMqC,MAAM,GAAGD,CAAC,CAAC,mBAAD,EAAsBD,KAAtB,CAAhB;;AACA,UAAI,KAAKjC,WAAL,CAAiBoC,GAAjB,EAAJ,EAA4B;AAC3B,YAAIH,KAAK,CAACI,MAAN,IAAgBF,MAAM,CAACE,MAAvB,IAAiC,CAACH,CAAC,CAAC,WAAD,EAAcC,MAAd,CAAD,CAAuBE,MAA7D,EAAqE;AACpEF,UAAAA,MAAM,CAACG,OAAP,CAAe,mCAAf;AACA;AACD,OAJD,MAIO,IAAIH,MAAM,CAACE,MAAX,EAAmB;AACzBH,QAAAA,CAAC,CAAC,WAAD,EAAcC,MAAd,CAAD,CAAuBI,MAAvB;AACA;AACD,KAV4B,CAA7B,CALiB,CAiBjB;;AACA,WAAOtD,GAAG,CAACuD,MAAJ,CACLC,WADK,CAEL;AACCC,MAAAA,IAAI,EAAE,MADP;AAECC,MAAAA,UAAU,EAAE;AAFb,KAFK,EAML,KANK,EAOL,CAAC,WAAD,EAAc,YAAd,CAPK,EASL/B,IATK,CASCR,OAAD,IAAa;AAClB,WAAKA,OAAL,GAAeA,OAAf;AACA,aAAOnB,GAAG,CAACuD,MAAJ,CAAWI,SAAX,CAAqB,KAArB,EAA4BxC,OAAO,CAACU,SAApC,CAAP;AACA,KAZK,EAaLF,IAbK,CAaCP,iBAAD,IAAuB;AAC5B,WAAKA,iBAAL,GAAyBA,iBAAzB,CAD4B,CAG5B;;AACAhC,MAAAA,MAAM,CAAC2C,IAAP,CAAY,sBAAZ,EAAoC,KAAKlB,MAAzC;AACA,KAlBK,EAmBL+C,KAnBK,CAmBEC,CAAD,IAAO;AACbtD,MAAAA,oBAAoB,CAAC;AAAEuD,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEF;AAA1B,OAAD,CAApB;AACA,KArBK,CAAP;AAsBA;;AAEDG,EAAAA,eAAe,CAACnC,SAAD,EAAY;AAC1B,WAAO7B,GAAG,CAACuD,MAAJ,CACLU,SADK,CAEL,KAFK,EAGLvE,KAAK,CAACwE,KAAN,CAAYrC,SAAZ,CAHK,EAIL;AACC4B,MAAAA,IAAI,EAAE,MADP;AAECC,MAAAA,UAAU,EAAE;AAFb,KAJK,EAQL,KARK,EASL,EATK,EAWL/B,IAXK,CAWCwC,aAAD,IACLnE,GAAG,CAACuD,MAAJ,CAAWa,UAAX,CACC;AACCX,MAAAA,IAAI,EAAE,MADP;AAECC,MAAAA,UAAU,EAAE,OAFb;AAGCW,MAAAA,MAAM,EAAEF;AAHT,KADD,EAMC,KAAKhD,OAAL,CAAamD,UANd,EAOC,GAPD,CAZK,EAsBL3C,IAtBK,CAsBC4C,IAAD,IACLvE,GAAG,CAACuD,MAAJ,CAAWiB,MAAX,CACC;AACCf,MAAAA,IAAI,EAAE;AADP,KADD,EAICc,IAJD,CAvBK,EA8BL5C,IA9BK,CA8BC8C,UAAD,IAAgB;AACrB;AACA,YAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAeF,UAAf,EAA2BG,KAA3B,CAAiC,CAAjC,EAAoC,EAApC,CAAvB;AACA,aAAO5E,GAAG,CAACuD,MAAJ,CAAWU,SAAX,CACN,KADM,EAENS,cAFM,EAGN;AACCjB,QAAAA,IAAI,EAAE;AADP,OAHM,EAMN,KANM,EAON,CAAC,SAAD,EAAY,SAAZ,CAPM,CAAP;AASA,KA1CK,EA2CL9B,IA3CK,CA2CCN,UAAD,IAAgB;AACrB;AACA,WAAKA,UAAL,GAAkBA,UAAlB;AACA,KA9CK,CAAP;AA+CA;;AAEDwD,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,QAAI,CAAChF,CAAC,CAACiF,QAAF,CAAWD,IAAX,CAAL,EAAuB;AACtBA,MAAAA,IAAI,GAAG,IAAIE,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgCvF,KAAK,CAACoC,SAAN,CAAgB;AAAEoD,QAAAA,IAAI,EAAEJ,IAAR;AAAcK,QAAAA,GAAG,EAAE1F,MAAM,CAAC2F,EAAP,CAAU,CAAC3F,MAAM,CAAC4F,QAAP,KAAoB,CAArB,IAA0B,EAApC;AAAnB,OAAhB,CAAhC,CAAP;AACA;;AACD,UAAMC,EAAE,GAAG/B,MAAM,CAACgC,eAAP,CAAuB,IAAIZ,UAAJ,CAAe,EAAf,CAAvB,CAAX;AAEA,WAAO3E,GAAG,CAACuD,MAAJ,CACLiC,OADK,CAEL;AACC/B,MAAAA,IAAI,EAAE,SADP;AAEC6B,MAAAA;AAFD,KAFK,EAML,KAAKjE,UANA,EAOLyD,IAPK,EASLnD,IATK,CASC8D,UAAD,IAAgB;AACrBA,MAAAA,UAAU,GAAG,IAAId,UAAJ,CAAec,UAAf,CAAb;AACA,YAAMC,MAAM,GAAG,IAAIf,UAAJ,CAAeW,EAAE,CAAClC,MAAH,GAAYqC,UAAU,CAACrC,MAAtC,CAAf;AACAsC,MAAAA,MAAM,CAAClE,GAAP,CAAW8D,EAAX,EAAe,CAAf;AACAI,MAAAA,MAAM,CAAClE,GAAP,CAAWiE,UAAX,EAAuBH,EAAE,CAAClC,MAA1B;AACA,aAAO1D,KAAK,CAACoC,SAAN,CAAgB4D,MAAhB,CAAP;AACA,KAfK,EAgBL9B,KAhBK,CAgBC,MAAM;AACZ,YAAM,IAAIxE,MAAM,CAACuG,KAAX,CAAiB,kBAAjB,EAAqC,mBAArC,CAAN;AACA,KAlBK,CAAP;AAmBA;;AAEDH,EAAAA,OAAO,CAACzB,OAAD,EAAU;AAChB,QAAI6B,EAAJ;;AACA,QAAIC,KAAK,CAAChG,QAAQ,CAACiG,YAAT,EAAD,CAAT,EAAoC;AACnCF,MAAAA,EAAE,GAAG,IAAIpD,IAAJ,EAAL;AACA,KAFD,MAEO;AACNoD,MAAAA,EAAE,GAAG,IAAIpD,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa5C,QAAQ,CAACiG,YAAT,EAAtB,CAAL;AACA;;AAED,UAAMhB,IAAI,GAAG,IAAIE,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CACZvF,KAAK,CAACoC,SAAN,CAAgB;AACfiE,MAAAA,GAAG,EAAEhC,OAAO,CAACgC,GADE;AAEfb,MAAAA,IAAI,EAAEnB,OAAO,CAACiC,GAFC;AAGfpF,MAAAA,MAAM,EAAE,KAAKA,MAHE;AAIfuE,MAAAA,GAAG,EAAE1F,MAAM,CAAC2F,EAAP,CAAU,CAAC3F,MAAM,CAAC4F,QAAP,KAAoB,CAArB,IAA0B,EAApC,CAJU;AAKfO,MAAAA;AALe,KAAhB,CADY,CAAb;AASA,UAAMK,GAAG,GAAG,KAAKpB,WAAL,CAAiBC,IAAjB,CAAZ;AACA,WAAOmB,GAAP;AACA;;AAEDC,EAAAA,OAAO,CAACnC,OAAD,EAAU;AAChB,QAAI0B,UAAU,GAAG/F,KAAK,CAACwE,KAAN,CAAYH,OAAZ,CAAjB;AACA,UAAMuB,EAAE,GAAGG,UAAU,CAACb,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAX;AACAa,IAAAA,UAAU,GAAGA,UAAU,CAACb,KAAX,CAAiB,EAAjB,CAAb;AAEA,WAAO5E,GAAG,CAACuD,MAAJ,CACL2C,OADK,CAEL;AACCzC,MAAAA,IAAI,EAAE,SADP;AAEC6B,MAAAA;AAFD,KAFK,EAML,KAAKjE,UANA,EAOLoE,UAPK,EASL9D,IATK,CASCmD,IAAD,IAAU;AACfA,MAAAA,IAAI,GAAGpF,KAAK,CAACwE,KAAN,CAAY,IAAIiC,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgC,IAAIzB,UAAJ,CAAeG,IAAf,CAAhC,CAAZ,CAAP;AACA,aAAOA,IAAP;AACA,KAZK,EAaLlB,KAbK,CAaEC,CAAD,IAAO;AACbtD,MAAAA,oBAAoB,CAAC;AAAEuD,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEF;AAA1B,OAAD,CAApB;AACA,aAAOE,OAAP;AACA,KAhBK,CAAP;AAiBA;;AAEDsC,EAAAA,YAAY,CAACvC,IAAD,EAAOgB,IAAP,EAAa;AACxB,YAAQhB,IAAR;AACC,WAAK,WAAL;AACC,YAAIwC,OAAO,GAAG,IAAd;;AACA,cAAMC,mBAAmB,GAAG,MAAM;AACjC,eAAKvF,YAAL,CAAkBQ,GAAlB,CAAsB,IAAtB;AACApC,UAAAA,MAAM,CAACoH,YAAP,CAAoBF,OAApB;AACA,eAAK5E,eAAL,GAAuBC,IAAvB,CAA4B,MAAM;AACjC,iBAAKqC,eAAL,CAAqBc,IAAI,CAACjD,SAA1B,EAAqCF,IAArC,CAA0C,MAAM;AAC/C,mBAAKF,SAAL,GAAiB,KAAjB;AACArB,cAAAA,YAAY,CAAC0E,IAAI,CAACjE,MAAN,CAAZ;AACAzB,cAAAA,MAAM,CAACqH,KAAP,CAAa,MAAM;AAClB,qBAAK1F,WAAL,CAAiBS,GAAjB,CAAqB,IAArB;AACA,qBAAKU,WAAL;;AACA,oBAAI4C,IAAI,CAACvD,OAAT,EAAkB;AACjBnC,kBAAAA,MAAM,CAAC2C,IAAP,CAAY,oBAAZ,EAAkC,KAAKlB,MAAvC,EAA+CzB,MAAM,CAAC4C,IAAP,EAA/C,EAA8DxB,iBAAiB,CAACkG,+BAAhF;AACA;AACD,eAND;AAOA,aAVD;AAWA,WAZD;AAaA,SAhBD;;AAkBA,SAAC,YAAY;AACZ,gBAAM;AAAEC,YAAAA;AAAF,cAAe,MAAMxG,QAAQ,CAACgD,GAAT,CAAa2B,IAAI,CAAClE,MAAlB,CAA3B;;AACA,cAAIkE,IAAI,CAACvD,OAAL,IAAgB,KAAKR,WAAL,CAAiBoC,GAAjB,EAApB,EAA4C;AAC3C,iBAAKP,KAAL;AACA2D,YAAAA,mBAAmB;AACnB,WAHD,MAGO;AACN,gBAAI,KAAKxF,WAAL,CAAiBoC,GAAjB,EAAJ,EAA4B;AAC3B,mBAAKP,KAAL;AACA;;AAEDvC,YAAAA,eAAe,CAACuG,IAAhB,CAAqB;AACpBC,cAAAA,SAAS,EAAEvG,YADS;AAEpBwG,cAAAA,KAAK,EAAE;AACNC,gBAAAA,OAAO,EAAE,SADH;AAENC,gBAAAA,KAAK,EAAEpH,OAAO,CAACqH,EAAR,CAAW,KAAX,CAFD;AAGNC,gBAAAA,QAAQ,EAAEtH,OAAO,CAACqH,EAAR,CAAW,mDAAX,EAAgE;AACzEN,kBAAAA;AADyE,iBAAhE,CAHJ;AAMNQ,gBAAAA,WAAW,EAAEvH,OAAO,CAACqH,EAAR,CAAW,KAAX,CANP;AAONG,gBAAAA,UAAU,EAAExH,OAAO,CAACqH,EAAR,CAAW,IAAX,CAPN;AAQNI,gBAAAA,OAAO,EAAE,MAAMhH,eAAe,CAACiH,KARzB;AASNC,gBAAAA,QAAQ,EAAE,MAAM;AACfnI,kBAAAA,MAAM,CAACoH,YAAP,CAAoBF,OAApB;AACA,uBAAK3D,IAAL;AACAtC,kBAAAA,eAAe,CAACiH,KAAhB;AACA,iBAbK;AAcNE,gBAAAA,SAAS,EAAE,MAAM;AAChBjB,kBAAAA,mBAAmB;AACnBlG,kBAAAA,eAAe,CAACiH,KAAhB;AACA;AAjBK;AAFa,aAArB;AAsBA;;AAEDhB,UAAAA,OAAO,GAAGlH,MAAM,CAACqI,UAAP,CAAkB,MAAM;AACjC,iBAAKzG,YAAL,CAAkBQ,GAAlB,CAAsB,KAAtB;AACAnB,YAAAA,eAAe,CAACiH,KAAhB;AACA,WAHS,EAGP,KAHO,CAAV;AAIA,SAtCD;;AAuCA;;AAED,WAAK,aAAL;AACC,aAAKtD,eAAL,CAAqBc,IAAI,CAACjD,SAA1B,EAAqCF,IAArC,CAA0C,MAAM;AAC/C,eAAKZ,WAAL,CAAiBS,GAAjB,CAAqB,IAArB;AACA,SAFD;;AAGA,YAAI,KAAKP,UAAT,EAAqB;AACpB7B,UAAAA,MAAM,CAAC2C,IAAP,CAAY,oBAAZ,EAAkC,KAAKlB,MAAvC,EAA+CzB,MAAM,CAAC4C,IAAP,EAA/C,EAA8DxB,iBAAiB,CAACkH,eAAhF;AACA;;AACD,aAAKzG,UAAL,GAAkB,KAAlB;AACA;;AAED,WAAK,MAAL;AACC,SAAC,YAAY;AACZ,gBAAM;AAAE0F,YAAAA;AAAF,cAAe,MAAMxG,QAAQ,CAACgD,GAAT,CAAa,KAAKrC,MAAlB,CAA3B;;AACA,cAAI,KAAKE,YAAL,CAAkBmC,GAAlB,EAAJ,EAA6B;AAC5B,iBAAKP,KAAL;AACAvC,YAAAA,eAAe,CAACuG,IAAhB,CAAqB;AACpBC,cAAAA,SAAS,EAAEvG,YADS;AAEpBwG,cAAAA,KAAK,EAAE;AACNC,gBAAAA,OAAO,EAAE,SADH;AAENC,gBAAAA,KAAK,EAAEpH,OAAO,CAACqH,EAAR,CAAW,KAAX,CAFD;AAGNC,gBAAAA,QAAQ,EAAEtH,OAAO,CAACqH,EAAR,CAAW,iCAAX,EAA8C;AAAEN,kBAAAA;AAAF,iBAA9C,CAHJ;AAINU,gBAAAA,OAAO,EAAEhH,eAAe,CAACiH,KAJnB;AAKNE,gBAAAA,SAAS,EAAEnH,eAAe,CAACiH;AALrB;AAFa,aAArB;AAUA;AACD,SAfD;;AAgBA;;AAED,WAAK,KAAL;AACC,SAAC,YAAY;AACZ,gBAAM;AAAEX,YAAAA;AAAF,cAAe,MAAMxG,QAAQ,CAACgD,GAAT,CAAa,KAAKrC,MAAlB,CAA3B;;AAEA,cAAI,KAAKC,WAAL,CAAiBoC,GAAjB,EAAJ,EAA4B;AAC3B,iBAAKP,KAAL;AACAvC,YAAAA,eAAe,CAACuG,IAAhB,CAAqB;AACpBC,cAAAA,SAAS,EAAEvG,YADS;AAEpBwG,cAAAA,KAAK,EAAE;AACNC,gBAAAA,OAAO,EAAE,SADH;AAENC,gBAAAA,KAAK,EAAEpH,OAAO,CAACqH,EAAR,CAAW,KAAX,CAFD;AAGNC,gBAAAA,QAAQ,EAAEtH,OAAO,CAACqH,EAAR,CAAW,gCAAX,EAA6C;AAAEN,kBAAAA;AAAF,iBAA7C,CAHJ;AAINQ,gBAAAA,WAAW,EAAEvH,OAAO,CAACqH,EAAR,CAAW,IAAX,CAJP;AAKNI,gBAAAA,OAAO,EAAEhH,eAAe,CAACiH,KALnB;AAMNE,gBAAAA,SAAS,EAAEnH,eAAe,CAACiH;AANrB;AAFa,aAArB;AAWA;AACD,SAjBD;;AAkBA;AA9GF;AAgHA;;AA1Ve,CAAjB","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Random } from 'meteor/random';\nimport { EJSON } from 'meteor/ejson';\nimport { Tracker } from 'meteor/tracker';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { TimeSync } from 'meteor/mizzao:timesync';\nimport _ from 'underscore';\n\nimport { OTR } from './rocketchat.otr';\nimport { Notifications } from '../../notifications';\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\nimport { Presence } from '../../../client/lib/presence';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport GenericModal from '../../../client/components/GenericModal';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { otrSystemMessages } from '../lib/constants';\nimport { APIClient } from '../../utils/client';\n\nOTR.Room = class {\n\tconstructor(userId, roomId) {\n\t\tthis.userId = userId;\n\t\tthis.roomId = roomId;\n\t\tthis.peerId = getUidDirectMessage(roomId);\n\t\tthis.established = new ReactiveVar(false);\n\t\tthis.establishing = new ReactiveVar(false);\n\t\tthis.isFirstOTR = true;\n\n\t\tthis.userOnlineComputation = null;\n\n\t\tthis.keyPair = null;\n\t\tthis.exportedPublicKey = null;\n\t\tthis.sessionKey = null;\n\t}\n\n\thandshake(refresh) {\n\t\tthis.establishing.set(true);\n\t\tthis.firstPeer = true;\n\t\tthis.generateKeyPair().then(() => {\n\t\t\tNotifications.notifyUser(this.peerId, 'otr', 'handshake', {\n\t\t\t\troomId: this.roomId,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tpublicKey: EJSON.stringify(this.exportedPublicKey),\n\t\t\t\trefresh,\n\t\t\t});\n\t\t});\n\t\tif (refresh) {\n\t\t\tMeteor.call('sendSystemMessages', this.roomId, Meteor.user(), otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH);\n\t\t\tthis.isFirstOTR = false;\n\t\t}\n\t}\n\n\tacknowledge() {\n\t\tAPIClient.v1.post('statistics.telemetry', { params: [{ eventName: 'otrStats', timestamp: Date.now(), rid: this.roomId }] });\n\n\t\tNotifications.notifyUser(this.peerId, 'otr', 'acknowledge', {\n\t\t\troomId: this.roomId,\n\t\t\tuserId: this.userId,\n\t\t\tpublicKey: EJSON.stringify(this.exportedPublicKey),\n\t\t});\n\t}\n\n\tdeny() {\n\t\tthis.reset();\n\t\tNotifications.notifyUser(this.peerId, 'otr', 'deny', {\n\t\t\troomId: this.roomId,\n\t\t\tuserId: this.userId,\n\t\t});\n\t}\n\n\tend() {\n\t\tthis.isFirstOTR = true;\n\t\tthis.reset();\n\t\tNotifications.notifyUser(this.peerId, 'otr', 'end', {\n\t\t\troomId: this.roomId,\n\t\t\tuserId: this.userId,\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.establishing.set(false);\n\t\tthis.established.set(false);\n\t\tthis.keyPair = null;\n\t\tthis.exportedPublicKey = null;\n\t\tthis.sessionKey = null;\n\t\tMeteor.call('deleteOldOTRMessages', this.roomId);\n\t}\n\n\tgenerateKeyPair() {\n\t\tif (this.userOnlineComputation) {\n\t\t\tthis.userOnlineComputation.stop();\n\t\t}\n\n\t\tthis.userOnlineComputation = Tracker.autorun(() => {\n\t\t\tconst $room = $(`#chat-window-${this.roomId}`);\n\t\t\tconst $title = $('.rc-header__title', $room);\n\t\t\tif (this.established.get()) {\n\t\t\t\tif ($room.length && $title.length && !$('.otr-icon', $title).length) {\n\t\t\t\t\t$title.prepend(\"<i class='otr-icon icon-key'></i>\");\n\t\t\t\t}\n\t\t\t} else if ($title.length) {\n\t\t\t\t$('.otr-icon', $title).remove();\n\t\t\t}\n\t\t});\n\n\t\t// Generate an ephemeral key pair.\n\t\treturn OTR.crypto\n\t\t\t.generateKey(\n\t\t\t\t{\n\t\t\t\t\tname: 'ECDH',\n\t\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t\t['deriveKey', 'deriveBits'],\n\t\t\t)\n\t\t\t.then((keyPair) => {\n\t\t\t\tthis.keyPair = keyPair;\n\t\t\t\treturn OTR.crypto.exportKey('jwk', keyPair.publicKey);\n\t\t\t})\n\t\t\t.then((exportedPublicKey) => {\n\t\t\t\tthis.exportedPublicKey = exportedPublicKey;\n\n\t\t\t\t// Once we have generated new keys, it's safe to delete old messages\n\t\t\t\tMeteor.call('deleteOldOTRMessages', this.roomId);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t});\n\t}\n\n\timportPublicKey(publicKey) {\n\t\treturn OTR.crypto\n\t\t\t.importKey(\n\t\t\t\t'jwk',\n\t\t\t\tEJSON.parse(publicKey),\n\t\t\t\t{\n\t\t\t\t\tname: 'ECDH',\n\t\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t\t[],\n\t\t\t)\n\t\t\t.then((peerPublicKey) =>\n\t\t\t\tOTR.crypto.deriveBits(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ECDH',\n\t\t\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\t\t\tpublic: peerPublicKey,\n\t\t\t\t\t},\n\t\t\t\t\tthis.keyPair.privateKey,\n\t\t\t\t\t256,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.then((bits) =>\n\t\t\t\tOTR.crypto.digest(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SHA-256',\n\t\t\t\t\t},\n\t\t\t\t\tbits,\n\t\t\t\t),\n\t\t\t)\n\t\t\t.then((hashedBits) => {\n\t\t\t\t// We truncate the hash to 128 bits.\n\t\t\t\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n\t\t\t\treturn OTR.crypto.importKey(\n\t\t\t\t\t'raw',\n\t\t\t\t\tsessionKeyData,\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'AES-GCM',\n\t\t\t\t\t},\n\t\t\t\t\tfalse,\n\t\t\t\t\t['encrypt', 'decrypt'],\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then((sessionKey) => {\n\t\t\t\t// Session key available.\n\t\t\t\tthis.sessionKey = sessionKey;\n\t\t\t});\n\t}\n\n\tencryptText(data) {\n\t\tif (!_.isObject(data)) {\n\t\t\tdata = new TextEncoder('UTF-8').encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\t\tconst iv = crypto.getRandomValues(new Uint8Array(12));\n\n\t\treturn OTR.crypto\n\t\t\t.encrypt(\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-GCM',\n\t\t\t\t\tiv,\n\t\t\t\t},\n\t\t\t\tthis.sessionKey,\n\t\t\t\tdata,\n\t\t\t)\n\t\t\t.then((cipherText) => {\n\t\t\t\tcipherText = new Uint8Array(cipherText);\n\t\t\t\tconst output = new Uint8Array(iv.length + cipherText.length);\n\t\t\t\toutput.set(iv, 0);\n\t\t\t\toutput.set(cipherText, iv.length);\n\t\t\t\treturn EJSON.stringify(output);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t\t});\n\t}\n\n\tencrypt(message) {\n\t\tlet ts;\n\t\tif (isNaN(TimeSync.serverOffset())) {\n\t\t\tts = new Date();\n\t\t} else {\n\t\t\tts = new Date(Date.now() + TimeSync.serverOffset());\n\t\t}\n\n\t\tconst data = new TextEncoder('UTF-8').encode(\n\t\t\tEJSON.stringify({\n\t\t\t\t_id: message._id,\n\t\t\t\ttext: message.msg,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tack: Random.id((Random.fraction() + 1) * 20),\n\t\t\t\tts,\n\t\t\t}),\n\t\t);\n\t\tconst enc = this.encryptText(data);\n\t\treturn enc;\n\t}\n\n\tdecrypt(message) {\n\t\tlet cipherText = EJSON.parse(message);\n\t\tconst iv = cipherText.slice(0, 12);\n\t\tcipherText = cipherText.slice(12);\n\n\t\treturn OTR.crypto\n\t\t\t.decrypt(\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-GCM',\n\t\t\t\t\tiv,\n\t\t\t\t},\n\t\t\t\tthis.sessionKey,\n\t\t\t\tcipherText,\n\t\t\t)\n\t\t\t.then((data) => {\n\t\t\t\tdata = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n\t\t\t\treturn data;\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\treturn message;\n\t\t\t});\n\t}\n\n\tonUserStream(type, data) {\n\t\tswitch (type) {\n\t\t\tcase 'handshake':\n\t\t\t\tlet timeout = null;\n\t\t\t\tconst establishConnection = () => {\n\t\t\t\t\tthis.establishing.set(true);\n\t\t\t\t\tMeteor.clearTimeout(timeout);\n\t\t\t\t\tthis.generateKeyPair().then(() => {\n\t\t\t\t\t\tthis.importPublicKey(data.publicKey).then(() => {\n\t\t\t\t\t\t\tthis.firstPeer = false;\n\t\t\t\t\t\t\tgoToRoomById(data.roomId);\n\t\t\t\t\t\t\tMeteor.defer(() => {\n\t\t\t\t\t\t\t\tthis.established.set(true);\n\t\t\t\t\t\t\t\tthis.acknowledge();\n\t\t\t\t\t\t\t\tif (data.refresh) {\n\t\t\t\t\t\t\t\t\tMeteor.call('sendSystemMessages', this.roomId, Meteor.user(), otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { username } = await Presence.get(data.userId);\n\t\t\t\t\tif (data.refresh && this.established.get()) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\testablishConnection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.established.get()) {\n\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: TAPi18n.__('OTR'),\n\t\t\t\t\t\t\t\tchildren: TAPi18n.__('Username_wants_to_start_otr_Do_you_want_to_accept', {\n\t\t\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tconfirmText: TAPi18n.__('Yes'),\n\t\t\t\t\t\t\t\tcancelText: TAPi18n.__('No'),\n\t\t\t\t\t\t\t\tonClose: () => imperativeModal.close,\n\t\t\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\t\t\tMeteor.clearTimeout(timeout);\n\t\t\t\t\t\t\t\t\tthis.deny();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\t\t\testablishConnection();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\ttimeout = Meteor.setTimeout(() => {\n\t\t\t\t\t\tthis.establishing.set(false);\n\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t}, 10000);\n\t\t\t\t})();\n\t\t\t\tbreak;\n\n\t\t\tcase 'acknowledge':\n\t\t\t\tthis.importPublicKey(data.publicKey).then(() => {\n\t\t\t\t\tthis.established.set(true);\n\t\t\t\t});\n\t\t\t\tif (this.isFirstOTR) {\n\t\t\t\t\tMeteor.call('sendSystemMessages', this.roomId, Meteor.user(), otrSystemMessages.USER_JOINED_OTR);\n\t\t\t\t}\n\t\t\t\tthis.isFirstOTR = false;\n\t\t\t\tbreak;\n\n\t\t\tcase 'deny':\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { username } = await Presence.get(this.peerId);\n\t\t\t\t\tif (this.establishing.get()) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: TAPi18n.__('OTR'),\n\t\t\t\t\t\t\t\tchildren: TAPi18n.__('Username_denied_the_OTR_session', { username }),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { username } = await Presence.get(this.peerId);\n\n\t\t\t\t\tif (this.established.get()) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: TAPi18n.__('OTR'),\n\t\t\t\t\t\t\t\tchildren: TAPi18n.__('Username_ended_the_OTR_session', { username }),\n\t\t\t\t\t\t\t\tconfirmText: TAPi18n.__('Ok'),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n"]},"sourceType":"module","hash":"154345284a7273320e0032c8c38e32fab63e51f1"}
