{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webdav/client/webdavFilePicker.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/webdav/client/webdavFilePicker.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webdav/client/webdavFilePicker.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webdav/client/webdavFilePicker.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webdav/client/webdavFilePicker.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 2);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 3);\nlet Handlebars;\nmodule.link(\"meteor/ui\", {\n  Handlebars(v) {\n    Handlebars = v;\n  }\n\n}, 4);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 5);\nlet ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict(v) {\n    ReactiveDict = v;\n  }\n\n}, 6);\nlet timeAgo;\nmodule.link(\"../../ui/client/views/app/helpers\", {\n  timeAgo(v) {\n    timeAgo = v;\n  }\n\n}, 7);\nlet modal;\nmodule.link(\"../../ui-utils/client\", {\n  modal(v) {\n    modal = v;\n  }\n\n}, 8);\nlet t;\nmodule.link(\"../../utils/client\", {\n  t(v) {\n    t = v;\n  }\n\n}, 9);\nlet fileUploadHandler;\nmodule.link(\"../../file-upload/client\", {\n  fileUploadHandler(v) {\n    fileUploadHandler = v;\n  }\n\n}, 10);\nlet call;\nmodule.link(\"../../../client/lib/utils/call\", {\n  call(v) {\n    call = v;\n  }\n\n}, 11);\nlet dispatchToastMessage;\nmodule.link(\"../../../client/lib/toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n\n}, 12);\n\nfunction sortTable(data, sortBy, sortDirection) {\n  if (sortDirection === 'desc') {\n    if (sortBy === 'name') {\n      data.sort((a, b) => b.basename.localeCompare(a.basename));\n    }\n\n    if (sortBy === 'size') {\n      data.sort((a, b) => b.size - a.size);\n    }\n\n    if (sortBy === 'date') {\n      data.sort((a, b) => new Date(b.lastmod) - new Date(a.lastmod));\n    }\n  } else {\n    if (sortBy === 'name') {\n      data.sort((a, b) => a.basename.localeCompare(b.basename));\n    }\n\n    if (sortBy === 'size') {\n      data.sort((a, b) => a.size - b.size);\n    }\n\n    if (sortBy === 'date') {\n      data.sort((a, b) => new Date(a.lastmod) - new Date(b.lastmod));\n    }\n  }\n\n  return data;\n}\n\nasync function showFilePreviews(accountId, nodes) {\n  if (!Array.isArray(nodes) || !nodes.length) {\n    return;\n  }\n\n  const promises = nodes.map((node, index) => {\n    if (node.type !== 'file') {\n      return;\n    }\n\n    return call('getWebdavFilePreview', accountId, node.filename).then(res => {\n      const blob = new Blob([res.data], {\n        type: 'image/png'\n      });\n      const imgURL = URL.createObjectURL(blob);\n      nodes[index].preview = imgURL;\n    }).catch(e => e);\n  }).filter(Boolean);\n  return Promise.all(promises).then(() => nodes).catch(e => e);\n}\n\nasync function showWebdavFileList() {\n  const instance = Template.instance();\n  const {\n    accountId\n  } = instance.data;\n  const directory = instance.state.get('webdavCurrentFolder');\n  let unfilteredWebdavNodes;\n  instance.isLoading.set(true);\n  instance.state.set({\n    webdavNodes: []\n  });\n\n  try {\n    const response = await call('getWebdavFileList', accountId, directory).catch(err => console.log(err));\n\n    if (!response || !response.success) {\n      instance.isLoading.set(false);\n      modal.close();\n      return;\n    }\n\n    unfilteredWebdavNodes = response.data;\n    instance.state.set({\n      unfilteredWebdavNodes\n    });\n    $('.js-webdav-search-input').val('');\n    instance.searchText.set('');\n  } finally {\n    instance.isLoading.set(false);\n    const nodesWithPreviews = await showFilePreviews(accountId, unfilteredWebdavNodes);\n\n    if (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\n      instance.state.set({\n        unfilteredWebdavNodes: nodesWithPreviews\n      });\n    }\n  }\n}\n\nTemplate.webdavFilePicker.helpers({\n  iconType() {\n    // add icon for different types\n    let icon = 'clip';\n    let type = '';\n    let extension = this.basename.split('.').pop();\n\n    if (extension === this.basename) {\n      extension = '';\n    }\n\n    if (this.type === 'directory') {\n      icon = 'folder';\n      type = 'directory';\n    } else if (this.mime.match(/application\\/pdf/)) {\n      icon = 'file-pdf';\n      type = 'pdf';\n    } else if (['application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.presentation'].includes(this.mime)) {\n      icon = 'file-document';\n      type = 'document';\n    } else if (['application/vnd.ms-excel', 'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'].includes(this.mime)) {\n      icon = 'file-sheets';\n      type = 'sheets';\n    } else if (['application/vnd.ms-powerpoint', 'application/vnd.oasis.opendocument.presentation'].includes(this.mime)) {\n      icon = 'file-sheets';\n      type = 'ppt';\n    }\n\n    return {\n      icon,\n      type,\n      extension\n    };\n  },\n\n  filePreview() {\n    return this.preview;\n  },\n\n  isLoading() {\n    return Template.instance().isLoading.get();\n  },\n\n  listMode() {\n    return Template.instance().isListMode.get();\n  },\n\n  sortBy(key) {\n    return Template.instance().sortBy.get() === key;\n  },\n\n  getSortBy() {\n    return Template.instance().sortBy.get();\n  },\n\n  getName(basename) {\n    const maxwidth = Template.instance().isListMode.get() ? 35 : 20;\n\n    if (basename.length < maxwidth) {\n      return basename;\n    }\n\n    return \"\".concat(basename.slice(0, maxwidth - 10), \"\\u2026\").concat(basename.slice(-7));\n  },\n\n  getSize() {\n    if (this.type === 'directory') {\n      return '';\n    }\n\n    const bytes = this.size;\n\n    if (bytes === 0) {\n      return '0 B';\n    }\n\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return \"\".concat(parseFloat((bytes / Math.pow(k, i)).toFixed(2)), \" \").concat(sizes[i]);\n  },\n\n  getDate() {\n    return timeAgo(new Date(this.lastmod), t);\n  },\n\n  sortIcon(key) {\n    const {\n      sortDirection,\n      sortBy\n    } = Template.instance();\n    return key === sortBy.get() && sortDirection.get() === 'asc' ? 'sort-up' : 'sort-down';\n  },\n\n  onTableSort() {\n    const {\n      sortDirection,\n      sortBy\n    } = Template.instance();\n    return function (type) {\n      if (sortBy.get() === type) {\n        sortDirection.set(sortDirection.get() === 'asc' ? 'desc' : 'asc');\n      } else {\n        sortBy.set(type);\n        sortDirection.set('asc');\n      }\n    };\n  },\n\n  parentFolders() {\n    const currentFolder = Template.instance().state.get('webdavCurrentFolder');\n    return currentFolder ? currentFolder.split('/').filter(s => s) : [];\n  },\n\n  webdavNodes() {\n    return Template.instance().state.get('webdavNodes');\n  },\n\n  webdavCurrentFolder() {\n    return Template.instance().state.get('webdavCurrentFolder');\n  }\n\n});\nTemplate.webdavFilePicker.events({\n  'click .js-list-grid-mode'() {\n    const instance = Template.instance();\n    instance.isListMode.set(!instance.isListMode.get());\n  },\n\n  'click .js-webdav-sort-direction'() {\n    const {\n      sortDirection\n    } = Template.instance();\n    sortDirection.set(sortDirection.get() === 'asc' ? 'desc' : 'asc');\n  },\n\n  'change .js-webdav-select-sort'() {\n    const {\n      sortBy\n    } = Template.instance();\n    const newSortBy = $('.js-webdav-select-sort').val();\n    sortBy.set(newSortBy);\n  },\n\n  'click .js-webdav-search-icon'() {\n    $('.js-webdav-search-input').focus();\n  },\n\n  'submit .js-search-form'(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  },\n\n  'input .js-webdav-search-input': _.debounce((e, t) => {\n    t.searchText.set(e.currentTarget.value);\n  }, 200),\n\n  'blur .js-webdav-search-input'(e, t) {\n    _.delay(() => {\n      e.target.value = '';\n      t.searchText.set('');\n    }, 200);\n  },\n\n  async 'click .js-webdav-grid-back-icon'() {\n    const instance = Template.instance();\n    let currentFolder = instance.state.get('webdavCurrentFolder'); // determine parent directory to go back\n\n    let parentFolder = '/';\n\n    if (currentFolder && currentFolder !== '/') {\n      if (currentFolder[currentFolder.length - 1] === '/') {\n        currentFolder = currentFolder.slice(0, -1);\n      }\n\n      parentFolder = currentFolder.substr(0, currentFolder.lastIndexOf('/') + 1);\n    }\n\n    instance.state.set('webdavCurrentFolder', parentFolder);\n  },\n\n  async 'click .js-webdav_directory'() {\n    const instance = Template.instance();\n    instance.state.set('webdavCurrentFolder', this.filename);\n  },\n\n  async 'click .js-webdav-breadcrumb-folder'(event) {\n    const instance = Template.instance();\n    const index = $(event.target).data('index');\n    const currentFolder = instance.state.get('webdavCurrentFolder');\n    const parentFolders = currentFolder.split('/').filter(s => s); // determine parent directory to go to\n\n    let targetFolder = '/';\n\n    for (let i = 0; i <= index; i++) {\n      targetFolder += parentFolders[i];\n      targetFolder += '/';\n    }\n\n    instance.state.set('webdavCurrentFolder', targetFolder);\n  },\n\n  async 'click .js-webdav_file'() {\n    const roomId = Session.get('openedRoom');\n    const instance = Template.instance();\n    const {\n      accountId\n    } = instance.data;\n    instance.isLoading.set(true);\n    const file = this;\n    const response = await call('getFileFromWebdav', accountId, file).catch(error => {\n      console.log(error);\n    });\n    instance.isLoading.set(false);\n\n    if (!response || !response.success) {\n      modal.close();\n      return dispatchToastMessage({\n        type: 'error',\n        message: t('Failed_to_get_webdav_file')\n      });\n    }\n\n    const blob = new Blob([response.data], {\n      type: response.type\n    }); // converting to file object\n\n    blob.lastModified = file.lastmod;\n    blob.name = file.basename;\n    const text = \"\\n\\t\\t\\t<div class='upload-preview-title'>\\n\\t\\t\\t\\t<div class=\\\"rc-input__wrapper\\\">\\n\\t\\t\\t\\t\\t<input class=\\\"rc-input__element\\\" id='file-name' style='display: inherit;' value='\".concat(Handlebars._escape(blob.name), \"' placeholder='\").concat(t('Upload_file_name'), \"'>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"rc-input__wrapper\\\">\\n\\t\\t\\t\\t\\t<input class=\\\"rc-input__element\\\" id='file-description' style='display: inherit;' value='' placeholder='\").concat(t('Upload_file_description'), \"'>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\");\n    return modal.open({\n      title: t('Upload_file_question'),\n      text,\n      showCancelButton: true,\n      closeOnConfirm: false,\n      closeOnCancel: false,\n      confirmButtonText: t('Send'),\n      cancelButtonText: t('Cancel'),\n      html: true,\n      onRendered: () => $('#file-name').focus()\n    }, function (isConfirm) {\n      const record = {\n        name: document.getElementById('file-name').value || blob.name,\n        size: blob.size,\n        type: blob.type,\n        rid: roomId,\n        description: document.getElementById('file-description').value\n      };\n      modal.close();\n\n      if (!isConfirm) {\n        return;\n      }\n\n      const upload = fileUploadHandler('Uploads', record, blob);\n      let uploading = Session.get('uploading') || [];\n      uploading.push({\n        id: upload.id,\n        name: upload.getFileName(),\n        percentage: 0\n      });\n      Session.set('uploading', uploading);\n\n      upload.onProgress = function (progress) {\n        uploading = Session.get('uploading');\n\n        const item = _.findWhere(uploading, {\n          id: upload.id\n        });\n\n        if (item != null) {\n          item.percentage = Math.round(progress * 100) || 0;\n          return Session.set('uploading', uploading);\n        }\n      };\n\n      upload.start(function (error, file, storage) {\n        if (error) {\n          let uploading = Session.get('uploading');\n\n          if (!Array.isArray(uploading)) {\n            uploading = [];\n          }\n\n          const item = _.findWhere(uploading, {\n            id: upload.id\n          });\n\n          if (_.isObject(item)) {\n            item.error = error.message;\n            item.percentage = 0;\n          } else {\n            uploading.push({\n              error: error.error,\n              percentage: 0\n            });\n          }\n\n          return Session.set('uploading', uploading);\n        }\n\n        if (file) {\n          Meteor.call('sendFileMessage', roomId, storage, file, () => {\n            setTimeout(() => {\n              const uploading = Session.get('uploading');\n\n              if (uploading !== null) {\n                const item = _.findWhere(uploading, {\n                  id: upload.id\n                });\n\n                return Session.set('uploading', _.without(uploading, item));\n              }\n            }, 2000);\n          });\n        }\n      });\n    });\n  }\n\n});\nTemplate.webdavFilePicker.onRendered(async function () {\n  this.autorun(() => {\n    showWebdavFileList();\n  });\n  this.autorun(() => {\n    const {\n      sortDirection,\n      sortBy\n    } = Template.instance();\n    const data = sortTable(this.state.get('webdavNodes'), sortBy.get(), sortDirection.get());\n    this.state.set('webdavNodes', data);\n  });\n  this.autorun(() => {\n    const loading = this.isLoading.get();\n\n    if (loading) {\n      return;\n    }\n\n    const input = this.searchText.get();\n    const regex = new RegExp(\"\\\\b\".concat(input), 'i');\n    const data = this.state.get('unfilteredWebdavNodes').filter(_ref => {\n      let {\n        basename\n      } = _ref;\n      return basename.match(regex);\n    });\n    this.state.set('webdavNodes', data);\n  });\n});\nTemplate.webdavFilePicker.onCreated(function () {\n  this.state = new ReactiveDict({\n    webdavCurrentFolder: '/',\n    webdavNodes: [],\n    unfilteredWebdavNodes: []\n  });\n  this.isLoading = new ReactiveVar(true);\n  this.isListMode = new ReactiveVar(true);\n  this.sortBy = new ReactiveVar('name');\n  this.sortDirection = new ReactiveVar('asc');\n  this.searchText = new ReactiveVar('');\n});","map":{"version":3,"sources":["app/webdav/client/webdavFilePicker.js"],"names":["Meteor","module","link","v","Template","_","default","Session","Handlebars","ReactiveVar","ReactiveDict","timeAgo","modal","t","fileUploadHandler","call","dispatchToastMessage","sortTable","data","sortBy","sortDirection","sort","a","b","basename","localeCompare","size","Date","lastmod","showFilePreviews","accountId","nodes","Array","isArray","length","promises","map","node","index","type","filename","then","res","blob","Blob","imgURL","URL","createObjectURL","preview","catch","e","filter","Boolean","Promise","all","showWebdavFileList","instance","directory","state","get","unfilteredWebdavNodes","isLoading","set","webdavNodes","response","err","console","log","success","close","$","val","searchText","nodesWithPreviews","webdavFilePicker","helpers","iconType","icon","extension","split","pop","mime","match","includes","filePreview","listMode","isListMode","key","getSortBy","getName","maxwidth","slice","getSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","getDate","sortIcon","onTableSort","parentFolders","currentFolder","s","webdavCurrentFolder","events","newSortBy","focus","preventDefault","stopPropagation","debounce","currentTarget","value","delay","target","parentFolder","substr","lastIndexOf","event","targetFolder","roomId","file","error","message","lastModified","name","text","_escape","open","title","showCancelButton","closeOnConfirm","closeOnCancel","confirmButtonText","cancelButtonText","html","onRendered","isConfirm","record","document","getElementById","rid","description","upload","uploading","push","id","getFileName","percentage","onProgress","progress","item","findWhere","round","start","storage","isObject","setTimeout","without","autorun","loading","input","regex","RegExp","onCreated"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport _ from 'underscore';\nimport { Session } from 'meteor/session';\nimport { Handlebars } from 'meteor/ui';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { timeAgo } from '../../ui/client/views/app/helpers';\nimport { modal } from '../../ui-utils/client';\nimport { t } from '../../utils/client';\nimport { fileUploadHandler } from '../../file-upload/client';\nimport { call } from '../../../client/lib/utils/call';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\n\nfunction sortTable(data, sortBy, sortDirection) {\n\tif (sortDirection === 'desc') {\n\t\tif (sortBy === 'name') {\n\t\t\tdata.sort((a, b) => b.basename.localeCompare(a.basename));\n\t\t}\n\t\tif (sortBy === 'size') {\n\t\t\tdata.sort((a, b) => b.size - a.size);\n\t\t}\n\t\tif (sortBy === 'date') {\n\t\t\tdata.sort((a, b) => new Date(b.lastmod) - new Date(a.lastmod));\n\t\t}\n\t} else {\n\t\tif (sortBy === 'name') {\n\t\t\tdata.sort((a, b) => a.basename.localeCompare(b.basename));\n\t\t}\n\t\tif (sortBy === 'size') {\n\t\t\tdata.sort((a, b) => a.size - b.size);\n\t\t}\n\t\tif (sortBy === 'date') {\n\t\t\tdata.sort((a, b) => new Date(a.lastmod) - new Date(b.lastmod));\n\t\t}\n\t}\n\treturn data;\n}\n\nasync function showFilePreviews(accountId, nodes) {\n\tif (!Array.isArray(nodes) || !nodes.length) {\n\t\treturn;\n\t}\n\tconst promises = nodes\n\t\t.map((node, index) => {\n\t\t\tif (node.type !== 'file') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn call('getWebdavFilePreview', accountId, node.filename)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst blob = new Blob([res.data], { type: 'image/png' });\n\t\t\t\t\tconst imgURL = URL.createObjectURL(blob);\n\t\t\t\t\tnodes[index].preview = imgURL;\n\t\t\t\t})\n\t\t\t\t.catch((e) => e);\n\t\t})\n\t\t.filter(Boolean);\n\n\treturn Promise.all(promises)\n\t\t.then(() => nodes)\n\t\t.catch((e) => e);\n}\n\nasync function showWebdavFileList() {\n\tconst instance = Template.instance();\n\tconst { accountId } = instance.data;\n\n\tconst directory = instance.state.get('webdavCurrentFolder');\n\tlet unfilteredWebdavNodes;\n\tinstance.isLoading.set(true);\n\tinstance.state.set({\n\t\twebdavNodes: [],\n\t});\n\ttry {\n\t\tconst response = await call('getWebdavFileList', accountId, directory).catch((err) => console.log(err));\n\t\tif (!response || !response.success) {\n\t\t\tinstance.isLoading.set(false);\n\t\t\tmodal.close();\n\t\t\treturn;\n\t\t}\n\t\tunfilteredWebdavNodes = response.data;\n\t\tinstance.state.set({ unfilteredWebdavNodes });\n\t\t$('.js-webdav-search-input').val('');\n\t\tinstance.searchText.set('');\n\t} finally {\n\t\tinstance.isLoading.set(false);\n\t\tconst nodesWithPreviews = await showFilePreviews(accountId, unfilteredWebdavNodes);\n\t\tif (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\n\t\t\tinstance.state.set({ unfilteredWebdavNodes: nodesWithPreviews });\n\t\t}\n\t}\n}\n\nTemplate.webdavFilePicker.helpers({\n\ticonType() {\n\t\t// add icon for different types\n\t\tlet icon = 'clip';\n\t\tlet type = '';\n\n\t\tlet extension = this.basename.split('.').pop();\n\t\tif (extension === this.basename) {\n\t\t\textension = '';\n\t\t}\n\n\t\tif (this.type === 'directory') {\n\t\t\ticon = 'folder';\n\t\t\ttype = 'directory';\n\t\t} else if (this.mime.match(/application\\/pdf/)) {\n\t\t\ticon = 'file-pdf';\n\t\t\ttype = 'pdf';\n\t\t} else if (['application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.presentation'].includes(this.mime)) {\n\t\t\ticon = 'file-document';\n\t\t\ttype = 'document';\n\t\t} else if (\n\t\t\t[\n\t\t\t\t'application/vnd.ms-excel',\n\t\t\t\t'application/vnd.oasis.opendocument.spreadsheet',\n\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t].includes(this.mime)\n\t\t) {\n\t\t\ticon = 'file-sheets';\n\t\t\ttype = 'sheets';\n\t\t} else if (['application/vnd.ms-powerpoint', 'application/vnd.oasis.opendocument.presentation'].includes(this.mime)) {\n\t\t\ticon = 'file-sheets';\n\t\t\ttype = 'ppt';\n\t\t}\n\t\treturn { icon, type, extension };\n\t},\n\tfilePreview() {\n\t\treturn this.preview;\n\t},\n\tisLoading() {\n\t\treturn Template.instance().isLoading.get();\n\t},\n\tlistMode() {\n\t\treturn Template.instance().isListMode.get();\n\t},\n\tsortBy(key) {\n\t\treturn Template.instance().sortBy.get() === key;\n\t},\n\tgetSortBy() {\n\t\treturn Template.instance().sortBy.get();\n\t},\n\tgetName(basename) {\n\t\tconst maxwidth = Template.instance().isListMode.get() ? 35 : 20;\n\t\tif (basename.length < maxwidth) {\n\t\t\treturn basename;\n\t\t}\n\t\treturn `${basename.slice(0, maxwidth - 10)}\\u2026${basename.slice(-7)}`;\n\t},\n\tgetSize() {\n\t\tif (this.type === 'directory') {\n\t\t\treturn '';\n\t\t}\n\t\tconst bytes = this.size;\n\t\tif (bytes === 0) {\n\t\t\treturn '0 B';\n\t\t}\n\t\tconst k = 1024;\n\t\tconst sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\n\t\treturn `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n\t},\n\tgetDate() {\n\t\treturn timeAgo(new Date(this.lastmod), t);\n\t},\n\tsortIcon(key) {\n\t\tconst { sortDirection, sortBy } = Template.instance();\n\t\treturn key === sortBy.get() && sortDirection.get() === 'asc' ? 'sort-up' : 'sort-down';\n\t},\n\tonTableSort() {\n\t\tconst { sortDirection, sortBy } = Template.instance();\n\t\treturn function (type) {\n\t\t\tif (sortBy.get() === type) {\n\t\t\t\tsortDirection.set(sortDirection.get() === 'asc' ? 'desc' : 'asc');\n\t\t\t} else {\n\t\t\t\tsortBy.set(type);\n\t\t\t\tsortDirection.set('asc');\n\t\t\t}\n\t\t};\n\t},\n\tparentFolders() {\n\t\tconst currentFolder = Template.instance().state.get('webdavCurrentFolder');\n\t\treturn currentFolder ? currentFolder.split('/').filter((s) => s) : [];\n\t},\n\twebdavNodes() {\n\t\treturn Template.instance().state.get('webdavNodes');\n\t},\n\twebdavCurrentFolder() {\n\t\treturn Template.instance().state.get('webdavCurrentFolder');\n\t},\n});\n\nTemplate.webdavFilePicker.events({\n\t'click .js-list-grid-mode'() {\n\t\tconst instance = Template.instance();\n\t\tinstance.isListMode.set(!instance.isListMode.get());\n\t},\n\t'click .js-webdav-sort-direction'() {\n\t\tconst { sortDirection } = Template.instance();\n\t\tsortDirection.set(sortDirection.get() === 'asc' ? 'desc' : 'asc');\n\t},\n\t'change .js-webdav-select-sort'() {\n\t\tconst { sortBy } = Template.instance();\n\t\tconst newSortBy = $('.js-webdav-select-sort').val();\n\t\tsortBy.set(newSortBy);\n\t},\n\t'click .js-webdav-search-icon'() {\n\t\t$('.js-webdav-search-input').focus();\n\t},\n\t'submit .js-search-form'(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t},\n\t'input .js-webdav-search-input': _.debounce((e, t) => {\n\t\tt.searchText.set(e.currentTarget.value);\n\t}, 200),\n\t'blur .js-webdav-search-input'(e, t) {\n\t\t_.delay(() => {\n\t\t\te.target.value = '';\n\t\t\tt.searchText.set('');\n\t\t}, 200);\n\t},\n\tasync 'click .js-webdav-grid-back-icon'() {\n\t\tconst instance = Template.instance();\n\n\t\tlet currentFolder = instance.state.get('webdavCurrentFolder');\n\t\t// determine parent directory to go back\n\t\tlet parentFolder = '/';\n\t\tif (currentFolder && currentFolder !== '/') {\n\t\t\tif (currentFolder[currentFolder.length - 1] === '/') {\n\t\t\t\tcurrentFolder = currentFolder.slice(0, -1);\n\t\t\t}\n\t\t\tparentFolder = currentFolder.substr(0, currentFolder.lastIndexOf('/') + 1);\n\t\t}\n\t\tinstance.state.set('webdavCurrentFolder', parentFolder);\n\t},\n\tasync 'click .js-webdav_directory'() {\n\t\tconst instance = Template.instance();\n\t\tinstance.state.set('webdavCurrentFolder', this.filename);\n\t},\n\tasync 'click .js-webdav-breadcrumb-folder'(event) {\n\t\tconst instance = Template.instance();\n\t\tconst index = $(event.target).data('index');\n\t\tconst currentFolder = instance.state.get('webdavCurrentFolder');\n\t\tconst parentFolders = currentFolder.split('/').filter((s) => s);\n\t\t// determine parent directory to go to\n\t\tlet targetFolder = '/';\n\t\tfor (let i = 0; i <= index; i++) {\n\t\t\ttargetFolder += parentFolders[i];\n\t\t\ttargetFolder += '/';\n\t\t}\n\t\tinstance.state.set('webdavCurrentFolder', targetFolder);\n\t},\n\tasync 'click .js-webdav_file'() {\n\t\tconst roomId = Session.get('openedRoom');\n\t\tconst instance = Template.instance();\n\t\tconst { accountId } = instance.data;\n\t\tinstance.isLoading.set(true);\n\t\tconst file = this;\n\t\tconst response = await call('getFileFromWebdav', accountId, file).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t});\n\t\tinstance.isLoading.set(false);\n\t\tif (!response || !response.success) {\n\t\t\tmodal.close();\n\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Failed_to_get_webdav_file') });\n\t\t}\n\t\tconst blob = new Blob([response.data], { type: response.type });\n\t\t// converting to file object\n\t\tblob.lastModified = file.lastmod;\n\t\tblob.name = file.basename;\n\t\tconst text = `\n\t\t\t<div class='upload-preview-title'>\n\t\t\t\t<div class=\"rc-input__wrapper\">\n\t\t\t\t\t<input class=\"rc-input__element\" id='file-name' style='display: inherit;' value='${Handlebars._escape(blob.name)}' placeholder='${t(\n\t\t\t'Upload_file_name',\n\t\t)}'>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"rc-input__wrapper\">\n\t\t\t\t\t<input class=\"rc-input__element\" id='file-description' style='display: inherit;' value='' placeholder='${t('Upload_file_description')}'>\n\t\t\t\t</div>\n\t\t\t</div>`;\n\t\treturn modal.open(\n\t\t\t{\n\t\t\t\ttitle: t('Upload_file_question'),\n\t\t\t\ttext,\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tcloseOnConfirm: false,\n\t\t\t\tcloseOnCancel: false,\n\t\t\t\tconfirmButtonText: t('Send'),\n\t\t\t\tcancelButtonText: t('Cancel'),\n\t\t\t\thtml: true,\n\t\t\t\tonRendered: () => $('#file-name').focus(),\n\t\t\t},\n\t\t\tfunction (isConfirm) {\n\t\t\t\tconst record = {\n\t\t\t\t\tname: document.getElementById('file-name').value || blob.name,\n\t\t\t\t\tsize: blob.size,\n\t\t\t\t\ttype: blob.type,\n\t\t\t\t\trid: roomId,\n\t\t\t\t\tdescription: document.getElementById('file-description').value,\n\t\t\t\t};\n\t\t\t\tmodal.close();\n\n\t\t\t\tif (!isConfirm) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst upload = fileUploadHandler('Uploads', record, blob);\n\n\t\t\t\tlet uploading = Session.get('uploading') || [];\n\t\t\t\tuploading.push({\n\t\t\t\t\tid: upload.id,\n\t\t\t\t\tname: upload.getFileName(),\n\t\t\t\t\tpercentage: 0,\n\t\t\t\t});\n\n\t\t\t\tSession.set('uploading', uploading);\n\n\t\t\t\tupload.onProgress = function (progress) {\n\t\t\t\t\tuploading = Session.get('uploading');\n\n\t\t\t\t\tconst item = _.findWhere(uploading, { id: upload.id });\n\t\t\t\t\tif (item != null) {\n\t\t\t\t\t\titem.percentage = Math.round(progress * 100) || 0;\n\t\t\t\t\t\treturn Session.set('uploading', uploading);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tupload.start(function (error, file, storage) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tlet uploading = Session.get('uploading');\n\t\t\t\t\t\tif (!Array.isArray(uploading)) {\n\t\t\t\t\t\t\tuploading = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst item = _.findWhere(uploading, { id: upload.id });\n\n\t\t\t\t\t\tif (_.isObject(item)) {\n\t\t\t\t\t\t\titem.error = error.message;\n\t\t\t\t\t\t\titem.percentage = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuploading.push({\n\t\t\t\t\t\t\t\terror: error.error,\n\t\t\t\t\t\t\t\tpercentage: 0,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Session.set('uploading', uploading);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tMeteor.call('sendFileMessage', roomId, storage, file, () => {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tconst uploading = Session.get('uploading');\n\t\t\t\t\t\t\t\tif (uploading !== null) {\n\t\t\t\t\t\t\t\t\tconst item = _.findWhere(uploading, {\n\t\t\t\t\t\t\t\t\t\tid: upload.id,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn Session.set('uploading', _.without(uploading, item));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t},\n});\n\nTemplate.webdavFilePicker.onRendered(async function () {\n\tthis.autorun(() => {\n\t\tshowWebdavFileList();\n\t});\n\n\tthis.autorun(() => {\n\t\tconst { sortDirection, sortBy } = Template.instance();\n\t\tconst data = sortTable(this.state.get('webdavNodes'), sortBy.get(), sortDirection.get());\n\t\tthis.state.set('webdavNodes', data);\n\t});\n\n\tthis.autorun(() => {\n\t\tconst loading = this.isLoading.get();\n\t\tif (loading) {\n\t\t\treturn;\n\t\t}\n\t\tconst input = this.searchText.get();\n\t\tconst regex = new RegExp(`\\\\b${input}`, 'i');\n\t\tconst data = this.state.get('unfilteredWebdavNodes').filter(({ basename }) => basename.match(regex));\n\t\tthis.state.set('webdavNodes', data);\n\t});\n});\n\nTemplate.webdavFilePicker.onCreated(function () {\n\tthis.state = new ReactiveDict({\n\t\twebdavCurrentFolder: '/',\n\t\twebdavNodes: [],\n\t\tunfilteredWebdavNodes: [],\n\t});\n\tthis.isLoading = new ReactiveVar(true);\n\tthis.isListMode = new ReactiveVar(true);\n\tthis.sortBy = new ReactiveVar('name');\n\tthis.sortDirection = new ReactiveVar('asc');\n\tthis.searchText = new ReactiveVar('');\n});\n"]},"sourceType":"module","hash":"4c9e826caefb7ed89924c27699d0875f56d3a55b"}
