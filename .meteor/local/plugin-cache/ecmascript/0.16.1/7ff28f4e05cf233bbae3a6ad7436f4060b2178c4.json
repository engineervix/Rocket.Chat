{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/utils/lib/fileUploadRestrictions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/utils/lib/fileUploadRestrictions.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/utils/lib/fileUploadRestrictions.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/utils/lib/fileUploadRestrictions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/lib/fileUploadRestrictions.js"}},"code":"module.export({\n  fileUploadIsValidContentType: () => fileUploadIsValidContentType\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet settings;\n\nif (Meteor.isClient) {\n  settings = require('../../settings/client').settings;\n} else {\n  settings = require('../../settings/server').settings;\n}\n\nconst fileUploadMediaWhiteList = function (customWhiteList) {\n  const mediaTypeWhiteList = customWhiteList || settings.get('FileUpload_MediaTypeWhiteList');\n\n  if (!mediaTypeWhiteList || mediaTypeWhiteList === '*') {\n    return;\n  }\n\n  return _.map(mediaTypeWhiteList.split(','), function (item) {\n    return item.trim();\n  });\n};\n\nconst fileUploadMediaBlackList = function () {\n  const blacklist = settings.get('FileUpload_MediaTypeBlackList');\n\n  if (!blacklist) {\n    return;\n  }\n\n  return _.map(blacklist.split(','), item => item.trim());\n};\n\nconst isTypeOnList = function (type, list) {\n  if (_.contains(list, type)) {\n    return true;\n  }\n\n  const wildCardGlob = '/*';\n\n  const wildcards = _.filter(list, function (item) {\n    return item.indexOf(wildCardGlob) > 0;\n  });\n\n  if (_.contains(wildcards, type.replace(/(\\/.*)$/, wildCardGlob))) {\n    return true;\n  }\n};\n\nconst fileUploadIsValidContentType = function (type, customWhiteList) {\n  const blackList = fileUploadMediaBlackList();\n  const whiteList = fileUploadMediaWhiteList(customWhiteList);\n\n  if (!type && blackList) {\n    return false;\n  }\n\n  if (blackList && isTypeOnList(type, blackList)) {\n    return false;\n  }\n\n  if (!whiteList) {\n    return true;\n  }\n\n  return isTypeOnList(type, whiteList);\n};","map":{"version":3,"sources":["app/utils/lib/fileUploadRestrictions.js"],"names":["module","export","fileUploadIsValidContentType","Meteor","link","v","_","default","settings","isClient","require","fileUploadMediaWhiteList","customWhiteList","mediaTypeWhiteList","get","map","split","item","trim","fileUploadMediaBlackList","blacklist","isTypeOnList","type","list","contains","wildCardGlob","wildcards","filter","indexOf","replace","blackList","whiteList"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,4BAA4B,EAAC,MAAIA;AAAlC,CAAd;AAA+E,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;;AAAqD,IAAIC,CAAJ;;AAAMN,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAACG,EAAAA,OAAO,CAACF,CAAD,EAAG;AAACC,IAAAA,CAAC,GAACD,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAGrJ,IAAIG,QAAJ;;AACA,IAAIL,MAAM,CAACM,QAAX,EAAqB;AACpBD,EAAAA,QAAQ,GAAGE,OAAO,CAAC,uBAAD,CAAP,CAAiCF,QAA5C;AACA,CAFD,MAEO;AACNA,EAAAA,QAAQ,GAAGE,OAAO,CAAC,uBAAD,CAAP,CAAiCF,QAA5C;AACA;;AAED,MAAMG,wBAAwB,GAAG,UAAUC,eAAV,EAA2B;AAC3D,QAAMC,kBAAkB,GAAGD,eAAe,IAAIJ,QAAQ,CAACM,GAAT,CAAa,+BAAb,CAA9C;;AAEA,MAAI,CAACD,kBAAD,IAAuBA,kBAAkB,KAAK,GAAlD,EAAuD;AACtD;AACA;;AACD,SAAOP,CAAC,CAACS,GAAF,CAAMF,kBAAkB,CAACG,KAAnB,CAAyB,GAAzB,CAAN,EAAqC,UAAUC,IAAV,EAAgB;AAC3D,WAAOA,IAAI,CAACC,IAAL,EAAP;AACA,GAFM,CAAP;AAGA,CATD;;AAWA,MAAMC,wBAAwB,GAAG,YAAY;AAC5C,QAAMC,SAAS,GAAGZ,QAAQ,CAACM,GAAT,CAAa,+BAAb,CAAlB;;AACA,MAAI,CAACM,SAAL,EAAgB;AACf;AACA;;AAED,SAAOd,CAAC,CAACS,GAAF,CAAMK,SAAS,CAACJ,KAAV,CAAgB,GAAhB,CAAN,EAA6BC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAAtC,CAAP;AACA,CAPD;;AASA,MAAMG,YAAY,GAAG,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC1C,MAAIjB,CAAC,CAACkB,QAAF,CAAWD,IAAX,EAAiBD,IAAjB,CAAJ,EAA4B;AAC3B,WAAO,IAAP;AACA;;AACD,QAAMG,YAAY,GAAG,IAArB;;AACA,QAAMC,SAAS,GAAGpB,CAAC,CAACqB,MAAF,CAASJ,IAAT,EAAe,UAAUN,IAAV,EAAgB;AAChD,WAAOA,IAAI,CAACW,OAAL,CAAaH,YAAb,IAA6B,CAApC;AACA,GAFiB,CAAlB;;AAGA,MAAInB,CAAC,CAACkB,QAAF,CAAWE,SAAX,EAAsBJ,IAAI,CAACO,OAAL,CAAa,SAAb,EAAwBJ,YAAxB,CAAtB,CAAJ,EAAkE;AACjE,WAAO,IAAP;AACA;AACD,CAXD;;AAaO,MAAMvB,4BAA4B,GAAG,UAAUoB,IAAV,EAAgBV,eAAhB,EAAiC;AAC5E,QAAMkB,SAAS,GAAGX,wBAAwB,EAA1C;AACA,QAAMY,SAAS,GAAGpB,wBAAwB,CAACC,eAAD,CAA1C;;AAEA,MAAI,CAACU,IAAD,IAASQ,SAAb,EAAwB;AACvB,WAAO,KAAP;AACA;;AAED,MAAIA,SAAS,IAAIT,YAAY,CAACC,IAAD,EAAOQ,SAAP,CAA7B,EAAgD;AAC/C,WAAO,KAAP;AACA;;AAED,MAAI,CAACC,SAAL,EAAgB;AACf,WAAO,IAAP;AACA;;AAED,SAAOV,YAAY,CAACC,IAAD,EAAOS,SAAP,CAAnB;AACA,CAjBM","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nlet settings;\nif (Meteor.isClient) {\n\tsettings = require('../../settings/client').settings;\n} else {\n\tsettings = require('../../settings/server').settings;\n}\n\nconst fileUploadMediaWhiteList = function (customWhiteList) {\n\tconst mediaTypeWhiteList = customWhiteList || settings.get('FileUpload_MediaTypeWhiteList');\n\n\tif (!mediaTypeWhiteList || mediaTypeWhiteList === '*') {\n\t\treturn;\n\t}\n\treturn _.map(mediaTypeWhiteList.split(','), function (item) {\n\t\treturn item.trim();\n\t});\n};\n\nconst fileUploadMediaBlackList = function () {\n\tconst blacklist = settings.get('FileUpload_MediaTypeBlackList');\n\tif (!blacklist) {\n\t\treturn;\n\t}\n\n\treturn _.map(blacklist.split(','), (item) => item.trim());\n};\n\nconst isTypeOnList = function (type, list) {\n\tif (_.contains(list, type)) {\n\t\treturn true;\n\t}\n\tconst wildCardGlob = '/*';\n\tconst wildcards = _.filter(list, function (item) {\n\t\treturn item.indexOf(wildCardGlob) > 0;\n\t});\n\tif (_.contains(wildcards, type.replace(/(\\/.*)$/, wildCardGlob))) {\n\t\treturn true;\n\t}\n};\n\nexport const fileUploadIsValidContentType = function (type, customWhiteList) {\n\tconst blackList = fileUploadMediaBlackList();\n\tconst whiteList = fileUploadMediaWhiteList(customWhiteList);\n\n\tif (!type && blackList) {\n\t\treturn false;\n\t}\n\n\tif (blackList && isTypeOnList(type, blackList)) {\n\t\treturn false;\n\t}\n\n\tif (!whiteList) {\n\t\treturn true;\n\t}\n\n\treturn isTypeOnList(type, whiteList);\n};\n"]},"sourceType":"module","hash":"7ff28f4e05cf233bbae3a6ad7436f4060b2178c4"}
