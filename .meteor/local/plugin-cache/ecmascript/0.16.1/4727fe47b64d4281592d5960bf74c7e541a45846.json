{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/poly1305.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/client/poly1305-js/lib/poly1305.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/poly1305.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/poly1305.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/poly1305-js/lib/poly1305.js"}},"code":"\"use strict\";\n\n!function (module1) {\n  var _slicedToArray;\n\n  module1.link(\"@babel/runtime/helpers/slicedToArray\", {\n    default: function (v) {\n      _slicedToArray = v;\n    }\n  }, 0);\n\n  var _regeneratorRuntime;\n\n  module1.link(\"@babel/runtime/regenerator\", {\n    default: function (v) {\n      _regeneratorRuntime = v;\n    }\n  }, 1);\n\n  var BigInteger = require('big-integer');\n\n  var crypto = require('crypto');\n\n  var Util = require('./util');\n\n  var BLOCK_SIZE = 16;\n\n  module.exports = /*#__PURE__*/function () {\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @return {Promise<Buffer>}\r\n     */\n    Poly1305.onetimeauth = function () {\n      function onetimeauth(message, key) {\n        var self;\n        return _regeneratorRuntime.async(function () {\n          function onetimeauth$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!Buffer.isBuffer(message)) {\n                    message = Buffer.from(message);\n                  }\n\n                  self = new Poly1305(key);\n                  _context.next = 4;\n                  return _regeneratorRuntime.awrap(self.update(message));\n\n                case 4:\n                  _context.next = 6;\n                  return _regeneratorRuntime.awrap(self.finish());\n\n                case 6:\n                  return _context.abrupt(\"return\", _context.sent);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }\n\n          return onetimeauth$;\n        }(), null, null, null, Promise);\n      }\n\n      return onetimeauth;\n    }()\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @param {Buffer} tag\r\n     * @return {Promise<boolean>}\r\n     */\n    ;\n\n    Poly1305.onetimeauth_verify = function () {\n      function onetimeauth_verify(message, key, tag) {\n        var self, calc;\n        return _regeneratorRuntime.async(function () {\n          function onetimeauth_verify$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!Buffer.isBuffer(message)) {\n                    message = Buffer.from(message);\n                  }\n\n                  self = new Poly1305(key);\n                  _context2.next = 4;\n                  return _regeneratorRuntime.awrap(self.update(message));\n\n                case 4:\n                  _context2.next = 6;\n                  return _regeneratorRuntime.awrap(self.finish());\n\n                case 6:\n                  calc = _context2.sent;\n                  return _context2.abrupt(\"return\", crypto.timingSafeEqual(calc, tag));\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }\n\n          return onetimeauth_verify$;\n        }(), null, null, null, Promise);\n      }\n\n      return onetimeauth_verify;\n    }()\n    /**\r\n     * @param {Buffer} key\r\n     */\n    ;\n\n    function Poly1305(key) {\n      if (typeof key === 'undefined') {\n        this.buffer = Buffer.alloc(16, 0);\n        this.h = new Uint32Array(5);\n        this.r = [0, 0, 0, 0, 0];\n        this.pad = [0, 0, 0, 0];\n        this.leftover = 0;\n        this.final = false;\n        return;\n      }\n\n      if (!Buffer.isBuffer(key)) {\n        throw new TypeError(\"Poly1305 key must be a Buffer (argument 1)\");\n      }\n\n      if (key.length !== 32) {\n        throw new Error(\"Poly1305 requires a 32-byte key\");\n      }\n\n      this.buffer = Buffer.alloc(16, 0);\n      this.r = [Util.load32_le(key.slice(0, 4)) & 0x03ffffff, Util.load32_le(key.slice(3, 7)) >>> 2 & 0x03ffff03, Util.load32_le(key.slice(6, 10)) >>> 4 & 0x03ffc0ff, Util.load32_le(key.slice(9, 13)) >>> 6 & 0x03f03fff, Util.load32_le(key.slice(12, 16)) >>> 8 & 0x000fffff];\n      this.h = new Uint32Array(5);\n      this.pad = [Util.load32_le(key.slice(16, 20)), Util.load32_le(key.slice(20, 24)), Util.load32_le(key.slice(24, 28)), Util.load32_le(key.slice(28, 32))];\n      this.leftover = 0;\n      this.final = false;\n    }\n    /**\r\n     * Inspired by PHP's hash_copy()\r\n     *\r\n     * @return {Poly1305}\r\n     */\n\n\n    var _proto = Poly1305.prototype;\n\n    _proto.clone = function () {\n      function clone() {\n        var clone = new Poly1305();\n        this.buffer.copy(clone.buffer, 0, 0, 16);\n        clone.r = this.r;\n\n        for (var i = 0; i < 5; i++) {\n          clone.h[i] = this.h[i];\n        }\n\n        for (var _i = 0; _i < 4; _i++) {\n          clone.pad[_i] = this.pad[_i];\n        }\n\n        clone.leftover = this.leftover;\n        clone.final = this.final;\n        return clone;\n      }\n\n      return clone;\n    }()\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @param {number} bytes\r\n     * @return {Promise<void>}\r\n     */\n    ;\n\n    _proto.blocks = function () {\n      function blocks(message, bytes) {\n        var hibit, _this$r, r0, r1, r2, r3, r4, s1, s2, s3, s4, h0, h1, h2, h3, h4, offset, c, d0, d1, d2, d3, d4;\n\n        return _regeneratorRuntime.async(function () {\n          function blocks$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(message.length < 16)) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  throw new Error('Out of range exception');\n\n                case 2:\n                  hibit = this.final ? 0 : 1 << 24;\n                  _this$r = _slicedToArray(this.r, 5), r0 = _this$r[0], r1 = _this$r[1], r2 = _this$r[2], r3 = _this$r[3], r4 = _this$r[4];\n                  s1 = r1 * 5;\n                  s2 = r2 * 5;\n                  s3 = r3 * 5;\n                  s4 = r4 * 5;\n                  h0 = BigInteger(this.h[0]);\n                  h1 = BigInteger(this.h[1]);\n                  h2 = BigInteger(this.h[2]);\n                  h3 = BigInteger(this.h[3]);\n                  h4 = BigInteger(this.h[4]);\n                  offset = 0;\n\n                  while (bytes >= BLOCK_SIZE) {\n                    /* h += m[i] */\n                    h0 = h0.add(Util.load32_le(message.slice(offset, offset + 4)) & 0x03ffffff);\n                    h1 = h1.add(Util.load32_le(message.slice(offset + 3, offset + 7)) >>> 2 & 0x03ffffff);\n                    h2 = h2.add(Util.load32_le(message.slice(offset + 6, offset + 10)) >>> 4 & 0x03ffffff);\n                    h3 = h3.add(Util.load32_le(message.slice(offset + 9, offset + 13)) >>> 6 & 0x03ffffff);\n                    h4 = h4.add(Util.load32_le(message.slice(offset + 12, offset + 16)) >>> 8 | hibit);\n                    /* h *= r */\n                    // d0 = ((h0 * r0) + (s4 * h1) + (s3 * h2) + (s2 * h3) + (s1 * h4));\n\n                    d0 = BigInteger(h0.times(BigInteger(r0))).plus(BigInteger(s4).times(h1)).plus(BigInteger(s3).times(h2)).plus(BigInteger(s2).times(h3)).plus(BigInteger(s1).times(h4)); // d1 = ((h0 * r1) + (h1 * r0) + (s4 * h2) + (s3 * h3) + (s2 * h4));\n\n                    d1 = BigInteger(h0.times(BigInteger(r1))).plus(h1.times(BigInteger(r0))).plus(BigInteger(s4).times(h2)).plus(BigInteger(s3).times(h3)).plus(BigInteger(s2).times(h4)); // d2 = ((h0 * r2) + (h1 * r1) + (h2 * r0) + (s4 * h3) + (s3 * h4));\n\n                    d2 = BigInteger(h0.times(BigInteger(r2))).plus(h1.times(BigInteger(r1))).plus(h2.times(BigInteger(r0))).plus(BigInteger(s4).times(h3)).plus(BigInteger(s3).times(h4)); // d3 = ((h0 * r3) + (h1 * r2) + (h2 * r1) + (h3 * r0) + (s4 * h4));\n\n                    d3 = BigInteger(h0.times(BigInteger(r3))).plus(h1.times(BigInteger(r2))).plus(h2.times(BigInteger(r1))).plus(h3.times(BigInteger(r0))).plus(BigInteger(s4).times(h4)); // d4 = ((h0 * r4) + (h1 * r3) + (h2 * r2) + (h3 * r1) + (h4 * r0));\n\n                    d4 = BigInteger(h0.times(BigInteger(r4))).plus(h1.times(BigInteger(r3))).plus(h2.times(BigInteger(r2))).plus(h3.times(BigInteger(r1))).plus(h4.times(BigInteger(r0)));\n                    /* (partial) h %= p */\n\n                    c = d0.shiftRight(26);\n                    h0 = d0.and(0x3ffffff);\n                    d1 = d1.add(c);\n                    c = d1.shiftRight(26);\n                    h1 = d1.and(0x3ffffff);\n                    d2 = d2.add(c);\n                    c = d2.shiftRight(26);\n                    h2 = d2.and(0x3ffffff);\n                    d3 = d3.add(c);\n                    c = d3.shiftRight(26);\n                    h3 = d3.and(0x3ffffff);\n                    d4 = d4.add(c);\n                    c = d4.shiftRight(26);\n                    h4 = d4.and(0x3ffffff);\n                    h0 = h0.add(c.multiply(5).toJSNumber());\n                    c = h0.shiftRight(26);\n                    h0 = h0.and(0x3ffffff);\n                    h1 = h1.add(c);\n                    offset += BLOCK_SIZE;\n                    bytes -= BLOCK_SIZE;\n                  }\n\n                  this.h[0] = h0.toJSNumber() >>> 0;\n                  this.h[1] = h1.toJSNumber() >>> 0;\n                  this.h[2] = h2.toJSNumber() >>> 0;\n                  this.h[3] = h3.toJSNumber() >>> 0;\n                  this.h[4] = h4.toJSNumber() >>> 0;\n\n                case 20:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }\n\n          return blocks$;\n        }(), null, this, null, Promise);\n      }\n\n      return blocks;\n    }()\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @return {Promise<Poly1305>}\r\n     */\n    ;\n\n    _proto.update = function () {\n      function update(message) {\n        var want, bytes;\n        return _regeneratorRuntime.async(function () {\n          function update$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  bytes = message.length;\n\n                  if (!(this.leftover > 0)) {\n                    _context4.next = 13;\n                    break;\n                  }\n\n                  want = BLOCK_SIZE - this.leftover;\n\n                  if (want > bytes) {\n                    want = bytes;\n                  }\n\n                  message.slice(0, want).copy(this.buffer, this.leftover, 0);\n                  this.leftover += want;\n\n                  if (!(this.leftover < BLOCK_SIZE)) {\n                    _context4.next = 8;\n                    break;\n                  }\n\n                  return _context4.abrupt(\"return\", this);\n\n                case 8:\n                  _context4.next = 10;\n                  return _regeneratorRuntime.awrap(this.blocks(this.buffer, BLOCK_SIZE));\n\n                case 10:\n                  this.leftover -= BLOCK_SIZE;\n                  bytes -= want;\n                  message = message.slice(want);\n\n                case 13:\n                  if (!(bytes >= BLOCK_SIZE)) {\n                    _context4.next = 20;\n                    break;\n                  }\n\n                  want = bytes & ~(BLOCK_SIZE - 1);\n\n                  if (!(want >= BLOCK_SIZE)) {\n                    _context4.next = 20;\n                    break;\n                  }\n\n                  _context4.next = 18;\n                  return _regeneratorRuntime.awrap(this.blocks(message.slice(0, want), want));\n\n                case 18:\n                  message = message.slice(want);\n                  bytes = message.length;\n\n                case 20:\n                  /* store leftover */\n                  if (bytes > 0) {\n                    message.slice(0, bytes).copy(this.buffer, this.leftover, 0);\n                    this.leftover += bytes;\n                  }\n\n                  return _context4.abrupt(\"return\", this);\n\n                case 22:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }\n\n          return update$;\n        }(), null, this, null, Promise);\n      }\n\n      return update;\n    }()\n    /**\r\n     * @return {Promise<Buffer>}\r\n     */\n    ;\n\n    _proto.finish = function () {\n      function finish() {\n        var c, g0, g1, g2, g3, g4, h0, h1, h2, h3, h4, mask, i, _Util$add_overflow, _Util$add_overflow2, _Util$add_overflow3, _Util$add_overflow4, _Util$add_overflow5, _Util$add_overflow6, _Util$add_overflow7, _Util$add_overflow8;\n\n        return _regeneratorRuntime.async(function () {\n          function finish$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (!this.leftover) {\n                    _context5.next = 7;\n                    break;\n                  }\n\n                  i = this.leftover;\n                  this.buffer[i++] = 1;\n\n                  for (; i < BLOCK_SIZE; i++) {\n                    this.buffer[i] = 0;\n                  }\n\n                  this.final = true;\n                  _context5.next = 7;\n                  return _regeneratorRuntime.awrap(this.blocks(this.buffer, BLOCK_SIZE));\n\n                case 7:\n                  h0 = this.h[0];\n                  h1 = this.h[1];\n                  h2 = this.h[2];\n                  h3 = this.h[3];\n                  h4 = this.h[4];\n                  c = h1 >>> 26;\n                  h1 &= 0x3ffffff;\n                  h2 += c;\n                  c = h2 >>> 26;\n                  h2 &= 0x3ffffff;\n                  h3 += c;\n                  c = h3 >>> 26;\n                  h3 &= 0x3ffffff;\n                  h4 += c;\n                  c = h4 >>> 26;\n                  h4 &= 0x3ffffff;\n                  h0 += c * 5;\n                  c = h0 >>> 26;\n                  h0 &= 0x3ffffff;\n                  h1 += c;\n                  /* compute h + -p */\n\n                  g0 = h0 + 5;\n                  c = g0 >>> 26;\n                  g0 &= 0x3ffffff;\n                  g1 = h1 + c;\n                  c = g1 >>> 26;\n                  g1 &= 0x3ffffff;\n                  g2 = h2 + c;\n                  c = g2 >>> 26;\n                  g2 &= 0x3ffffff;\n                  g3 = h2 + c;\n                  c = g3 >>> 26;\n                  g3 &= 0x3ffffff;\n                  g4 = h4 + c - (1 << 26) >>> 0;\n                  /* select h if h < p, or h + -p if h >= p */\n\n                  mask = (g4 >>> 31) - 1;\n                  g0 &= mask;\n                  g1 &= mask;\n                  g2 &= mask;\n                  g3 &= mask;\n                  g4 &= mask;\n                  mask = ~mask >>> 0;\n                  h0 = h0 & mask | g0;\n                  h1 = h1 & mask | g1;\n                  h2 = h2 & mask | g2;\n                  h3 = h3 & mask | g3;\n                  h4 = h4 & mask | g4;\n                  /* h = h % (2^128) */\n\n                  h0 = (h0 | h1 << 26) >>> 0;\n                  h1 = (h1 >>> 6 | h2 << 20) >>> 0;\n                  h2 = (h2 >>> 12 | h3 << 14) >>> 0;\n                  h3 = (h3 >>> 18 | h4 << 8) >>> 0;\n                  _Util$add_overflow = Util.add_overflow(h0, this.pad[0]);\n                  _Util$add_overflow2 = _slicedToArray(_Util$add_overflow, 2);\n                  h0 = _Util$add_overflow2[0];\n                  c = _Util$add_overflow2[1];\n                  _Util$add_overflow3 = Util.add_overflow(h1, this.pad[1], c);\n                  _Util$add_overflow4 = _slicedToArray(_Util$add_overflow3, 2);\n                  h1 = _Util$add_overflow4[0];\n                  c = _Util$add_overflow4[1];\n                  _Util$add_overflow5 = Util.add_overflow(h2, this.pad[2], c);\n                  _Util$add_overflow6 = _slicedToArray(_Util$add_overflow5, 2);\n                  h2 = _Util$add_overflow6[0];\n                  c = _Util$add_overflow6[1];\n                  _Util$add_overflow7 = Util.add_overflow(h3, this.pad[3], c);\n                  _Util$add_overflow8 = _slicedToArray(_Util$add_overflow7, 2);\n                  h3 = _Util$add_overflow8[0];\n                  c = _Util$add_overflow8[1];\n                  return _context5.abrupt(\"return\", Buffer.concat([Util.store32_le(h0 >>> 0), Util.store32_le(h1 >>> 0), Util.store32_le(h2 >>> 0), Util.store32_le(h3 >>> 0)]));\n\n                case 73:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }\n\n          return finish$;\n        }(), null, this, null, Promise);\n      }\n\n      return finish;\n    }();\n\n    return Poly1305;\n  }();\n}.call(this, module);","map":{"version":3,"sources":["imports/client/poly1305-js/lib/poly1305.js"],"names":["_slicedToArray","module1","link","default","v","_regeneratorRuntime","BigInteger","require","crypto","Util","BLOCK_SIZE","module","exports","onetimeauth","message","key","Buffer","isBuffer","from","self","Poly1305","update","finish","onetimeauth_verify","tag","calc","timingSafeEqual","buffer","alloc","h","Uint32Array","r","pad","leftover","final","TypeError","length","Error","load32_le","slice","clone","copy","i","blocks","bytes","hibit","r0","r1","r2","r3","r4","s1","s2","s3","s4","h0","h1","h2","h3","h4","offset","add","d0","times","plus","d1","d2","d3","d4","c","shiftRight","and","multiply","toJSNumber","want","g0","g1","g2","g3","g4","mask","add_overflow","concat","store32_le"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst BigInteger = require('big-integer');\r\nconst crypto = require('crypto');\r\nconst Util = require('./util');\r\n\r\nconst BLOCK_SIZE = 16;\r\n\r\nmodule.exports = class Poly1305\r\n{\r\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @return {Promise<Buffer>}\r\n     */\r\n    static async onetimeauth(message, key)\r\n    {\r\n        if (!Buffer.isBuffer(message)) {\r\n            message = Buffer.from(message);\r\n        }\r\n        let self = new Poly1305(key);\r\n        await self.update(message);\r\n        return await self.finish();\r\n    }\r\n\r\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @param {Buffer} tag\r\n     * @return {Promise<boolean>}\r\n     */\r\n    static async onetimeauth_verify(message, key, tag)\r\n    {\r\n        if (!Buffer.isBuffer(message)) {\r\n            message = Buffer.from(message);\r\n        }\r\n        let self = new Poly1305(key);\r\n        await self.update(message);\r\n        let calc = await self.finish();\r\n        return crypto.timingSafeEqual(calc, tag);\r\n    }\r\n\r\n    /**\r\n     * @param {Buffer} key\r\n     */\r\n    constructor(key)\r\n    {\r\n        if (typeof (key) === 'undefined') {\r\n            this.buffer = Buffer.alloc(16, 0);\r\n            this.h = new Uint32Array(5);\r\n            this.r = [0,0,0,0,0];\r\n            this.pad = [0,0,0,0];\r\n            this.leftover = 0;\r\n            this.final = false;\r\n            return;\r\n        }\r\n        if (!Buffer.isBuffer(key)) {\r\n            throw new TypeError(\"Poly1305 key must be a Buffer (argument 1)\");\r\n        }\r\n        if (key.length !== 32) {\r\n            throw new Error(\"Poly1305 requires a 32-byte key\");\r\n        }\r\n        this.buffer = Buffer.alloc(16, 0);\r\n\r\n        this.r = [\r\n            Util.load32_le(key.slice(0, 4))           & 0x03ffffff,\r\n            (Util.load32_le(key.slice(3, 7)) >>> 2)   & 0x03ffff03,\r\n            (Util.load32_le(key.slice(6, 10)) >>> 4)  & 0x03ffc0ff,\r\n            (Util.load32_le(key.slice(9, 13)) >>> 6)  & 0x03f03fff,\r\n            (Util.load32_le(key.slice(12, 16)) >>> 8) & 0x000fffff\r\n        ];\r\n        this.h = new Uint32Array(5);\r\n        this.pad = [\r\n            Util.load32_le(key.slice(16, 20)),\r\n            Util.load32_le(key.slice(20, 24)),\r\n            Util.load32_le(key.slice(24, 28)),\r\n            Util.load32_le(key.slice(28, 32))\r\n        ];\r\n\r\n        this.leftover = 0;\r\n        this.final = false;\r\n    }\r\n\r\n    /**\r\n     * Inspired by PHP's hash_copy()\r\n     *\r\n     * @return {Poly1305}\r\n     */\r\n    clone()\r\n    {\r\n        let clone = new Poly1305();\r\n        this.buffer.copy(clone.buffer, 0, 0, 16);\r\n        clone.r = this.r;\r\n        for (let i = 0; i < 5; i++) {\r\n            clone.h[i] = this.h[i];\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            clone.pad[i] = this.pad[i];\r\n        }\r\n        clone.leftover = this.leftover;\r\n        clone.final = this.final;\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @param {number} bytes\r\n     * @return {Promise<void>}\r\n     */\r\n    async blocks(message, bytes)\r\n    {\r\n        if (message.length < 16) {\r\n            throw new Error('Out of range exception');\r\n        }\r\n\r\n        let hibit = this.final ? 0 : 1 << 24;\r\n        let [r0, r1, r2, r3, r4] = this.r;\r\n\r\n        let s1 = r1 * 5;\r\n        let s2 = r2 * 5;\r\n        let s3 = r3 * 5;\r\n        let s4 = r4 * 5;\r\n\r\n        let h0 = BigInteger(this.h[0]);\r\n        let h1 = BigInteger(this.h[1]);\r\n        let h2 = BigInteger(this.h[2]);\r\n        let h3 = BigInteger(this.h[3]);\r\n        let h4 = BigInteger(this.h[4]);\r\n\r\n        let offset = 0;\r\n        let c, d0, d1, d2, d3, d4;\r\n        while (bytes >= BLOCK_SIZE) {\r\n            /* h += m[i] */\r\n            h0 = h0.add((Util.load32_le(message.slice(offset,     offset + 4)))        & 0x03ffffff);\r\n            h1 = h1.add((Util.load32_le(message.slice(offset + 3, offset + 7)) >>> 2)  & 0x03ffffff);\r\n            h2 = h2.add((Util.load32_le(message.slice(offset + 6, offset + 10)) >>> 4) & 0x03ffffff);\r\n            h3 = h3.add((Util.load32_le(message.slice(offset + 9, offset + 13)) >>> 6) & 0x03ffffff);\r\n            h4 = h4.add((Util.load32_le(message.slice(offset + 12, offset + 16)) >>> 8) | hibit);\r\n\r\n            /* h *= r */\r\n            // d0 = ((h0 * r0) + (s4 * h1) + (s3 * h2) + (s2 * h3) + (s1 * h4));\r\n            d0 = BigInteger(h0.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h1))\r\n                .plus(BigInteger(s3).times(h2))\r\n                .plus(BigInteger(s2).times(h3))\r\n                .plus(BigInteger(s1).times(h4));\r\n\r\n            // d1 = ((h0 * r1) + (h1 * r0) + (s4 * h2) + (s3 * h3) + (s2 * h4));\r\n            d1 = BigInteger(h0.times(BigInteger(r1)))\r\n                .plus(h1.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h2))\r\n                .plus(BigInteger(s3).times(h3))\r\n                .plus(BigInteger(s2).times(h4));\r\n\r\n            // d2 = ((h0 * r2) + (h1 * r1) + (h2 * r0) + (s4 * h3) + (s3 * h4));\r\n            d2 = BigInteger(h0.times(BigInteger(r2)))\r\n                .plus(h1.times(BigInteger(r1)))\r\n                .plus(h2.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h3))\r\n                .plus(BigInteger(s3).times(h4));\r\n\r\n            // d3 = ((h0 * r3) + (h1 * r2) + (h2 * r1) + (h3 * r0) + (s4 * h4));\r\n            d3 = BigInteger(h0.times(BigInteger(r3)))\r\n                .plus(h1.times(BigInteger(r2)))\r\n                .plus(h2.times(BigInteger(r1)))\r\n                .plus(h3.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h4));\r\n            // d4 = ((h0 * r4) + (h1 * r3) + (h2 * r2) + (h3 * r1) + (h4 * r0));\r\n            d4 = BigInteger(h0.times(BigInteger(r4)))\r\n                .plus(h1.times(BigInteger(r3)))\r\n                .plus(h2.times(BigInteger(r2)))\r\n                .plus(h3.times(BigInteger(r1)))\r\n                .plus(h4.times(BigInteger(r0)));\r\n\r\n            /* (partial) h %= p */\r\n            c = d0.shiftRight(26);\r\n            h0 = d0.and(0x3ffffff);\r\n            d1 = d1.add(c);\r\n            c = d1.shiftRight(26);\r\n            h1 = d1.and(0x3ffffff);\r\n            d2 = d2.add(c);\r\n            c = d2.shiftRight(26);\r\n            h2 = d2.and(0x3ffffff);\r\n            d3 = d3.add(c);\r\n            c = d3.shiftRight(26);\r\n            h3 = d3.and(0x3ffffff);\r\n            d4 = d4.add(c);\r\n            c = d4.shiftRight(26);\r\n            h4 = d4.and(0x3ffffff);\r\n            h0 = h0.add(c.multiply(5).toJSNumber());\r\n\r\n            c = h0.shiftRight(26);\r\n            h0 = h0.and(0x3ffffff);\r\n            h1 = h1.add(c);\r\n\r\n            offset += BLOCK_SIZE;\r\n            bytes -= BLOCK_SIZE;\r\n        }\r\n        this.h[0] = h0.toJSNumber() >>> 0;\r\n        this.h[1] = h1.toJSNumber() >>> 0;\r\n        this.h[2] = h2.toJSNumber() >>> 0;\r\n        this.h[3] = h3.toJSNumber() >>> 0;\r\n        this.h[4] = h4.toJSNumber() >>> 0;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @return {Promise<Poly1305>}\r\n     */\r\n    async update(message)\r\n    {\r\n        let want;\r\n        let bytes = message.length;\r\n\r\n        if (this.leftover > 0) {\r\n            want = BLOCK_SIZE - this.leftover;\r\n            if (want > bytes) {\r\n                want = bytes;\r\n            }\r\n            message.slice(0, want).copy(this.buffer, this.leftover, 0);\r\n            this.leftover += want;\r\n            if (this.leftover < BLOCK_SIZE) {\r\n                // We still don't have enough to run this.blocks()\r\n                return this;\r\n            }\r\n            await this.blocks(this.buffer, BLOCK_SIZE);\r\n            this.leftover -= BLOCK_SIZE;\r\n            bytes -= want;\r\n            message = message.slice(want);\r\n        }\r\n\r\n        /* process full blocks */\r\n        if (bytes >= BLOCK_SIZE) {\r\n            want = bytes & ~(BLOCK_SIZE - 1);\r\n            if (want >= BLOCK_SIZE) {\r\n                await this.blocks(message.slice(0, want), want);\r\n                message = message.slice(want);\r\n                bytes = message.length;\r\n            }\r\n        }\r\n\r\n        /* store leftover */\r\n        if (bytes > 0) {\r\n            message.slice(0, bytes).copy(this.buffer, this.leftover, 0);\r\n            this.leftover += bytes;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {Promise<Buffer>}\r\n     */\r\n    async finish()\r\n    {\r\n        let c, g0, g1, g2, g3, g4, h0, h1, h2, h3, h4, mask;\r\n        if (this.leftover) {\r\n            let i = this.leftover;\r\n            this.buffer[i++] = 1;\r\n            for (; i < BLOCK_SIZE; i++) {\r\n                this.buffer[i] = 0;\r\n            }\r\n            this.final = true;\r\n            await this.blocks(this.buffer, BLOCK_SIZE);\r\n        }\r\n\r\n        h0 = this.h[0];\r\n        h1 = this.h[1];\r\n        h2 = this.h[2];\r\n        h3 = this.h[3];\r\n        h4 = this.h[4];\r\n\r\n        c = h1 >>> 26;\r\n        h1 &= 0x3ffffff;\r\n        h2 += c;\r\n        c = h2 >>> 26;\r\n        h2 &= 0x3ffffff;\r\n        h3 += c;\r\n        c = h3 >>> 26;\r\n        h3 &= 0x3ffffff;\r\n        h4 += c;\r\n        c = h4 >>> 26;\r\n        h4 &= 0x3ffffff;\r\n        h0 += c * 5;\r\n        c = h0 >>> 26;\r\n        h0 &= 0x3ffffff;\r\n        h1 += c;\r\n\r\n        /* compute h + -p */\r\n        g0 = h0 + 5;\r\n        c = g0 >>> 26;\r\n        g0 &= 0x3ffffff;\r\n\r\n        g1 = h1 + c;\r\n        c = g1 >>> 26;\r\n        g1 &= 0x3ffffff;\r\n\r\n        g2 = h2 + c;\r\n        c = g2 >>> 26;\r\n        g2 &= 0x3ffffff;\r\n\r\n        g3 = h2 + c;\r\n        c = g3 >>> 26;\r\n        g3 &= 0x3ffffff;\r\n\r\n        g4 = (h4 +c - (1 << 26)) >>> 0;\r\n\r\n        /* select h if h < p, or h + -p if h >= p */\r\n        mask = (g4 >>> 31) - 1;\r\n\r\n        g0 &= mask;\r\n        g1 &= mask;\r\n        g2 &= mask;\r\n        g3 &= mask;\r\n        g4 &= mask;\r\n\r\n        mask = ~mask >>> 0;\r\n        h0 = (h0 & mask) | g0;\r\n        h1 = (h1 & mask) | g1;\r\n        h2 = (h2 & mask) | g2;\r\n        h3 = (h3 & mask) | g3;\r\n        h4 = (h4 & mask) | g4;\r\n\r\n        /* h = h % (2^128) */\r\n        h0 = ((h0) | (h1 << 26)) >>> 0;\r\n        h1 = ((h1 >>>  6) | (h2 << 20)) >>> 0;\r\n        h2 = ((h2 >>> 12) | (h3 << 14)) >>> 0;\r\n        h3 = ((h3 >>> 18) | (h4 <<  8)) >>> 0;\r\n\r\n        [h0, c] = Util.add_overflow(h0, this.pad[0]);\r\n        [h1, c] = Util.add_overflow(h1, this.pad[1], c);\r\n        [h2, c] = Util.add_overflow(h2, this.pad[2], c);\r\n        [h3, c] = Util.add_overflow(h3, this.pad[3], c);\r\n\r\n        return Buffer.concat([\r\n            Util.store32_le(h0 >>> 0),\r\n            Util.store32_le(h1 >>> 0),\r\n            Util.store32_le(h2 >>> 0),\r\n            Util.store32_le(h3 >>> 0)\r\n        ]);\r\n    }\r\n};\r\n"]},"sourceType":"module","hash":"4727fe47b64d4281592d5960bf74c7e541a45846"}
