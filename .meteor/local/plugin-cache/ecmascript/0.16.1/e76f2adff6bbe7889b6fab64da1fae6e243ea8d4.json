{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/popup/messagePopupConfig.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-message/client/popup/messagePopupConfig.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/popup/messagePopupConfig.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/popup/messagePopupConfig.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-message/client/popup/messagePopupConfig.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 3);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 4);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 5);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 6);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 7);\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n\n}, 8);\nlet Messages, Subscriptions;\nmodule.link(\"../../../models/client\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 9);\nlet settings;\nmodule.link(\"../../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 10);\nlet hasAllPermission, hasAtLeastOnePermission;\nmodule.link(\"../../../authorization/client\", {\n  hasAllPermission(v) {\n    hasAllPermission = v;\n  },\n\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n\n}, 11);\nlet EmojiPicker, emoji;\nmodule.link(\"../../../emoji\", {\n  EmojiPicker(v) {\n    EmojiPicker = v;\n  },\n\n  emoji(v) {\n    emoji = v;\n  }\n\n}, 12);\nlet callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n\n}, 13);\nlet t, getUserPreference, slashCommands;\nmodule.link(\"../../../utils/client\", {\n  t(v) {\n    t = v;\n  },\n\n  getUserPreference(v) {\n    getUserPreference = v;\n  },\n\n  slashCommands(v) {\n    slashCommands = v;\n  }\n\n}, 14);\nlet customMessagePopups;\nmodule.link(\"./customMessagePopups\", {\n  customMessagePopups(v) {\n    customMessagePopups = v;\n  }\n\n}, 15);\nmodule.link(\"./messagePopupConfig.html\");\nmodule.link(\"./messagePopupSlashCommand.html\");\nmodule.link(\"./messagePopupUser.html\");\n\nconst reloadUsersFromRoomMessages = (rid, template) => {\n  const user = Meteor.userId() && Meteor.users.findOne(Meteor.userId(), {\n    fields: {\n      username: 1\n    }\n  });\n\n  if (!rid || !user) {\n    return;\n  }\n\n  template.usersFromRoomMessages.remove({});\n  const uniqueMessageUsersControl = {};\n  Messages.find({\n    rid,\n    'u.username': {\n      $ne: user.username\n    },\n    't': {\n      $exists: false\n    }\n  }, {\n    fields: {\n      'u.username': 1,\n      'u.name': 1,\n      'ts': 1\n    },\n    sort: {\n      ts: -1\n    }\n  }).fetch().filter(_ref => {\n    let {\n      u: {\n        username\n      }\n    } = _ref;\n    const notMapped = !uniqueMessageUsersControl[username];\n    uniqueMessageUsersControl[username] = true;\n    return notMapped;\n  }).forEach(_ref2 => {\n    let {\n      u: {\n        username,\n        name\n      },\n      ts\n    } = _ref2;\n    return template.usersFromRoomMessages.upsert(username, {\n      _id: username,\n      username,\n      name,\n      status: Tracker.nonreactive(() => Session.get(\"user_\".concat(username, \"_status\")) || 'offline'),\n      ts\n    });\n  });\n};\n\nconst fetchUsersFromServer = _.throttle(async (filterText, records, rid, cb) => {\n  const usernames = records.map(_ref3 => {\n    let {\n      username\n    } = _ref3;\n    return username;\n  });\n  const {\n    users\n  } = await callWithErrorHandling('spotlight', filterText, usernames, {\n    users: true,\n    mentions: true\n  }, rid);\n\n  if (!users || users.length <= 0) {\n    return;\n  }\n\n  users // .slice(0, 5)\n  .forEach(_ref4 => {\n    let {\n      username,\n      nickname,\n      name,\n      status,\n      avatarETag,\n      outside\n    } = _ref4;\n    // if (records.length < 5) {\n    records.push({\n      _id: username,\n      username,\n      nickname,\n      name,\n      status,\n      avatarETag,\n      outside,\n      sort: 3\n    }); // }\n  });\n  records.sort((_ref5, _ref6) => {\n    let {\n      sort: sortA\n    } = _ref5;\n    let {\n      sort: sortB\n    } = _ref6;\n    return sortA - sortB;\n  });\n  cb && cb(records);\n}, 1000);\n\nconst fetchRoomsFromServer = _.throttle(async (filterText, records, rid, cb) => {\n  if (!hasAllPermission('view-outside-room')) {\n    cb && cb([]);\n    return;\n  }\n\n  const {\n    rooms\n  } = await callWithErrorHandling('spotlight', filterText, null, {\n    rooms: true,\n    mentions: true\n  }, rid);\n\n  if (!rooms || rooms.length <= 0) {\n    return;\n  }\n\n  rooms.slice(0, 5).forEach(room => {\n    if (records.length < 5) {\n      records.push(room);\n    }\n  });\n  cb && cb(records);\n}, 1000);\n\nconst emojiSort = recents => (a, b) => {\n  let idA = a._id;\n  let idB = a._id;\n\n  if (recents.includes(a._id)) {\n    idA = recents.indexOf(a._id) + idA;\n  }\n\n  if (recents.includes(b._id)) {\n    idB = recents.indexOf(b._id) + idB;\n  }\n\n  if (idA < idB) {\n    return -1;\n  }\n\n  if (idA > idB) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst exactFinalTone = new RegExp('^tone[1-5]:*$');\nconst colorBlind = new RegExp('tone[1-5]:*$');\nconst seeColor = new RegExp('_t(?:o|$)(?:n|$)(?:e|$)(?:[1-5]|$)(?::|$)$');\n\nconst getEmojis = (collection, filter) => {\n  const key = \":\".concat(filter);\n\n  if (!getUserPreference(Meteor.userId(), 'useEmojis')) {\n    return [];\n  }\n\n  if (!emoji.packages.emojione || emoji.packages.emojione.asciiList[key]) {\n    return [];\n  }\n\n  const regExp = new RegExp(escapeRegExp(filter), 'i');\n  const recents = EmojiPicker.getRecent().map(item => \":\".concat(item, \":\"));\n  return Object.keys(collection).map(_id => {\n    const data = collection[key];\n    return {\n      _id,\n      data\n    };\n  }).filter(_ref7 => {\n    let {\n      _id\n    } = _ref7;\n    return regExp.test(_id) && (exactFinalTone.test(_id.substring(key.length)) || seeColor.test(key) || !colorBlind.test(_id));\n  }).sort(emojiSort(recents)).slice(0, 10);\n};\n\nconst addEmojiToRecents = emoji => {\n  const pickerEl = document.querySelector('.emoji-picker');\n\n  if (!pickerEl) {\n    return;\n  }\n\n  const view = Blaze.getView(pickerEl);\n\n  if (!view) {\n    return;\n  }\n\n  Template._withTemplateInstanceFunc(view.templateInstance, () => {\n    EmojiPicker.addRecent(emoji.replace(/:/g, ''));\n  });\n};\n\nTemplate.messagePopupConfig.onCreated(function () {\n  this.usersFromRoomMessages = new Mongo.Collection(null);\n  this.autorun(() => {\n    const {\n      rid\n    } = this.data;\n    reloadUsersFromRoomMessages(rid, this);\n  });\n});\nTemplate.messagePopupConfig.helpers({\n  customMessagePopups() {\n    return customMessagePopups.get();\n  },\n\n  getCustomConfig() {\n    const template = Template.instance();\n    return this.configGetter(template);\n  },\n\n  popupUserConfig() {\n    var _this = this;\n\n    const template = Template.instance();\n    const suggestionsCount = settings.get('Number_of_users_autocomplete_suggestions');\n    return {\n      title: t('People'),\n      collection: template.usersFromRoomMessages,\n      template: 'messagePopupUser',\n      rid: this.rid,\n      getInput: this.getInput,\n      textFilterDelay: 500,\n      trigger: '@',\n      suffix: ' ',\n      getFilter: function (collection) {\n        let filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        let cb = arguments.length > 2 ? arguments[2] : undefined;\n        const {\n          rid\n        } = _this;\n        const filterText = filter.trim();\n        const filterRegex = filterText !== '' && new RegExp(\"\".concat(escapeRegExp(filterText)), 'i');\n        const items = template.usersFromRoomMessages.find(_objectSpread({\n          ts: {\n            $exists: true\n          }\n        }, filterText && {\n          $or: [{\n            username: filterRegex\n          }, {\n            name: filterRegex\n          }]\n        }), {\n          limit: filterText ? 2 : suggestionsCount,\n          sort: {\n            ts: -1\n          }\n        }).fetch().map(u => {\n          u.suggestion = true;\n          return u;\n        }); // // If needed, add to list the online users\n        // if (items.length < 5 && filterRegex) {\n        // \tconst usernamesAlreadyFetched = items.map(({ username }) => username);\n        // \tif (!hasAllPermission('view-outside-room')) {\n        // \t\tconst usernamesFromDMs = Subscriptions\n        // \t\t\t.find(\n        // \t\t\t\t{\n        // \t\t\t\t\tt: 'd',\n        // \t\t\t\t\t$and: [\n        // \t\t\t\t\t\t{\n        // \t\t\t\t\t\t\t...filterRegex && {\n        // \t\t\t\t\t\t\t\t$or: [\n        // \t\t\t\t\t\t\t\t\t{ name: filterRegex },\n        // \t\t\t\t\t\t\t\t\t{ fname: filterRegex },\n        // \t\t\t\t\t\t\t\t],\n        // \t\t\t\t\t\t\t},\n        // \t\t\t\t\t\t},\n        // \t\t\t\t\t\t{\n        // \t\t\t\t\t\t\tname: { $nin: usernamesAlreadyFetched },\n        // \t\t\t\t\t\t},\n        // \t\t\t\t\t],\n        // \t\t\t\t},\n        // \t\t\t\t{\n        // \t\t\t\t\tfields: { name: 1 },\n        // \t\t\t\t},\n        // \t\t\t)\n        // \t\t\t.map(({ name }) => name);\n        // \t\tconst newItems = Users\n        // \t\t\t.find(\n        // \t\t\t\t{\n        // \t\t\t\t\tusername: {\n        // \t\t\t\t\t\t$in: usernamesFromDMs,\n        // \t\t\t\t\t},\n        // \t\t\t\t},\n        // \t\t\t\t{\n        // \t\t\t\t\tfields: {\n        // \t\t\t\t\t\tusername: 1,\n        // \t\t\t\t\t\tnickname: 1,\n        // \t\t\t\t\t\tname: 1,\n        // \t\t\t\t\t\tstatus: 1,\n        // \t\t\t\t\t},\n        // \t\t\t\t\tlimit: 5 - usernamesAlreadyFetched.length,\n        // \t\t\t\t},\n        // \t\t\t)\n        // \t\t\t.fetch()\n        // \t\t\t.map(({ username, name, status, nickname }) => ({\n        // \t\t\t\t_id: username,\n        // \t\t\t\tusername,\n        // \t\t\t\tnickname,\n        // \t\t\t\tname,\n        // \t\t\t\tstatus,\n        // \t\t\t\tsort: 1,\n        // \t\t\t}));\n        // \t\titems.push(...newItems);\n        // \t} else {\n        // \t\tconst user = Meteor.users.findOne(Meteor.userId(), { fields: { username: 1 } });\n        // \t\tconst newItems = Meteor.users.find({\n        // \t\t\t$and: [\n        // \t\t\t\t{\n        // \t\t\t\t\t...filterRegex && {\n        // \t\t\t\t\t\t$or: [\n        // \t\t\t\t\t\t\t{ username: filterRegex },\n        // \t\t\t\t\t\t\t{ name: filterRegex },\n        // \t\t\t\t\t\t],\n        // \t\t\t\t\t},\n        // \t\t\t\t},\n        // \t\t\t\t{\n        // \t\t\t\t\tusername: {\n        // \t\t\t\t\t\t$nin: [\n        // \t\t\t\t\t\t\tuser && user.username,\n        // \t\t\t\t\t\t\t...usernamesAlreadyFetched,\n        // \t\t\t\t\t\t],\n        // \t\t\t\t\t},\n        // \t\t\t\t},\n        // \t\t\t],\n        // \t\t},\n        // \t\t{\n        // \t\t\tfields: {\n        // \t\t\t\tusername: 1,\n        // \t\t\t\tnickname: 1,\n        // \t\t\t\tname: 1,\n        // \t\t\t\tstatus: 1,\n        // \t\t\t},\n        // \t\t\tlimit: 5 - usernamesAlreadyFetched.length,\n        // \t\t})\n        // \t\t\t.fetch()\n        // \t\t\t.map(({ username, name, status, nickname }) => ({\n        // \t\t\t\t_id: username,\n        // \t\t\t\tusername,\n        // \t\t\t\tnickname,\n        // \t\t\t\tname,\n        // \t\t\t\tstatus,\n        // \t\t\t\tsort: 1,\n        // \t\t\t}));\n        // \t\titems.push(...newItems);\n        // \t}\n        // }\n        // Get users from Server\n\n        if (items.length < suggestionsCount && filterText !== '') {\n          fetchUsersFromServer(filterText, items, rid, cb);\n        }\n\n        if (!filterRegex || filterRegex.test('all')) {\n          items.push({\n            _id: 'all',\n            username: 'all',\n            system: true,\n            name: t('Notify_all_in_this_room'),\n            sort: 4\n          });\n        }\n\n        if (!filterRegex || filterRegex.test('here')) {\n          items.push({\n            _id: 'here',\n            username: 'here',\n            system: true,\n            name: t('Notify_active_in_this_room'),\n            sort: 4\n          });\n        }\n\n        return items;\n      },\n      getValue: _id => _id\n    };\n  },\n\n  popupChannelConfig() {\n    return {\n      title: t('Channels'),\n      collection: Subscriptions,\n      trigger: '#',\n      suffix: ' ',\n      textFilterDelay: 500,\n      template: 'messagePopupChannel',\n      rid: this.rid,\n      getInput: this.getInput,\n      getFilter: (collection, filter, cb) => {\n        const {\n          rid\n        } = this;\n        const exp = new RegExp(filter, 'i');\n        const records = collection.find({\n          name: exp,\n          t: {\n            $in: ['c', 'p']\n          }\n        }, {\n          reactive: 1,\n          limit: 5,\n          sort: {\n            ls: -1\n          }\n        }).fetch();\n\n        if (records.length < 5 && filter && filter.trim() !== '') {\n          fetchRoomsFromServer(filter, records, rid, cb);\n        }\n\n        return records;\n      },\n      getValue: (_id, collection, records) => {\n        const record = _.findWhere(records, {\n          _id\n        });\n\n        return record && record.name;\n      }\n    };\n  },\n\n  popupSlashCommandsConfig() {\n    return {\n      title: t('Commands'),\n      collection: slashCommands.commands,\n      trigger: '/',\n      suffix: ' ',\n      triggerAnywhere: false,\n      template: 'messagePopupSlashCommand',\n      rid: this.rid,\n      getInput: this.getInput,\n      getFilter: (collection, filter) => {\n        const {\n          rid\n        } = this;\n        return Object.keys(collection).map(command => {\n          const item = collection[command];\n          return {\n            _id: command,\n            params: item.params ? TAPi18n.__(item.params) : '',\n            description: TAPi18n.__(item.description),\n            permission: item.permission\n          };\n        }).filter(command => {\n          const isMatch = command._id.indexOf(filter) > -1;\n\n          if (!isMatch) {\n            return false;\n          }\n\n          if (!command.permission) {\n            return true;\n          }\n\n          return hasAtLeastOnePermission(command.permission, rid);\n        }).sort((a, b) => a._id > b._id).slice(0, 11);\n      }\n    };\n  },\n\n  popupEmojiConfig() {\n    return {\n      title: t('Emoji'),\n      collection: emoji.list,\n      template: 'messagePopupEmoji',\n      trigger: ':',\n      prefix: '',\n      suffix: ' ',\n      rid: this.rid,\n      getInput: this.getInput,\n      getFilter: getEmojis,\n      getValue: emojiText => {\n        addEmojiToRecents(emojiText);\n        return emojiText;\n      }\n    };\n  },\n\n  popupReactionEmojiConfig() {\n    return {\n      title: t('Emoji'),\n      collection: emoji.list,\n      template: 'messagePopupEmoji',\n      trigger: '\\\\+:',\n      prefix: '+',\n      suffix: ' ',\n      rid: this.rid,\n      getInput: this.getInput,\n      getFilter: getEmojis,\n      getValue: emojiText => {\n        addEmojiToRecents(emojiText);\n        return emojiText;\n      }\n    };\n  }\n\n});","map":{"version":3,"sources":["app/ui-message/client/popup/messagePopupConfig.js"],"names":["_objectSpread","module","link","default","v","_","Blaze","Meteor","Mongo","Tracker","Session","Template","TAPi18n","escapeRegExp","Messages","Subscriptions","settings","hasAllPermission","hasAtLeastOnePermission","EmojiPicker","emoji","callWithErrorHandling","t","getUserPreference","slashCommands","customMessagePopups","reloadUsersFromRoomMessages","rid","template","user","userId","users","findOne","fields","username","usersFromRoomMessages","remove","uniqueMessageUsersControl","find","$ne","$exists","sort","ts","fetch","filter","u","notMapped","forEach","name","upsert","_id","status","nonreactive","get","fetchUsersFromServer","throttle","filterText","records","cb","usernames","map","mentions","length","nickname","avatarETag","outside","push","sortA","sortB","fetchRoomsFromServer","rooms","slice","room","emojiSort","recents","a","b","idA","idB","includes","indexOf","exactFinalTone","RegExp","colorBlind","seeColor","getEmojis","collection","key","packages","emojione","asciiList","regExp","getRecent","item","Object","keys","data","test","substring","addEmojiToRecents","pickerEl","document","querySelector","view","getView","_withTemplateInstanceFunc","templateInstance","addRecent","replace","messagePopupConfig","onCreated","Collection","autorun","helpers","getCustomConfig","instance","configGetter","popupUserConfig","suggestionsCount","title","getInput","textFilterDelay","trigger","suffix","getFilter","trim","filterRegex","items","$or","limit","suggestion","system","getValue","popupChannelConfig","exp","$in","reactive","ls","record","findWhere","popupSlashCommandsConfig","commands","triggerAnywhere","command","params","__","description","permission","isMatch","popupEmojiConfig","list","prefix","emojiText","popupReactionEmojiConfig"],"mappings":"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,qBAAT,CACZG,IADY;AAGXI,UAAAA,EAAE,EAAE;AAAEF,YAAAA,OAAO,EAAE;AAAX;AAHO,WAIPgB,UAAU,IAAI;AACjBwE,UAAAA,GAAG,EAAE,CAAC;AAAE9F,YAAAA,QAAQ,EAAE4F;AAAZ,WAAD,EAA4B;AAAE9E,YAAAA,IAAI,EAAE8E;AAAR,WAA5B;AADY,SAJP,GAQZ;AACCG,UAAAA,KAAK,EAAEzE,UAAU,GAAG,CAAH,GAAO8D,gBADzB;AAEC7E,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE,CAAC;AAAP;AAFP,SARY,EAaZC,KAbY,GAcZiB,GAdY,CAcPf,CAAD,IAAO;AACXA,UAAAA,CAAC,CAACqF,UAAF,GAAe,IAAf;AACA,iBAAOrF,CAAP;AACA,SAjBY,CAAd,CAL2C,CAwB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,YAAIkF,KAAK,CAACjE,MAAN,GAAewD,gBAAf,IAAmC9D,UAAU,KAAK,EAAtD,EAA0D;AACzDF,UAAAA,oBAAoB,CAACE,UAAD,EAAauE,KAAb,EAAoBpG,GAApB,EAAyB+B,EAAzB,CAApB;AACA;;AAED,YAAI,CAACoE,WAAD,IAAgBA,WAAW,CAAC7B,IAAZ,CAAiB,KAAjB,CAApB,EAA6C;AAC5C8B,UAAAA,KAAK,CAAC7D,IAAN,CAAW;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","sourcesContent":["import _ from 'underscore';\nimport { Blaze } from 'meteor/blaze';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport { Session } from 'meteor/session';\nimport { Template } from 'meteor/templating';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { Messages, Subscriptions } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { hasAllPermission, hasAtLeastOnePermission } from '../../../authorization/client';\nimport { EmojiPicker, emoji } from '../../../emoji';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { t, getUserPreference, slashCommands } from '../../../utils/client';\nimport { customMessagePopups } from './customMessagePopups';\nimport './messagePopupConfig.html';\nimport './messagePopupSlashCommand.html';\nimport './messagePopupUser.html';\n\nconst reloadUsersFromRoomMessages = (rid, template) => {\n\tconst user = Meteor.userId() && Meteor.users.findOne(Meteor.userId(), { fields: { username: 1 } });\n\tif (!rid || !user) {\n\t\treturn;\n\t}\n\n\ttemplate.usersFromRoomMessages.remove({});\n\n\tconst uniqueMessageUsersControl = {};\n\n\tMessages.find(\n\t\t{\n\t\t\trid,\n\t\t\t'u.username': { $ne: user.username },\n\t\t\t't': { $exists: false },\n\t\t},\n\t\t{\n\t\t\tfields: {\n\t\t\t\t'u.username': 1,\n\t\t\t\t'u.name': 1,\n\t\t\t\t'ts': 1,\n\t\t\t},\n\t\t\tsort: { ts: -1 },\n\t\t},\n\t)\n\t\t.fetch()\n\t\t.filter(({ u: { username } }) => {\n\t\t\tconst notMapped = !uniqueMessageUsersControl[username];\n\t\t\tuniqueMessageUsersControl[username] = true;\n\t\t\treturn notMapped;\n\t\t})\n\t\t.forEach(({ u: { username, name }, ts }) =>\n\t\t\ttemplate.usersFromRoomMessages.upsert(username, {\n\t\t\t\t_id: username,\n\t\t\t\tusername,\n\t\t\t\tname,\n\t\t\t\tstatus: Tracker.nonreactive(() => Session.get(`user_${username}_status`) || 'offline'),\n\t\t\t\tts,\n\t\t\t}),\n\t\t);\n};\n\nconst fetchUsersFromServer = _.throttle(async (filterText, records, rid, cb) => {\n\tconst usernames = records.map(({ username }) => username);\n\n\tconst { users } = await callWithErrorHandling('spotlight', filterText, usernames, { users: true, mentions: true }, rid);\n\n\tif (!users || users.length <= 0) {\n\t\treturn;\n\t}\n\n\tusers\n\t\t// .slice(0, 5)\n\t\t.forEach(({ username, nickname, name, status, avatarETag, outside }) => {\n\t\t\t// if (records.length < 5) {\n\t\t\trecords.push({\n\t\t\t\t_id: username,\n\t\t\t\tusername,\n\t\t\t\tnickname,\n\t\t\t\tname,\n\t\t\t\tstatus,\n\t\t\t\tavatarETag,\n\t\t\t\toutside,\n\t\t\t\tsort: 3,\n\t\t\t});\n\t\t\t// }\n\t\t});\n\n\trecords.sort(({ sort: sortA }, { sort: sortB }) => sortA - sortB);\n\n\tcb && cb(records);\n}, 1000);\n\nconst fetchRoomsFromServer = _.throttle(async (filterText, records, rid, cb) => {\n\tif (!hasAllPermission('view-outside-room')) {\n\t\tcb && cb([]);\n\t\treturn;\n\t}\n\n\tconst { rooms } = await callWithErrorHandling('spotlight', filterText, null, { rooms: true, mentions: true }, rid);\n\n\tif (!rooms || rooms.length <= 0) {\n\t\treturn;\n\t}\n\n\trooms.slice(0, 5).forEach((room) => {\n\t\tif (records.length < 5) {\n\t\t\trecords.push(room);\n\t\t}\n\t});\n\n\tcb && cb(records);\n}, 1000);\n\nconst emojiSort = (recents) => (a, b) => {\n\tlet idA = a._id;\n\tlet idB = a._id;\n\n\tif (recents.includes(a._id)) {\n\t\tidA = recents.indexOf(a._id) + idA;\n\t}\n\tif (recents.includes(b._id)) {\n\t\tidB = recents.indexOf(b._id) + idB;\n\t}\n\n\tif (idA < idB) {\n\t\treturn -1;\n\t}\n\n\tif (idA > idB) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n};\nconst exactFinalTone = new RegExp('^tone[1-5]:*$');\nconst colorBlind = new RegExp('tone[1-5]:*$');\nconst seeColor = new RegExp('_t(?:o|$)(?:n|$)(?:e|$)(?:[1-5]|$)(?::|$)$');\nconst getEmojis = (collection, filter) => {\n\tconst key = `:${filter}`;\n\n\tif (!getUserPreference(Meteor.userId(), 'useEmojis')) {\n\t\treturn [];\n\t}\n\n\tif (!emoji.packages.emojione || emoji.packages.emojione.asciiList[key]) {\n\t\treturn [];\n\t}\n\n\tconst regExp = new RegExp(escapeRegExp(filter), 'i');\n\tconst recents = EmojiPicker.getRecent().map((item) => `:${item}:`);\n\n\treturn Object.keys(collection)\n\t\t.map((_id) => {\n\t\t\tconst data = collection[key];\n\t\t\treturn { _id, data };\n\t\t})\n\t\t.filter(\n\t\t\t({ _id }) => regExp.test(_id) && (exactFinalTone.test(_id.substring(key.length)) || seeColor.test(key) || !colorBlind.test(_id)),\n\t\t)\n\t\t.sort(emojiSort(recents))\n\t\t.slice(0, 10);\n};\n\nconst addEmojiToRecents = (emoji) => {\n\tconst pickerEl = document.querySelector('.emoji-picker');\n\tif (!pickerEl) {\n\t\treturn;\n\t}\n\n\tconst view = Blaze.getView(pickerEl);\n\tif (!view) {\n\t\treturn;\n\t}\n\n\tTemplate._withTemplateInstanceFunc(view.templateInstance, () => {\n\t\tEmojiPicker.addRecent(emoji.replace(/:/g, ''));\n\t});\n};\n\nTemplate.messagePopupConfig.onCreated(function () {\n\tthis.usersFromRoomMessages = new Mongo.Collection(null);\n\n\tthis.autorun(() => {\n\t\tconst { rid } = this.data;\n\t\treloadUsersFromRoomMessages(rid, this);\n\t});\n});\n\nTemplate.messagePopupConfig.helpers({\n\tcustomMessagePopups() {\n\t\treturn customMessagePopups.get();\n\t},\n\n\tgetCustomConfig() {\n\t\tconst template = Template.instance();\n\t\treturn this.configGetter(template);\n\t},\n\n\tpopupUserConfig() {\n\t\tconst template = Template.instance();\n\t\tconst suggestionsCount = settings.get('Number_of_users_autocomplete_suggestions');\n\n\t\treturn {\n\t\t\ttitle: t('People'),\n\t\t\tcollection: template.usersFromRoomMessages,\n\t\t\ttemplate: 'messagePopupUser',\n\t\t\trid: this.rid,\n\t\t\tgetInput: this.getInput,\n\t\t\ttextFilterDelay: 500,\n\t\t\ttrigger: '@',\n\t\t\tsuffix: ' ',\n\t\t\tgetFilter: (collection, filter = '', cb) => {\n\t\t\t\tconst { rid } = this;\n\t\t\t\tconst filterText = filter.trim();\n\t\t\t\tconst filterRegex = filterText !== '' && new RegExp(`${escapeRegExp(filterText)}`, 'i');\n\n\t\t\t\tconst items = template.usersFromRoomMessages\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tts: { $exists: true },\n\t\t\t\t\t\t\t...(filterText && {\n\t\t\t\t\t\t\t\t$or: [{ username: filterRegex }, { name: filterRegex }],\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlimit: filterText ? 2 : suggestionsCount,\n\t\t\t\t\t\t\tsort: { ts: -1 },\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch()\n\t\t\t\t\t.map((u) => {\n\t\t\t\t\t\tu.suggestion = true;\n\t\t\t\t\t\treturn u;\n\t\t\t\t\t});\n\n\t\t\t\t// // If needed, add to list the online users\n\t\t\t\t// if (items.length < 5 && filterRegex) {\n\t\t\t\t// \tconst usernamesAlreadyFetched = items.map(({ username }) => username);\n\t\t\t\t// \tif (!hasAllPermission('view-outside-room')) {\n\t\t\t\t// \t\tconst usernamesFromDMs = Subscriptions\n\t\t\t\t// \t\t\t.find(\n\t\t\t\t// \t\t\t\t{\n\t\t\t\t// \t\t\t\t\tt: 'd',\n\t\t\t\t// \t\t\t\t\t$and: [\n\t\t\t\t// \t\t\t\t\t\t{\n\t\t\t\t// \t\t\t\t\t\t\t...filterRegex && {\n\t\t\t\t// \t\t\t\t\t\t\t\t$or: [\n\t\t\t\t// \t\t\t\t\t\t\t\t\t{ name: filterRegex },\n\t\t\t\t// \t\t\t\t\t\t\t\t\t{ fname: filterRegex },\n\t\t\t\t// \t\t\t\t\t\t\t\t],\n\t\t\t\t// \t\t\t\t\t\t\t},\n\t\t\t\t// \t\t\t\t\t\t},\n\t\t\t\t// \t\t\t\t\t\t{\n\t\t\t\t// \t\t\t\t\t\t\tname: { $nin: usernamesAlreadyFetched },\n\t\t\t\t// \t\t\t\t\t\t},\n\t\t\t\t// \t\t\t\t\t],\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t\t{\n\t\t\t\t// \t\t\t\t\tfields: { name: 1 },\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t)\n\t\t\t\t// \t\t\t.map(({ name }) => name);\n\t\t\t\t// \t\tconst newItems = Users\n\t\t\t\t// \t\t\t.find(\n\t\t\t\t// \t\t\t\t{\n\t\t\t\t// \t\t\t\t\tusername: {\n\t\t\t\t// \t\t\t\t\t\t$in: usernamesFromDMs,\n\t\t\t\t// \t\t\t\t\t},\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t\t{\n\t\t\t\t// \t\t\t\t\tfields: {\n\t\t\t\t// \t\t\t\t\t\tusername: 1,\n\t\t\t\t// \t\t\t\t\t\tnickname: 1,\n\t\t\t\t// \t\t\t\t\t\tname: 1,\n\t\t\t\t// \t\t\t\t\t\tstatus: 1,\n\t\t\t\t// \t\t\t\t\t},\n\t\t\t\t// \t\t\t\t\tlimit: 5 - usernamesAlreadyFetched.length,\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t)\n\t\t\t\t// \t\t\t.fetch()\n\t\t\t\t// \t\t\t.map(({ username, name, status, nickname }) => ({\n\t\t\t\t// \t\t\t\t_id: username,\n\t\t\t\t// \t\t\t\tusername,\n\t\t\t\t// \t\t\t\tnickname,\n\t\t\t\t// \t\t\t\tname,\n\t\t\t\t// \t\t\t\tstatus,\n\t\t\t\t// \t\t\t\tsort: 1,\n\t\t\t\t// \t\t\t}));\n\n\t\t\t\t// \t\titems.push(...newItems);\n\t\t\t\t// \t} else {\n\t\t\t\t// \t\tconst user = Meteor.users.findOne(Meteor.userId(), { fields: { username: 1 } });\n\t\t\t\t// \t\tconst newItems = Meteor.users.find({\n\t\t\t\t// \t\t\t$and: [\n\t\t\t\t// \t\t\t\t{\n\t\t\t\t// \t\t\t\t\t...filterRegex && {\n\t\t\t\t// \t\t\t\t\t\t$or: [\n\t\t\t\t// \t\t\t\t\t\t\t{ username: filterRegex },\n\t\t\t\t// \t\t\t\t\t\t\t{ name: filterRegex },\n\t\t\t\t// \t\t\t\t\t\t],\n\t\t\t\t// \t\t\t\t\t},\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t\t{\n\t\t\t\t// \t\t\t\t\tusername: {\n\t\t\t\t// \t\t\t\t\t\t$nin: [\n\t\t\t\t// \t\t\t\t\t\t\tuser && user.username,\n\t\t\t\t// \t\t\t\t\t\t\t...usernamesAlreadyFetched,\n\t\t\t\t// \t\t\t\t\t\t],\n\t\t\t\t// \t\t\t\t\t},\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t],\n\t\t\t\t// \t\t},\n\t\t\t\t// \t\t{\n\t\t\t\t// \t\t\tfields: {\n\t\t\t\t// \t\t\t\tusername: 1,\n\t\t\t\t// \t\t\t\tnickname: 1,\n\t\t\t\t// \t\t\t\tname: 1,\n\t\t\t\t// \t\t\t\tstatus: 1,\n\t\t\t\t// \t\t\t},\n\t\t\t\t// \t\t\tlimit: 5 - usernamesAlreadyFetched.length,\n\t\t\t\t// \t\t})\n\t\t\t\t// \t\t\t.fetch()\n\t\t\t\t// \t\t\t.map(({ username, name, status, nickname }) => ({\n\t\t\t\t// \t\t\t\t_id: username,\n\t\t\t\t// \t\t\t\tusername,\n\t\t\t\t// \t\t\t\tnickname,\n\t\t\t\t// \t\t\t\tname,\n\t\t\t\t// \t\t\t\tstatus,\n\t\t\t\t// \t\t\t\tsort: 1,\n\t\t\t\t// \t\t\t}));\n\n\t\t\t\t// \t\titems.push(...newItems);\n\t\t\t\t// \t}\n\t\t\t\t// }\n\n\t\t\t\t// Get users from Server\n\t\t\t\tif (items.length < suggestionsCount && filterText !== '') {\n\t\t\t\t\tfetchUsersFromServer(filterText, items, rid, cb);\n\t\t\t\t}\n\n\t\t\t\tif (!filterRegex || filterRegex.test('all')) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\t_id: 'all',\n\t\t\t\t\t\tusername: 'all',\n\t\t\t\t\t\tsystem: true,\n\t\t\t\t\t\tname: t('Notify_all_in_this_room'),\n\t\t\t\t\t\tsort: 4,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (!filterRegex || filterRegex.test('here')) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\t_id: 'here',\n\t\t\t\t\t\tusername: 'here',\n\t\t\t\t\t\tsystem: true,\n\t\t\t\t\t\tname: t('Notify_active_in_this_room'),\n\t\t\t\t\t\tsort: 4,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn items;\n\t\t\t},\n\t\t\tgetValue: (_id) => _id,\n\t\t};\n\t},\n\tpopupChannelConfig() {\n\t\treturn {\n\t\t\ttitle: t('Channels'),\n\t\t\tcollection: Subscriptions,\n\t\t\ttrigger: '#',\n\t\t\tsuffix: ' ',\n\t\t\ttextFilterDelay: 500,\n\t\t\ttemplate: 'messagePopupChannel',\n\t\t\trid: this.rid,\n\t\t\tgetInput: this.getInput,\n\t\t\tgetFilter: (collection, filter, cb) => {\n\t\t\t\tconst { rid } = this;\n\t\t\t\tconst exp = new RegExp(filter, 'i');\n\t\t\t\tconst records = collection\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: exp,\n\t\t\t\t\t\t\tt: {\n\t\t\t\t\t\t\t\t$in: ['c', 'p'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treactive: 1,\n\t\t\t\t\t\t\tlimit: 5,\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tls: -1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch();\n\n\t\t\t\tif (records.length < 5 && filter && filter.trim() !== '') {\n\t\t\t\t\tfetchRoomsFromServer(filter, records, rid, cb);\n\t\t\t\t}\n\t\t\t\treturn records;\n\t\t\t},\n\t\t\tgetValue: (_id, collection, records) => {\n\t\t\t\tconst record = _.findWhere(records, {\n\t\t\t\t\t_id,\n\t\t\t\t});\n\t\t\t\treturn record && record.name;\n\t\t\t},\n\t\t};\n\t},\n\tpopupSlashCommandsConfig() {\n\t\treturn {\n\t\t\ttitle: t('Commands'),\n\t\t\tcollection: slashCommands.commands,\n\t\t\ttrigger: '/',\n\t\t\tsuffix: ' ',\n\t\t\ttriggerAnywhere: false,\n\t\t\ttemplate: 'messagePopupSlashCommand',\n\t\t\trid: this.rid,\n\t\t\tgetInput: this.getInput,\n\t\t\tgetFilter: (collection, filter) => {\n\t\t\t\tconst { rid } = this;\n\t\t\t\treturn Object.keys(collection)\n\t\t\t\t\t.map((command) => {\n\t\t\t\t\t\tconst item = collection[command];\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t_id: command,\n\t\t\t\t\t\t\tparams: item.params ? TAPi18n.__(item.params) : '',\n\t\t\t\t\t\t\tdescription: TAPi18n.__(item.description),\n\t\t\t\t\t\t\tpermission: item.permission,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t\t.filter((command) => {\n\t\t\t\t\t\tconst isMatch = command._id.indexOf(filter) > -1;\n\n\t\t\t\t\t\tif (!isMatch) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!command.permission) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn hasAtLeastOnePermission(command.permission, rid);\n\t\t\t\t\t})\n\t\t\t\t\t.sort((a, b) => a._id > b._id)\n\t\t\t\t\t.slice(0, 11);\n\t\t\t},\n\t\t};\n\t},\n\tpopupEmojiConfig() {\n\t\treturn {\n\t\t\ttitle: t('Emoji'),\n\t\t\tcollection: emoji.list,\n\t\t\ttemplate: 'messagePopupEmoji',\n\t\t\ttrigger: ':',\n\t\t\tprefix: '',\n\t\t\tsuffix: ' ',\n\t\t\trid: this.rid,\n\t\t\tgetInput: this.getInput,\n\t\t\tgetFilter: getEmojis,\n\t\t\tgetValue: (emojiText) => {\n\t\t\t\taddEmojiToRecents(emojiText);\n\t\t\t\treturn emojiText;\n\t\t\t},\n\t\t};\n\t},\n\tpopupReactionEmojiConfig() {\n\t\treturn {\n\t\t\ttitle: t('Emoji'),\n\t\t\tcollection: emoji.list,\n\t\t\ttemplate: 'messagePopupEmoji',\n\t\t\ttrigger: '\\\\+:',\n\t\t\tprefix: '+',\n\t\t\tsuffix: ' ',\n\t\t\trid: this.rid,\n\t\t\tgetInput: this.getInput,\n\t\t\tgetFilter: getEmojis,\n\t\t\tgetValue: (emojiText) => {\n\t\t\t\taddEmojiToRecents(emojiText);\n\t\t\t\treturn emojiText;\n\t\t\t},\n\t\t};\n\t},\n});\n"]},"sourceType":"module","hash":"e76f2adff6bbe7889b6fab64da1fae6e243ea8d4"}
