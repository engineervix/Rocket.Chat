{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/emailInbox/EmailInboxForm.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/emailInbox/EmailInboxForm.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/emailInbox/EmailInboxForm.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/admin/emailInbox/EmailInboxForm.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/emailInbox/EmailInboxForm.js"}},"code":"let Accordion, Button, ButtonGroup, TextInput, TextAreaInput, Field, ToggleSwitch, FieldGroup, Box, Margins;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Accordion(v) {\n    Accordion = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n\n  TextInput(v) {\n    TextInput = v;\n  },\n\n  TextAreaInput(v) {\n    TextAreaInput = v;\n  },\n\n  Field(v) {\n    Field = v;\n  },\n\n  ToggleSwitch(v) {\n    ToggleSwitch = v;\n  },\n\n  FieldGroup(v) {\n    FieldGroup = v;\n  },\n\n  Box(v) {\n    Box = v;\n  },\n\n  Margins(v) {\n    Margins = v;\n  }\n\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 1);\nlet React, useCallback, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 2);\nlet validateEmail;\nmodule.link(\"../../../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n\n}, 3);\nlet AutoCompleteDepartment;\nmodule.link(\"../../../components/AutoCompleteDepartment\", {\n  default(v) {\n    AutoCompleteDepartment = v;\n  }\n\n}, 4);\nlet GenericModal;\nmodule.link(\"../../../components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n\n}, 5);\nlet Page;\nmodule.link(\"../../../components/Page\", {\n  default(v) {\n    Page = v;\n  }\n\n}, 6);\nlet useSetModal;\nmodule.link(\"../../../contexts/ModalContext\", {\n  useSetModal(v) {\n    useSetModal = v;\n  }\n\n}, 7);\nlet useRoute;\nmodule.link(\"../../../contexts/RouterContext\", {\n  useRoute(v) {\n    useRoute = v;\n  }\n\n}, 8);\nlet useEndpoint;\nmodule.link(\"../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 9);\nlet useToastMessageDispatch;\nmodule.link(\"../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 10);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 11);\nlet useComponentDidUpdate;\nmodule.link(\"../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n\n}, 12);\nlet useForm;\nmodule.link(\"../../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 13);\nconst initialValues = {\n  active: true,\n  name: '',\n  email: '',\n  description: '',\n  senderInfo: '',\n  department: '',\n  // SMTP\n  smtpServer: '',\n  smtpPort: 587,\n  smtpUsername: '',\n  smtpPassword: '',\n  smtpSecure: false,\n  // IMAP\n  imapServer: '',\n  imapPort: 993,\n  imapUsername: '',\n  imapPassword: '',\n  imapSecure: false\n};\n\nconst getInitialValues = data => {\n  var _smtp$server, _smtp$port, _smtp$username, _smtp$password, _smtp$secure, _imap$server, _imap$port, _imap$username, _imap$password, _imap$secure;\n\n  if (!data) {\n    return initialValues;\n  }\n\n  const {\n    active,\n    name,\n    email,\n    description,\n    senderInfo,\n    department,\n    smtp,\n    imap\n  } = data;\n  return {\n    active: active !== null && active !== void 0 ? active : true,\n    name: name !== null && name !== void 0 ? name : '',\n    email: email !== null && email !== void 0 ? email : '',\n    description: description !== null && description !== void 0 ? description : '',\n    senderInfo: senderInfo !== null && senderInfo !== void 0 ? senderInfo : '',\n    department: department !== null && department !== void 0 ? department : '',\n    // SMTP\n    smtpServer: (_smtp$server = smtp.server) !== null && _smtp$server !== void 0 ? _smtp$server : '',\n    smtpPort: (_smtp$port = smtp.port) !== null && _smtp$port !== void 0 ? _smtp$port : 587,\n    smtpUsername: (_smtp$username = smtp.username) !== null && _smtp$username !== void 0 ? _smtp$username : '',\n    smtpPassword: (_smtp$password = smtp.password) !== null && _smtp$password !== void 0 ? _smtp$password : '',\n    smtpSecure: (_smtp$secure = smtp.secure) !== null && _smtp$secure !== void 0 ? _smtp$secure : false,\n    // IMAP\n    imapServer: (_imap$server = imap.server) !== null && _imap$server !== void 0 ? _imap$server : '',\n    imapPort: (_imap$port = imap.port) !== null && _imap$port !== void 0 ? _imap$port : 993,\n    imapUsername: (_imap$username = imap.username) !== null && _imap$username !== void 0 ? _imap$username : '',\n    imapPassword: (_imap$password = imap.password) !== null && _imap$password !== void 0 ? _imap$password : '',\n    imapSecure: (_imap$secure = imap.secure) !== null && _imap$secure !== void 0 ? _imap$secure : false\n  };\n};\n\nfunction EmailInboxForm(_ref) {\n  let {\n    id,\n    data\n  } = _ref;\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const setModal = useSetModal();\n  const [emailError, setEmailError] = useState();\n  const {\n    values,\n    handlers,\n    hasUnsavedChanges\n  } = useForm(getInitialValues(data));\n  const {\n    handleActive,\n    handleName,\n    handleEmail,\n    handleDescription,\n    handleSenderInfo,\n    handleDepartment,\n    // SMTP\n    handleSmtpServer,\n    handleSmtpPort,\n    handleSmtpUsername,\n    handleSmtpPassword,\n    handleSmtpSecure,\n    // IMAP\n    handleImapServer,\n    handleImapPort,\n    handleImapUsername,\n    handleImapPassword,\n    handleImapSecure\n  } = handlers;\n  const {\n    active,\n    name,\n    email,\n    description,\n    senderInfo,\n    department,\n    // SMTP\n    smtpServer,\n    smtpPort,\n    smtpUsername,\n    smtpPassword,\n    smtpSecure,\n    // IMAP\n    imapServer,\n    imapPort,\n    imapUsername,\n    imapPassword,\n    imapSecure\n  } = values;\n  const router = useRoute('admin-email-inboxes');\n  const close = useCallback(() => router.push({}), [router]);\n  const saveEmailInbox = useEndpoint('POST', 'email-inbox');\n  const deleteAction = useEndpoint('DELETE', \"email-inbox/\".concat(id));\n  const emailAlreadyExistsAction = useEndpoint('GET', \"email-inbox.search?email=\".concat(email));\n  useComponentDidUpdate(() => {\n    setEmailError(!validateEmail(email) ? t('Validate_email_address') : null);\n  }, [t, email]);\n  useComponentDidUpdate(() => {\n    !email && setEmailError(null);\n  }, [email]);\n  const handleRemoveClick = useMutableCallback(async () => {\n    const result = await deleteAction();\n\n    if (result.success === true) {\n      close();\n    }\n  });\n  const handleDelete = useMutableCallback(e => {\n    e.stopPropagation();\n\n    const onDeleteManager = async () => {\n      try {\n        await handleRemoveClick();\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Removed')\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n\n      setModal();\n    };\n\n    setModal( /*#__PURE__*/React.createElement(GenericModal, {\n      variant: \"danger\",\n      onConfirm: onDeleteManager,\n      onCancel: () => setModal(),\n      confirmText: t('Delete')\n    }, t('You_will_not_be_able_to_recover_email_inbox')));\n  });\n  const handleSave = useMutableCallback(async () => {\n    const smtp = {\n      server: smtpServer,\n      port: parseInt(smtpPort),\n      username: smtpUsername,\n      password: smtpPassword,\n      secure: smtpSecure\n    };\n    const imap = {\n      server: imapServer,\n      port: parseInt(imapPort),\n      username: imapUsername,\n      password: imapPassword,\n      secure: imapSecure\n    };\n    const departmentValue = department.value;\n    const payload = {\n      active,\n      name,\n      email,\n      description,\n      senderInfo,\n      department: departmentValue,\n      smtp,\n      imap\n    };\n\n    if (id) {\n      payload._id = id;\n    }\n\n    try {\n      await saveEmailInbox(payload);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Saved')\n      });\n      close();\n    } catch (e) {\n      dispatchToastMessage({\n        type: 'error',\n        message: e\n      });\n    }\n  });\n  const checkEmailExists = useMutableCallback(async () => {\n    if (!email && !validateEmail(email)) {\n      return;\n    }\n\n    const {\n      emailInbox\n    } = await emailAlreadyExistsAction();\n\n    if (!emailInbox || id && emailInbox._id === id) {\n      return;\n    }\n\n    setEmailError(t('Email_already_exists'));\n  });\n  const canSave = hasUnsavedChanges && name && email && validateEmail(email) && !emailError && smtpServer && smtpPort && smtpUsername && smtpPassword && imapServer && imapPort && imapUsername && imapPassword;\n  return /*#__PURE__*/React.createElement(Page.ScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"x600\",\n    w: \"full\",\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(Accordion, null, /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: true,\n    title: t('Inbox_Info')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    w: \"full\"\n  }, t('Active'), /*#__PURE__*/React.createElement(ToggleSwitch, {\n    checked: active,\n    onChange: handleActive\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Name'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    value: name,\n    onChange: handleName\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Email'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    onBlur: checkEmailExists,\n    error: emailError,\n    value: email,\n    onChange: handleEmail\n  })), /*#__PURE__*/React.createElement(Field.Error, null, t(emailError))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Description')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextAreaInput, {\n    value: description,\n    rows: 4,\n    onChange: handleDescription\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Sender_Info')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    value: senderInfo,\n    onChange: handleSenderInfo,\n    placeholder: t('Optional')\n  })), /*#__PURE__*/React.createElement(Field.Hint, null, t('Will_Appear_In_From'))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Department')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(AutoCompleteDepartment, {\n    value: department,\n    onChange: handleDepartment\n  })), /*#__PURE__*/React.createElement(Field.Hint, null, t('Only_Members_Selected_Department_Can_View_Channel'))))), /*#__PURE__*/React.createElement(Accordion.Item, {\n    title: t('Configure_Outgoing_Mail_SMTP')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Server'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    value: smtpServer,\n    onChange: handleSmtpServer\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Port'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    value: smtpPort,\n    onChange: handleSmtpPort\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Username'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    value: smtpUsername,\n    onChange: handleSmtpUsername\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Password'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"password\",\n    value: smtpPassword,\n    onChange: handleSmtpPassword\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    w: \"full\"\n  }, t('Connect_SSL_TLS'), /*#__PURE__*/React.createElement(ToggleSwitch, {\n    checked: smtpSecure,\n    onChange: handleSmtpSecure\n  }))))), /*#__PURE__*/React.createElement(Accordion.Item, {\n    title: t('Configure_Incoming_Mail_IMAP')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Server'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    value: imapServer,\n    onChange: handleImapServer\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Port'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    value: imapPort,\n    onChange: handleImapPort\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Username'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    value: imapUsername,\n    onChange: handleImapUsername\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Password'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"password\",\n    value: imapPassword,\n    onChange: handleImapPassword\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    w: \"full\"\n  }, t('Connect_SSL_TLS'), /*#__PURE__*/React.createElement(ToggleSwitch, {\n    checked: imapSecure,\n    onChange: handleImapSecure\n  }))))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true,\n    w: \"full\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: close\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    disabled: !canSave,\n    primary: true,\n    onClick: handleSave\n  }, t('Save')))), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Margins, {\n    blockStart: \"x16\"\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true,\n    w: \"full\"\n  }, id && /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    danger: true,\n    onClick: handleDelete\n  }, t('Delete')))))))));\n}\n\nmodule.exportDefault(EmailInboxForm);","map":{"version":3,"sources":["client/views/admin/emailInbox/EmailInboxForm.js"],"names":["Accordion","Button","ButtonGroup","TextInput","TextAreaInput","Field","ToggleSwitch","FieldGroup","Box","Margins","module","link","v","useMutableCallback","React","useCallback","useState","default","validateEmail","AutoCompleteDepartment","GenericModal","Page","useSetModal","useRoute","useEndpoint","useToastMessageDispatch","useTranslation","useComponentDidUpdate","useForm","initialValues","active","name","email","description","senderInfo","department","smtpServer","smtpPort","smtpUsername","smtpPassword","smtpSecure","imapServer","imapPort","imapUsername","imapPassword","imapSecure","getInitialValues","data","smtp","imap","server","port","username","password","secure","EmailInboxForm","id","t","dispatchToastMessage","setModal","emailError","setEmailError","values","handlers","hasUnsavedChanges","handleActive","handleName","handleEmail","handleDescription","handleSenderInfo","handleDepartment","handleSmtpServer","handleSmtpPort","handleSmtpUsername","handleSmtpPassword","handleSmtpSecure","handleImapServer","handleImapPort","handleImapUsername","handleImapPassword","handleImapSecure","router","close","push","saveEmailInbox","deleteAction","emailAlreadyExistsAction","handleRemoveClick","result","success","handleDelete","e","stopPropagation","onDeleteManager","type","message","error","handleSave","parseInt","departmentValue","value","payload","_id","checkEmailExists","emailInbox","canSave","exportDefault"],"mappings":"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","sourcesContent":["import {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { useCallback, useState } from 'react';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport Page from '../../../components/Page';\nimport { useSetModal } from '../../../contexts/ModalContext';\nimport { useRoute } from '../../../contexts/RouterContext';\nimport { useEndpoint } from '../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { useForm } from '../../../hooks/useForm';\n\nconst initialValues = {\n\tactive: true,\n\tname: '',\n\temail: '',\n\tdescription: '',\n\tsenderInfo: '',\n\tdepartment: '',\n\t// SMTP\n\tsmtpServer: '',\n\tsmtpPort: 587,\n\tsmtpUsername: '',\n\tsmtpPassword: '',\n\tsmtpSecure: false,\n\t// IMAP\n\timapServer: '',\n\timapPort: 993,\n\timapUsername: '',\n\timapPassword: '',\n\timapSecure: false,\n};\n\nconst getInitialValues = (data) => {\n\tif (!data) {\n\t\treturn initialValues;\n\t}\n\n\tconst { active, name, email, description, senderInfo, department, smtp, imap } = data;\n\n\treturn {\n\t\tactive: active ?? true,\n\t\tname: name ?? '',\n\t\temail: email ?? '',\n\t\tdescription: description ?? '',\n\t\tsenderInfo: senderInfo ?? '',\n\t\tdepartment: department ?? '',\n\t\t// SMTP\n\t\tsmtpServer: smtp.server ?? '',\n\t\tsmtpPort: smtp.port ?? 587,\n\t\tsmtpUsername: smtp.username ?? '',\n\t\tsmtpPassword: smtp.password ?? '',\n\t\tsmtpSecure: smtp.secure ?? false,\n\t\t// IMAP\n\t\timapServer: imap.server ?? '',\n\t\timapPort: imap.port ?? 993,\n\t\timapUsername: imap.username ?? '',\n\t\timapPassword: imap.password ?? '',\n\t\timapSecure: imap.secure ?? false,\n\t};\n};\n\nfunction EmailInboxForm({ id, data }) {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst [emailError, setEmailError] = useState();\n\tconst { values, handlers, hasUnsavedChanges } = useForm(getInitialValues(data));\n\n\tconst {\n\t\thandleActive,\n\t\thandleName,\n\t\thandleEmail,\n\t\thandleDescription,\n\t\thandleSenderInfo,\n\t\thandleDepartment,\n\t\t// SMTP\n\t\thandleSmtpServer,\n\t\thandleSmtpPort,\n\t\thandleSmtpUsername,\n\t\thandleSmtpPassword,\n\t\thandleSmtpSecure,\n\t\t// IMAP\n\t\thandleImapServer,\n\t\thandleImapPort,\n\t\thandleImapUsername,\n\t\thandleImapPassword,\n\t\thandleImapSecure,\n\t} = handlers;\n\tconst {\n\t\tactive,\n\t\tname,\n\t\temail,\n\t\tdescription,\n\t\tsenderInfo,\n\t\tdepartment,\n\t\t// SMTP\n\t\tsmtpServer,\n\t\tsmtpPort,\n\t\tsmtpUsername,\n\t\tsmtpPassword,\n\t\tsmtpSecure,\n\t\t// IMAP\n\t\timapServer,\n\t\timapPort,\n\t\timapUsername,\n\t\timapPassword,\n\t\timapSecure,\n\t} = values;\n\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst close = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', 'email-inbox');\n\tconst deleteAction = useEndpoint('DELETE', `email-inbox/${id}`);\n\tconst emailAlreadyExistsAction = useEndpoint('GET', `email-inbox.search?email=${email}`);\n\n\tuseComponentDidUpdate(() => {\n\t\tsetEmailError(!validateEmail(email) ? t('Validate_email_address') : null);\n\t}, [t, email]);\n\tuseComponentDidUpdate(() => {\n\t\t!email && setEmailError(null);\n\t}, [email]);\n\n\tconst handleRemoveClick = useMutableCallback(async () => {\n\t\tconst result = await deleteAction();\n\t\tif (result.success === true) {\n\t\t\tclose();\n\t\t}\n\t});\n\n\tconst handleDelete = useMutableCallback((e) => {\n\t\te.stopPropagation();\n\t\tconst onDeleteManager = async () => {\n\t\t\ttry {\n\t\t\t\tawait handleRemoveClick();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Removed') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\tsetModal();\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={onDeleteManager} onCancel={() => setModal()} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(async () => {\n\t\tconst smtp = {\n\t\t\tserver: smtpServer,\n\t\t\tport: parseInt(smtpPort),\n\t\t\tusername: smtpUsername,\n\t\t\tpassword: smtpPassword,\n\t\t\tsecure: smtpSecure,\n\t\t};\n\t\tconst imap = {\n\t\t\tserver: imapServer,\n\t\t\tport: parseInt(imapPort),\n\t\t\tusername: imapUsername,\n\t\t\tpassword: imapPassword,\n\t\t\tsecure: imapSecure,\n\t\t};\n\t\tconst departmentValue = department.value;\n\t\tconst payload = {\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment: departmentValue,\n\t\t\tsmtp,\n\t\t\timap,\n\t\t};\n\t\tif (id) {\n\t\t\tpayload._id = id;\n\t\t}\n\t\ttry {\n\t\t\tawait saveEmailInbox(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tclose();\n\t\t} catch (e) {\n\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t}\n\t});\n\n\tconst checkEmailExists = useMutableCallback(async () => {\n\t\tif (!email && !validateEmail(email)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { emailInbox } = await emailAlreadyExistsAction();\n\n\t\tif (!emailInbox || (id && emailInbox._id === id)) {\n\t\t\treturn;\n\t\t}\n\t\tsetEmailError(t('Email_already_exists'));\n\t});\n\tconst canSave =\n\t\thasUnsavedChanges &&\n\t\tname &&\n\t\temail &&\n\t\tvalidateEmail(email) &&\n\t\t!emailError &&\n\t\tsmtpServer &&\n\t\tsmtpPort &&\n\t\tsmtpUsername &&\n\t\tsmtpPassword &&\n\t\timapServer &&\n\t\timapPort &&\n\t\timapUsername &&\n\t\timapPassword;\n\n\treturn (\n\t\t<Page.ScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label display='flex' justifyContent='space-between' w='full'>\n\t\t\t\t\t\t\t\t\t{t('Active')}\n\t\t\t\t\t\t\t\t\t<ToggleSwitch checked={active} onChange={handleActive} />\n\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Name')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput value={name} onChange={handleName} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Email')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput onBlur={checkEmailExists} error={emailError} value={email} onChange={handleEmail} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t<Field.Error>{t(emailError)}</Field.Error>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Description')}</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextAreaInput value={description} rows={4} onChange={handleDescription} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Sender_Info')}</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput value={senderInfo} onChange={handleSenderInfo} placeholder={t('Optional')} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t<Field.Hint>{t('Will_Appear_In_From')}</Field.Hint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Department')}</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment value={department} onChange={handleDepartment} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t<Field.Hint>{t('Only_Members_Selected_Department_Can_View_Channel')}</Field.Hint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Server')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput value={smtpServer} onChange={handleSmtpServer} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Port')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput type='number' value={smtpPort} onChange={handleSmtpPort} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Username')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput value={smtpUsername} onChange={handleSmtpUsername} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Password')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput type='password' value={smtpPassword} onChange={handleSmtpPassword} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label display='flex' justifyContent='space-between' w='full'>\n\t\t\t\t\t\t\t\t\t{t('Connect_SSL_TLS')}\n\t\t\t\t\t\t\t\t\t<ToggleSwitch checked={smtpSecure} onChange={handleSmtpSecure} />\n\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Server')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput value={imapServer} onChange={handleImapServer} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Port')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput type='number' value={imapPort} onChange={handleImapPort} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Username')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput value={imapUsername} onChange={handleImapUsername} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label>{t('Password')}*</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<TextInput type='password' value={imapPassword} onChange={handleImapPassword} />\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label display='flex' justifyContent='space-between' w='full'>\n\t\t\t\t\t\t\t\t\t{t('Connect_SSL_TLS')}\n\t\t\t\t\t\t\t\t\t<ToggleSwitch checked={imapSecure} onChange={handleImapSecure} />\n\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<ButtonGroup stretch w='full'>\n\t\t\t\t\t\t\t\t<Button onClick={close}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!canSave} primary onClick={handleSave}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t<Margins blockStart='x16'>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch w='full'>\n\t\t\t\t\t\t\t\t\t{id && (\n\t\t\t\t\t\t\t\t\t\t<Button primary danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</Page.ScrollableContentWithShadow>\n\t);\n}\n\nexport default EmailInboxForm;\n"]},"sourceType":"module","hash":"63650394cb3eddff27262175986e81cd215fc3a5"}
