{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/RoomHistoryManager.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/RoomHistoryManager.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/RoomHistoryManager.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.js"}},"code":"const _excluded = [\"_id\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 1);\nmodule.export({\n  normalizeThreadMessage: () => normalizeThreadMessage,\n  waitUntilWrapperExists: () => waitUntilWrapperExists,\n  upsertMessage: () => upsertMessage,\n  upsertMessageBulk: () => upsertMessageBulk,\n  RoomHistoryManager: () => RoomHistoryManager\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 1);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\nlet uuidv4;\nmodule.link(\"uuid\", {\n  v4(v) {\n    uuidv4 = v;\n  }\n\n}, 4);\nlet differenceInMilliseconds;\nmodule.link(\"date-fns/differenceInMilliseconds\", {\n  default(v) {\n    differenceInMilliseconds = v;\n  }\n\n}, 5);\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 6);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 7);\nlet RoomManager;\nmodule.link(\"./RoomManager\", {\n  RoomManager(v) {\n    RoomManager = v;\n  }\n\n}, 8);\nlet readMessage;\nmodule.link(\"./readMessages\", {\n  readMessage(v) {\n    readMessage = v;\n  }\n\n}, 9);\nlet renderMessageBody;\nmodule.link(\"../../../../client/lib/utils/renderMessageBody\", {\n  renderMessageBody(v) {\n    renderMessageBody = v;\n  }\n\n}, 10);\nlet getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig(v) {\n    getConfig = v;\n  }\n\n}, 11);\nlet ChatMessage, ChatSubscription, ChatRoom;\nmodule.link(\"../../../models\", {\n  ChatMessage(v) {\n    ChatMessage = v;\n  },\n\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  },\n\n  ChatRoom(v) {\n    ChatRoom = v;\n  }\n\n}, 12);\nlet callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n\n}, 13);\nlet filterMarkdown;\nmodule.link(\"../../../markdown/lib/markdown\", {\n  filterMarkdown(v) {\n    filterMarkdown = v;\n  }\n\n}, 14);\nlet getUserPreference;\nmodule.link(\"../../../utils/client\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n\n}, 15);\nlet onClientMessageReceived;\nmodule.link(\"../../../../client/lib/onClientMessageReceived\", {\n  onClientMessageReceived(v) {\n    onClientMessageReceived = v;\n  }\n\n}, 16);\n\nconst normalizeThreadMessage = _ref => {\n  let message = _extends({}, _ref);\n\n  if (message.msg) {\n    message.msg = filterMarkdown(message.msg);\n    delete message.mentions;\n    return renderMessageBody(message).replace(/<br\\s?\\\\?>/g, ' ');\n  }\n\n  if (message.attachments) {\n    const attachment = message.attachments.find(attachment => attachment.title || attachment.description);\n\n    if (attachment && attachment.description) {\n      return escapeHTML(attachment.description);\n    }\n\n    if (attachment && attachment.title) {\n      return escapeHTML(attachment.title);\n    }\n  }\n};\n\nconst waitUntilWrapperExists = async function () {\n  let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.messages-box .wrapper';\n  return document.querySelector(selector) || new Promise(resolve => {\n    const observer = new MutationObserver(function (mutations, obs) {\n      const element = document.querySelector(selector);\n\n      if (element) {\n        obs.disconnect(); // stop observing\n\n        return resolve(element);\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n  });\n};\n\nconst upsertMessage = async function (_ref2) {\n  let {\n    msg,\n    subscription,\n    uid = Tracker.nonreactive(() => Meteor.userId())\n  } = _ref2;\n  let collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ChatMessage;\n  const userId = msg.u && msg.u._id;\n\n  if (subscription && subscription.ignored && subscription.ignored.indexOf(userId) > -1) {\n    msg.ignored = true;\n  } // const roles = [\n  // \t(userId && UserRoles.findOne(userId, { fields: { roles: 1 } })) || {},\n  // \t(userId && RoomRoles.findOne({ rid: msg.rid, 'u._id': userId })) || {},\n  // ].map((e) => e.roles);\n  // msg.roles = _.union.apply(_.union, roles);\n\n\n  if (msg.t === 'e2e' && !msg.file) {\n    msg.e2e = 'pending';\n  }\n\n  msg = (await onClientMessageReceived(msg)) || msg;\n\n  const {\n    _id\n  } = msg,\n        messageToUpsert = _objectWithoutProperties(msg, _excluded);\n\n  if (msg.tcount) {\n    collection.direct.update({\n      tmid: _id\n    }, {\n      $set: {\n        following: msg.replies && msg.replies.indexOf(uid) > -1,\n        threadMsg: normalizeThreadMessage(messageToUpsert),\n        repliesCount: msg.tcount\n      }\n    }, {\n      multi: true\n    });\n  }\n\n  return collection.direct.upsert({\n    _id\n  }, messageToUpsert);\n};\n\nfunction upsertMessageBulk(_ref3) {\n  let {\n    msgs,\n    subscription\n  } = _ref3;\n  let collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ChatMessage;\n  const uid = Tracker.nonreactive(() => Meteor.userId());\n  const {\n    queries\n  } = ChatMessage;\n  collection.queries = [];\n  msgs.forEach((msg, index) => {\n    if (index === msgs.length - 1) {\n      ChatMessage.queries = queries;\n    }\n\n    upsertMessage({\n      msg,\n      subscription,\n      uid\n    }, collection);\n  });\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit')) || 50;\n\nconst waitAfterFlush = fn => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nconst RoomHistoryManager = new class extends Emitter {\n  constructor() {\n    super();\n    this.histories = {};\n    this.requestsList = [];\n  }\n\n  getRoom(rid) {\n    if (!this.histories[rid]) {\n      this.histories[rid] = {\n        hasMore: new ReactiveVar(true),\n        hasMoreNext: new ReactiveVar(false),\n        isLoading: new ReactiveVar(false),\n        unreadNotLoaded: new ReactiveVar(0),\n        firstUnread: new ReactiveVar(),\n        loaded: undefined\n      };\n    }\n\n    return this.histories[rid];\n  }\n\n  async queue() {\n    return new Promise(resolve => {\n      const requestId = uuidv4();\n\n      const done = () => {\n        this.lastRequest = new Date();\n        resolve();\n      };\n\n      if (this.requestsList.length === 0) {\n        return this.run(done);\n      }\n\n      this.requestsList.push(requestId);\n      this.once(requestId, done);\n    });\n  }\n\n  run(fn) {\n    const difference = differenceInMilliseconds(new Date(), this.lastRequest);\n\n    if (!this.lastRequest || difference > 500) {\n      return fn();\n    }\n\n    return setTimeout(fn, 500 - difference);\n  }\n\n  unqueue() {\n    const requestId = this.requestsList.pop();\n\n    if (!requestId) {\n      return;\n    }\n\n    this.run(() => this.emit(requestId));\n  }\n\n  async getMore(rid) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLimit;\n    let ts;\n    const room = this.getRoom(rid);\n\n    if (room.hasMore.curValue !== true) {\n      return;\n    }\n\n    room.isLoading.set(true);\n    await this.queue(); // ScrollListener.setLoader true\n\n    const lastMessage = ChatMessage.findOne({\n      rid,\n      _hidden: {\n        $ne: true\n      }\n    }, {\n      sort: {\n        ts: 1\n      }\n    }); // lastMessage ?= ChatMessage.findOne({rid: rid}, {sort: {ts: 1}})\n\n    if (lastMessage) {\n      ({\n        ts\n      } = lastMessage);\n    } else {\n      ts = undefined;\n    }\n\n    let ls = undefined;\n    let typeName = undefined;\n    const subscription = ChatSubscription.findOne({\n      rid\n    });\n\n    if (subscription) {\n      ({\n        ls\n      } = subscription);\n      typeName = subscription.t + subscription.name;\n    } else {\n      const curRoomDoc = ChatRoom.findOne({\n        _id: rid\n      });\n      typeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n    }\n\n    const showMessageInMainThread = getUserPreference(Meteor.userId(), 'showMessageInMainThread', false);\n    const result = await callWithErrorHandling('loadHistory', rid, ts, limit, ls, showMessageInMainThread);\n    this.unqueue();\n    let previousHeight;\n    let scroll;\n    const {\n      messages = []\n    } = result;\n    room.unreadNotLoaded.set(result.unreadNotLoaded);\n    room.firstUnread.set(result.firstUnread);\n    const wrapper = await waitUntilWrapperExists();\n\n    if (wrapper) {\n      previousHeight = wrapper.scrollHeight;\n      scroll = wrapper.scrollTop;\n    }\n\n    upsertMessageBulk({\n      msgs: messages.filter(msg => msg.t !== 'command'),\n      subscription\n    });\n\n    if (!room.loaded) {\n      room.loaded = 0;\n    }\n\n    const visibleMessages = messages.filter(msg => !msg.tmid || showMessageInMainThread || msg.tshow);\n    room.loaded += visibleMessages.length;\n\n    if (messages.length < limit) {\n      room.hasMore.set(false);\n    }\n\n    if (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n      return this.getMore(rid);\n    }\n\n    waitAfterFlush(() => {\n      const heightDiff = wrapper.scrollHeight - previousHeight;\n      wrapper.scrollTop = scroll + heightDiff;\n    });\n    room.isLoading.set(false);\n    waitAfterFlush(() => {\n      readMessage.refreshUnreadMark(rid);\n      return RoomManager.updateMentionsMarksOfRoom(typeName);\n    });\n  }\n\n  async getMoreNext(rid) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLimit;\n    const room = this.getRoom(rid);\n\n    if (room.hasMoreNext.curValue !== true) {\n      return;\n    }\n\n    await this.queue();\n    const instance = Blaze.getView($('.messages-box .wrapper')[0]).templateInstance();\n    instance.atBottom = false;\n    room.isLoading.set(true);\n    const lastMessage = ChatMessage.findOne({\n      rid,\n      _hidden: {\n        $ne: true\n      }\n    }, {\n      sort: {\n        ts: -1\n      }\n    });\n    let typeName = undefined;\n    const subscription = ChatSubscription.findOne({\n      rid\n    });\n\n    if (subscription) {\n      // const { ls } = subscription;\n      typeName = subscription.t + subscription.name;\n    } else {\n      const curRoomDoc = ChatRoom.findOne({\n        _id: rid\n      });\n      typeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n    }\n\n    const {\n      ts\n    } = lastMessage;\n\n    if (ts) {\n      const result = await callWithErrorHandling('loadNextMessages', rid, ts, limit);\n      upsertMessageBulk({\n        msgs: Array.from(result.messages).filter(msg => msg.t !== 'command'),\n        subscription\n      });\n      Meteor.defer(() => RoomManager.updateMentionsMarksOfRoom(typeName));\n      room.isLoading.set(false);\n\n      if (!room.loaded) {\n        room.loaded = 0;\n      }\n\n      room.loaded += result.messages.length;\n\n      if (result.messages.length < limit) {\n        room.hasMoreNext.set(false);\n      }\n    }\n\n    await this.unqueue();\n  }\n\n  async getSurroundingMessages(message) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLimit;\n\n    if (!message || !message.rid) {\n      return;\n    }\n\n    const w = await waitUntilWrapperExists();\n    const instance = Blaze.getView(w).templateInstance();\n\n    if (ChatMessage.findOne({\n      _id: message._id,\n      _hidden: {\n        $ne: true\n      }\n    })) {\n      const msgElement = $(\"#\".concat(message._id), w);\n\n      if (msgElement.length === 0) {\n        return;\n      }\n\n      const wrapper = $('.messages-box .wrapper');\n      const pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n      wrapper.animate({\n        scrollTop: pos\n      }, 500);\n      return setTimeout(() => msgElement.removeClass('highlight'), 500);\n    }\n\n    const room = this.getRoom(message.rid);\n    room.isLoading.set(true);\n    let typeName = undefined;\n    const subscription = ChatSubscription.findOne({\n      rid: message.rid\n    });\n\n    if (subscription) {\n      // const { ls } = subscription;\n      typeName = subscription.t + subscription.name;\n    } else {\n      const curRoomDoc = ChatRoom.findOne({\n        _id: message.rid\n      });\n      typeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n    }\n\n    return Meteor.call('loadSurroundingMessages', message, limit, function (err, result) {\n      if (!result || !result.messages) {\n        return;\n      }\n\n      ChatMessage.remove({\n        rid: message.rid\n      });\n\n      for (const msg of Array.from(result.messages)) {\n        if (msg.t !== 'command') {\n          upsertMessage({\n            msg,\n            subscription\n          });\n        }\n      }\n\n      readMessage.refreshUnreadMark(message.rid);\n      RoomManager.updateMentionsMarksOfRoom(typeName);\n      Tracker.afterFlush(() => {\n        const wrapper = $('.messages-box .wrapper');\n        const msgElement = $(\"#\".concat(message._id), wrapper);\n        const pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n        wrapper.animate({\n          scrollTop: pos\n        }, 500);\n        msgElement.addClass('highlight');\n        room.isLoading.set(false);\n        const messages = wrapper[0];\n        instance.atBottom = !result.moreAfter && messages.scrollTop >= messages.scrollHeight - messages.clientHeight;\n        setTimeout(() => msgElement.removeClass('highlight'), 500);\n      });\n\n      if (!room.loaded) {\n        room.loaded = 0;\n      }\n\n      room.loaded += result.messages.length;\n      room.hasMore.set(result.moreBefore);\n      return room.hasMoreNext.set(result.moreAfter);\n    });\n  }\n\n  hasMore(rid) {\n    const room = this.getRoom(rid);\n    return room.hasMore.get();\n  }\n\n  hasMoreNext(rid) {\n    const room = this.getRoom(rid);\n    return room.hasMoreNext.get();\n  }\n\n  getMoreIfIsEmpty(rid) {\n    const room = this.getRoom(rid);\n\n    if (room.loaded === undefined) {\n      return this.getMore(rid);\n    }\n  }\n\n  isLoading(rid) {\n    const room = this.getRoom(rid);\n    return room.isLoading.get();\n  }\n\n  clear(rid) {\n    ChatMessage.remove({\n      rid\n    });\n\n    if (this.histories[rid]) {\n      this.histories[rid].hasMore.set(true);\n      this.histories[rid].isLoading.set(false);\n      this.histories[rid].loaded = undefined;\n    }\n  }\n\n}();","map":{"version":3,"sources":["app/ui-utils/client/lib/RoomHistoryManager.js"],"names":["_objectWithoutProperties","module","link","default","v","_extends","export","normalizeThreadMessage","waitUntilWrapperExists","upsertMessage","upsertMessageBulk","RoomHistoryManager","Meteor","Tracker","ReactiveVar","Blaze","uuidv4","v4","differenceInMilliseconds","Emitter","escapeHTML","RoomManager","readMessage","renderMessageBody","getConfig","ChatMessage","ChatSubscription","ChatRoom","callWithErrorHandling","filterMarkdown","getUserPreference","onClientMessageReceived","message","msg","mentions","replace","attachments","attachment","find","title","description","selector","document","querySelector","Promise","resolve","observer","MutationObserver","mutations","obs","element","disconnect","observe","childList","subtree","subscription","uid","nonreactive","userId","collection","u","_id","ignored","indexOf","t","file","e2e","messageToUpsert","tcount","direct","update","tmid","$set","following","replies","threadMsg","repliesCount","multi","upsert","msgs","queries","forEach","index","length","defaultLimit","parseInt","waitAfterFlush","fn","setTimeout","afterFlush","constructor","histories","requestsList","getRoom","rid","hasMore","hasMoreNext","isLoading","unreadNotLoaded","firstUnread","loaded","undefined","queue","requestId","done","lastRequest","Date","run","push","once","difference","unqueue","pop","emit","getMore","limit","ts","room","curValue","set","lastMessage","findOne","_hidden","$ne","sort","ls","typeName","name","curRoomDoc","showMessageInMainThread","result","previousHeight","scroll","messages","wrapper","scrollHeight","scrollTop","filter","visibleMessages","tshow","get","heightDiff","refreshUnreadMark","updateMentionsMarksOfRoom","getMoreNext","instance","getView","$","templateInstance","atBottom","Array","from","defer","getSurroundingMessages","w","msgElement","pos","offset","top","height","animate","removeClass","call","err","remove","addClass","moreAfter","clientHeight","moreBefore","getMoreIfIsEmpty","clear"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Blaze } from 'meteor/blaze';\nimport { v4 as uuidv4 } from 'uuid';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { RoomManager } from './RoomManager';\nimport { readMessage } from './readMessages';\nimport { renderMessageBody } from '../../../../client/lib/utils/renderMessageBody';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { ChatMessage, ChatSubscription, ChatRoom } from '../../../models';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { filterMarkdown } from '../../../markdown/lib/markdown';\nimport { getUserPreference } from '../../../utils/client';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\n\nexport const normalizeThreadMessage = ({ ...message }) => {\n\tif (message.msg) {\n\t\tmessage.msg = filterMarkdown(message.msg);\n\t\tdelete message.mentions;\n\t\treturn renderMessageBody(message).replace(/<br\\s?\\\\?>/g, ' ');\n\t}\n\n\tif (message.attachments) {\n\t\tconst attachment = message.attachments.find((attachment) => attachment.title || attachment.description);\n\n\t\tif (attachment && attachment.description) {\n\t\t\treturn escapeHTML(attachment.description);\n\t\t}\n\n\t\tif (attachment && attachment.title) {\n\t\t\treturn escapeHTML(attachment.title);\n\t\t}\n\t}\n};\n\nexport const waitUntilWrapperExists = async (selector = '.messages-box .wrapper') =>\n\tdocument.querySelector(selector) ||\n\tnew Promise((resolve) => {\n\t\tconst observer = new MutationObserver(function (mutations, obs) {\n\t\t\tconst element = document.querySelector(selector);\n\t\t\tif (element) {\n\t\t\t\tobs.disconnect(); // stop observing\n\t\t\t\treturn resolve(element);\n\t\t\t}\n\t\t});\n\t\tobserver.observe(document, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t});\n\t});\n\nexport const upsertMessage = async ({ msg, subscription, uid = Tracker.nonreactive(() => Meteor.userId()) }, collection = ChatMessage) => {\n\tconst userId = msg.u && msg.u._id;\n\n\tif (subscription && subscription.ignored && subscription.ignored.indexOf(userId) > -1) {\n\t\tmsg.ignored = true;\n\t}\n\n\t// const roles = [\n\t// \t(userId && UserRoles.findOne(userId, { fields: { roles: 1 } })) || {},\n\t// \t(userId && RoomRoles.findOne({ rid: msg.rid, 'u._id': userId })) || {},\n\t// ].map((e) => e.roles);\n\t// msg.roles = _.union.apply(_.union, roles);\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id, ...messageToUpsert } = msg;\n\n\tif (msg.tcount) {\n\t\tcollection.direct.update(\n\t\t\t{ tmid: _id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tfollowing: msg.replies && msg.replies.indexOf(uid) > -1,\n\t\t\t\t\tthreadMsg: normalizeThreadMessage(messageToUpsert),\n\t\t\t\t\trepliesCount: msg.tcount,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ multi: true },\n\t\t);\n\t}\n\n\treturn collection.direct.upsert({ _id }, messageToUpsert);\n};\n\nexport function upsertMessageBulk({ msgs, subscription }, collection = ChatMessage) {\n\tconst uid = Tracker.nonreactive(() => Meteor.userId());\n\tconst { queries } = ChatMessage;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tChatMessage.queries = queries;\n\t\t}\n\t\tupsertMessage({ msg, subscription, uid }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit')) || 50;\n\nconst waitAfterFlush = (fn) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nexport const RoomHistoryManager = new (class extends Emitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.histories = {};\n\t\tthis.requestsList = [];\n\t}\n\n\tgetRoom(rid) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tasync queue() {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\trun(fn) {\n\t\tconst difference = differenceInMilliseconds(new Date(), this.lastRequest);\n\t\tif (!this.lastRequest || difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tunqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tasync getMore(rid, limit = defaultLimit) {\n\t\tlet ts;\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.hasMore.curValue !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\t// ScrollListener.setLoader true\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: 1 } });\n\t\t// lastMessage ?= ChatMessage.findOne({rid: rid}, {sort: {ts: 1}})\n\n\t\tif (lastMessage) {\n\t\t\t({ ts } = lastMessage);\n\t\t} else {\n\t\t\tts = undefined;\n\t\t}\n\n\t\tlet ls = undefined;\n\t\tlet typeName = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t\ttypeName = subscription.t + subscription.name;\n\t\t} else {\n\t\t\tconst curRoomDoc = ChatRoom.findOne({ _id: rid });\n\t\t\ttypeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n\t\t}\n\n\t\tconst showMessageInMainThread = getUserPreference(Meteor.userId(), 'showMessageInMainThread', false);\n\t\tconst result = await callWithErrorHandling('loadHistory', rid, ts, limit, ls, showMessageInMainThread);\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight;\n\t\tlet scroll;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tconst wrapper = await waitUntilWrapperExists();\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showMessageInMainThread || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tconst heightDiff = wrapper.scrollHeight - previousHeight;\n\t\t\twrapper.scrollTop = scroll + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t\twaitAfterFlush(() => {\n\t\t\treadMessage.refreshUnreadMark(rid);\n\t\t\treturn RoomManager.updateMentionsMarksOfRoom(typeName);\n\t\t});\n\t}\n\n\tasync getMoreNext(rid, limit = defaultLimit) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (room.hasMoreNext.curValue !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tconst instance = Blaze.getView($('.messages-box .wrapper')[0]).templateInstance();\n\t\tinstance.atBottom = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tlet typeName = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t// const { ls } = subscription;\n\t\t\ttypeName = subscription.t + subscription.name;\n\t\t} else {\n\t\t\tconst curRoomDoc = ChatRoom.findOne({ _id: rid });\n\t\t\ttypeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n\t\t}\n\n\t\tconst { ts } = lastMessage;\n\n\t\tif (ts) {\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, limit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\tMeteor.defer(() => RoomManager.updateMentionsMarksOfRoom(typeName));\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < limit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tawait this.unqueue();\n\t}\n\n\tasync getSurroundingMessages(message, limit = defaultLimit) {\n\t\tif (!message || !message.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = await waitUntilWrapperExists();\n\n\t\tconst instance = Blaze.getView(w).templateInstance();\n\n\t\tif (ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } })) {\n\t\t\tconst msgElement = $(`#${message._id}`, w);\n\t\t\tif (msgElement.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst wrapper = $('.messages-box .wrapper');\n\t\t\tconst pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n\t\t\twrapper.animate(\n\t\t\t\t{\n\t\t\t\t\tscrollTop: pos,\n\t\t\t\t},\n\t\t\t\t500,\n\t\t\t);\n\n\t\t\treturn setTimeout(() => msgElement.removeClass('highlight'), 500);\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\troom.isLoading.set(true);\n\t\tlet typeName = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\t\tif (subscription) {\n\t\t\t// const { ls } = subscription;\n\t\t\ttypeName = subscription.t + subscription.name;\n\t\t} else {\n\t\t\tconst curRoomDoc = ChatRoom.findOne({ _id: message.rid });\n\t\t\ttypeName = (curRoomDoc ? curRoomDoc.t : undefined) + (curRoomDoc ? curRoomDoc.name : undefined);\n\t\t}\n\n\t\treturn Meteor.call('loadSurroundingMessages', message, limit, function (err, result) {\n\t\t\tif (!result || !result.messages) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tChatMessage.remove({ rid: message.rid });\n\t\t\tfor (const msg of Array.from(result.messages)) {\n\t\t\t\tif (msg.t !== 'command') {\n\t\t\t\t\tupsertMessage({ msg, subscription });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treadMessage.refreshUnreadMark(message.rid);\n\t\t\tRoomManager.updateMentionsMarksOfRoom(typeName);\n\n\t\t\tTracker.afterFlush(() => {\n\t\t\t\tconst wrapper = $('.messages-box .wrapper');\n\t\t\t\tconst msgElement = $(`#${message._id}`, wrapper);\n\t\t\t\tconst pos = wrapper.scrollTop() + msgElement.offset().top - wrapper.height() / 2;\n\t\t\t\twrapper.animate(\n\t\t\t\t\t{\n\t\t\t\t\t\tscrollTop: pos,\n\t\t\t\t\t},\n\t\t\t\t\t500,\n\t\t\t\t);\n\n\t\t\t\tmsgElement.addClass('highlight');\n\t\t\t\troom.isLoading.set(false);\n\t\t\t\tconst messages = wrapper[0];\n\t\t\t\tinstance.atBottom = !result.moreAfter && messages.scrollTop >= messages.scrollHeight - messages.clientHeight;\n\t\t\t\tsetTimeout(() => msgElement.removeClass('highlight'), 500);\n\t\t\t});\n\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\t\t\troom.loaded += result.messages.length;\n\t\t\troom.hasMore.set(result.moreBefore);\n\t\t\treturn room.hasMoreNext.set(result.moreAfter);\n\t\t});\n\t}\n\n\thasMore(rid) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\thasMoreNext(rid) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tgetMoreIfIsEmpty(rid) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tisLoading(rid) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tclear(rid) {\n\t\tChatMessage.remove({ rid });\n\t\tif (this.histories[rid]) {\n\t\t\tthis.histories[rid].hasMore.set(true);\n\t\t\tthis.histories[rid].isLoading.set(false);\n\t\t\tthis.histories[rid].loaded = undefined;\n\t\t}\n\t}\n})();\n"]},"sourceType":"module","hash":"ac5cdeefed5ca692ce414477e4020bb5e65db211"}
