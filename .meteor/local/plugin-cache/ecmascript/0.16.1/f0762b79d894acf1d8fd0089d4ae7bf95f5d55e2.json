{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/otr/client/rocketchat.otr.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/otr/client/rocketchat.otr.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/otr/client/rocketchat.otr.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/otr/client/rocketchat.otr.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/otr/client/rocketchat.otr.js"}},"code":"module.export({\n  OTR: () => OTR\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet Subscriptions;\nmodule.link(\"../../models\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 3);\nlet Notifications;\nmodule.link(\"../../notifications\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 4);\nlet t;\nmodule.link(\"../../utils\", {\n  t(v) {\n    t = v;\n  }\n\n}, 5);\nlet onClientMessageReceived;\nmodule.link(\"../../../client/lib/onClientMessageReceived\", {\n  onClientMessageReceived(v) {\n    onClientMessageReceived = v;\n  }\n\n}, 6);\nlet onClientBeforeSendMessage;\nmodule.link(\"../../../client/lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage(v) {\n    onClientBeforeSendMessage = v;\n  }\n\n}, 7);\n\nclass OTRClass {\n  constructor() {\n    this.enabled = new ReactiveVar(false);\n    this.instancesByRoomId = {};\n    this.crypto = null;\n  }\n\n  isEnabled() {\n    return this.enabled.get();\n  }\n\n  getInstanceByRoomId(roomId) {\n    if (!this.enabled.get()) {\n      return;\n    }\n\n    if (this.instancesByRoomId[roomId]) {\n      return this.instancesByRoomId[roomId];\n    }\n\n    const subscription = Subscriptions.findOne({\n      rid: roomId\n    });\n\n    if (!subscription || subscription.t !== 'd') {\n      return;\n    }\n\n    this.instancesByRoomId[roomId] = new OTR.Room(Meteor.userId(), roomId); // eslint-disable-line no-use-before-define\n\n    return this.instancesByRoomId[roomId];\n  }\n\n}\n\nconst OTR = new OTRClass();\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    if (Meteor.userId()) {\n      Notifications.onUser('otr', (type, data) => {\n        if (!data.roomId || !data.userId || data.userId === Meteor.userId()) {\n          return;\n        }\n\n        OTR.getInstanceByRoomId(data.roomId).onUserStream(type, data);\n      });\n    }\n  });\n  onClientBeforeSendMessage.use(function (message) {\n    if (message.rid && OTR.getInstanceByRoomId(message.rid) && OTR.getInstanceByRoomId(message.rid).established.get()) {\n      return OTR.getInstanceByRoomId(message.rid).encrypt(message).then(msg => {\n        message.msg = msg;\n        message.t = 'otr';\n        return message;\n      });\n    }\n\n    return Promise.resolve(message);\n  });\n  onClientMessageReceived.use(function (message) {\n    if (message.rid && OTR.getInstanceByRoomId(message.rid) && OTR.getInstanceByRoomId(message.rid).established.get()) {\n      if (message.notification) {\n        message.msg = t('Encrypted_message');\n        return Promise.resolve(message);\n      }\n\n      if (message.t !== 'otr') {\n        return message;\n      }\n\n      const otrRoom = OTR.getInstanceByRoomId(message.rid);\n      return otrRoom.decrypt(message.msg).then(data => {\n        const {\n          _id,\n          text,\n          ack\n        } = data;\n        message._id = _id;\n        message.msg = text;\n\n        if (data.ts) {\n          message.ts = data.ts;\n        }\n\n        if (message.otrAck) {\n          return otrRoom.decrypt(message.otrAck).then(data => {\n            if (ack === data.text) {\n              message.t = 'otr-ack';\n            }\n\n            return message;\n          });\n        }\n\n        if (data.userId !== Meteor.userId()) {\n          return otrRoom.encryptText(ack).then(ack => {\n            Meteor.call('updateOTRAck', message._id, ack);\n            return message;\n          });\n        }\n\n        return message;\n      });\n    }\n\n    if (message.t === 'otr') {\n      message.msg = '';\n    }\n\n    return Promise.resolve(message);\n  });\n});","map":{"version":3,"sources":["app/otr/client/rocketchat.otr.js"],"names":["module","export","OTR","Meteor","link","v","ReactiveVar","Tracker","Subscriptions","Notifications","t","onClientMessageReceived","onClientBeforeSendMessage","OTRClass","constructor","enabled","instancesByRoomId","crypto","isEnabled","get","getInstanceByRoomId","roomId","subscription","findOne","rid","Room","userId","startup","autorun","onUser","type","data","onUserStream","use","message","established","encrypt","then","msg","Promise","resolve","notification","otrRoom","decrypt","_id","text","ack","ts","otrAck","encryptText","call"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Subscriptions } from '../../models';\nimport { Notifications } from '../../notifications';\nimport { t } from '../../utils';\nimport { onClientMessageReceived } from '../../../client/lib/onClientMessageReceived';\nimport { onClientBeforeSendMessage } from '../../../client/lib/onClientBeforeSendMessage';\n\nclass OTRClass {\n\tconstructor() {\n\t\tthis.enabled = new ReactiveVar(false);\n\t\tthis.instancesByRoomId = {};\n\t\tthis.crypto = null;\n\t}\n\n\tisEnabled() {\n\t\treturn this.enabled.get();\n\t}\n\n\tgetInstanceByRoomId(roomId) {\n\t\tif (!this.enabled.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.instancesByRoomId[roomId]) {\n\t\t\treturn this.instancesByRoomId[roomId];\n\t\t}\n\n\t\tconst subscription = Subscriptions.findOne({\n\t\t\trid: roomId,\n\t\t});\n\n\t\tif (!subscription || subscription.t !== 'd') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.instancesByRoomId[roomId] = new OTR.Room(Meteor.userId(), roomId); // eslint-disable-line no-use-before-define\n\t\treturn this.instancesByRoomId[roomId];\n\t}\n}\n\nexport const OTR = new OTRClass();\n\nMeteor.startup(function () {\n\tTracker.autorun(function () {\n\t\tif (Meteor.userId()) {\n\t\t\tNotifications.onUser('otr', (type, data) => {\n\t\t\t\tif (!data.roomId || !data.userId || data.userId === Meteor.userId()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tOTR.getInstanceByRoomId(data.roomId).onUserStream(type, data);\n\t\t\t});\n\t\t}\n\t});\n\n\tonClientBeforeSendMessage.use(function (message) {\n\t\tif (message.rid && OTR.getInstanceByRoomId(message.rid) && OTR.getInstanceByRoomId(message.rid).established.get()) {\n\t\t\treturn OTR.getInstanceByRoomId(message.rid)\n\t\t\t\t.encrypt(message)\n\t\t\t\t.then((msg) => {\n\t\t\t\t\tmessage.msg = msg;\n\t\t\t\t\tmessage.t = 'otr';\n\t\t\t\t\treturn message;\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(message);\n\t});\n\n\tonClientMessageReceived.use(function (message) {\n\t\tif (message.rid && OTR.getInstanceByRoomId(message.rid) && OTR.getInstanceByRoomId(message.rid).established.get()) {\n\t\t\tif (message.notification) {\n\t\t\t\tmessage.msg = t('Encrypted_message');\n\t\t\t\treturn Promise.resolve(message);\n\t\t\t}\n\t\t\tif (message.t !== 'otr') {\n\t\t\t\treturn message;\n\t\t\t}\n\t\t\tconst otrRoom = OTR.getInstanceByRoomId(message.rid);\n\t\t\treturn otrRoom.decrypt(message.msg).then((data) => {\n\t\t\t\tconst { _id, text, ack } = data;\n\t\t\t\tmessage._id = _id;\n\t\t\t\tmessage.msg = text;\n\n\t\t\t\tif (data.ts) {\n\t\t\t\t\tmessage.ts = data.ts;\n\t\t\t\t}\n\n\t\t\t\tif (message.otrAck) {\n\t\t\t\t\treturn otrRoom.decrypt(message.otrAck).then((data) => {\n\t\t\t\t\t\tif (ack === data.text) {\n\t\t\t\t\t\t\tmessage.t = 'otr-ack';\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn message;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (data.userId !== Meteor.userId()) {\n\t\t\t\t\treturn otrRoom.encryptText(ack).then((ack) => {\n\t\t\t\t\t\tMeteor.call('updateOTRAck', message._id, ack);\n\t\t\t\t\t\treturn message;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn message;\n\t\t\t});\n\t\t}\n\t\tif (message.t === 'otr') {\n\t\t\tmessage.msg = '';\n\t\t}\n\t\treturn Promise.resolve(message);\n\t});\n});\n"]},"sourceType":"module","hash":"f0762b79d894acf1d8fd0089d4ae7bf95f5d55e2"}
