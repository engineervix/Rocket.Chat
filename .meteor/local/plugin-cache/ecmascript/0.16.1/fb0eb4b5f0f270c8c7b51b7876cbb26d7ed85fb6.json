{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/chatMessages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui/client/lib/chatMessages.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/chatMessages.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/chatMessages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui/client/lib/chatMessages.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  ChatMessages: () => ChatMessages\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 4);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 5);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 6);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 7);\nlet KonchatNotification;\nmodule.link(\"./notification\", {\n  KonchatNotification(v) {\n    KonchatNotification = v;\n  }\n\n}, 8);\nlet UserAction, USER_ACTIVITIES;\nmodule.link(\"../index\", {\n  UserAction(v) {\n    UserAction = v;\n  },\n\n  USER_ACTIVITIES(v) {\n    USER_ACTIVITIES = v;\n  }\n\n}, 9);\nlet fileUpload;\nmodule.link(\"./fileUpload\", {\n  fileUpload(v) {\n    fileUpload = v;\n  }\n\n}, 10);\nlet t, slashCommands, APIClient;\nmodule.link(\"../../../utils/client\", {\n  t(v) {\n    t = v;\n  },\n\n  slashCommands(v) {\n    slashCommands = v;\n  },\n\n  APIClient(v) {\n    APIClient = v;\n  }\n\n}, 11);\nlet messageProperties, MessageTypes, readMessage;\nmodule.link(\"../../../ui-utils/client\", {\n  messageProperties(v) {\n    messageProperties = v;\n  },\n\n  MessageTypes(v) {\n    MessageTypes = v;\n  },\n\n  readMessage(v) {\n    readMessage = v;\n  }\n\n}, 12);\nlet settings;\nmodule.link(\"../../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 13);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 14);\nlet hasAtLeastOnePermission;\nmodule.link(\"../../../authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n\n}, 15);\nlet Messages, Rooms, ChatMessage, ChatSubscription;\nmodule.link(\"../../../models/client\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  ChatMessage(v) {\n    ChatMessage = v;\n  },\n\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 16);\nlet emoji;\nmodule.link(\"../../../emoji/client\", {\n  emoji(v) {\n    emoji = v;\n  }\n\n}, 17);\nlet generateTriggerId;\nmodule.link(\"../../../ui-message/client/ActionManager\", {\n  generateTriggerId(v) {\n    generateTriggerId = v;\n  }\n\n}, 18);\nlet imperativeModal;\nmodule.link(\"../../../../client/lib/imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n\n}, 19);\nlet GenericModal;\nmodule.link(\"../../../../client/components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n\n}, 20);\nlet keyCodes;\nmodule.link(\"../../../../client/lib/utils/keyCodes\", {\n  keyCodes(v) {\n    keyCodes = v;\n  }\n\n}, 21);\nlet prependReplies;\nmodule.link(\"../../../../client/lib/utils/prependReplies\", {\n  prependReplies(v) {\n    prependReplies = v;\n  }\n\n}, 22);\nlet callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n\n}, 23);\nlet handleError;\nmodule.link(\"../../../../client/lib/utils/handleError\", {\n  handleError(v) {\n    handleError = v;\n  }\n\n}, 24);\nlet dispatchToastMessage;\nmodule.link(\"../../../../client/lib/toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n\n}, 25);\nlet onClientBeforeSendMessage;\nmodule.link(\"../../../../client/lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage(v) {\n    onClientBeforeSendMessage = v;\n  }\n\n}, 26);\nconst messageBoxState = {\n  saveValue: _.debounce((_ref, value) => {\n    let {\n      rid,\n      tmid\n    } = _ref;\n    const key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n    value ? Meteor._localStorage.setItem(key, value) : Meteor._localStorage.removeItem(key);\n  }, 1000),\n  restoreValue: _ref2 => {\n    let {\n      rid,\n      tmid\n    } = _ref2;\n    const key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n    return Meteor._localStorage.getItem(key);\n  },\n  restore: (_ref3, input) => {\n    let {\n      rid,\n      tmid\n    } = _ref3;\n    const value = messageBoxState.restoreValue({\n      rid,\n      tmid\n    });\n\n    if (typeof value === 'string') {\n      messageBoxState.set(input, value);\n    }\n  },\n  save: (_ref4, input) => {\n    let {\n      rid,\n      tmid\n    } = _ref4;\n    messageBoxState.saveValue({\n      rid,\n      tmid\n    }, input.value);\n  },\n  set: (input, value) => {\n    input.value = value;\n    $(input).trigger('change').trigger('input');\n  },\n  purgeAll: () => {\n    Object.keys(Meteor._localStorage).filter(key => key.indexOf('messagebox_') === 0).forEach(key => Meteor._localStorage.removeItem(key));\n  }\n};\ncallbacks.add('afterLogoutCleanUp', messageBoxState.purgeAll, callbacks.priority.MEDIUM, 'chatMessages-after-logout-cleanup');\n\nclass ChatMessages {\n  constructor() {\n    let collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ChatMessage;\n    this.editing = {};\n    this.records = {};\n    this.collection = collection;\n  }\n\n  initializeWrapper(wrapper) {\n    this.wrapper = wrapper;\n  }\n\n  initializeInput(input, _ref5) {\n    let {\n      rid,\n      tmid\n    } = _ref5;\n    this.input = input;\n    this.$input = $(this.input);\n\n    if (!input || !rid) {\n      return;\n    }\n\n    messageBoxState.restore({\n      rid,\n      tmid\n    }, input);\n    this.restoreReplies();\n    this.requestInputFocus();\n  }\n\n  async restoreReplies() {\n    const mid = FlowRouter.getQueryParam('reply');\n\n    if (!mid) {\n      return;\n    }\n\n    const message = Messages.findOne(mid) || (await callWithErrorHandling('getSingleMessage', mid));\n\n    if (!message) {\n      return;\n    }\n\n    this.$input.data('reply', [message]).trigger('dataChange');\n  }\n\n  requestInputFocus() {\n    setTimeout(() => {\n      if (this.input && window.matchMedia('screen and (min-device-width: 500px)').matches) {\n        this.input.focus();\n      }\n    }, 200);\n  }\n\n  recordInputAsDraft() {\n    const message = this.collection.findOne(this.editing.id);\n    const record = this.records[this.editing.id] || {};\n    const draft = this.input.value;\n\n    if (draft === message.msg) {\n      this.clearCurrentDraft();\n      return;\n    }\n\n    record.draft = draft;\n    this.records[this.editing.id] = record;\n  }\n\n  clearCurrentDraft() {\n    const hasValue = this.records[this.editing.id];\n    delete this.records[this.editing.id];\n    return !!hasValue;\n  }\n\n  resetToDraft(id) {\n    const message = this.collection.findOne(id);\n    const oldValue = this.input.value;\n    messageBoxState.set(this.input, message.msg);\n    return oldValue !== message.msg;\n  }\n\n  toPrevMessage() {\n    const {\n      element\n    } = this.editing;\n\n    if (!element) {\n      const messages = Array.from(this.wrapper.querySelectorAll('.own:not(.system)'));\n      const message = messages.pop();\n      return message && this.edit(message, false);\n    }\n\n    for (let previous = element.previousElementSibling; previous; previous = previous.previousElementSibling) {\n      if (previous.matches('.own:not(.system)')) {\n        return this.edit(previous, false);\n      }\n    }\n\n    this.clearEditing();\n  }\n\n  toNextMessage() {\n    const {\n      element\n    } = this.editing;\n\n    if (element) {\n      let next;\n\n      for (next = element.nextElementSibling; next; next = next.nextElementSibling) {\n        if (next.matches('.own:not(.system)')) {\n          break;\n        }\n      }\n\n      next ? this.edit(next, true) : this.clearEditing();\n    } else {\n      this.clearEditing();\n    }\n  }\n\n  edit(element, isEditingTheNextOne) {\n    const message = this.collection.findOne(element.dataset.id);\n    const hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n    const editAllowed = settings.get('Message_AllowEditing');\n    const editOwn = message && message.u && message.u._id === Meteor.userId();\n\n    if (!hasPermission && (!editAllowed || !editOwn)) {\n      return;\n    }\n\n    if (element.classList.contains('system')) {\n      return;\n    }\n\n    const blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n\n    if (blockEditInMinutes && blockEditInMinutes !== 0) {\n      let currentTsDiff;\n      let msgTs;\n\n      if (message.ts) {\n        msgTs = moment(message.ts);\n      }\n\n      if (msgTs) {\n        currentTsDiff = moment().diff(msgTs, 'minutes');\n      }\n\n      if (currentTsDiff > blockEditInMinutes) {\n        return;\n      }\n    }\n\n    const draft = this.records[message._id];\n    let msg = draft && draft.draft;\n    msg = msg || message.msg;\n    this.clearEditing();\n    this.editing.element = element;\n    this.editing.id = message._id;\n    this.input.parentElement.classList.add('editing');\n    element.classList.add('editing');\n\n    if (message.attachments && message.attachments[0].description) {\n      messageBoxState.set(this.input, message.attachments[0].description);\n    } else {\n      messageBoxState.set(this.input, msg);\n    }\n\n    const cursorPosition = isEditingTheNextOne ? 0 : -1;\n    this.input.focus();\n    this.$input.setCursorPosition(cursorPosition);\n  }\n\n  clearEditing() {\n    if (!this.editing.element) {\n      this.editing.saved = this.input.value;\n      this.editing.savedCursor = this.input.selectionEnd;\n      return;\n    }\n\n    this.recordInputAsDraft();\n    this.input.parentElement.classList.remove('editing');\n    this.editing.element.classList.remove('editing');\n    delete this.editing.id;\n    delete this.editing.element;\n    messageBoxState.set(this.input, this.editing.saved || '');\n    const cursorPosition = this.editing.savedCursor ? this.editing.savedCursor : -1;\n    this.$input.setCursorPosition(cursorPosition);\n  }\n\n  async send(event, _ref6) {\n    let {\n      rid,\n      tmid,\n      value,\n      tshow\n    } = _ref6;\n    let done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => {};\n    const threadsEnabled = settings.get('Threads_enabled');\n    UserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, {\n      tmid\n    });\n\n    if (!ChatSubscription.findOne({\n      rid\n    })) {\n      await callWithErrorHandling('joinRoom', rid);\n    }\n\n    messageBoxState.save({\n      rid,\n      tmid\n    }, this.input);\n    let msg = value.trim();\n\n    if (msg) {\n      const mention = this.$input.data('mention-user') || false;\n      const replies = this.$input.data('reply') || [];\n\n      if (!mention || !threadsEnabled) {\n        msg = await prependReplies(msg, replies, mention);\n      }\n\n      if (mention && threadsEnabled && replies.length) {\n        tmid = replies[0]._id;\n      }\n    } // don't add tmid or tshow if the message isn't part of a thread (it can happen if editing the main message of a thread)\n\n\n    const originalMessage = this.collection.findOne({\n      _id: this.editing.id\n    }, {\n      fields: {\n        tmid: 1\n      },\n      reactive: false\n    });\n\n    if (originalMessage && tmid && !originalMessage.tmid) {\n      tmid = undefined;\n      tshow = undefined;\n    }\n\n    if (msg) {\n      readMessage.readNow(rid);\n      readMessage.refreshUnreadMark(rid);\n      const message = await onClientBeforeSendMessage({\n        _id: Random.id(),\n        rid,\n        tshow,\n        tmid,\n        msg\n      });\n\n      try {\n        await this.processMessageSend(message);\n        this.$input.removeData('reply').trigger('dataChange');\n      } catch (error) {\n        handleError(error);\n      }\n\n      return done();\n    }\n\n    if (this.editing.id) {\n      const message = this.collection.findOne(this.editing.id);\n      const isDescription = message.attachments && message.attachments[0] && message.attachments[0].description;\n\n      try {\n        if (isDescription) {\n          await this.processMessageEditing({\n            _id: this.editing.id,\n            rid,\n            msg: ''\n          });\n          return done();\n        }\n\n        this.resetToDraft(this.editing.id);\n        this.confirmDeleteMsg(message, done);\n        return;\n      } catch (error) {\n        handleError(error);\n      }\n    }\n\n    return done();\n  }\n\n  async processMessageSend(message) {\n    if (await this.processSetReaction(message)) {\n      return;\n    }\n\n    this.clearCurrentDraft();\n\n    if (await this.processTooLongMessage(message)) {\n      return;\n    }\n\n    if (await this.processMessageEditing(_objectSpread(_objectSpread({}, message), {}, {\n      _id: this.editing.id\n    }))) {\n      return;\n    }\n\n    KonchatNotification.removeRoomNotification(message.rid);\n\n    if (await this.processSlashCommand(message)) {\n      return;\n    }\n\n    await callWithErrorHandling('sendMessage', message);\n  }\n\n  async processSetReaction(_ref7) {\n    let {\n      rid,\n      tmid,\n      msg\n    } = _ref7;\n\n    if (msg.slice(0, 2) !== '+:') {\n      return false;\n    }\n\n    const reaction = msg.slice(1).trim();\n\n    if (!emoji.list[reaction]) {\n      return false;\n    }\n\n    const lastMessage = this.collection.findOne({\n      rid,\n      tmid\n    }, {\n      fields: {\n        ts: 1\n      },\n      sort: {\n        ts: -1\n      }\n    });\n    await callWithErrorHandling('setReaction', reaction, lastMessage._id);\n    return true;\n  }\n\n  async processTooLongMessage(_ref8) {\n    let {\n      msg,\n      rid,\n      tmid\n    } = _ref8;\n    const adjustedMessage = messageProperties.messageWithoutEmojiShortnames(msg);\n\n    if (messageProperties.length(adjustedMessage) <= settings.get('Message_MaxAllowedSize') && msg) {\n      return false;\n    }\n\n    if (!settings.get('FileUpload_Enabled') || !settings.get('Message_AllowConvertLongMessagesToAttachment') || this.editing.id) {\n      throw new Error({\n        error: 'Message_too_long'\n      });\n    }\n\n    const onConfirm = () => {\n      const contentType = 'text/plain';\n      const messageBlob = new Blob([msg], {\n        type: contentType\n      });\n      const fileName = \"\".concat(Meteor.user().username, \" - \").concat(new Date(), \".txt\");\n      const file = new File([messageBlob], fileName, {\n        type: contentType,\n        lastModified: Date.now()\n      });\n      fileUpload([{\n        file,\n        name: fileName\n      }], this.input, {\n        rid,\n        tmid\n      });\n      imperativeModal.close();\n    };\n\n    const onClose = () => {\n      messageBoxState.set(this.input, msg);\n      imperativeModal.close();\n    };\n\n    imperativeModal.open({\n      component: GenericModal,\n      props: {\n        title: t('Message_too_long'),\n        children: t('Send_it_as_attachment_instead_question'),\n        onConfirm,\n        onClose,\n        onCancel: onClose,\n        variant: 'warning'\n      }\n    });\n    return true;\n  }\n\n  async processMessageEditing(message) {\n    if (!message._id) {\n      return false;\n    }\n\n    if (MessageTypes.isSystemMessage(message)) {\n      return false;\n    }\n\n    this.clearEditing();\n    await callWithErrorHandling('updateMessage', message);\n    return true;\n  }\n\n  async processSlashCommand(msgObject) {\n    if (msgObject.msg[0] === '/') {\n      const match = msgObject.msg.match(/^\\/([^\\s]+)(?:\\s+(.*))?$/m);\n\n      if (match) {\n        let command;\n\n        if (slashCommands.commands[match[1]]) {\n          const commandOptions = slashCommands.commands[match[1]];\n          command = match[1];\n          const param = match[2] || '';\n\n          if (!commandOptions.permission || hasAtLeastOnePermission(commandOptions.permission, Session.get('openedRoom'))) {\n            if (commandOptions.clientOnly) {\n              commandOptions.callback(command, param, msgObject);\n            } else {\n              APIClient.v1.post('statistics.telemetry', {\n                params: [{\n                  eventName: 'slashCommandsStats',\n                  timestamp: Date.now(),\n                  command\n                }]\n              });\n              const triggerId = generateTriggerId(slashCommands.commands[command].appId);\n              Meteor.call('slashCommand', {\n                cmd: command,\n                params: param,\n                msg: msgObject,\n                triggerId\n              }, (err, result) => {\n                typeof commandOptions.result === 'function' && commandOptions.result(err, result, {\n                  cmd: command,\n                  params: param,\n                  msg: msgObject\n                });\n              });\n            }\n\n            return true;\n          }\n        }\n\n        if (!settings.get('Message_AllowUnrecognizedSlashCommand')) {\n          const invalidCommandMsg = {\n            _id: Random.id(),\n            rid: msgObject.rid,\n            ts: new Date(),\n            msg: TAPi18n.__('No_such_command', {\n              command: escapeHTML(match[1])\n            }),\n            u: {\n              username: settings.get('InternalHubot_Username') || 'rocket.cat'\n            },\n            private: true\n          };\n          this.collection.upsert({\n            _id: invalidCommandMsg._id\n          }, invalidCommandMsg);\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  confirmDeleteMsg(message) {\n    let done = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n\n    if (MessageTypes.isSystemMessage(message)) {\n      return done();\n    }\n\n    const room = message.drid && Rooms.findOne({\n      _id: message.drid,\n      prid: {\n        $exists: true\n      }\n    });\n\n    const onConfirm = () => {\n      if (this.editing.id === message._id) {\n        this.clearEditing();\n      }\n\n      this.deleteMsg(message);\n      this.$input.focus();\n      done();\n      imperativeModal.close();\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Your_entry_has_been_deleted')\n      });\n    };\n\n    const onCloseModal = () => {\n      imperativeModal.close();\n\n      if (this.editing.id === message._id) {\n        this.clearEditing();\n      }\n\n      this.$input.focus();\n      done();\n    };\n\n    imperativeModal.open({\n      component: GenericModal,\n      props: {\n        title: t('Are_you_sure'),\n        children: room ? t('The_message_is_a_discussion_you_will_not_be_able_to_recover') : t('You_will_not_be_able_to_recover'),\n        variant: 'danger',\n        confirmText: t('Yes_delete_it'),\n        onConfirm,\n        onClose: onCloseModal,\n        onCancel: onCloseModal\n      }\n    });\n  }\n\n  async deleteMsg(_ref9) {\n    let {\n      _id,\n      rid,\n      ts\n    } = _ref9;\n    const forceDelete = hasAtLeastOnePermission('force-delete-message', rid);\n    const blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes');\n\n    if (blockDeleteInMinutes && forceDelete === false) {\n      let msgTs;\n\n      if (ts) {\n        msgTs = moment(ts);\n      }\n\n      let currentTsDiff;\n\n      if (msgTs) {\n        currentTsDiff = moment().diff(msgTs, 'minutes');\n      }\n\n      if (currentTsDiff > blockDeleteInMinutes) {\n        dispatchToastMessage({\n          type: 'error',\n          message: t('Message_deleting_blocked')\n        });\n        return;\n      }\n    }\n\n    await callWithErrorHandling('deleteMessage', {\n      _id\n    });\n  }\n\n  keydown(event) {\n    const {\n      currentTarget: input,\n      which: keyCode\n    } = event;\n\n    if (keyCode === keyCodes.ESCAPE && this.editing.element) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!this.resetToDraft(this.editing.id)) {\n        this.clearCurrentDraft();\n        this.clearEditing();\n        return true;\n      }\n\n      return;\n    }\n\n    if (keyCode === keyCodes.ARROW_UP || keyCode === keyCodes.ARROW_DOWN) {\n      if (event.shiftKey) {\n        return;\n      }\n\n      const cursorPosition = input.selectionEnd;\n\n      if (keyCode === keyCodes.ARROW_UP) {\n        if (cursorPosition === 0) {\n          this.toPrevMessage();\n        } else if (!event.altKey) {\n          return;\n        }\n\n        if (event.altKey) {\n          this.$input.setCursorPosition(0);\n        }\n      } else {\n        if (cursorPosition === input.value.length) {\n          this.toNextMessage();\n        } else if (!event.altKey) {\n          return;\n        }\n\n        if (event.altKey) {\n          this.$input.setCursorPosition(-1);\n        }\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  keyup(event, _ref10) {\n    let {\n      rid,\n      tmid\n    } = _ref10;\n    const {\n      currentTarget: input,\n      which: keyCode\n    } = event;\n\n    if (!Object.values(keyCodes).includes(keyCode)) {\n      if (input.value.trim()) {\n        UserAction.start(rid, USER_ACTIVITIES.USER_TYPING, {\n          tmid\n        });\n      } else {\n        UserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, {\n          tmid\n        });\n      }\n    }\n\n    messageBoxState.save({\n      rid,\n      tmid\n    }, input);\n  }\n\n  onDestroyed(rid, tmid) {\n    var _this$input, _this$input$parentEle;\n\n    UserAction.cancel(rid); // TODO: check why we need too many ?. here :(\n\n    if (((_this$input = this.input) === null || _this$input === void 0 ? void 0 : (_this$input$parentEle = _this$input.parentElement) === null || _this$input$parentEle === void 0 ? void 0 : _this$input$parentEle.classList.contains('editing')) === true) {\n      if (!tmid) {\n        this.clearCurrentDraft();\n        this.clearEditing();\n      }\n\n      messageBoxState.set(this.input, '');\n      messageBoxState.save({\n        rid,\n        tmid\n      }, this.$input);\n    }\n  }\n\n}","map":{"version":3,"sources":["app/ui/client/lib/chatMessages.js"],"names":["_objectSpread","module","link","default","v","export","ChatMessages","moment","_","Meteor","Random","FlowRouter","Session","TAPi18n","escapeHTML","KonchatNotification","UserAction","USER_ACTIVITIES","fileUpload","t","slashCommands","APIClient","messageProperties","MessageTypes","readMessage","settings","callbacks","hasAtLeastOnePermission","Messages","Rooms","ChatMessage","ChatSubscription","emoji","generateTriggerId","imperativeModal","GenericModal","keyCodes","prependReplies","callWithErrorHandling","handleError","dispatchToastMessage","onClientBeforeSendMessage","messageBoxState","saveValue","debounce","value","rid","tmid","key","filter","Boolean","join","_localStorage","setItem","removeItem","restoreValue","getItem","restore","input","set","save","$","trigger","purgeAll","Object","keys","indexOf","forEach","add","priority","MEDIUM","constructor","collection","editing","records","initializeWrapper","wrapper","initializeInput","$input","restoreReplies","requestInputFocus","mid","getQueryParam","message","findOne","data","setTimeout","window","matchMedia","matches","focus","recordInputAsDraft","id","record","draft","msg","clearCurrentDraft","hasValue","resetToDraft","oldValue","toPrevMessage","element","messages","Array","from","querySelectorAll","pop","edit","previous","previousElementSibling","clearEditing","toNextMessage","next","nextElementSibling","isEditingTheNextOne","dataset","hasPermission","editAllowed","get","editOwn","u","_id","userId","classList","contains","blockEditInMinutes","currentTsDiff","msgTs","ts","diff","parentElement","attachments","description","cursorPosition","setCursorPosition","saved","savedCursor","selectionEnd","remove","send","event","tshow","done","threadsEnabled","stop","USER_TYPING","trim","mention","replies","length","originalMessage","fields","reactive","undefined","readNow","refreshUnreadMark","processMessageSend","removeData","error","isDescription","processMessageEditing","confirmDeleteMsg","processSetReaction","processTooLongMessage","removeRoomNotification","processSlashCommand","slice","reaction","list","lastMessage","sort","adjustedMessage","messageWithoutEmojiShortnames","Error","onConfirm","contentType","messageBlob","Blob","type","fileName","user","username","Date","file","File","lastModified","now","name","close","onClose","open","component","props","title","children","onCancel","variant","isSystemMessage","msgObject","match","command","commands","commandOptions","param","permission","clientOnly","callback","v1","post","params","eventName","timestamp","triggerId","appId","call","cmd","err","result","invalidCommandMsg","__","private","upsert","room","drid","prid","$exists","deleteMsg","onCloseModal","confirmText","forceDelete","blockDeleteInMinutes","keydown","currentTarget","which","keyCode","ESCAPE","preventDefault","stopPropagation","ARROW_UP","ARROW_DOWN","shiftKey","altKey","keyup","values","includes","start","onDestroyed","cancel"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport _ from 'underscore';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { KonchatNotification } from './notification';\nimport { UserAction, USER_ACTIVITIES } from '../index';\nimport { fileUpload } from './fileUpload';\nimport { t, slashCommands, APIClient } from '../../../utils/client';\nimport { messageProperties, MessageTypes, readMessage } from '../../../ui-utils/client';\nimport { settings } from '../../../settings/client';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { hasAtLeastOnePermission } from '../../../authorization/client';\nimport { Messages, Rooms, ChatMessage, ChatSubscription } from '../../../models/client';\nimport { emoji } from '../../../emoji/client';\nimport { generateTriggerId } from '../../../ui-message/client/ActionManager';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport GenericModal from '../../../../client/components/GenericModal';\nimport { keyCodes } from '../../../../client/lib/utils/keyCodes';\nimport { prependReplies } from '../../../../client/lib/utils/prependReplies';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { handleError } from '../../../../client/lib/utils/handleError';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { onClientBeforeSendMessage } from '../../../../client/lib/onClientBeforeSendMessage';\n\nconst messageBoxState = {\n\tsaveValue: _.debounce(({ rid, tmid }, value) => {\n\t\tconst key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n\t\tvalue ? Meteor._localStorage.setItem(key, value) : Meteor._localStorage.removeItem(key);\n\t}, 1000),\n\n\trestoreValue: ({ rid, tmid }) => {\n\t\tconst key = ['messagebox', rid, tmid].filter(Boolean).join('_');\n\t\treturn Meteor._localStorage.getItem(key);\n\t},\n\n\trestore: ({ rid, tmid }, input) => {\n\t\tconst value = messageBoxState.restoreValue({ rid, tmid });\n\t\tif (typeof value === 'string') {\n\t\t\tmessageBoxState.set(input, value);\n\t\t}\n\t},\n\n\tsave: ({ rid, tmid }, input) => {\n\t\tmessageBoxState.saveValue({ rid, tmid }, input.value);\n\t},\n\n\tset: (input, value) => {\n\t\tinput.value = value;\n\t\t$(input).trigger('change').trigger('input');\n\t},\n\n\tpurgeAll: () => {\n\t\tObject.keys(Meteor._localStorage)\n\t\t\t.filter((key) => key.indexOf('messagebox_') === 0)\n\t\t\t.forEach((key) => Meteor._localStorage.removeItem(key));\n\t},\n};\n\ncallbacks.add('afterLogoutCleanUp', messageBoxState.purgeAll, callbacks.priority.MEDIUM, 'chatMessages-after-logout-cleanup');\n\nexport class ChatMessages {\n\tconstructor(collection = ChatMessage) {\n\t\tthis.collection = collection;\n\t}\n\n\tediting = {};\n\n\trecords = {};\n\n\tinitializeWrapper(wrapper) {\n\t\tthis.wrapper = wrapper;\n\t}\n\n\tinitializeInput(input, { rid, tmid }) {\n\t\tthis.input = input;\n\t\tthis.$input = $(this.input);\n\n\t\tif (!input || !rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tmessageBoxState.restore({ rid, tmid }, input);\n\t\tthis.restoreReplies();\n\t\tthis.requestInputFocus();\n\t}\n\n\tasync restoreReplies() {\n\t\tconst mid = FlowRouter.getQueryParam('reply');\n\t\tif (!mid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = Messages.findOne(mid) || (await callWithErrorHandling('getSingleMessage', mid));\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$input.data('reply', [message]).trigger('dataChange');\n\t}\n\n\trequestInputFocus() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.input && window.matchMedia('screen and (min-device-width: 500px)').matches) {\n\t\t\t\tthis.input.focus();\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\trecordInputAsDraft() {\n\t\tconst message = this.collection.findOne(this.editing.id);\n\t\tconst record = this.records[this.editing.id] || {};\n\t\tconst draft = this.input.value;\n\n\t\tif (draft === message.msg) {\n\t\t\tthis.clearCurrentDraft();\n\t\t\treturn;\n\t\t}\n\n\t\trecord.draft = draft;\n\t\tthis.records[this.editing.id] = record;\n\t}\n\n\tclearCurrentDraft() {\n\t\tconst hasValue = this.records[this.editing.id];\n\t\tdelete this.records[this.editing.id];\n\t\treturn !!hasValue;\n\t}\n\n\tresetToDraft(id) {\n\t\tconst message = this.collection.findOne(id);\n\t\tconst oldValue = this.input.value;\n\t\tmessageBoxState.set(this.input, message.msg);\n\t\treturn oldValue !== message.msg;\n\t}\n\n\ttoPrevMessage() {\n\t\tconst { element } = this.editing;\n\t\tif (!element) {\n\t\t\tconst messages = Array.from(this.wrapper.querySelectorAll('.own:not(.system)'));\n\t\t\tconst message = messages.pop();\n\t\t\treturn message && this.edit(message, false);\n\t\t}\n\n\t\tfor (let previous = element.previousElementSibling; previous; previous = previous.previousElementSibling) {\n\t\t\tif (previous.matches('.own:not(.system)')) {\n\t\t\t\treturn this.edit(previous, false);\n\t\t\t}\n\t\t}\n\t\tthis.clearEditing();\n\t}\n\n\ttoNextMessage() {\n\t\tconst { element } = this.editing;\n\t\tif (element) {\n\t\t\tlet next;\n\t\t\tfor (next = element.nextElementSibling; next; next = next.nextElementSibling) {\n\t\t\t\tif (next.matches('.own:not(.system)')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext ? this.edit(next, true) : this.clearEditing();\n\t\t} else {\n\t\t\tthis.clearEditing();\n\t\t}\n\t}\n\n\tedit(element, isEditingTheNextOne) {\n\t\tconst message = this.collection.findOne(element.dataset.id);\n\n\t\tconst hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n\t\tconst editAllowed = settings.get('Message_AllowEditing');\n\t\tconst editOwn = message && message.u && message.u._id === Meteor.userId();\n\n\t\tif (!hasPermission && (!editAllowed || !editOwn)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (element.classList.contains('system')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes');\n\t\tif (blockEditInMinutes && blockEditInMinutes !== 0) {\n\t\t\tlet currentTsDiff;\n\t\t\tlet msgTs;\n\t\t\tif (message.ts) {\n\t\t\t\tmsgTs = moment(message.ts);\n\t\t\t}\n\t\t\tif (msgTs) {\n\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t}\n\t\t\tif (currentTsDiff > blockEditInMinutes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst draft = this.records[message._id];\n\t\tlet msg = draft && draft.draft;\n\t\tmsg = msg || message.msg;\n\n\t\tthis.clearEditing();\n\n\t\tthis.editing.element = element;\n\t\tthis.editing.id = message._id;\n\t\tthis.input.parentElement.classList.add('editing');\n\t\telement.classList.add('editing');\n\n\t\tif (message.attachments && message.attachments[0].description) {\n\t\t\tmessageBoxState.set(this.input, message.attachments[0].description);\n\t\t} else {\n\t\t\tmessageBoxState.set(this.input, msg);\n\t\t}\n\n\t\tconst cursorPosition = isEditingTheNextOne ? 0 : -1;\n\t\tthis.input.focus();\n\t\tthis.$input.setCursorPosition(cursorPosition);\n\t}\n\n\tclearEditing() {\n\t\tif (!this.editing.element) {\n\t\t\tthis.editing.saved = this.input.value;\n\t\t\tthis.editing.savedCursor = this.input.selectionEnd;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.recordInputAsDraft();\n\t\tthis.input.parentElement.classList.remove('editing');\n\t\tthis.editing.element.classList.remove('editing');\n\t\tdelete this.editing.id;\n\t\tdelete this.editing.element;\n\n\t\tmessageBoxState.set(this.input, this.editing.saved || '');\n\t\tconst cursorPosition = this.editing.savedCursor ? this.editing.savedCursor : -1;\n\t\tthis.$input.setCursorPosition(cursorPosition);\n\t}\n\n\tasync send(event, { rid, tmid, value, tshow }, done = () => {}) {\n\t\tconst threadsEnabled = settings.get('Threads_enabled');\n\n\t\tUserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, { tmid });\n\n\t\tif (!ChatSubscription.findOne({ rid })) {\n\t\t\tawait callWithErrorHandling('joinRoom', rid);\n\t\t}\n\n\t\tmessageBoxState.save({ rid, tmid }, this.input);\n\n\t\tlet msg = value.trim();\n\t\tif (msg) {\n\t\t\tconst mention = this.$input.data('mention-user') || false;\n\t\t\tconst replies = this.$input.data('reply') || [];\n\t\t\tif (!mention || !threadsEnabled) {\n\t\t\t\tmsg = await prependReplies(msg, replies, mention);\n\t\t\t}\n\n\t\t\tif (mention && threadsEnabled && replies.length) {\n\t\t\t\ttmid = replies[0]._id;\n\t\t\t}\n\t\t}\n\n\t\t// don't add tmid or tshow if the message isn't part of a thread (it can happen if editing the main message of a thread)\n\t\tconst originalMessage = this.collection.findOne({ _id: this.editing.id }, { fields: { tmid: 1 }, reactive: false });\n\t\tif (originalMessage && tmid && !originalMessage.tmid) {\n\t\t\ttmid = undefined;\n\t\t\ttshow = undefined;\n\t\t}\n\n\t\tif (msg) {\n\t\t\treadMessage.readNow(rid);\n\t\t\treadMessage.refreshUnreadMark(rid);\n\n\t\t\tconst message = await onClientBeforeSendMessage({\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid,\n\t\t\t\ttshow,\n\t\t\t\ttmid,\n\t\t\t\tmsg,\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tawait this.processMessageSend(message);\n\t\t\t\tthis.$input.removeData('reply').trigger('dataChange');\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t\treturn done();\n\t\t}\n\n\t\tif (this.editing.id) {\n\t\t\tconst message = this.collection.findOne(this.editing.id);\n\t\t\tconst isDescription = message.attachments && message.attachments[0] && message.attachments[0].description;\n\n\t\t\ttry {\n\t\t\t\tif (isDescription) {\n\t\t\t\t\tawait this.processMessageEditing({ _id: this.editing.id, rid, msg: '' });\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\n\t\t\t\tthis.resetToDraft(this.editing.id);\n\t\t\t\tthis.confirmDeleteMsg(message, done);\n\t\t\t\treturn;\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}\n\n\t\treturn done();\n\t}\n\n\tasync processMessageSend(message) {\n\t\tif (await this.processSetReaction(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearCurrentDraft();\n\n\t\tif (await this.processTooLongMessage(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (await this.processMessageEditing({ ...message, _id: this.editing.id })) {\n\t\t\treturn;\n\t\t}\n\n\t\tKonchatNotification.removeRoomNotification(message.rid);\n\n\t\tif (await this.processSlashCommand(message)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait callWithErrorHandling('sendMessage', message);\n\t}\n\n\tasync processSetReaction({ rid, tmid, msg }) {\n\t\tif (msg.slice(0, 2) !== '+:') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst reaction = msg.slice(1).trim();\n\t\tif (!emoji.list[reaction]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst lastMessage = this.collection.findOne({ rid, tmid }, { fields: { ts: 1 }, sort: { ts: -1 } });\n\t\tawait callWithErrorHandling('setReaction', reaction, lastMessage._id);\n\t\treturn true;\n\t}\n\n\tasync processTooLongMessage({ msg, rid, tmid }) {\n\t\tconst adjustedMessage = messageProperties.messageWithoutEmojiShortnames(msg);\n\t\tif (messageProperties.length(adjustedMessage) <= settings.get('Message_MaxAllowedSize') && msg) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!settings.get('FileUpload_Enabled') || !settings.get('Message_AllowConvertLongMessagesToAttachment') || this.editing.id) {\n\t\t\tthrow new Error({ error: 'Message_too_long' });\n\t\t}\n\n\t\tconst onConfirm = () => {\n\t\t\tconst contentType = 'text/plain';\n\t\t\tconst messageBlob = new Blob([msg], { type: contentType });\n\t\t\tconst fileName = `${Meteor.user().username} - ${new Date()}.txt`;\n\t\t\tconst file = new File([messageBlob], fileName, {\n\t\t\t\ttype: contentType,\n\t\t\t\tlastModified: Date.now(),\n\t\t\t});\n\t\t\tfileUpload([{ file, name: fileName }], this.input, { rid, tmid });\n\t\t\timperativeModal.close();\n\t\t};\n\n\t\tconst onClose = () => {\n\t\t\tmessageBoxState.set(this.input, msg);\n\t\t\timperativeModal.close();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Message_too_long'),\n\t\t\t\tchildren: t('Send_it_as_attachment_instead_question'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose,\n\t\t\t\tonCancel: onClose,\n\t\t\t\tvariant: 'warning',\n\t\t\t},\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tasync processMessageEditing(message) {\n\t\tif (!message._id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.clearEditing();\n\t\tawait callWithErrorHandling('updateMessage', message);\n\t\treturn true;\n\t}\n\n\tasync processSlashCommand(msgObject) {\n\t\tif (msgObject.msg[0] === '/') {\n\t\t\tconst match = msgObject.msg.match(/^\\/([^\\s]+)(?:\\s+(.*))?$/m);\n\t\t\tif (match) {\n\t\t\t\tlet command;\n\t\t\t\tif (slashCommands.commands[match[1]]) {\n\t\t\t\t\tconst commandOptions = slashCommands.commands[match[1]];\n\t\t\t\t\tcommand = match[1];\n\t\t\t\t\tconst param = match[2] || '';\n\n\t\t\t\t\tif (!commandOptions.permission || hasAtLeastOnePermission(commandOptions.permission, Session.get('openedRoom'))) {\n\t\t\t\t\t\tif (commandOptions.clientOnly) {\n\t\t\t\t\t\t\tcommandOptions.callback(command, param, msgObject);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPIClient.v1.post('statistics.telemetry', { params: [{ eventName: 'slashCommandsStats', timestamp: Date.now(), command }] });\n\t\t\t\t\t\t\tconst triggerId = generateTriggerId(slashCommands.commands[command].appId);\n\t\t\t\t\t\t\tMeteor.call('slashCommand', { cmd: command, params: param, msg: msgObject, triggerId }, (err, result) => {\n\t\t\t\t\t\t\t\ttypeof commandOptions.result === 'function' &&\n\t\t\t\t\t\t\t\t\tcommandOptions.result(err, result, {\n\t\t\t\t\t\t\t\t\t\tcmd: command,\n\t\t\t\t\t\t\t\t\t\tparams: param,\n\t\t\t\t\t\t\t\t\t\tmsg: msgObject,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!settings.get('Message_AllowUnrecognizedSlashCommand')) {\n\t\t\t\t\tconst invalidCommandMsg = {\n\t\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\t\trid: msgObject.rid,\n\t\t\t\t\t\tts: new Date(),\n\t\t\t\t\t\tmsg: TAPi18n.__('No_such_command', { command: escapeHTML(match[1]) }),\n\t\t\t\t\t\tu: {\n\t\t\t\t\t\t\tusername: settings.get('InternalHubot_Username') || 'rocket.cat',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprivate: true,\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.collection.upsert({ _id: invalidCommandMsg._id }, invalidCommandMsg);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconfirmDeleteMsg(message, done = () => {}) {\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn done();\n\t\t}\n\n\t\tconst room =\n\t\t\tmessage.drid &&\n\t\t\tRooms.findOne({\n\t\t\t\t_id: message.drid,\n\t\t\t\tprid: { $exists: true },\n\t\t\t});\n\n\t\tconst onConfirm = () => {\n\t\t\tif (this.editing.id === message._id) {\n\t\t\t\tthis.clearEditing();\n\t\t\t}\n\n\t\t\tthis.deleteMsg(message);\n\n\t\t\tthis.$input.focus();\n\t\t\tdone();\n\n\t\t\timperativeModal.close();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_entry_has_been_deleted') });\n\t\t};\n\n\t\tconst onCloseModal = () => {\n\t\t\timperativeModal.close();\n\t\t\tif (this.editing.id === message._id) {\n\t\t\t\tthis.clearEditing();\n\t\t\t}\n\t\t\tthis.$input.focus();\n\t\t\tdone();\n\t\t};\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\ttitle: t('Are_you_sure'),\n\t\t\t\tchildren: room ? t('The_message_is_a_discussion_you_will_not_be_able_to_recover') : t('You_will_not_be_able_to_recover'),\n\t\t\t\tvariant: 'danger',\n\t\t\t\tconfirmText: t('Yes_delete_it'),\n\t\t\t\tonConfirm,\n\t\t\t\tonClose: onCloseModal,\n\t\t\t\tonCancel: onCloseModal,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync deleteMsg({ _id, rid, ts }) {\n\t\tconst forceDelete = hasAtLeastOnePermission('force-delete-message', rid);\n\t\tconst blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes');\n\t\tif (blockDeleteInMinutes && forceDelete === false) {\n\t\t\tlet msgTs;\n\t\t\tif (ts) {\n\t\t\t\tmsgTs = moment(ts);\n\t\t\t}\n\t\t\tlet currentTsDiff;\n\t\t\tif (msgTs) {\n\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t}\n\t\t\tif (currentTsDiff > blockDeleteInMinutes) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Message_deleting_blocked') });\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tawait callWithErrorHandling('deleteMessage', { _id });\n\t}\n\n\tkeydown(event) {\n\t\tconst { currentTarget: input, which: keyCode } = event;\n\n\t\tif (keyCode === keyCodes.ESCAPE && this.editing.element) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tif (!this.resetToDraft(this.editing.id)) {\n\t\t\t\tthis.clearCurrentDraft();\n\t\t\t\tthis.clearEditing();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (keyCode === keyCodes.ARROW_UP || keyCode === keyCodes.ARROW_DOWN) {\n\t\t\tif (event.shiftKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst cursorPosition = input.selectionEnd;\n\n\t\t\tif (keyCode === keyCodes.ARROW_UP) {\n\t\t\t\tif (cursorPosition === 0) {\n\t\t\t\t\tthis.toPrevMessage();\n\t\t\t\t} else if (!event.altKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event.altKey) {\n\t\t\t\t\tthis.$input.setCursorPosition(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (cursorPosition === input.value.length) {\n\t\t\t\t\tthis.toNextMessage();\n\t\t\t\t} else if (!event.altKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event.altKey) {\n\t\t\t\t\tthis.$input.setCursorPosition(-1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\tkeyup(event, { rid, tmid }) {\n\t\tconst { currentTarget: input, which: keyCode } = event;\n\n\t\tif (!Object.values(keyCodes).includes(keyCode)) {\n\t\t\tif (input.value.trim()) {\n\t\t\t\tUserAction.start(rid, USER_ACTIVITIES.USER_TYPING, { tmid });\n\t\t\t} else {\n\t\t\t\tUserAction.stop(rid, USER_ACTIVITIES.USER_TYPING, { tmid });\n\t\t\t}\n\t\t}\n\n\t\tmessageBoxState.save({ rid, tmid }, input);\n\t}\n\n\tonDestroyed(rid, tmid) {\n\t\tUserAction.cancel(rid);\n\t\t// TODO: check why we need too many ?. here :(\n\t\tif (this.input?.parentElement?.classList.contains('editing') === true) {\n\t\t\tif (!tmid) {\n\t\t\t\tthis.clearCurrentDraft();\n\t\t\t\tthis.clearEditing();\n\t\t\t}\n\t\t\tmessageBoxState.set(this.input, '');\n\t\t\tmessageBoxState.save({ rid, tmid }, this.$input);\n\t\t}\n\t}\n}\n"]},"sourceType":"module","hash":"fb0eb4b5f0f270c8c7b51b7876cbb26d7ed85fb6"}
