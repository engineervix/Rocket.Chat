{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/autoupdate/autoupdate_client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/autoupdate/autoupdate_client.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/autoupdate/autoupdate_client.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/autoupdate/autoupdate_client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/autoupdate/autoupdate_client.js"}},"code":"!function (module1) {\n  module1.export({\n    Autoupdate: function () {\n      return Autoupdate;\n    }\n  });\n  var ClientVersions;\n  module1.link(\"./client_versions.js\", {\n    ClientVersions: function (v) {\n      ClientVersions = v;\n    }\n  }, 0);\n  var clientArch = Meteor.isCordova ? \"web.cordova\" : Meteor.isModern ? \"web.browser\" : \"web.browser.legacy\";\n  var autoupdateVersions = ((__meteor_runtime_config__.autoupdate || {}).versions || {})[clientArch] || {\n    version: \"unknown\",\n    versionRefreshable: \"unknown\",\n    versionNonRefreshable: \"unknown\",\n    assets: []\n  };\n  var Autoupdate = {};\n  // Stores acceptable client versions.\n  var clientVersions = Autoupdate._clientVersions = // Used by a self-test and hot-module-replacement\n  new ClientVersions();\n  Meteor.connection.registerStore(\"meteor_autoupdate_clientVersions\", clientVersions.createStore());\n\n  Autoupdate.newClientAvailable = function () {\n    return clientVersions.newClientAvailable(clientArch, [\"versionRefreshable\", \"versionNonRefreshable\"], autoupdateVersions);\n  }; // Set to true if the link.onload callback ever fires for any <link> node.\n\n\n  var knownToSupportCssOnLoad = false;\n  var retry = new Retry({\n    // Unlike the stream reconnect use of Retry, which we want to be instant\n    // in normal operation, this is a wacky failure. We don't want to retry\n    // right away, we can start slowly.\n    //\n    // A better way than timeconstants here might be to use the knowledge\n    // of when we reconnect to help trigger these retries. Typically, the\n    // server fixing code will result in a restart and reconnect, but\n    // potentially the subscription could have a transient error.\n    minCount: 0,\n    // don't do any immediate retries\n    baseTimeout: 30 * 1000 // start with 30s\n\n  });\n  var failures = 0;\n\n  Autoupdate._retrySubscription = function () {\n    Meteor.subscribe(\"meteor_autoupdate_clientVersions\", {\n      onError: function (error) {\n        Meteor._debug(\"autoupdate subscription failed\", error);\n\n        failures++;\n        retry.retryLater(failures, function () {\n          // Just retry making the subscription, don't reload the whole\n          // page. While reloading would catch more cases (for example,\n          // the server went back a version and is now doing old-style hot\n          // code push), it would also be more prone to reload loops,\n          // which look really bad to the user. Just retrying the\n          // subscription over DDP means it is at least possible to fix by\n          // updating the server.\n          Autoupdate._retrySubscription();\n        });\n      },\n      onReady: function () {\n        // Call checkNewVersionDocument with a slight delay, so that the\n        // const handle declaration is guaranteed to be initialized, even if\n        // the added or changed callbacks are called synchronously.\n        var resolved = Promise.resolve();\n\n        function check(doc) {\n          resolved.then(function () {\n            return checkNewVersionDocument(doc);\n          });\n        }\n\n        var stop = clientVersions.watch(check);\n\n        function checkNewVersionDocument(doc) {\n          if (doc._id !== clientArch) {\n            return;\n          }\n\n          if (doc.versionNonRefreshable !== autoupdateVersions.versionNonRefreshable) {\n            // Non-refreshable assets have changed, so we have to reload the\n            // whole page rather than just replacing <link> tags.\n            if (stop) stop();\n\n            if (Package.reload) {\n              // The reload package should be provided by ddp-client, which\n              // is provided by the ddp package that autoupdate depends on.\n              Package.reload.Reload._reload();\n            }\n\n            return;\n          }\n\n          if (doc.versionRefreshable !== autoupdateVersions.versionRefreshable) {\n            var waitUntilCssLoads = function (link, callback) {\n              var called;\n\n              link.onload = function () {\n                knownToSupportCssOnLoad = true;\n\n                if (!called) {\n                  called = true;\n                  callback();\n                }\n              };\n\n              if (!knownToSupportCssOnLoad) {\n                var id = Meteor.setInterval(function () {\n                  if (link.sheet) {\n                    if (!called) {\n                      called = true;\n                      callback();\n                    }\n\n                    Meteor.clearInterval(id);\n                  }\n                }, 50);\n              }\n            };\n\n            var removeOldLinks = function () {\n              if (oldLinks.length > 0 && --newLinksLeftToLoad < 1) {\n                oldLinks.splice(0).forEach(function (link) {\n                  link.parentNode.removeChild(link);\n                });\n              }\n            };\n\n            autoupdateVersions.versionRefreshable = doc.versionRefreshable; // Switch out old css links for the new css links. Inspired by:\n            // https://github.com/guard/guard-livereload/blob/master/js/livereload.js#L710\n\n            var newCss = doc.assets || [];\n            var oldLinks = [];\n            Array.prototype.forEach.call(document.getElementsByTagName('link'), function (link) {\n              if (link.className === '__meteor-css__') {\n                oldLinks.push(link);\n              }\n            });\n            var newLinksLeftToLoad = newCss.length;\n\n            if (newCss.length > 0) {\n              newCss.forEach(function (css) {\n                var newLink = document.createElement(\"link\");\n                newLink.setAttribute(\"rel\", \"stylesheet\");\n                newLink.setAttribute(\"type\", \"text/css\");\n                newLink.setAttribute(\"class\", \"__meteor-css__\");\n                newLink.setAttribute(\"href\", css.url);\n                waitUntilCssLoads(newLink, function () {\n                  Meteor.setTimeout(removeOldLinks, 200);\n                });\n                var head = document.getElementsByTagName(\"head\").item(0);\n                head.appendChild(newLink);\n              });\n            } else {\n              removeOldLinks();\n            }\n          }\n        }\n      }\n    });\n  };\n\n  Autoupdate._retrySubscription();\n}.call(this, module);","map":{"version":3,"sources":["packages/autoupdate/autoupdate_client.js"],"names":["module1","export","Autoupdate","ClientVersions","link","v","clientArch","Meteor","isCordova","isModern","autoupdateVersions","__meteor_runtime_config__","autoupdate","versions","version","versionRefreshable","versionNonRefreshable","assets","clientVersions","_clientVersions","connection","registerStore","createStore","newClientAvailable","knownToSupportCssOnLoad","retry","Retry","minCount","baseTimeout","failures","_retrySubscription","subscribe","onError","error","_debug","retryLater","onReady","resolved","Promise","resolve","check","doc","then","checkNewVersionDocument","stop","watch","_id","Package","reload","Reload","_reload","waitUntilCssLoads","callback","called","onload","id","setInterval","sheet","clearInterval","removeOldLinks","oldLinks","length","newLinksLeftToLoad","splice","forEach","parentNode","removeChild","newCss","Array","prototype","call","document","getElementsByTagName","className","push","css","newLink","createElement","setAttribute","url","setTimeout","head","item","appendChild"],"mappings":"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","sourcesContent":["// Subscribe to the `meteor_autoupdate_clientVersions` collection,\n// which contains the set of acceptable client versions.\n//\n// A \"hard code push\" occurs when the running client version is not in\n// the set of acceptable client versions (or the server updates the\n// collection, there is a published client version marked `current` and\n// the running client version is no longer in the set).\n//\n// When the `reload` package is loaded, a hard code push causes\n// the browser to reload, so that it will load the latest client\n// version from the server.\n//\n// A \"soft code push\" represents the situation when the running client\n// version is in the set of acceptable versions, but there is a newer\n// version available on the server.\n//\n// `Autoupdate.newClientAvailable` is a reactive data source which\n// becomes `true` if a new version of the client is available on\n// the server.\n//\n// This package doesn't implement a soft code reload process itself,\n// but `newClientAvailable` could be used for example to display a\n// \"click to reload\" link to the user.\n\n// The client version of the client code currently running in the\n// browser.\n\nimport { ClientVersions } from \"./client_versions.js\";\n\nconst clientArch = Meteor.isCordova ? \"web.cordova\" :\n  Meteor.isModern ? \"web.browser\" : \"web.browser.legacy\";\n\nconst autoupdateVersions =\n  ((__meteor_runtime_config__.autoupdate || {}).versions || {})[clientArch] || {\n    version: \"unknown\",\n    versionRefreshable: \"unknown\",\n    versionNonRefreshable: \"unknown\",\n    assets: [],\n  };\n\nexport const Autoupdate = {};\n\n// Stores acceptable client versions.\nconst clientVersions =\n  Autoupdate._clientVersions = // Used by a self-test and hot-module-replacement\n  new ClientVersions();\n\nMeteor.connection.registerStore(\n  \"meteor_autoupdate_clientVersions\",\n  clientVersions.createStore()\n);\n\nAutoupdate.newClientAvailable = function () {\n  return clientVersions.newClientAvailable(\n    clientArch,\n    [\"versionRefreshable\", \"versionNonRefreshable\"],\n    autoupdateVersions\n  );\n};\n\n// Set to true if the link.onload callback ever fires for any <link> node.\nlet knownToSupportCssOnLoad = false;\n\nconst retry = new Retry({\n  // Unlike the stream reconnect use of Retry, which we want to be instant\n  // in normal operation, this is a wacky failure. We don't want to retry\n  // right away, we can start slowly.\n  //\n  // A better way than timeconstants here might be to use the knowledge\n  // of when we reconnect to help trigger these retries. Typically, the\n  // server fixing code will result in a restart and reconnect, but\n  // potentially the subscription could have a transient error.\n  minCount: 0, // don't do any immediate retries\n  baseTimeout: 30*1000 // start with 30s\n});\n\nlet failures = 0;\n\nAutoupdate._retrySubscription = () => {\n  Meteor.subscribe(\"meteor_autoupdate_clientVersions\", {\n    onError(error) {\n      Meteor._debug(\"autoupdate subscription failed\", error);\n      failures++;\n      retry.retryLater(failures, function () {\n        // Just retry making the subscription, don't reload the whole\n        // page. While reloading would catch more cases (for example,\n        // the server went back a version and is now doing old-style hot\n        // code push), it would also be more prone to reload loops,\n        // which look really bad to the user. Just retrying the\n        // subscription over DDP means it is at least possible to fix by\n        // updating the server.\n        Autoupdate._retrySubscription();\n      });\n    },\n\n    onReady() {\n      // Call checkNewVersionDocument with a slight delay, so that the\n      // const handle declaration is guaranteed to be initialized, even if\n      // the added or changed callbacks are called synchronously.\n      const resolved = Promise.resolve();\n      function check(doc) {\n        resolved.then(() => checkNewVersionDocument(doc));\n      }\n\n      const stop = clientVersions.watch(check);\n\n      function checkNewVersionDocument(doc) {\n        if (doc._id !== clientArch) {\n          return;\n        }\n\n        if (doc.versionNonRefreshable !==\n            autoupdateVersions.versionNonRefreshable) {\n          // Non-refreshable assets have changed, so we have to reload the\n          // whole page rather than just replacing <link> tags.\n          if (stop) stop();\n          if (Package.reload) {\n            // The reload package should be provided by ddp-client, which\n            // is provided by the ddp package that autoupdate depends on.\n            Package.reload.Reload._reload();\n          }\n          return;\n        }\n\n        if (doc.versionRefreshable !== autoupdateVersions.versionRefreshable) {\n          autoupdateVersions.versionRefreshable = doc.versionRefreshable;\n\n          // Switch out old css links for the new css links. Inspired by:\n          // https://github.com/guard/guard-livereload/blob/master/js/livereload.js#L710\n          var newCss = doc.assets || [];\n          var oldLinks = [];\n\n          Array.prototype.forEach.call(\n            document.getElementsByTagName('link'),\n            function (link) {\n              if (link.className === '__meteor-css__') {\n                oldLinks.push(link);\n              }\n            }\n          );\n\n          function waitUntilCssLoads(link, callback) {\n            var called;\n\n            link.onload = function () {\n              knownToSupportCssOnLoad = true;\n              if (! called) {\n                called = true;\n                callback();\n              }\n            };\n\n            if (! knownToSupportCssOnLoad) {\n              var id = Meteor.setInterval(function () {\n                if (link.sheet) {\n                  if (! called) {\n                    called = true;\n                    callback();\n                  }\n                  Meteor.clearInterval(id);\n                }\n              }, 50);\n            }\n          }\n\n          let newLinksLeftToLoad = newCss.length;\n          function removeOldLinks() {\n            if (oldLinks.length > 0 &&\n                --newLinksLeftToLoad < 1) {\n              oldLinks.splice(0).forEach(link => {\n                link.parentNode.removeChild(link);\n              });\n            }\n          }\n\n          if (newCss.length > 0) {\n            newCss.forEach(css => {\n              const newLink = document.createElement(\"link\");\n              newLink.setAttribute(\"rel\", \"stylesheet\");\n              newLink.setAttribute(\"type\", \"text/css\");\n              newLink.setAttribute(\"class\", \"__meteor-css__\");\n              newLink.setAttribute(\"href\", css.url);\n\n              waitUntilCssLoads(newLink, function () {\n                Meteor.setTimeout(removeOldLinks, 200);\n              });\n\n              const head = document.getElementsByTagName(\"head\").item(0);\n              head.appendChild(newLink);\n            });\n          } else {\n            removeOldLinks();\n          }\n        }\n      }\n    }\n  });\n};\n\nAutoupdate._retrySubscription();\n"]},"sourceType":"module","hash":"69b95660d7e7a9bd2d1a61d19b92e35696d61d05"}
