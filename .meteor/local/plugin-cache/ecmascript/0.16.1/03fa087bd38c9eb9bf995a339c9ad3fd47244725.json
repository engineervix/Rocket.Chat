{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/MessageAction.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/MessageAction.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/MessageAction.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/MessageAction.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/MessageAction.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nmodule.export({\n  addMessageToList: function () {\n    return addMessageToList;\n  },\n  MessageAction: function () {\n    return MessageAction;\n  }\n});\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 0);\nvar FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar mem;\nmodule.link(\"mem\", {\n  \"default\": function (v) {\n    mem = v;\n  }\n}, 3);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 4);\nvar TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n: function (v) {\n    TAPi18n = v;\n  }\n}, 5);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 6);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 7);\nvar Session;\nmodule.link(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 8);\nvar messageArgs;\nmodule.link(\"./messageArgs\", {\n  messageArgs: function (v) {\n    messageArgs = v;\n  }\n}, 9);\nvar roomCoordinator;\nmodule.link(\"../../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 10);\nvar Messages, Rooms, Subscriptions;\nmodule.link(\"../../../models/client\", {\n  Messages: function (v) {\n    Messages = v;\n  },\n  Rooms: function (v) {\n    Rooms = v;\n  },\n  Subscriptions: function (v) {\n    Subscriptions = v;\n  }\n}, 11);\nvar hasAtLeastOnePermission, hasPermission;\nmodule.link(\"../../../authorization/client\", {\n  hasAtLeastOnePermission: function (v) {\n    hasAtLeastOnePermission = v;\n  },\n  hasPermission: function (v) {\n    hasPermission = v;\n  }\n}, 12);\nvar modal;\nmodule.link(\"./modal\", {\n  modal: function (v) {\n    modal = v;\n  }\n}, 13);\nvar imperativeModal;\nmodule.link(\"../../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 14);\nvar ReactionList;\nmodule.link(\"../../../../client/views/room/modals/ReactionListModal\", {\n  \"default\": function (v) {\n    ReactionList = v;\n  }\n}, 15);\nvar call;\nmodule.link(\"../../../../client/lib/utils/call\", {\n  call: function (v) {\n    call = v;\n  }\n}, 16);\nvar canDeleteMessage;\nmodule.link(\"../../../../client/lib/utils/canDeleteMessage\", {\n  canDeleteMessage: function (v) {\n    canDeleteMessage = v;\n  }\n}, 17);\nvar dispatchToastMessage;\nmodule.link(\"../../../../client/lib/toast\", {\n  dispatchToastMessage: function (v) {\n    dispatchToastMessage = v;\n  }\n}, 18);\n\nvar addMessageToList = function (messagesList, message) {\n  // checks if the message is not already on the list\n  if (!messagesList.find(function (_ref) {\n    var _id = _ref._id;\n    return _id === message._id;\n  })) {\n    messagesList.push(message);\n  }\n\n  return messagesList;\n};\n\nvar MessageAction = new ( /*#__PURE__*/function () {\n  /*\n   \tconfig expects the following keys (only id is mandatory):\n   \t\tid (mandatory)\n   \t\ticon: string\n   \t\tlabel: string\n   \t\taction: function(event, instance)\n   \t\tcondition: function(message)\n  \t\torder: integer\n  \t\tgroup: string (message or menu)\n    */\n  function _class2() {\n    this._getButtons = mem(function () {\n      return _.sortBy(_.toArray(this.buttons.get()), 'order');\n    });\n    this._getButtonsByGroup = mem(function (group) {\n      return this._getButtons().filter(function (button) {\n        return Array.isArray(button.group) ? button.group.includes(group) : button.group === group;\n      });\n    });\n    this.buttons = new ReactiveVar({});\n  }\n\n  var _proto = _class2.prototype;\n\n  _proto.addButton = function () {\n    function addButton(config) {\n      var _this = this;\n\n      if (!config || !config.id) {\n        return false;\n      }\n\n      if (!config.group) {\n        config.group = 'menu';\n      }\n\n      if (config.condition) {\n        config.condition = mem(config.condition, {\n          maxAge: 1000,\n          cacheKey: JSON.stringify\n        });\n      }\n\n      return Tracker.nonreactive(function () {\n        var btns = _this.buttons.get();\n\n        btns[config.id] = config;\n        mem.clear(_this._getButtons);\n        mem.clear(_this._getButtonsByGroup);\n        return _this.buttons.set(btns);\n      });\n    }\n\n    return addButton;\n  }();\n\n  _proto.removeButton = function () {\n    function removeButton(id) {\n      var _this2 = this;\n\n      return Tracker.nonreactive(function () {\n        var btns = _this2.buttons.get();\n\n        delete btns[id];\n        mem.clear(_this2._getButtons);\n        mem.clear(_this2._getButtonsByGroup);\n        return _this2.buttons.set(btns);\n      });\n    }\n\n    return removeButton;\n  }();\n\n  _proto.updateButton = function () {\n    function updateButton(id, config) {\n      var _this3 = this;\n\n      return Tracker.nonreactive(function () {\n        var btns = _this3.buttons.get();\n\n        if (btns[id]) {\n          btns[id] = _.extend(btns[id], config);\n          mem.clear(_this3._getButtons);\n          mem.clear(_this3._getButtonsByGroup);\n          return _this3.buttons.set(btns);\n        }\n      });\n    }\n\n    return updateButton;\n  }();\n\n  _proto.getButtonById = function () {\n    function getButtonById(id) {\n      var allButtons = this.buttons.get();\n      return allButtons[id];\n    }\n\n    return getButtonById;\n  }();\n\n  _proto.getButtons = function () {\n    function getButtons(message, context, group) {\n      var allButtons = group ? this._getButtonsByGroup(group) : this._getButtons();\n\n      if (message) {\n        return allButtons.filter(function (button) {\n          if (button.context == null || button.context.includes(context)) {\n            return button.condition == null || button.condition(message, context);\n          }\n\n          return false;\n        });\n      }\n\n      return allButtons;\n    }\n\n    return getButtons;\n  }();\n\n  _proto.resetButtons = function () {\n    function resetButtons() {\n      mem.clear(this._getButtons);\n      mem.clear(this._getButtonsByGroup);\n      return this.buttons.set({});\n    }\n\n    return resetButtons;\n  }();\n\n  _proto.getPermaLink = function () {\n    function getPermaLink(msgId) {\n      var msg, roomData, subData, roomURL;\n      return _regeneratorRuntime.async(function () {\n        function getPermaLink$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (msgId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('invalid-parameter');\n\n              case 2:\n                _context.t0 = Messages.findOne(msgId);\n\n                if (_context.t0) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(call('getSingleMessage', msgId));\n\n              case 6:\n                _context.t0 = _context.sent;\n\n              case 7:\n                msg = _context.t0;\n\n                if (msg) {\n                  _context.next = 10;\n                  break;\n                }\n\n                throw new Error('message-not-found');\n\n              case 10:\n                roomData = Rooms.findOne({\n                  _id: msg.rid\n                });\n\n                if (roomData) {\n                  _context.next = 13;\n                  break;\n                }\n\n                throw new Error('room-not-found');\n\n              case 13:\n                subData = Subscriptions.findOne({\n                  'rid': roomData._id,\n                  'u._id': Meteor.userId()\n                });\n                roomURL = roomCoordinator.getURL(roomData.t, subData || roomData);\n                return _context.abrupt(\"return\", roomURL + \"?msg=\" + msgId);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return getPermaLink$;\n      }(), null, null, null, Promise);\n    }\n\n    return getPermaLink;\n  }();\n\n  return _class2;\n}())();\nMeteor.startup(function () {\n  function _callee2() {\n    var _await$module$dynamic, chatMessages, getChatMessagesFrom;\n\n    return _regeneratorRuntime.async(function () {\n      function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../ui'));\n\n            case 2:\n              _await$module$dynamic = _context3.sent;\n              chatMessages = _await$module$dynamic.chatMessages;\n\n              getChatMessagesFrom = function (msg) {\n                var _msg$rid = msg.rid,\n                    rid = _msg$rid === void 0 ? Session.get('openedRoom') : _msg$rid,\n                    _msg$tmid = msg.tmid,\n                    tmid = _msg$tmid === void 0 ? msg._id : _msg$tmid;\n                return chatMessages[rid + \"-\" + tmid] || chatMessages[rid];\n              };\n\n              MessageAction.addButton({\n                id: 'reply-directly',\n                icon: 'reply-directly',\n                label: 'Reply_in_direct_message',\n                context: ['message', 'message-mobile', 'threads'],\n                action: function () {\n                  var _messageArgs = messageArgs(this),\n                      msg = _messageArgs.msg;\n\n                  roomCoordinator.openRouteLink('d', {\n                    name: msg.u.username\n                  }, _objectSpread(_objectSpread({}, FlowRouter.current().queryParams), {}, {\n                    reply: msg._id\n                  }));\n                },\n                condition: function (_ref2) {\n                  var subscription = _ref2.subscription,\n                      room = _ref2.room,\n                      msg = _ref2.msg,\n                      u = _ref2.u;\n\n                  if (subscription == null) {\n                    return false;\n                  }\n\n                  if (room.t === 'd' || room.t === 'l') {\n                    return false;\n                  } // Check if we already have a DM started with the message user (not ourselves) or we can start one\n\n\n                  if (u._id !== msg.u._id && !hasPermission('create-d')) {\n                    var dmRoom = Rooms.findOne({\n                      _id: [u._id, msg.u._id].sort().join('')\n                    });\n\n                    if (!dmRoom || !Subscriptions.findOne({\n                      'rid': dmRoom._id,\n                      'u._id': u._id\n                    })) {\n                      return false;\n                    }\n                  }\n\n                  return true;\n                },\n                order: 0,\n                group: 'menu'\n              });\n              MessageAction.addButton({\n                id: 'quote-message',\n                icon: 'quote',\n                label: 'Quote',\n                context: ['message', 'message-mobile', 'threads'],\n                action: function () {\n                  var _messageArgs2 = messageArgs(this),\n                      message = _messageArgs2.msg;\n\n                  var _getChatMessagesFrom = getChatMessagesFrom(message),\n                      input = _getChatMessagesFrom.input;\n\n                  var $input = $(input);\n                  var messages = $input.data('reply') || [];\n                  messages = addMessageToList(messages, message, input);\n                  $input.focus().data('mention-user', false).data('reply', messages).trigger('dataChange');\n                },\n                condition: function (_ref3) {\n                  var subscription = _ref3.subscription,\n                      room = _ref3.room;\n\n                  if (subscription == null) {\n                    return false;\n                  }\n\n                  var isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\n                  if (isLivechatRoom) {\n                    return false;\n                  }\n\n                  return true;\n                },\n                order: -3,\n                group: ['message', 'menu']\n              });\n              MessageAction.addButton({\n                id: 'permalink',\n                icon: 'permalink',\n                label: 'Get_link',\n                classes: 'clipboard',\n                context: ['message', 'message-mobile', 'threads'],\n                action: function () {\n                  function _callee() {\n                    var _messageArgs3, message, permalink;\n\n                    return _regeneratorRuntime.async(function () {\n                      function _callee$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              _messageArgs3 = messageArgs(this), message = _messageArgs3.msg;\n                              _context2.next = 3;\n                              return _regeneratorRuntime.awrap(MessageAction.getPermaLink(message._id));\n\n                            case 3:\n                              permalink = _context2.sent;\n                              navigator.clipboard.writeText(permalink);\n                              dispatchToastMessage({\n                                type: 'success',\n                                message: TAPi18n.__('Copied')\n                              });\n\n                            case 6:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }\n\n                      return _callee$;\n                    }(), null, this, null, Promise);\n                  }\n\n                  return _callee;\n                }(),\n                condition: function (_ref4) {\n                  var subscription = _ref4.subscription;\n                  return !!subscription;\n                },\n                order: 4,\n                group: 'menu'\n              });\n              MessageAction.addButton({\n                id: 'copy',\n                icon: 'copy',\n                label: 'Copy',\n                classes: 'clipboard',\n                context: ['message', 'message-mobile', 'threads'],\n                action: function () {\n                  var _messageArgs4 = messageArgs(this),\n                      msg = _messageArgs4.msg.msg;\n\n                  navigator.clipboard.writeText(msg);\n                  dispatchToastMessage({\n                    type: 'success',\n                    message: TAPi18n.__('Copied')\n                  });\n                },\n                condition: function (_ref5) {\n                  var subscription = _ref5.subscription;\n                  return !!subscription;\n                },\n                order: 5,\n                group: 'menu'\n              });\n              MessageAction.addButton({\n                id: 'edit-message',\n                icon: 'edit',\n                label: 'Edit',\n                context: ['message', 'message-mobile', 'threads'],\n                action: function () {\n                  var _messageArgs5 = messageArgs(this),\n                      msg = _messageArgs5.msg;\n\n                  getChatMessagesFrom(msg).edit(document.getElementById(msg.tmid ? \"thread-\" + msg._id : msg._id));\n                },\n                condition: function (_ref6) {\n                  var message = _ref6.msg,\n                      subscription = _ref6.subscription,\n                      settings = _ref6.settings;\n\n                  if (subscription == null) {\n                    return false;\n                  }\n\n                  var hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n                  var isEditAllowed = settings.Message_AllowEditing;\n                  var editOwn = message.u && message.u._id === Meteor.userId();\n\n                  if (!(hasPermission || isEditAllowed && editOwn)) {\n                    return;\n                  }\n\n                  var blockEditInMinutes = settings.Message_AllowEditing_BlockEditInMinutes;\n\n                  if (blockEditInMinutes) {\n                    var msgTs;\n\n                    if (message.ts != null) {\n                      msgTs = moment(message.ts);\n                    }\n\n                    var currentTsDiff;\n\n                    if (msgTs != null) {\n                      currentTsDiff = moment().diff(msgTs, 'minutes');\n                    }\n\n                    return currentTsDiff < blockEditInMinutes;\n                  }\n\n                  return true;\n                },\n                order: 6,\n                group: 'menu'\n              });\n              MessageAction.addButton({\n                id: 'delete-message',\n                icon: 'trash',\n                label: 'Delete',\n                context: ['message', 'message-mobile', 'threads'],\n                color: 'alert',\n                action: function () {\n                  var _messageArgs6 = messageArgs(this),\n                      msg = _messageArgs6.msg;\n\n                  getChatMessagesFrom(msg).confirmDeleteMsg(msg);\n                },\n                condition: function (_ref7) {\n                  var message = _ref7.msg,\n                      subscription = _ref7.subscription,\n                      room = _ref7.room;\n\n                  if (!subscription) {\n                    return false;\n                  }\n\n                  var isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\n                  if (isLivechatRoom) {\n                    return false;\n                  }\n\n                  return canDeleteMessage({\n                    rid: message.rid,\n                    ts: message.ts,\n                    uid: message.u._id\n                  });\n                },\n                order: 18,\n                group: 'menu'\n              });\n              MessageAction.addButton({\n                id: 'report-message',\n                icon: 'report',\n                label: 'Report',\n                context: ['message', 'message-mobile', 'threads'],\n                color: 'alert',\n                action: function () {\n                  var _messageArgs7 = messageArgs(this),\n                      message = _messageArgs7.msg;\n\n                  modal.open({\n                    title: TAPi18n.__('Report_this_message_question_mark'),\n                    text: message.msg,\n                    inputPlaceholder: TAPi18n.__('Why_do_you_want_to_report_question_mark'),\n                    type: 'input',\n                    showCancelButton: true,\n                    confirmButtonColor: '#DD6B55',\n                    confirmButtonText: TAPi18n.__('Report_exclamation_mark'),\n                    cancelButtonText: TAPi18n.__('Cancel'),\n                    closeOnConfirm: false,\n                    html: false\n                  }, function (inputValue) {\n                    if (inputValue === false) {\n                      return false;\n                    }\n\n                    if (!inputValue.trim()) {\n                      modal.showInputError(TAPi18n.__('You_need_to_write_something'));\n                      return false;\n                    }\n\n                    Meteor.call('reportMessage', message._id, inputValue);\n                    modal.open({\n                      title: TAPi18n.__('Report_sent'),\n                      text: TAPi18n.__('Thank_you_exclamation_mark'),\n                      type: 'success',\n                      timer: 1000,\n                      showConfirmButton: false\n                    });\n                  });\n                },\n                condition: function (_ref8) {\n                  var subscription = _ref8.subscription,\n                      room = _ref8.room;\n                  var isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\n                  if (isLivechatRoom) {\n                    return false;\n                  }\n\n                  return Boolean(subscription);\n                },\n                order: 17,\n                group: 'menu'\n              });\n              MessageAction.addButton({\n                id: 'reaction-list',\n                icon: 'emoji',\n                label: 'Reactions',\n                context: ['message', 'message-mobile', 'threads'],\n                action: function (_, _ref9) {\n                  var tabBar = _ref9.tabBar,\n                      rid = _ref9.rid;\n\n                  var _messageArgs8 = messageArgs(this),\n                      reactions = _messageArgs8.msg.reactions;\n\n                  imperativeModal.open({\n                    component: ReactionList,\n                    props: {\n                      reactions: reactions,\n                      rid: rid,\n                      tabBar: tabBar,\n                      onClose: imperativeModal.close\n                    }\n                  });\n                },\n                condition: function (_ref10) {\n                  var reactions = _ref10.msg.reactions;\n                  return !!reactions;\n                },\n                order: 18,\n                group: 'menu'\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }\n\n      return _callee2$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee2;\n}());","map":{"version":3,"sources":["app/ui-utils/client/lib/MessageAction.js"],"names":["_objectSpread","module","link","default","v","_regeneratorRuntime","export","addMessageToList","MessageAction","_","FlowRouter","moment","mem","Meteor","TAPi18n","ReactiveVar","Tracker","Session","messageArgs","roomCoordinator","Messages","Rooms","Subscriptions","hasAtLeastOnePermission","hasPermission","modal","imperativeModal","ReactionList","call","canDeleteMessage","dispatchToastMessage","messagesList","message","find","_id","push","_getButtons","sortBy","toArray","buttons","get","_getButtonsByGroup","group","filter","button","Array","isArray","includes","addButton","config","id","condition","maxAge","cacheKey","JSON","stringify","nonreactive","btns","clear","set","removeButton","updateButton","extend","getButtonById","allButtons","getButtons","context","resetButtons","getPermaLink","msgId","Error","findOne","msg","roomData","rid","subData","userId","roomURL","getURL","t","startup","chatMessages","getChatMessagesFrom","tmid","icon","label","action","openRouteLink","name","u","username","current","queryParams","reply","subscription","room","dmRoom","sort","join","order","input","$input","$","messages","data","focus","trigger","isLivechatRoom","classes","permalink","navigator","clipboard","writeText","type","__","edit","document","getElementById","settings","isEditAllowed","Message_AllowEditing","editOwn","blockEditInMinutes","Message_AllowEditing_BlockEditInMinutes","msgTs","ts","currentTsDiff","diff","color","confirmDeleteMsg","uid","open","title","text","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","cancelButtonText","closeOnConfirm","html","inputValue","trim","showInputError","timer","showConfirmButton","Boolean","tabBar","reactions","component","props","onClose","close"],"mappings":"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","sourcesContent":["import _ from 'underscore';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport moment from 'moment';\nimport mem from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport { Session } from 'meteor/session';\n\nimport { messageArgs } from './messageArgs';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport { Messages, Rooms, Subscriptions } from '../../../models/client';\nimport { hasAtLeastOnePermission, hasPermission } from '../../../authorization/client';\nimport { modal } from './modal';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport ReactionList from '../../../../client/views/room/modals/ReactionListModal';\nimport { call } from '../../../../client/lib/utils/call';\nimport { canDeleteMessage } from '../../../../client/lib/utils/canDeleteMessage';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\n\nexport const addMessageToList = (messagesList, message) => {\n\t// checks if the message is not already on the list\n\tif (!messagesList.find(({ _id }) => _id === message._id)) {\n\t\tmessagesList.push(message);\n\t}\n\n\treturn messagesList;\n};\n\nexport const MessageAction = new (class {\n\t/*\n  \tconfig expects the following keys (only id is mandatory):\n  \t\tid (mandatory)\n  \t\ticon: string\n  \t\tlabel: string\n  \t\taction: function(event, instance)\n  \t\tcondition: function(message)\n\t\t\torder: integer\n\t\t\tgroup: string (message or menu)\n   */\n\n\tconstructor() {\n\t\tthis.buttons = new ReactiveVar({});\n\t}\n\n\taddButton(config) {\n\t\tif (!config || !config.id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!config.group) {\n\t\t\tconfig.group = 'menu';\n\t\t}\n\n\t\tif (config.condition) {\n\t\t\tconfig.condition = mem(config.condition, { maxAge: 1000, cacheKey: JSON.stringify });\n\t\t}\n\n\t\treturn Tracker.nonreactive(() => {\n\t\t\tconst btns = this.buttons.get();\n\t\t\tbtns[config.id] = config;\n\t\t\tmem.clear(this._getButtons);\n\t\t\tmem.clear(this._getButtonsByGroup);\n\t\t\treturn this.buttons.set(btns);\n\t\t});\n\t}\n\n\tremoveButton(id) {\n\t\treturn Tracker.nonreactive(() => {\n\t\t\tconst btns = this.buttons.get();\n\t\t\tdelete btns[id];\n\t\t\tmem.clear(this._getButtons);\n\t\t\tmem.clear(this._getButtonsByGroup);\n\t\t\treturn this.buttons.set(btns);\n\t\t});\n\t}\n\n\tupdateButton(id, config) {\n\t\treturn Tracker.nonreactive(() => {\n\t\t\tconst btns = this.buttons.get();\n\t\t\tif (btns[id]) {\n\t\t\t\tbtns[id] = _.extend(btns[id], config);\n\t\t\t\tmem.clear(this._getButtons);\n\t\t\t\tmem.clear(this._getButtonsByGroup);\n\t\t\t\treturn this.buttons.set(btns);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetButtonById(id) {\n\t\tconst allButtons = this.buttons.get();\n\t\treturn allButtons[id];\n\t}\n\n\t_getButtons = mem(function () {\n\t\treturn _.sortBy(_.toArray(this.buttons.get()), 'order');\n\t});\n\n\t_getButtonsByGroup = mem(function (group) {\n\t\treturn this._getButtons().filter((button) => (Array.isArray(button.group) ? button.group.includes(group) : button.group === group));\n\t});\n\n\tgetButtons(message, context, group) {\n\t\tconst allButtons = group ? this._getButtonsByGroup(group) : this._getButtons();\n\n\t\tif (message) {\n\t\t\treturn allButtons.filter(function (button) {\n\t\t\t\tif (button.context == null || button.context.includes(context)) {\n\t\t\t\t\treturn button.condition == null || button.condition(message, context);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t\treturn allButtons;\n\t}\n\n\tresetButtons() {\n\t\tmem.clear(this._getButtons);\n\t\tmem.clear(this._getButtonsByGroup);\n\t\treturn this.buttons.set({});\n\t}\n\n\tasync getPermaLink(msgId) {\n\t\tif (!msgId) {\n\t\t\tthrow new Error('invalid-parameter');\n\t\t}\n\n\t\tconst msg = Messages.findOne(msgId) || (await call('getSingleMessage', msgId));\n\t\tif (!msg) {\n\t\t\tthrow new Error('message-not-found');\n\t\t}\n\t\tconst roomData = Rooms.findOne({\n\t\t\t_id: msg.rid,\n\t\t});\n\n\t\tif (!roomData) {\n\t\t\tthrow new Error('room-not-found');\n\t\t}\n\n\t\tconst subData = Subscriptions.findOne({ 'rid': roomData._id, 'u._id': Meteor.userId() });\n\t\tconst roomURL = roomCoordinator.getURL(roomData.t, subData || roomData);\n\t\treturn `${roomURL}?msg=${msgId}`;\n\t}\n})();\n\nMeteor.startup(async function () {\n\tconst { chatMessages } = await import('../../../ui');\n\n\tconst getChatMessagesFrom = (msg) => {\n\t\tconst { rid = Session.get('openedRoom'), tmid = msg._id } = msg;\n\n\t\treturn chatMessages[`${rid}-${tmid}`] || chatMessages[rid];\n\t};\n\n\tMessageAction.addButton({\n\t\tid: 'reply-directly',\n\t\ticon: 'reply-directly',\n\t\tlabel: 'Reply_in_direct_message',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst { msg } = messageArgs(this);\n\t\t\troomCoordinator.openRouteLink(\n\t\t\t\t'd',\n\t\t\t\t{ name: msg.u.username },\n\t\t\t\t{\n\t\t\t\t\t...FlowRouter.current().queryParams,\n\t\t\t\t\treply: msg._id,\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t\tcondition({ subscription, room, msg, u }) {\n\t\t\tif (subscription == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (room.t === 'd' || room.t === 'l') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check if we already have a DM started with the message user (not ourselves) or we can start one\n\t\t\tif (u._id !== msg.u._id && !hasPermission('create-d')) {\n\t\t\t\tconst dmRoom = Rooms.findOne({ _id: [u._id, msg.u._id].sort().join('') });\n\t\t\t\tif (!dmRoom || !Subscriptions.findOne({ 'rid': dmRoom._id, 'u._id': u._id })) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\torder: 0,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'quote-message',\n\t\ticon: 'quote',\n\t\tlabel: 'Quote',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst { msg: message } = messageArgs(this);\n\t\t\tconst { input } = getChatMessagesFrom(message);\n\t\t\tconst $input = $(input);\n\n\t\t\tlet messages = $input.data('reply') || [];\n\n\t\t\tmessages = addMessageToList(messages, message, input);\n\n\t\t\t$input.focus().data('mention-user', false).data('reply', messages).trigger('dataChange');\n\t\t},\n\t\tcondition({ subscription, room }) {\n\t\t\tif (subscription == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\t\t\tif (isLivechatRoom) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\torder: -3,\n\t\tgroup: ['message', 'menu'],\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'permalink',\n\t\ticon: 'permalink',\n\t\tlabel: 'Get_link',\n\t\tclasses: 'clipboard',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\tasync action() {\n\t\t\tconst { msg: message } = messageArgs(this);\n\t\t\tconst permalink = await MessageAction.getPermaLink(message._id);\n\t\t\tnavigator.clipboard.writeText(permalink);\n\t\t\tdispatchToastMessage({ type: 'success', message: TAPi18n.__('Copied') });\n\t\t},\n\t\tcondition({ subscription }) {\n\t\t\treturn !!subscription;\n\t\t},\n\t\torder: 4,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'copy',\n\t\ticon: 'copy',\n\t\tlabel: 'Copy',\n\t\tclasses: 'clipboard',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst {\n\t\t\t\tmsg: { msg },\n\t\t\t} = messageArgs(this);\n\t\t\tnavigator.clipboard.writeText(msg);\n\t\t\tdispatchToastMessage({ type: 'success', message: TAPi18n.__('Copied') });\n\t\t},\n\t\tcondition({ subscription }) {\n\t\t\treturn !!subscription;\n\t\t},\n\t\torder: 5,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'edit-message',\n\t\ticon: 'edit',\n\t\tlabel: 'Edit',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst { msg } = messageArgs(this);\n\t\t\tgetChatMessagesFrom(msg).edit(document.getElementById(msg.tmid ? `thread-${msg._id}` : msg._id));\n\t\t},\n\t\tcondition({ msg: message, subscription, settings }) {\n\t\t\tif (subscription == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n\t\t\tconst isEditAllowed = settings.Message_AllowEditing;\n\t\t\tconst editOwn = message.u && message.u._id === Meteor.userId();\n\t\t\tif (!(hasPermission || (isEditAllowed && editOwn))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst blockEditInMinutes = settings.Message_AllowEditing_BlockEditInMinutes;\n\t\t\tif (blockEditInMinutes) {\n\t\t\t\tlet msgTs;\n\t\t\t\tif (message.ts != null) {\n\t\t\t\t\tmsgTs = moment(message.ts);\n\t\t\t\t}\n\t\t\t\tlet currentTsDiff;\n\t\t\t\tif (msgTs != null) {\n\t\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t\t}\n\t\t\t\treturn currentTsDiff < blockEditInMinutes;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\torder: 6,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'delete-message',\n\t\ticon: 'trash',\n\t\tlabel: 'Delete',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\tcolor: 'alert',\n\t\taction() {\n\t\t\tconst { msg } = messageArgs(this);\n\t\t\tgetChatMessagesFrom(msg).confirmDeleteMsg(msg);\n\t\t},\n\t\tcondition({ msg: message, subscription, room }) {\n\t\t\tif (!subscription) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\t\t\tif (isLivechatRoom) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn canDeleteMessage({\n\t\t\t\trid: message.rid,\n\t\t\t\tts: message.ts,\n\t\t\t\tuid: message.u._id,\n\t\t\t});\n\t\t},\n\t\torder: 18,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'report-message',\n\t\ticon: 'report',\n\t\tlabel: 'Report',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\tcolor: 'alert',\n\t\taction() {\n\t\t\tconst { msg: message } = messageArgs(this);\n\t\t\tmodal.open(\n\t\t\t\t{\n\t\t\t\t\ttitle: TAPi18n.__('Report_this_message_question_mark'),\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t\tinputPlaceholder: TAPi18n.__('Why_do_you_want_to_report_question_mark'),\n\t\t\t\t\ttype: 'input',\n\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\tconfirmButtonColor: '#DD6B55',\n\t\t\t\t\tconfirmButtonText: TAPi18n.__('Report_exclamation_mark'),\n\t\t\t\t\tcancelButtonText: TAPi18n.__('Cancel'),\n\t\t\t\t\tcloseOnConfirm: false,\n\t\t\t\t\thtml: false,\n\t\t\t\t},\n\t\t\t\t(inputValue) => {\n\t\t\t\t\tif (inputValue === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!inputValue.trim()) {\n\t\t\t\t\t\tmodal.showInputError(TAPi18n.__('You_need_to_write_something'));\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tMeteor.call('reportMessage', message._id, inputValue);\n\n\t\t\t\t\tmodal.open({\n\t\t\t\t\t\ttitle: TAPi18n.__('Report_sent'),\n\t\t\t\t\t\ttext: TAPi18n.__('Thank_you_exclamation_mark'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttimer: 1000,\n\t\t\t\t\t\tshowConfirmButton: false,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t\tcondition({ subscription, room }) {\n\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\t\t\tif (isLivechatRoom) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Boolean(subscription);\n\t\t},\n\t\torder: 17,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'reaction-list',\n\t\ticon: 'emoji',\n\t\tlabel: 'Reactions',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction(_, { tabBar, rid }) {\n\t\t\tconst {\n\t\t\t\tmsg: { reactions },\n\t\t\t} = messageArgs(this);\n\n\t\t\timperativeModal.open({\n\t\t\t\tcomponent: ReactionList,\n\t\t\t\tprops: { reactions, rid, tabBar, onClose: imperativeModal.close },\n\t\t\t});\n\t\t},\n\t\tcondition({ msg: { reactions } }) {\n\t\t\treturn !!reactions;\n\t\t},\n\t\torder: 18,\n\t\tgroup: 'menu',\n\t});\n});\n"]},"sourceType":"module","hash":"03fa087bd38c9eb9bf995a339c9ad3fd47244725"}
