{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/jalik:ufs/ufs.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jalik:ufs/ufs.js"}},"code":"!function (module1) {\n  module1.export({\n    UploadFS: () => UploadFS\n  });\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n\n  }, 0);\n  let Random;\n  module1.link(\"meteor/random\", {\n    Random(v) {\n      Random = v;\n    }\n\n  }, 1);\n  let Config;\n  module1.link(\"./ufs-config\", {\n    Config(v) {\n      Config = v;\n    }\n\n  }, 2);\n  let Filter;\n  module1.link(\"./ufs-filter\", {\n    Filter(v) {\n      Filter = v;\n    }\n\n  }, 3);\n  let MIME;\n  module1.link(\"./ufs-mime\", {\n    MIME(v) {\n      MIME = v;\n    }\n\n  }, 4);\n  let Store;\n  module1.link(\"./ufs-store\", {\n    Store(v) {\n      Store = v;\n    }\n\n  }, 5);\n  let StorePermissions;\n  module1.link(\"./ufs-store-permissions\", {\n    StorePermissions(v) {\n      StorePermissions = v;\n    }\n\n  }, 6);\n  let Tokens;\n  module1.link(\"./ufs-tokens\", {\n    Tokens(v) {\n      Tokens = v;\n    }\n\n  }, 7);\n  let Uploader;\n  module1.link(\"./ufs-uploader\", {\n    Uploader(v) {\n      Uploader = v;\n    }\n\n  }, 8);\n  const stores = {};\n  const UploadFS = {\n    /**\n     * Contains all stores\n     */\n    store: {},\n\n    /**\n     * Collection of tokens\n     */\n    tokens: Tokens,\n\n    /**\n     * Adds the \"etag\" attribute to files\n     * @param where\n     */\n    addETagAttributeToFiles(where) {\n      this.getStores().forEach(store => {\n        const files = store.getCollection(); // By default update only files with no path set\n\n        files.find(where || {\n          etag: null\n        }, {\n          fields: {\n            _id: 1\n          }\n        }).forEach(file => {\n          files.direct.update(file._id, {\n            $set: {\n              etag: this.generateEtag()\n            }\n          });\n        });\n      });\n    },\n\n    /**\n     * Adds the MIME type for an extension\n     * @param extension\n     * @param mime\n     */\n    addMimeType(extension, mime) {\n      MIME[extension.toLowerCase()] = mime;\n    },\n\n    /**\n     * Adds the \"path\" attribute to files\n     * @param where\n     */\n    addPathAttributeToFiles(where) {\n      this.getStores().forEach(store => {\n        const files = store.getCollection(); // By default update only files with no path set\n\n        files.find(where || {\n          path: null\n        }, {\n          fields: {\n            _id: 1\n          }\n        }).forEach(file => {\n          files.direct.update(file._id, {\n            $set: {\n              path: store.getFileRelativeURL(file._id)\n            }\n          });\n        });\n      });\n    },\n\n    /**\n     * Registers the store\n     * @param store\n     */\n    addStore(store) {\n      if (!(store instanceof Store)) {\n        throw new TypeError('ufs: store is not an instance of UploadFS.Store.');\n      }\n\n      stores[store.getName()] = store;\n    },\n\n    /**\n     * Generates a unique ETag\n     * @return {string}\n     */\n    generateEtag() {\n      return Random.id();\n    },\n\n    /**\n     * Returns the MIME type of the extension\n     * @param extension\n     * @returns {*}\n     */\n    getMimeType(extension) {\n      extension = extension.toLowerCase();\n      return MIME[extension];\n    },\n\n    /**\n     * Returns all MIME types\n     */\n    getMimeTypes() {\n      return MIME;\n    },\n\n    /**\n     * Returns the store by its name\n     * @param name\n     * @return {UploadFS.Store}\n     */\n    getStore(name) {\n      return stores[name];\n    },\n\n    /**\n     * Returns all stores\n     * @return {object}\n     */\n    getStores() {\n      return stores;\n    },\n\n    /**\n     * Returns the temporary file path\n     * @param fileId\n     * @return {string}\n     */\n    getTempFilePath(fileId) {\n      return \"\".concat(this.config.tmpDir, \"/\").concat(fileId);\n    },\n\n    /**\n     * Imports a file from a URL\n     * @param url\n     * @param file\n     * @param store\n     * @param callback\n     */\n    importFromURL(url, file, store, callback) {\n      if (typeof store === 'string') {\n        Meteor.call('ufsImportURL', url, file, store, callback);\n      } else if (typeof store === 'object') {\n        store.importFromURL(url, file, callback);\n      }\n    },\n\n    /**\n     * Returns file and data as ArrayBuffer for each files in the event\n     * @deprecated\n     * @param event\n     * @param callback\n     */\n    readAsArrayBuffer() {\n      console.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\n    },\n\n    /**\n     * Opens a dialog to select a single file\n     * @param callback\n     */\n    selectFile(callback) {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.multiple = false;\n\n      input.onchange = ev => {\n        const {\n          files\n        } = ev.target;\n        callback.call(UploadFS, files[0]);\n      }; // Fix for iOS/Safari\n\n\n      const div = document.createElement('div');\n      div.className = 'ufs-file-selector';\n      div.style = 'display:none; height:0; width:0; overflow: hidden;';\n      div.appendChild(input);\n      document.body.appendChild(div); // Trigger file selection\n\n      input.click();\n    },\n\n    /**\n     * Opens a dialog to select multiple files\n     * @param callback\n     */\n    selectFiles(callback) {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.multiple = true;\n\n      input.onchange = ev => {\n        const {\n          files\n        } = ev.target;\n\n        for (let i = 0; i < files.length; i += 1) {\n          callback.call(UploadFS, files[i]);\n        }\n      }; // Fix for iOS/Safari\n\n\n      const div = document.createElement('div');\n      div.className = 'ufs-file-selector';\n      div.style = 'display:none; height:0; width:0; overflow: hidden;';\n      div.appendChild(input);\n      document.body.appendChild(div); // Trigger file selection\n\n      input.click();\n    }\n\n  };\n\n  if (Meteor.isServer) {\n    require('./ufs-methods');\n\n    require('./ufs-server');\n  }\n  /**\n   * UploadFS Configuration\n   * @type {Config}\n   */\n\n\n  UploadFS.config = new Config(); // Add classes to global namespace\n\n  UploadFS.Config = Config;\n  UploadFS.Filter = Filter;\n  UploadFS.Store = Store;\n  UploadFS.StorePermissions = StorePermissions;\n  UploadFS.Uploader = Uploader;\n\n  if (Meteor.isServer) {\n    // Expose the module globally\n    if (typeof global !== 'undefined') {\n      global.UploadFS = UploadFS;\n    }\n  } else if (Meteor.isClient) {\n    // Expose the module globally\n    if (typeof window !== 'undefined') {\n      window.UploadFS = UploadFS;\n    }\n  }\n}.call(this, module);","map":{"version":3,"sources":["packages/jalik:ufs/ufs.js"],"names":["module1","export","UploadFS","Meteor","link","v","Random","Config","Filter","MIME","Store","StorePermissions","Tokens","Uploader","stores","store","tokens","addETagAttributeToFiles","where","getStores","forEach","files","getCollection","find","etag","fields","_id","file","direct","update","$set","generateEtag","addMimeType","extension","mime","toLowerCase","addPathAttributeToFiles","path","getFileRelativeURL","addStore","TypeError","getName","id","getMimeType","getMimeTypes","getStore","name","getTempFilePath","fileId","config","tmpDir","importFromURL","url","callback","call","readAsArrayBuffer","console","error","selectFile","input","document","createElement","type","multiple","onchange","ev","target","div","className","style","appendChild","body","click","selectFiles","i","length","isServer","require","global","isClient","window"],"mappings":"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","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { Config } from './ufs-config';\nimport { Filter } from './ufs-filter';\nimport { MIME } from './ufs-mime';\nimport { Store } from './ufs-store';\nimport { StorePermissions } from './ufs-store-permissions';\nimport { Tokens } from './ufs-tokens';\nimport { Uploader } from './ufs-uploader';\n\nconst stores = {};\n\nexport const UploadFS = {\n\t/**\n\t * Contains all stores\n\t */\n\tstore: {},\n\n\t/**\n\t * Collection of tokens\n\t */\n\ttokens: Tokens,\n\n\t/**\n\t * Adds the \"etag\" attribute to files\n\t * @param where\n\t */\n\taddETagAttributeToFiles(where) {\n\t\tthis.getStores().forEach((store) => {\n\t\t\tconst files = store.getCollection();\n\n\t\t\t// By default update only files with no path set\n\t\t\tfiles.find(where || { etag: null }, { fields: { _id: 1 } }).forEach((file) => {\n\t\t\t\tfiles.direct.update(file._id, { $set: { etag: this.generateEtag() } });\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Adds the MIME type for an extension\n\t * @param extension\n\t * @param mime\n\t */\n\taddMimeType(extension, mime) {\n\t\tMIME[extension.toLowerCase()] = mime;\n\t},\n\n\t/**\n\t * Adds the \"path\" attribute to files\n\t * @param where\n\t */\n\taddPathAttributeToFiles(where) {\n\t\tthis.getStores().forEach((store) => {\n\t\t\tconst files = store.getCollection();\n\n\t\t\t// By default update only files with no path set\n\t\t\tfiles.find(where || { path: null }, { fields: { _id: 1 } }).forEach((file) => {\n\t\t\t\tfiles.direct.update(file._id, { $set: { path: store.getFileRelativeURL(file._id) } });\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Registers the store\n\t * @param store\n\t */\n\taddStore(store) {\n\t\tif (!(store instanceof Store)) {\n\t\t\tthrow new TypeError('ufs: store is not an instance of UploadFS.Store.');\n\t\t}\n\t\tstores[store.getName()] = store;\n\t},\n\n\t/**\n\t * Generates a unique ETag\n\t * @return {string}\n\t */\n\tgenerateEtag() {\n\t\treturn Random.id();\n\t},\n\n\t/**\n\t * Returns the MIME type of the extension\n\t * @param extension\n\t * @returns {*}\n\t */\n\tgetMimeType(extension) {\n\t\textension = extension.toLowerCase();\n\t\treturn MIME[extension];\n\t},\n\n\t/**\n\t * Returns all MIME types\n\t */\n\tgetMimeTypes() {\n\t\treturn MIME;\n\t},\n\n\t/**\n\t * Returns the store by its name\n\t * @param name\n\t * @return {UploadFS.Store}\n\t */\n\tgetStore(name) {\n\t\treturn stores[name];\n\t},\n\n\t/**\n\t * Returns all stores\n\t * @return {object}\n\t */\n\tgetStores() {\n\t\treturn stores;\n\t},\n\n\t/**\n\t * Returns the temporary file path\n\t * @param fileId\n\t * @return {string}\n\t */\n\tgetTempFilePath(fileId) {\n\t\treturn `${this.config.tmpDir}/${fileId}`;\n\t},\n\n\t/**\n\t * Imports a file from a URL\n\t * @param url\n\t * @param file\n\t * @param store\n\t * @param callback\n\t */\n\timportFromURL(url, file, store, callback) {\n\t\tif (typeof store === 'string') {\n\t\t\tMeteor.call('ufsImportURL', url, file, store, callback);\n\t\t} else if (typeof store === 'object') {\n\t\t\tstore.importFromURL(url, file, callback);\n\t\t}\n\t},\n\n\t/**\n\t * Returns file and data as ArrayBuffer for each files in the event\n\t * @deprecated\n\t * @param event\n\t * @param callback\n\t */\n\treadAsArrayBuffer() {\n\t\tconsole.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\n\t},\n\n\t/**\n\t * Opens a dialog to select a single file\n\t * @param callback\n\t */\n\tselectFile(callback) {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.multiple = false;\n\t\tinput.onchange = (ev) => {\n\t\t\tconst { files } = ev.target;\n\t\t\tcallback.call(UploadFS, files[0]);\n\t\t};\n\t\t// Fix for iOS/Safari\n\t\tconst div = document.createElement('div');\n\t\tdiv.className = 'ufs-file-selector';\n\t\tdiv.style = 'display:none; height:0; width:0; overflow: hidden;';\n\t\tdiv.appendChild(input);\n\t\tdocument.body.appendChild(div);\n\t\t// Trigger file selection\n\t\tinput.click();\n\t},\n\n\t/**\n\t * Opens a dialog to select multiple files\n\t * @param callback\n\t */\n\tselectFiles(callback) {\n\t\tconst input = document.createElement('input');\n\t\tinput.type = 'file';\n\t\tinput.multiple = true;\n\t\tinput.onchange = (ev) => {\n\t\t\tconst { files } = ev.target;\n\n\t\t\tfor (let i = 0; i < files.length; i += 1) {\n\t\t\t\tcallback.call(UploadFS, files[i]);\n\t\t\t}\n\t\t};\n\t\t// Fix for iOS/Safari\n\t\tconst div = document.createElement('div');\n\t\tdiv.className = 'ufs-file-selector';\n\t\tdiv.style = 'display:none; height:0; width:0; overflow: hidden;';\n\t\tdiv.appendChild(input);\n\t\tdocument.body.appendChild(div);\n\t\t// Trigger file selection\n\t\tinput.click();\n\t},\n};\n\nif (Meteor.isServer) {\n\trequire('./ufs-methods');\n\trequire('./ufs-server');\n}\n\n/**\n * UploadFS Configuration\n * @type {Config}\n */\nUploadFS.config = new Config();\n\n// Add classes to global namespace\nUploadFS.Config = Config;\nUploadFS.Filter = Filter;\nUploadFS.Store = Store;\nUploadFS.StorePermissions = StorePermissions;\nUploadFS.Uploader = Uploader;\n\nif (Meteor.isServer) {\n\t// Expose the module globally\n\tif (typeof global !== 'undefined') {\n\t\tglobal.UploadFS = UploadFS;\n\t}\n} else if (Meteor.isClient) {\n\t// Expose the module globally\n\tif (typeof window !== 'undefined') {\n\t\twindow.UploadFS = UploadFS;\n\t}\n}\n"]},"sourceType":"module","hash":"322d3b35dc1066cffceb6556e4759fc77d77ff0e"}
