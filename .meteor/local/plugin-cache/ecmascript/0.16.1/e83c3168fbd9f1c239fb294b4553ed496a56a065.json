{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/AccountProfilePage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/account/AccountProfilePage.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/AccountProfilePage.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/AccountProfilePage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/account/AccountProfilePage.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet ButtonGroup, Button, Box, Icon;\nmodule.link(\"@rocket.chat/fuselage\", {\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  Box(v) {\n    Box = v;\n  },\n\n  Icon(v) {\n    Icon = v;\n  }\n\n}, 0);\nlet SHA256;\nmodule.link(\"meteor/sha\", {\n  SHA256(v) {\n    SHA256 = v;\n  }\n\n}, 1);\nlet React, useMemo, useState, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useState(v) {\n    useState = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 2);\nlet getUserEmailAddress;\nmodule.link(\"../../../lib/getUserEmailAddress\", {\n  getUserEmailAddress(v) {\n    getUserEmailAddress = v;\n  }\n\n}, 3);\nlet ConfirmOwnerChangeWarningModal;\nmodule.link(\"../../components/ConfirmOwnerChangeWarningModal\", {\n  default(v) {\n    ConfirmOwnerChangeWarningModal = v;\n  }\n\n}, 4);\nlet Page;\nmodule.link(\"../../components/Page\", {\n  default(v) {\n    Page = v;\n  }\n\n}, 5);\nlet useSetModal;\nmodule.link(\"../../contexts/ModalContext\", {\n  useSetModal(v) {\n    useSetModal = v;\n  }\n\n}, 6);\nlet useEndpoint, useMethod;\nmodule.link(\"../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 7);\nlet useSetting;\nmodule.link(\"../../contexts/SettingsContext\", {\n  useSetting(v) {\n    useSetting = v;\n  }\n\n}, 8);\nlet useToastMessageDispatch;\nmodule.link(\"../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 9);\nlet useTranslation;\nmodule.link(\"../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 10);\nlet useUser, useLogout;\nmodule.link(\"../../contexts/UserContext\", {\n  useUser(v) {\n    useUser = v;\n  },\n\n  useLogout(v) {\n    useLogout = v;\n  }\n\n}, 11);\nlet useForm;\nmodule.link(\"../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 12);\nlet useUpdateAvatar;\nmodule.link(\"../../hooks/useUpdateAvatar\", {\n  useUpdateAvatar(v) {\n    useUpdateAvatar = v;\n  }\n\n}, 13);\nlet AccountProfileForm;\nmodule.link(\"./AccountProfileForm\", {\n  default(v) {\n    AccountProfileForm = v;\n  }\n\n}, 14);\nlet ActionConfirmModal;\nmodule.link(\"./ActionConfirmModal\", {\n  default(v) {\n    ActionConfirmModal = v;\n  }\n\n}, 15);\n\nconst getInitialValues = user => {\n  var _user$name, _getUserEmailAddress, _user$username, _user$avatarUrl, _user$statusText, _user$status, _user$bio, _user$customFields, _user$nickname;\n\n  return {\n    realname: (_user$name = user.name) !== null && _user$name !== void 0 ? _user$name : '',\n    email: (_getUserEmailAddress = getUserEmailAddress(user)) !== null && _getUserEmailAddress !== void 0 ? _getUserEmailAddress : '',\n    username: (_user$username = user.username) !== null && _user$username !== void 0 ? _user$username : '',\n    password: '',\n    confirmationPassword: '',\n    avatar: '',\n    url: (_user$avatarUrl = user.avatarUrl) !== null && _user$avatarUrl !== void 0 ? _user$avatarUrl : '',\n    statusText: (_user$statusText = user.statusText) !== null && _user$statusText !== void 0 ? _user$statusText : '',\n    statusType: (_user$status = user.status) !== null && _user$status !== void 0 ? _user$status : '',\n    bio: (_user$bio = user.bio) !== null && _user$bio !== void 0 ? _user$bio : '',\n    customFields: (_user$customFields = user.customFields) !== null && _user$customFields !== void 0 ? _user$customFields : {},\n    nickname: (_user$nickname = user.nickname) !== null && _user$nickname !== void 0 ? _user$nickname : ''\n  };\n};\n\nconst AccountProfilePage = () => {\n  var _user$services, _user$services$passwo;\n\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const user = useUser();\n  const {\n    values,\n    handlers,\n    hasUnsavedChanges,\n    commit,\n    reset\n  } = useForm(getInitialValues(user !== null && user !== void 0 ? user : {}));\n  const [canSave, setCanSave] = useState(true);\n  const setModal = useSetModal();\n  const logout = useLogout();\n  const [loggingOut, setLoggingOut] = useState(false);\n  const logoutOtherClients = useEndpoint('POST', 'users.logoutOtherClients');\n  const deleteOwnAccount = useMethod('deleteUserOwnAccount');\n  const saveFn = useMethod('saveUserProfile');\n  const closeModal = useCallback(() => setModal(null), [setModal]);\n  const localPassword = Boolean(user === null || user === void 0 ? void 0 : (_user$services = user.services) === null || _user$services === void 0 ? void 0 : (_user$services$passwo = _user$services.password) === null || _user$services$passwo === void 0 ? void 0 : _user$services$passwo.exists);\n  const erasureType = useSetting('Message_ErasureType');\n  const allowRealNameChange = useSetting('Accounts_AllowRealNameChange');\n  const allowUserStatusMessageChange = useSetting('Accounts_AllowUserStatusMessageChange');\n  const canChangeUsername = useSetting('Accounts_AllowUsernameChange');\n  const allowEmailChange = useSetting('Accounts_AllowEmailChange');\n  let allowPasswordChange = useSetting('Accounts_AllowPasswordChange');\n  const allowOAuthPasswordChange = useSetting('Accounts_AllowPasswordChangeForOAuthUsers');\n  const allowUserAvatarChange = useSetting('Accounts_AllowUserAvatarChange');\n  const allowDeleteOwnAccount = useSetting('Accounts_AllowDeleteOwnAccount');\n  const requireName = useSetting('Accounts_RequireNameForSignUp');\n  const namesRegexSetting = useSetting('UTF8_User_Names_Validation');\n\n  if (allowPasswordChange && !allowOAuthPasswordChange) {\n    allowPasswordChange = localPassword;\n  }\n\n  const namesRegex = useMemo(() => new RegExp(\"^\".concat(namesRegexSetting, \"$\")), [namesRegexSetting]);\n  const settings = useMemo(() => ({\n    allowRealNameChange,\n    allowUserStatusMessageChange,\n    allowEmailChange,\n    allowPasswordChange,\n    allowUserAvatarChange,\n    allowDeleteOwnAccount,\n    canChangeUsername,\n    requireName,\n    namesRegex\n  }), [allowDeleteOwnAccount, allowEmailChange, allowPasswordChange, allowRealNameChange, allowUserAvatarChange, allowUserStatusMessageChange, canChangeUsername, requireName, namesRegex]);\n  const {\n    realname,\n    email,\n    avatar,\n    username,\n    password,\n    statusText,\n    statusType,\n    customFields,\n    bio,\n    nickname\n  } = values;\n  const {\n    handleAvatar,\n    handlePassword,\n    handleConfirmationPassword\n  } = handlers;\n  const updateAvatar = useUpdateAvatar(avatar, user === null || user === void 0 ? void 0 : user._id);\n  const onSave = useCallback(async () => {\n    const save = async typedPassword => {\n      try {\n        await saveFn(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, allowRealNameChange && {\n          realname\n        }), allowEmailChange && getUserEmailAddress(user) !== email && {\n          email\n        }), allowPasswordChange && {\n          newPassword: password\n        }), canChangeUsername && {\n          username\n        }), allowUserStatusMessageChange && {\n          statusText\n        }), typedPassword && {\n          typedPassword: SHA256(typedPassword)\n        }), {}, {\n          statusType,\n          nickname,\n          bio: bio || ''\n        }), customFields);\n        handlePassword('');\n        handleConfirmationPassword('');\n        const avatarResult = await updateAvatar();\n\n        if (avatarResult) {\n          handleAvatar('');\n        }\n\n        commit();\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Profile_saved_successfully')\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n    };\n\n    save();\n  }, [saveFn, allowEmailChange, allowPasswordChange, allowRealNameChange, allowUserStatusMessageChange, bio, canChangeUsername, email, password, realname, statusText, username, user, updateAvatar, handleAvatar, dispatchToastMessage, t, customFields, statusType, commit, nickname, handlePassword, handleConfirmationPassword]);\n  const handleLogoutOtherLocations = useCallback(async () => {\n    setLoggingOut(true);\n\n    try {\n      await logoutOtherClients();\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Logged_out_of_other_clients_successfully')\n      });\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n\n    setLoggingOut(false);\n  }, [logoutOtherClients, dispatchToastMessage, t]);\n  const handleConfirmOwnerChange = useCallback((passwordOrUsername, shouldChangeOwner, shouldBeRemoved) => {\n    const handleConfirm = async () => {\n      try {\n        await deleteOwnAccount(SHA256(passwordOrUsername), true);\n        dispatchToastMessage({\n          type: 'success',\n          message: t('User_has_been_deleted')\n        });\n        closeModal();\n        logout();\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n    };\n\n    return setModal(() => /*#__PURE__*/React.createElement(ConfirmOwnerChangeWarningModal, {\n      onConfirm: handleConfirm,\n      onCancel: closeModal,\n      contentTitle: t(\"Delete_User_Warning_\".concat(erasureType)),\n      confirmLabel: t('Delete'),\n      shouldChangeOwner: shouldChangeOwner,\n      shouldBeRemoved: shouldBeRemoved\n    }));\n  }, [closeModal, erasureType, setModal, t, deleteOwnAccount, dispatchToastMessage, logout]);\n  const handleDeleteOwnAccount = useCallback(async () => {\n    const handleConfirm = async passwordOrUsername => {\n      try {\n        await deleteOwnAccount(SHA256(passwordOrUsername));\n        dispatchToastMessage({\n          type: 'success',\n          message: t('User_has_been_deleted')\n        });\n        logout();\n      } catch (error) {\n        if (error.error === 'user-last-owner') {\n          const {\n            shouldChangeOwner,\n            shouldBeRemoved\n          } = error.details;\n          return handleConfirmOwnerChange(passwordOrUsername, shouldChangeOwner, shouldBeRemoved);\n        }\n\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n    };\n\n    return setModal(() => /*#__PURE__*/React.createElement(ActionConfirmModal, {\n      onConfirm: handleConfirm,\n      onCancel: closeModal,\n      isPassword: localPassword\n    }));\n  }, [closeModal, dispatchToastMessage, localPassword, setModal, handleConfirmOwnerChange, deleteOwnAccount, logout, t]);\n  return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(Page.Header, {\n    title: t('Profile')\n  }, /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    danger: true,\n    disabled: !hasUnsavedChanges,\n    onClick: reset\n  }, t('Reset')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    disabled: !hasUnsavedChanges || !canSave || loggingOut,\n    onClick: onSave\n  }, t('Save_changes')))), /*#__PURE__*/React.createElement(Page.ScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"600px\",\n    w: \"full\",\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(AccountProfileForm, {\n    values: values,\n    handlers: handlers,\n    user: user !== null && user !== void 0 ? user : {\n      emails: []\n    },\n    settings: settings,\n    onSaveStateChange: setCanSave\n  }), /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true,\n    mb: \"x12\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLogoutOtherLocations,\n    flexGrow: 0,\n    disabled: loggingOut\n  }, t('Logout_Others')), allowDeleteOwnAccount && /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: handleDeleteOwnAccount\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash\",\n    size: \"x20\",\n    mie: \"x4\"\n  }), t('Delete_my_account'))))));\n};\n\nmodule.exportDefault(AccountProfilePage);","map":{"version":3,"sources":["client/views/account/AccountProfilePage.js"],"names":["_objectSpread","module","link","default","v","ButtonGroup","Button","Box","Icon","SHA256","React","useMemo","useState","useCallback","getUserEmailAddress","ConfirmOwnerChangeWarningModal","Page","useSetModal","useEndpoint","useMethod","useSetting","useToastMessageDispatch","useTranslation","useUser","useLogout","useForm","useUpdateAvatar","AccountProfileForm","ActionConfirmModal","getInitialValues","user","realname","name","email","username","password","confirmationPassword","avatar","url","avatarUrl","statusText","statusType","status","bio","customFields","nickname","AccountProfilePage","t","dispatchToastMessage","values","handlers","hasUnsavedChanges","commit","reset","canSave","setCanSave","setModal","logout","loggingOut","setLoggingOut","logoutOtherClients","deleteOwnAccount","saveFn","closeModal","localPassword","Boolean","services","exists","erasureType","allowRealNameChange","allowUserStatusMessageChange","canChangeUsername","allowEmailChange","allowPasswordChange","allowOAuthPasswordChange","allowUserAvatarChange","allowDeleteOwnAccount","requireName","namesRegexSetting","namesRegex","RegExp","settings","handleAvatar","handlePassword","handleConfirmationPassword","updateAvatar","_id","onSave","save","typedPassword","newPassword","avatarResult","type","message","error","handleLogoutOtherLocations","handleConfirmOwnerChange","passwordOrUsername","shouldChangeOwner","shouldBeRemoved","handleConfirm","handleDeleteOwnAccount","details","emails","exportDefault"],"mappings":"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","sourcesContent":["import { ButtonGroup, Button, Box, Icon } from '@rocket.chat/fuselage';\nimport { SHA256 } from 'meteor/sha';\nimport React, { useMemo, useState, useCallback } from 'react';\n\nimport { getUserEmailAddress } from '../../../lib/getUserEmailAddress';\nimport ConfirmOwnerChangeWarningModal from '../../components/ConfirmOwnerChangeWarningModal';\nimport Page from '../../components/Page';\nimport { useSetModal } from '../../contexts/ModalContext';\nimport { useEndpoint, useMethod } from '../../contexts/ServerContext';\nimport { useSetting } from '../../contexts/SettingsContext';\nimport { useToastMessageDispatch } from '../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useUser, useLogout } from '../../contexts/UserContext';\nimport { useForm } from '../../hooks/useForm';\nimport { useUpdateAvatar } from '../../hooks/useUpdateAvatar';\nimport AccountProfileForm from './AccountProfileForm';\nimport ActionConfirmModal from './ActionConfirmModal';\n\nconst getInitialValues = (user) => ({\n\trealname: user.name ?? '',\n\temail: getUserEmailAddress(user) ?? '',\n\tusername: user.username ?? '',\n\tpassword: '',\n\tconfirmationPassword: '',\n\tavatar: '',\n\turl: user.avatarUrl ?? '',\n\tstatusText: user.statusText ?? '',\n\tstatusType: user.status ?? '',\n\tbio: user.bio ?? '',\n\tcustomFields: user.customFields ?? {},\n\tnickname: user.nickname ?? '',\n});\n\nconst AccountProfilePage = () => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst user = useUser();\n\n\tconst { values, handlers, hasUnsavedChanges, commit, reset } = useForm(getInitialValues(user ?? {}));\n\tconst [canSave, setCanSave] = useState(true);\n\tconst setModal = useSetModal();\n\tconst logout = useLogout();\n\tconst [loggingOut, setLoggingOut] = useState(false);\n\n\tconst logoutOtherClients = useEndpoint('POST', 'users.logoutOtherClients');\n\tconst deleteOwnAccount = useMethod('deleteUserOwnAccount');\n\tconst saveFn = useMethod('saveUserProfile');\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst localPassword = Boolean(user?.services?.password?.exists);\n\n\tconst erasureType = useSetting('Message_ErasureType');\n\tconst allowRealNameChange = useSetting('Accounts_AllowRealNameChange');\n\tconst allowUserStatusMessageChange = useSetting('Accounts_AllowUserStatusMessageChange');\n\tconst canChangeUsername = useSetting('Accounts_AllowUsernameChange');\n\tconst allowEmailChange = useSetting('Accounts_AllowEmailChange');\n\tlet allowPasswordChange = useSetting('Accounts_AllowPasswordChange');\n\tconst allowOAuthPasswordChange = useSetting('Accounts_AllowPasswordChangeForOAuthUsers');\n\tconst allowUserAvatarChange = useSetting('Accounts_AllowUserAvatarChange');\n\tconst allowDeleteOwnAccount = useSetting('Accounts_AllowDeleteOwnAccount');\n\tconst requireName = useSetting('Accounts_RequireNameForSignUp');\n\tconst namesRegexSetting = useSetting('UTF8_User_Names_Validation');\n\n\tif (allowPasswordChange && !allowOAuthPasswordChange) {\n\t\tallowPasswordChange = localPassword;\n\t}\n\n\tconst namesRegex = useMemo(() => new RegExp(`^${namesRegexSetting}$`), [namesRegexSetting]);\n\n\tconst settings = useMemo(\n\t\t() => ({\n\t\t\tallowRealNameChange,\n\t\t\tallowUserStatusMessageChange,\n\t\t\tallowEmailChange,\n\t\t\tallowPasswordChange,\n\t\t\tallowUserAvatarChange,\n\t\t\tallowDeleteOwnAccount,\n\t\t\tcanChangeUsername,\n\t\t\trequireName,\n\t\t\tnamesRegex,\n\t\t}),\n\t\t[\n\t\t\tallowDeleteOwnAccount,\n\t\t\tallowEmailChange,\n\t\t\tallowPasswordChange,\n\t\t\tallowRealNameChange,\n\t\t\tallowUserAvatarChange,\n\t\t\tallowUserStatusMessageChange,\n\t\t\tcanChangeUsername,\n\t\t\trequireName,\n\t\t\tnamesRegex,\n\t\t],\n\t);\n\n\tconst { realname, email, avatar, username, password, statusText, statusType, customFields, bio, nickname } = values;\n\n\tconst { handleAvatar, handlePassword, handleConfirmationPassword } = handlers;\n\n\tconst updateAvatar = useUpdateAvatar(avatar, user?._id);\n\n\tconst onSave = useCallback(async () => {\n\t\tconst save = async (typedPassword) => {\n\t\t\ttry {\n\t\t\t\tawait saveFn(\n\t\t\t\t\t{\n\t\t\t\t\t\t...(allowRealNameChange && { realname }),\n\t\t\t\t\t\t...(allowEmailChange && getUserEmailAddress(user) !== email && { email }),\n\t\t\t\t\t\t...(allowPasswordChange && { newPassword: password }),\n\t\t\t\t\t\t...(canChangeUsername && { username }),\n\t\t\t\t\t\t...(allowUserStatusMessageChange && { statusText }),\n\t\t\t\t\t\t...(typedPassword && { typedPassword: SHA256(typedPassword) }),\n\t\t\t\t\t\tstatusType,\n\t\t\t\t\t\tnickname,\n\t\t\t\t\t\tbio: bio || '',\n\t\t\t\t\t},\n\t\t\t\t\tcustomFields,\n\t\t\t\t);\n\t\t\t\thandlePassword('');\n\t\t\t\thandleConfirmationPassword('');\n\t\t\t\tconst avatarResult = await updateAvatar();\n\t\t\t\tif (avatarResult) {\n\t\t\t\t\thandleAvatar('');\n\t\t\t\t}\n\t\t\t\tcommit();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Profile_saved_successfully') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t};\n\n\t\tsave();\n\t}, [\n\t\tsaveFn,\n\t\tallowEmailChange,\n\t\tallowPasswordChange,\n\t\tallowRealNameChange,\n\t\tallowUserStatusMessageChange,\n\t\tbio,\n\t\tcanChangeUsername,\n\t\temail,\n\t\tpassword,\n\t\trealname,\n\t\tstatusText,\n\t\tusername,\n\t\tuser,\n\t\tupdateAvatar,\n\t\thandleAvatar,\n\t\tdispatchToastMessage,\n\t\tt,\n\t\tcustomFields,\n\t\tstatusType,\n\t\tcommit,\n\t\tnickname,\n\t\thandlePassword,\n\t\thandleConfirmationPassword,\n\t]);\n\n\tconst handleLogoutOtherLocations = useCallback(async () => {\n\t\tsetLoggingOut(true);\n\t\ttry {\n\t\t\tawait logoutOtherClients();\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Logged_out_of_other_clients_successfully'),\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t\tsetLoggingOut(false);\n\t}, [logoutOtherClients, dispatchToastMessage, t]);\n\n\tconst handleConfirmOwnerChange = useCallback(\n\t\t(passwordOrUsername, shouldChangeOwner, shouldBeRemoved) => {\n\t\t\tconst handleConfirm = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait deleteOwnAccount(SHA256(passwordOrUsername), true);\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_has_been_deleted') });\n\t\t\t\t\tcloseModal();\n\t\t\t\t\tlogout();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn setModal(() => (\n\t\t\t\t<ConfirmOwnerChangeWarningModal\n\t\t\t\t\tonConfirm={handleConfirm}\n\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\tcontentTitle={t(`Delete_User_Warning_${erasureType}`)}\n\t\t\t\t\tconfirmLabel={t('Delete')}\n\t\t\t\t\tshouldChangeOwner={shouldChangeOwner}\n\t\t\t\t\tshouldBeRemoved={shouldBeRemoved}\n\t\t\t\t/>\n\t\t\t));\n\t\t},\n\t\t[closeModal, erasureType, setModal, t, deleteOwnAccount, dispatchToastMessage, logout],\n\t);\n\n\tconst handleDeleteOwnAccount = useCallback(async () => {\n\t\tconst handleConfirm = async (passwordOrUsername) => {\n\t\t\ttry {\n\t\t\t\tawait deleteOwnAccount(SHA256(passwordOrUsername));\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_has_been_deleted') });\n\t\t\t\tlogout();\n\t\t\t} catch (error) {\n\t\t\t\tif (error.error === 'user-last-owner') {\n\t\t\t\t\tconst { shouldChangeOwner, shouldBeRemoved } = error.details;\n\t\t\t\t\treturn handleConfirmOwnerChange(passwordOrUsername, shouldChangeOwner, shouldBeRemoved);\n\t\t\t\t}\n\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t};\n\n\t\treturn setModal(() => <ActionConfirmModal onConfirm={handleConfirm} onCancel={closeModal} isPassword={localPassword} />);\n\t}, [closeModal, dispatchToastMessage, localPassword, setModal, handleConfirmOwnerChange, deleteOwnAccount, logout, t]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Profile')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button primary danger disabled={!hasUnsavedChanges} onClick={reset}>\n\t\t\t\t\t\t{t('Reset')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary disabled={!hasUnsavedChanges || !canSave || loggingOut} onClick={onSave}>\n\t\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Page.Header>\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Box maxWidth='600px' w='full' alignSelf='center'>\n\t\t\t\t\t<AccountProfileForm\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\thandlers={handlers}\n\t\t\t\t\t\tuser={user ?? { emails: [] }}\n\t\t\t\t\t\tsettings={settings}\n\t\t\t\t\t\tonSaveStateChange={setCanSave}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonGroup stretch mb='x12'>\n\t\t\t\t\t\t<Button onClick={handleLogoutOtherLocations} flexGrow={0} disabled={loggingOut}>\n\t\t\t\t\t\t\t{t('Logout_Others')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{allowDeleteOwnAccount && (\n\t\t\t\t\t\t\t<Button danger onClick={handleDeleteOwnAccount}>\n\t\t\t\t\t\t\t\t<Icon name='trash' size='x20' mie='x4' />\n\t\t\t\t\t\t\t\t{t('Delete_my_account')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</Box>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default AccountProfilePage;\n"]},"sourceType":"module","hash":"e83c3168fbd9f1c239fb294b4553ed496a56a065"}
