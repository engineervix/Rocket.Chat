{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/util.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/client/poly1305-js/lib/util.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/util.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/util.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/poly1305-js/lib/util.js"}},"code":"\"use strict\";\n\n!function (module1) {\n  module.exports = /*#__PURE__*/function () {\n    function Util() {}\n\n    /**\r\n     * Performs addition with overflow. Returns the sum and any carry bits.\r\n     *\r\n     * @param {number} a\r\n     * @param {number} b\r\n     * @param {number} extra (optional)\r\n     * @return {number[]}\r\n     */\n    Util.add_overflow = function () {\n      function add_overflow(a, b) {\n        var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var c, x, y;\n        x = (a & 0xffff) + (b & 0xffff) + (extra & 0xffff);\n        c = x >>> 16;\n        y = (a >>> 16) + (b >>> 16) + (extra >>> 16) + c;\n        c = y >>> 16;\n        return [y << 16 | x & 0xffff, c];\n      }\n\n      return add_overflow;\n    }()\n    /**\r\n     * Node.js only supports 32-bit numbers so we discard the top 4 bytes.\r\n     *\r\n     * @param {Buffer} buf\r\n     * @return {Number}\r\n     */\n    ;\n\n    Util.load32_le = function () {\n      function load32_le(buf) {\n        return buf.readInt32LE(0) >>> 0;\n      }\n\n      return load32_le;\n    }()\n    /**\r\n     * Store a 32-bit integer as a buffer of length 4\r\n     *\r\n     * @param {Number} num\r\n     * @return {Buffer}\r\n     */\n    ;\n\n    Util.store32_le = function () {\n      function store32_le(num) {\n        var result = Buffer.alloc(4, 0);\n        result[0] = num & 0xff;\n        result[1] = num >>> 8 & 0xff;\n        result[2] = num >>> 16 & 0xff;\n        result[3] = num >>> 24 & 0xff;\n        return result;\n      }\n\n      return store32_le;\n    }();\n\n    return Util;\n  }();\n}.call(this, module);","map":{"version":3,"sources":["imports/client/poly1305-js/lib/util.js"],"names":["module","exports","add_overflow","a","b","extra","c","x","y","load32_le","buf","readInt32LE","store32_le","num","result","Buffer","alloc"],"mappings":"AAAA;;;AAEAA,EAAAA,MAAM,CAACC,OAAP;AAAA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAUWC,YAVX;AAUI,4BAAoBC,CAApB,EAAuBC,CAAvB,EACA;AAAA,YAD0BC,KAC1B,uEADkC,CAClC;AACI,YAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;AACAD,QAAAA,CAAC,GAAG,CAACJ,CAAC,GAAG,MAAL,KAAgBC,CAAC,GAAG,MAApB,KAA+BC,KAAK,GAAG,MAAvC,CAAJ;AACAC,QAAAA,CAAC,GAAGC,CAAC,KAAK,EAAV;AACAC,QAAAA,CAAC,GAAG,CAACL,CAAC,KAAK,EAAP,KAAcC,CAAC,KAAK,EAApB,KAA2BC,KAAK,KAAK,EAArC,IAA2CC,CAA/C;AACAA,QAAAA,CAAC,GAAGE,CAAC,KAAK,EAAV;AACA,eAAO,CAACA,CAAC,IAAI,EAAL,GAAWD,CAAC,GAAG,MAAhB,EAAyBD,CAAzB,CAAP;AACH;;AAlBL;AAAA;AAoBI;AACJ;AACA;AACA;AACA;AACA;AAzBA;;AAAA,SA0BWG,SA1BX;AA0BI,yBAAiBC,GAAjB,EACA;AACI,eAAOA,GAAG,CAACC,WAAJ,CAAgB,CAAhB,MAAuB,CAA9B;AACH;;AA7BL;AAAA;AA+BI;AACJ;AACA;AACA;AACA;AACA;AApCA;;AAAA,SAqCWC,UArCX;AAqCI,0BAAkBC,GAAlB,EACA;AACI,YAAIC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAb;AACAF,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAYD,GAAG,GAAG,IAAlB;AACAC,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAaD,GAAG,KAAM,CAAV,GAAe,IAA3B;AACAC,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAaD,GAAG,KAAK,EAAT,GAAe,IAA3B;AACAC,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAaD,GAAG,KAAK,EAAT,GAAe,IAA3B;AACA,eAAOC,MAAP;AACH;;AA7CL;AAAA;;AAAA;AAAA","sourcesContent":["\"use strict\";\r\n\r\nmodule.exports = class Util\r\n{\r\n    /**\r\n     * Performs addition with overflow. Returns the sum and any carry bits.\r\n     *\r\n     * @param {number} a\r\n     * @param {number} b\r\n     * @param {number} extra (optional)\r\n     * @return {number[]}\r\n     */\r\n    static add_overflow(a, b, extra = 0)\r\n    {\r\n        let c, x, y;\r\n        x = (a & 0xffff) + (b & 0xffff) + (extra & 0xffff);\r\n        c = x >>> 16;\r\n        y = (a >>> 16) + (b >>> 16) + (extra >>> 16) + c;\r\n        c = y >>> 16;\r\n        return [y << 16 | (x & 0xffff), c];\r\n    }\r\n\r\n    /**\r\n     * Node.js only supports 32-bit numbers so we discard the top 4 bytes.\r\n     *\r\n     * @param {Buffer} buf\r\n     * @return {Number}\r\n     */\r\n    static load32_le(buf)\r\n    {\r\n        return buf.readInt32LE(0) >>> 0;\r\n    }\r\n\r\n    /**\r\n     * Store a 32-bit integer as a buffer of length 4\r\n     *\r\n     * @param {Number} num\r\n     * @return {Buffer}\r\n     */\r\n    static store32_le(num)\r\n    {\r\n        let result = Buffer.alloc(4, 0);\r\n        result[0] = num & 0xff;\r\n        result[1] = (num >>>  8) & 0xff;\r\n        result[2] = (num >>> 16) & 0xff;\r\n        result[3] = (num >>> 24) & 0xff;\r\n        return result;\r\n    }\r\n};\r\n"]},"sourceType":"module","hash":"aa29455eec70124536d9e88b7870ceea85964ee8"}
