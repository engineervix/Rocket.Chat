{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs-server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/jalik:ufs/ufs-server.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs-server.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs-server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jalik:ufs/ufs-server.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 1);\nlet SparkMD5;\nmodule.link(\"spark-md5\", {\n  default(v) {\n    SparkMD5 = v;\n  }\n\n}, 2);\nlet UploadFS;\nmodule.link(\"./ufs\", {\n  UploadFS(v) {\n    UploadFS = v;\n  }\n\n}, 3);\n\nif (Meteor.isServer) {\n  const domain = Npm.require('domain');\n\n  const fs = Npm.require('fs'); // eslint-disable-next-line no-unused-vars\n\n\n  const http = Npm.require('http'); // eslint-disable-next-line no-unused-vars\n\n\n  const https = Npm.require('https');\n\n  const mkdirp = Npm.require('mkdirp');\n\n  const stream = Npm.require('stream');\n\n  const URL = Npm.require('url');\n\n  const zlib = Npm.require('zlib');\n\n  Meteor.startup(() => {\n    const path = UploadFS.config.tmpDir;\n    const mode = UploadFS.config.tmpDirPermissions;\n    fs.stat(path, err => {\n      if (err) {\n        // Create the temp directory\n        mkdirp(path, {\n          mode\n        }, err => {\n          if (err) {\n            console.error(\"ufs: cannot create temp directory at \\\"\".concat(path, \"\\\" (\").concat(err.message, \")\"));\n          } else {\n            console.log(\"ufs: temp directory created at \\\"\".concat(path, \"\\\"\"));\n          }\n        });\n      } else {\n        // Set directory permissions\n        fs.chmod(path, mode, err => {\n          err && console.error(\"ufs: cannot set temp directory permissions \".concat(mode, \" (\").concat(err.message, \")\"));\n        });\n      }\n    });\n  }); // Create domain to handle errors\n  // and possibly avoid server crashes.\n\n  const d = domain.create();\n  d.on('error', err => {\n    console.error(\"ufs: \".concat(err.message));\n  }); // Listen HTTP requests to serve files\n\n  WebApp.connectHandlers.use((req, res, next) => {\n    // Quick check to see if request should be caught\n    if (!req.url.includes(\"/\".concat(UploadFS.config.storesPath, \"/\"))) {\n      next();\n      return;\n    } // Remove store path\n\n\n    const parsedUrl = URL.parse(req.url);\n    const path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\n\n    const allowCORS = () => {\n      // res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n      res.setHeader('Access-Control-Allow-Methods', 'POST');\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n    };\n\n    if (req.method === 'OPTIONS') {\n      const regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n      const match = regExp.exec(path); // Request is not valid\n\n      if (match === null) {\n        res.writeHead(400);\n        res.end();\n        return;\n      } // Get store\n\n\n      const store = UploadFS.getStore(match[1]);\n\n      if (!store) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // If a store is found, go ahead and allow the origin\n\n\n      allowCORS();\n      next();\n    } else if (req.method === 'POST') {\n      // Get store\n      const regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n      const match = regExp.exec(path); // Request is not valid\n\n      if (match === null) {\n        res.writeHead(400);\n        res.end();\n        return;\n      } // Get store\n\n\n      const store = UploadFS.getStore(match[1]);\n\n      if (!store) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // If a store is found, go ahead and allow the origin\n\n\n      allowCORS(); // Get file\n\n      const fileId = match[2];\n\n      if (store.getCollection().find({\n        _id: fileId\n      }).count() === 0) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // Check upload token\n\n\n      if (!store.checkToken(req.query.token, fileId)) {\n        res.writeHead(403);\n        res.end();\n        return;\n      } // Check if duplicate\n\n\n      const unique = function (hash) {\n        const originalId = store.getCollection().findOne({\n          hash,\n          _id: {\n            $ne: fileId\n          }\n        });\n        return originalId ? originalId._id : false;\n      };\n\n      const spark = new SparkMD5.ArrayBuffer();\n      const tmpFile = UploadFS.getTempFilePath(fileId);\n      const ws = fs.createWriteStream(tmpFile, {\n        flags: 'a'\n      });\n      const fields = {\n        uploading: true\n      };\n      const progress = parseFloat(req.query.progress);\n\n      if (!isNaN(progress) && progress > 0) {\n        fields.progress = Math.min(progress, 1);\n      }\n\n      req.on('data', chunk => {\n        ws.write(chunk);\n        spark.append(chunk);\n      }); // eslint-disable-next-line no-unused-vars\n\n      req.on('error', err => {\n        res.writeHead(500);\n        res.end();\n      });\n      req.on('end', Meteor.bindEnvironment(() => {\n        // Update completed state without triggering hooks\n        fields.hash = spark.end();\n        fields.originalId = unique(fields.hash);\n        store.getCollection().direct.update({\n          _id: fileId\n        }, {\n          $set: fields\n        });\n        ws.end();\n      }));\n      ws.on('error', err => {\n        console.error(\"ufs: cannot write chunk of file \\\"\".concat(fileId, \"\\\" (\").concat(err.message, \")\"));\n        fs.unlink(tmpFile, err => {\n          err && console.error(\"ufs: cannot delete temp file \\\"\".concat(tmpFile, \"\\\" (\").concat(err.message, \")\"));\n        });\n        res.writeHead(500);\n        res.end();\n      });\n      ws.on('finish', () => {\n        res.writeHead(204, {\n          'Content-Type': 'text/plain'\n        });\n        res.end();\n      });\n    } else if (req.method === 'GET') {\n      // Get store, file Id and file name\n      const regExp = new RegExp('^/([^/?]+)/([^/?]+)(?:/([^/?]+))?$');\n      const match = regExp.exec(path); // Avoid 504 Gateway timeout error\n      // if file is not handled by UploadFS.\n\n      if (match === null) {\n        next();\n        return;\n      } // Get store\n\n\n      const storeName = match[1];\n      const store = UploadFS.getStore(storeName);\n\n      if (!store) {\n        res.writeHead(404);\n        res.end();\n        return;\n      }\n\n      if (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\n        console.error(\"ufs: Store.onRead is not a function in store \\\"\".concat(storeName, \"\\\"\"));\n        res.writeHead(500);\n        res.end();\n        return;\n      } // Remove file extension from file Id\n\n\n      const index = match[2].indexOf('.');\n      const fileId = index !== -1 ? match[2].substr(0, index) : match[2]; // Get file from database\n\n      const file = store.getCollection().findOne({\n        _id: fileId\n      });\n\n      if (!file) {\n        res.writeHead(404);\n        res.end();\n        return;\n      } // Simulate read speed\n\n\n      if (UploadFS.config.simulateReadDelay) {\n        Meteor._sleepForMs(UploadFS.config.simulateReadDelay);\n      }\n\n      d.run(() => {\n        // Check if the file can be accessed\n        if (store.onRead.call(store, fileId, file, req, res) !== false) {\n          const options = {};\n          let status = 200; // Prepare response headers\n\n          const headers = {\n            'Content-Type': file.type,\n            'Content-Length': file.size\n          }; // Add ETag header\n\n          if (typeof file.etag === 'string') {\n            headers.ETag = file.etag;\n          } // Add Last-Modified header\n\n\n          if (file.modifiedAt instanceof Date) {\n            headers['Last-Modified'] = file.modifiedAt.toUTCString();\n          } else if (file.uploadedAt instanceof Date) {\n            headers['Last-Modified'] = file.uploadedAt.toUTCString();\n          } // Parse request headers\n\n\n          if (typeof req.headers === 'object') {\n            // Compare ETag\n            if (req.headers['if-none-match']) {\n              if (file.etag === req.headers['if-none-match']) {\n                res.writeHead(304); // Not Modified\n\n                res.end();\n                return;\n              }\n            } // Compare file modification date\n\n\n            if (req.headers['if-modified-since']) {\n              const modifiedSince = new Date(req.headers['if-modified-since']);\n\n              if (file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince || // eslint-disable-next-line no-mixed-operators\n              file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince) {\n                res.writeHead(304); // Not Modified\n\n                res.end();\n                return;\n              }\n            } // Support range request\n\n\n            if (typeof req.headers.range === 'string') {\n              const {\n                range\n              } = req.headers; // Range is not valid\n\n              if (!range) {\n                res.writeHead(416);\n                res.end();\n                return;\n              }\n\n              const total = file.size;\n              const unit = range.substr(0, range.indexOf('='));\n\n              if (unit !== 'bytes') {\n                res.writeHead(416);\n                res.end();\n                return;\n              }\n\n              const ranges = range.substr(unit.length).replace(/[^0-9\\-,]/, '').split(',');\n\n              if (ranges.length > 1) {// todo: support multipart ranges: https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\n              } else {\n                const r = ranges[0].split('-');\n                const start = parseInt(r[0], 10);\n                const end = r[1] ? parseInt(r[1], 10) : total - 1; // Range is not valid\n\n                if (start < 0 || end >= total || start > end) {\n                  res.writeHead(416);\n                  res.end();\n                  return;\n                } // Update headers\n\n\n                headers['Content-Range'] = \"bytes \".concat(start, \"-\").concat(end, \"/\").concat(total);\n                headers['Content-Length'] = end - start + 1;\n                options.start = start;\n                options.end = end;\n              }\n\n              status = 206; // partial content\n            }\n          } else {\n            headers['Accept-Ranges'] = 'bytes';\n          } // Open the file stream\n\n\n          const rs = store.getReadStream(fileId, file, options);\n          const ws = new stream.PassThrough();\n          rs.on('error', Meteor.bindEnvironment(err => {\n            store.onReadError.call(store, err, fileId, file);\n            res.end();\n          }));\n          ws.on('error', Meteor.bindEnvironment(err => {\n            store.onReadError.call(store, err, fileId, file);\n            res.end();\n          }));\n          ws.on('close', () => {\n            // Close output stream at the end\n            ws.emit('end');\n          }); // Transform stream\n\n          store.transformRead(rs, ws, fileId, file, req, headers); // Parse request headers\n\n          if (typeof req.headers === 'object') {\n            // Compress data using if needed (ignore audio/video as they are already compressed)\n            if (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\n              const accept = req.headers['accept-encoding']; // Compress with gzip\n\n              if (accept.match(/\\bgzip\\b/)) {\n                headers['Content-Encoding'] = 'gzip';\n                delete headers['Content-Length'];\n                res.writeHead(status, headers);\n                ws.pipe(zlib.createGzip()).pipe(res);\n                return;\n              } // Compress with deflate\n\n\n              if (accept.match(/\\bdeflate\\b/)) {\n                headers['Content-Encoding'] = 'deflate';\n                delete headers['Content-Length'];\n                res.writeHead(status, headers);\n                ws.pipe(zlib.createDeflate()).pipe(res);\n                return;\n              }\n            }\n          } // Send raw data\n\n\n          if (!headers['Content-Encoding']) {\n            res.writeHead(status, headers);\n            ws.pipe(res);\n          }\n        } else {\n          res.end();\n        }\n      });\n    } else {\n      next();\n    }\n  });\n}","map":{"version":3,"sources":["packages/jalik:ufs/ufs-server.js"],"names":["Meteor","module","link","v","WebApp","SparkMD5","default","UploadFS","isServer","domain","Npm","require","fs","http","https","mkdirp","stream","URL","zlib","startup","path","config","tmpDir","mode","tmpDirPermissions","stat","err","console","error","message","log","chmod","d","create","on","connectHandlers","use","req","res","next","url","includes","storesPath","parsedUrl","parse","pathname","substr","length","allowCORS","setHeader","method","regExp","RegExp","match","exec","writeHead","end","store","getStore","fileId","getCollection","find","_id","count","checkToken","query","token","unique","hash","originalId","findOne","$ne","spark","ArrayBuffer","tmpFile","getTempFilePath","ws","createWriteStream","flags","fields","uploading","progress","parseFloat","isNaN","Math","min","chunk","write","append","bindEnvironment","direct","update","$set","unlink","storeName","onRead","undefined","index","indexOf","file","simulateReadDelay","_sleepForMs","run","call","options","status","headers","type","size","etag","ETag","modifiedAt","Date","toUTCString","uploadedAt","modifiedSince","range","total","unit","ranges","replace","split","r","start","parseInt","rs","getReadStream","PassThrough","onReadError","emit","transformRead","test","accept","pipe","createGzip","createDeflate"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\n// eslint-disable-next-line import/no-unresolved\nimport SparkMD5 from 'spark-md5';\n\nimport { UploadFS } from './ufs';\n\nif (Meteor.isServer) {\n\tconst domain = Npm.require('domain');\n\tconst fs = Npm.require('fs');\n\t// eslint-disable-next-line no-unused-vars\n\tconst http = Npm.require('http');\n\t// eslint-disable-next-line no-unused-vars\n\tconst https = Npm.require('https');\n\tconst mkdirp = Npm.require('mkdirp');\n\tconst stream = Npm.require('stream');\n\tconst URL = Npm.require('url');\n\tconst zlib = Npm.require('zlib');\n\n\tMeteor.startup(() => {\n\t\tconst path = UploadFS.config.tmpDir;\n\t\tconst mode = UploadFS.config.tmpDirPermissions;\n\n\t\tfs.stat(path, (err) => {\n\t\t\tif (err) {\n\t\t\t\t// Create the temp directory\n\t\t\t\tmkdirp(path, { mode }, (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error(`ufs: cannot create temp directory at \"${path}\" (${err.message})`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(`ufs: temp directory created at \"${path}\"`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Set directory permissions\n\t\t\t\tfs.chmod(path, mode, (err) => {\n\t\t\t\t\terr && console.error(`ufs: cannot set temp directory permissions ${mode} (${err.message})`);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\t// Create domain to handle errors\n\t// and possibly avoid server crashes.\n\tconst d = domain.create();\n\n\td.on('error', (err) => {\n\t\tconsole.error(`ufs: ${err.message}`);\n\t});\n\n\t// Listen HTTP requests to serve files\n\tWebApp.connectHandlers.use((req, res, next) => {\n\t\t// Quick check to see if request should be caught\n\t\tif (!req.url.includes(`/${UploadFS.config.storesPath}/`)) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove store path\n\t\tconst parsedUrl = URL.parse(req.url);\n\t\tconst path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\n\n\t\tconst allowCORS = () => {\n\t\t\t// res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\n\t\t\tres.setHeader('Access-Control-Allow-Methods', 'POST');\n\t\t\tres.setHeader('Access-Control-Allow-Origin', '*');\n\t\t\tres.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n\t\t};\n\n\t\tif (req.method === 'OPTIONS') {\n\t\t\tconst regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n\t\t\tconst match = regExp.exec(path);\n\n\t\t\t// Request is not valid\n\t\t\tif (match === null) {\n\t\t\t\tres.writeHead(400);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get store\n\t\t\tconst store = UploadFS.getStore(match[1]);\n\t\t\tif (!store) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a store is found, go ahead and allow the origin\n\t\t\tallowCORS();\n\n\t\t\tnext();\n\t\t} else if (req.method === 'POST') {\n\t\t\t// Get store\n\t\t\tconst regExp = new RegExp('^/([^/?]+)/([^/?]+)$');\n\t\t\tconst match = regExp.exec(path);\n\n\t\t\t// Request is not valid\n\t\t\tif (match === null) {\n\t\t\t\tres.writeHead(400);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get store\n\t\t\tconst store = UploadFS.getStore(match[1]);\n\t\t\tif (!store) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a store is found, go ahead and allow the origin\n\t\t\tallowCORS();\n\n\t\t\t// Get file\n\t\t\tconst fileId = match[2];\n\t\t\tif (store.getCollection().find({ _id: fileId }).count() === 0) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check upload token\n\t\t\tif (!store.checkToken(req.query.token, fileId)) {\n\t\t\t\tres.writeHead(403);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if duplicate\n\t\t\tconst unique = function (hash) {\n\t\t\t\tconst originalId = store.getCollection().findOne({ hash, _id: { $ne: fileId } });\n\t\t\t\treturn originalId ? originalId._id : false;\n\t\t\t};\n\n\t\t\tconst spark = new SparkMD5.ArrayBuffer();\n\t\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\t\t\tconst ws = fs.createWriteStream(tmpFile, { flags: 'a' });\n\t\t\tconst fields = { uploading: true };\n\t\t\tconst progress = parseFloat(req.query.progress);\n\t\t\tif (!isNaN(progress) && progress > 0) {\n\t\t\t\tfields.progress = Math.min(progress, 1);\n\t\t\t}\n\n\t\t\treq.on('data', (chunk) => {\n\t\t\t\tws.write(chunk);\n\t\t\t\tspark.append(chunk);\n\t\t\t});\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\treq.on('error', (err) => {\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t});\n\t\t\treq.on(\n\t\t\t\t'end',\n\t\t\t\tMeteor.bindEnvironment(() => {\n\t\t\t\t\t// Update completed state without triggering hooks\n\t\t\t\t\tfields.hash = spark.end();\n\t\t\t\t\tfields.originalId = unique(fields.hash);\n\t\t\t\t\tstore.getCollection().direct.update({ _id: fileId }, { $set: fields });\n\t\t\t\t\tws.end();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tws.on('error', (err) => {\n\t\t\t\tconsole.error(`ufs: cannot write chunk of file \"${fileId}\" (${err.message})`);\n\t\t\t\tfs.unlink(tmpFile, (err) => {\n\t\t\t\t\terr && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\n\t\t\t\t});\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t});\n\t\t\tws.on('finish', () => {\n\t\t\t\tres.writeHead(204, { 'Content-Type': 'text/plain' });\n\t\t\t\tres.end();\n\t\t\t});\n\t\t} else if (req.method === 'GET') {\n\t\t\t// Get store, file Id and file name\n\t\t\tconst regExp = new RegExp('^/([^/?]+)/([^/?]+)(?:/([^/?]+))?$');\n\t\t\tconst match = regExp.exec(path);\n\n\t\t\t// Avoid 504 Gateway timeout error\n\t\t\t// if file is not handled by UploadFS.\n\t\t\tif (match === null) {\n\t\t\t\tnext();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get store\n\t\t\tconst storeName = match[1];\n\t\t\tconst store = UploadFS.getStore(storeName);\n\n\t\t\tif (!store) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\n\t\t\t\tconsole.error(`ufs: Store.onRead is not a function in store \"${storeName}\"`);\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove file extension from file Id\n\t\t\tconst index = match[2].indexOf('.');\n\t\t\tconst fileId = index !== -1 ? match[2].substr(0, index) : match[2];\n\n\t\t\t// Get file from database\n\t\t\tconst file = store.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tres.writeHead(404);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Simulate read speed\n\t\t\tif (UploadFS.config.simulateReadDelay) {\n\t\t\t\tMeteor._sleepForMs(UploadFS.config.simulateReadDelay);\n\t\t\t}\n\n\t\t\td.run(() => {\n\t\t\t\t// Check if the file can be accessed\n\t\t\t\tif (store.onRead.call(store, fileId, file, req, res) !== false) {\n\t\t\t\t\tconst options = {};\n\t\t\t\t\tlet status = 200;\n\n\t\t\t\t\t// Prepare response headers\n\t\t\t\t\tconst headers = {\n\t\t\t\t\t\t'Content-Type': file.type,\n\t\t\t\t\t\t'Content-Length': file.size,\n\t\t\t\t\t};\n\n\t\t\t\t\t// Add ETag header\n\t\t\t\t\tif (typeof file.etag === 'string') {\n\t\t\t\t\t\theaders.ETag = file.etag;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add Last-Modified header\n\t\t\t\t\tif (file.modifiedAt instanceof Date) {\n\t\t\t\t\t\theaders['Last-Modified'] = file.modifiedAt.toUTCString();\n\t\t\t\t\t} else if (file.uploadedAt instanceof Date) {\n\t\t\t\t\t\theaders['Last-Modified'] = file.uploadedAt.toUTCString();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Parse request headers\n\t\t\t\t\tif (typeof req.headers === 'object') {\n\t\t\t\t\t\t// Compare ETag\n\t\t\t\t\t\tif (req.headers['if-none-match']) {\n\t\t\t\t\t\t\tif (file.etag === req.headers['if-none-match']) {\n\t\t\t\t\t\t\t\tres.writeHead(304); // Not Modified\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Compare file modification date\n\t\t\t\t\t\tif (req.headers['if-modified-since']) {\n\t\t\t\t\t\t\tconst modifiedSince = new Date(req.headers['if-modified-since']);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince) ||\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\t\t\t\t\t\t(file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tres.writeHead(304); // Not Modified\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Support range request\n\t\t\t\t\t\tif (typeof req.headers.range === 'string') {\n\t\t\t\t\t\t\tconst { range } = req.headers;\n\n\t\t\t\t\t\t\t// Range is not valid\n\t\t\t\t\t\t\tif (!range) {\n\t\t\t\t\t\t\t\tres.writeHead(416);\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst total = file.size;\n\t\t\t\t\t\t\tconst unit = range.substr(0, range.indexOf('='));\n\n\t\t\t\t\t\t\tif (unit !== 'bytes') {\n\t\t\t\t\t\t\t\tres.writeHead(416);\n\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst ranges = range\n\t\t\t\t\t\t\t\t.substr(unit.length)\n\t\t\t\t\t\t\t\t.replace(/[^0-9\\-,]/, '')\n\t\t\t\t\t\t\t\t.split(',');\n\n\t\t\t\t\t\t\tif (ranges.length > 1) {\n\t\t\t\t\t\t\t\t// todo: support multipart ranges: https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst r = ranges[0].split('-');\n\t\t\t\t\t\t\t\tconst start = parseInt(r[0], 10);\n\t\t\t\t\t\t\t\tconst end = r[1] ? parseInt(r[1], 10) : total - 1;\n\n\t\t\t\t\t\t\t\t// Range is not valid\n\t\t\t\t\t\t\t\tif (start < 0 || end >= total || start > end) {\n\t\t\t\t\t\t\t\t\tres.writeHead(416);\n\t\t\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Update headers\n\t\t\t\t\t\t\t\theaders['Content-Range'] = `bytes ${start}-${end}/${total}`;\n\t\t\t\t\t\t\t\theaders['Content-Length'] = end - start + 1;\n\t\t\t\t\t\t\t\toptions.start = start;\n\t\t\t\t\t\t\t\toptions.end = end;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstatus = 206; // partial content\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\theaders['Accept-Ranges'] = 'bytes';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Open the file stream\n\t\t\t\t\tconst rs = store.getReadStream(fileId, file, options);\n\t\t\t\t\tconst ws = new stream.PassThrough();\n\n\t\t\t\t\trs.on(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tMeteor.bindEnvironment((err) => {\n\t\t\t\t\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tws.on(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tMeteor.bindEnvironment((err) => {\n\t\t\t\t\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\t\t\t\t\tres.end();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tws.on('close', () => {\n\t\t\t\t\t\t// Close output stream at the end\n\t\t\t\t\t\tws.emit('end');\n\t\t\t\t\t});\n\n\t\t\t\t\t// Transform stream\n\t\t\t\t\tstore.transformRead(rs, ws, fileId, file, req, headers);\n\n\t\t\t\t\t// Parse request headers\n\t\t\t\t\tif (typeof req.headers === 'object') {\n\t\t\t\t\t\t// Compress data using if needed (ignore audio/video as they are already compressed)\n\t\t\t\t\t\tif (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\n\t\t\t\t\t\t\tconst accept = req.headers['accept-encoding'];\n\n\t\t\t\t\t\t\t// Compress with gzip\n\t\t\t\t\t\t\tif (accept.match(/\\bgzip\\b/)) {\n\t\t\t\t\t\t\t\theaders['Content-Encoding'] = 'gzip';\n\t\t\t\t\t\t\t\tdelete headers['Content-Length'];\n\t\t\t\t\t\t\t\tres.writeHead(status, headers);\n\t\t\t\t\t\t\t\tws.pipe(zlib.createGzip()).pipe(res);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Compress with deflate\n\t\t\t\t\t\t\tif (accept.match(/\\bdeflate\\b/)) {\n\t\t\t\t\t\t\t\theaders['Content-Encoding'] = 'deflate';\n\t\t\t\t\t\t\t\tdelete headers['Content-Length'];\n\t\t\t\t\t\t\t\tres.writeHead(status, headers);\n\t\t\t\t\t\t\t\tws.pipe(zlib.createDeflate()).pipe(res);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Send raw data\n\t\t\t\t\tif (!headers['Content-Encoding']) {\n\t\t\t\t\t\tres.writeHead(status, headers);\n\t\t\t\t\t\tws.pipe(res);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.end();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n}\n"]},"sourceType":"module","hash":"68bdf734f02cd1c97a8f1e2724402cd50b810e1b"}
