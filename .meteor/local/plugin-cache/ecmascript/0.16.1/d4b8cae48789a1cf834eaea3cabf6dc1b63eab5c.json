{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs-filter.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/jalik:ufs/ufs-filter.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs-filter.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/packages/jalik:ufs/ufs-filter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jalik:ufs/ufs-filter.js"}},"code":"var _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nmodule.export({\n  Filter: function () {\n    return Filter;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"meteor/underscore\", {\n  _: function (v) {\n    _ = v;\n  }\n}, 1);\n\nvar Filter = /*#__PURE__*/function () {\n  function Filter(options) {\n    var self = this; // Default options\n\n    options = _.extend({\n      contentTypes: null,\n      extensions: null,\n      minSize: 1,\n      maxSize: 0,\n      invalidFileError: function () {\n        return new Meteor.Error('invalid-file', 'File is not valid');\n      },\n      fileTooSmallError: function (fileSize, minFileSize) {\n        return new Meteor.Error('file-too-small', \"File size (size = \" + fileSize + \") is too small (min = \" + minFileSize + \")\");\n      },\n      fileTooLargeError: function (fileSize, maxFileSize) {\n        return new Meteor.Error('file-too-large', \"File size (size = \" + fileSize + \") is too large (max = \" + maxFileSize + \")\");\n      },\n      invalidFileExtension: function (fileExtension, allowedExtensions) {\n        return new Meteor.Error('invalid-file-extension', \"File extension \\\"\" + fileExtension + \"\\\" is not accepted (\" + allowedExtensions + \")\");\n      },\n      invalidFileType: function (fileType, allowedContentTypes) {\n        return new Meteor.Error('invalid-file-type', \"File type \\\"\" + fileType + \"\\\" is not accepted (\" + allowedContentTypes + \")\");\n      },\n      onCheck: this.onCheck\n    }, options); // Check options\n\n    if (options.contentTypes && !(options.contentTypes instanceof Array)) {\n      throw new TypeError('Filter: contentTypes is not an Array');\n    }\n\n    if (options.extensions && !(options.extensions instanceof Array)) {\n      throw new TypeError('Filter: extensions is not an Array');\n    }\n\n    if (typeof options.minSize !== 'number') {\n      throw new TypeError('Filter: minSize is not a number');\n    }\n\n    if (typeof options.maxSize !== 'number') {\n      throw new TypeError('Filter: maxSize is not a number');\n    }\n\n    if (options.onCheck && typeof options.onCheck !== 'function') {\n      throw new TypeError('Filter: onCheck is not a function');\n    } // Public attributes\n\n\n    self.options = options;\n    ['onCheck'].forEach(function (method) {\n      if (typeof options[method] === 'function') {\n        self[method] = options[method];\n      }\n    });\n  }\n  /**\n   * Checks the file\n   * @param file\n   */\n\n\n  var _proto = Filter.prototype;\n\n  _proto.check = function () {\n    function check(file) {\n      var error = null;\n\n      if (_typeof(file) !== 'object' || !file) {\n        error = this.options.invalidFileError();\n      } // Check size\n\n\n      var fileSize = file.size;\n      var minSize = this.getMinSize();\n\n      if (fileSize <= 0 || fileSize < minSize) {\n        error = this.options.fileTooSmallError(fileSize, minSize);\n      }\n\n      var maxSize = this.getMaxSize();\n\n      if (maxSize > 0 && fileSize > maxSize) {\n        error = this.options.fileTooLargeError(fileSize, maxSize);\n      } // Check extension\n\n\n      var allowedExtensions = this.getExtensions();\n      var fileExtension = file.extension;\n\n      if (allowedExtensions && !allowedExtensions.includes(fileExtension)) {\n        error = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n      } // Check content type\n\n\n      var allowedContentTypes = this.getContentTypes();\n      var fileTypes = file.type;\n\n      if (allowedContentTypes && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n        error = this.options.invalidFileType(fileTypes, allowedContentTypes);\n      } // Apply custom check\n\n\n      if (typeof this.onCheck === 'function' && !this.onCheck(file)) {\n        error = new Meteor.Error('invalid-file', 'File does not match filter');\n      }\n\n      if (error) {\n        throw error;\n      }\n    }\n\n    return check;\n  }()\n  /**\n   * Returns the allowed content types\n   * @return {Array}\n   */\n  ;\n\n  _proto.getContentTypes = function () {\n    function getContentTypes() {\n      return this.options.contentTypes;\n    }\n\n    return getContentTypes;\n  }()\n  /**\n   * Returns the allowed extensions\n   * @return {Array}\n   */\n  ;\n\n  _proto.getExtensions = function () {\n    function getExtensions() {\n      return this.options.extensions;\n    }\n\n    return getExtensions;\n  }()\n  /**\n   * Returns the maximum file size\n   * @return {Number}\n   */\n  ;\n\n  _proto.getMaxSize = function () {\n    function getMaxSize() {\n      return this.options.maxSize;\n    }\n\n    return getMaxSize;\n  }()\n  /**\n   * Returns the minimum file size\n   * @return {Number}\n   */\n  ;\n\n  _proto.getMinSize = function () {\n    function getMinSize() {\n      return this.options.minSize;\n    }\n\n    return getMinSize;\n  }()\n  /**\n   * Checks if content type is in the given list\n   * @param type\n   * @param list\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isContentTypeInList = function () {\n    function isContentTypeInList(type, list) {\n      if (typeof type === 'string' && list instanceof Array) {\n        if (list.includes(type)) {\n          return true;\n        }\n\n        var wildCardGlob = '/*';\n        var wildcards = list.filter(function (item) {\n          return item.indexOf(wildCardGlob) > 0;\n        });\n\n        if (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return isContentTypeInList;\n  }()\n  /**\n   * Checks if the file matches filter\n   * @param file\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isValid = function () {\n    function isValid(file) {\n      var result = true;\n\n      try {\n        this.check(file);\n      } catch (err) {\n        result = false;\n      }\n\n      return result;\n    }\n\n    return isValid;\n  }()\n  /**\n   * Executes custom checks\n   * @param file\n   * @return {boolean}\n   */\n  // eslint-disable-next-line no-unused-vars\n  ;\n\n  _proto.onCheck = function () {\n    function onCheck(file) {\n      return true;\n    }\n\n    return onCheck;\n  }();\n\n  return Filter;\n}();","map":{"version":3,"sources":["packages/jalik:ufs/ufs-filter.js"],"names":["_typeof","module","link","default","v","export","Filter","Meteor","_","options","self","extend","contentTypes","extensions","minSize","maxSize","invalidFileError","Error","fileTooSmallError","fileSize","minFileSize","fileTooLargeError","maxFileSize","invalidFileExtension","fileExtension","allowedExtensions","invalidFileType","fileType","allowedContentTypes","onCheck","Array","TypeError","forEach","method","check","file","error","size","getMinSize","getMaxSize","getExtensions","extension","includes","getContentTypes","fileTypes","type","isContentTypeInList","list","wildCardGlob","wildcards","filter","item","indexOf","replace","isValid","result","err"],"mappings":"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","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\nimport { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\n\n/**\n * File filter\n */\nexport class Filter {\n\tconstructor(options) {\n\t\tconst self = this;\n\n\t\t// Default options\n\t\toptions = _.extend(\n\t\t\t{\n\t\t\t\tcontentTypes: null,\n\t\t\t\textensions: null,\n\t\t\t\tminSize: 1,\n\t\t\t\tmaxSize: 0,\n\t\t\t\tinvalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\n\t\t\t\tfileTooSmallError: (fileSize, minFileSize) =>\n\t\t\t\t\tnew Meteor.Error('file-too-small', `File size (size = ${fileSize}) is too small (min = ${minFileSize})`),\n\t\t\t\tfileTooLargeError: (fileSize, maxFileSize) =>\n\t\t\t\t\tnew Meteor.Error('file-too-large', `File size (size = ${fileSize}) is too large (max = ${maxFileSize})`),\n\t\t\t\tinvalidFileExtension: (fileExtension, allowedExtensions) =>\n\t\t\t\t\tnew Meteor.Error('invalid-file-extension', `File extension \"${fileExtension}\" is not accepted (${allowedExtensions})`),\n\t\t\t\tinvalidFileType: (fileType, allowedContentTypes) =>\n\t\t\t\t\tnew Meteor.Error('invalid-file-type', `File type \"${fileType}\" is not accepted (${allowedContentTypes})`),\n\t\t\t\tonCheck: this.onCheck,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (options.contentTypes && !(options.contentTypes instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: contentTypes is not an Array');\n\t\t}\n\t\tif (options.extensions && !(options.extensions instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: extensions is not an Array');\n\t\t}\n\t\tif (typeof options.minSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: minSize is not a number');\n\t\t}\n\t\tif (typeof options.maxSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: maxSize is not a number');\n\t\t}\n\t\tif (options.onCheck && typeof options.onCheck !== 'function') {\n\t\t\tthrow new TypeError('Filter: onCheck is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tself.options = options;\n\t\t['onCheck'].forEach((method) => {\n\t\t\tif (typeof options[method] === 'function') {\n\t\t\t\tself[method] = options[method];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks the file\n\t * @param file\n\t */\n\tcheck(file) {\n\t\tlet error = null;\n\t\tif (typeof file !== 'object' || !file) {\n\t\t\terror = this.options.invalidFileError();\n\t\t}\n\t\t// Check size\n\t\tconst fileSize = file.size;\n\t\tconst minSize = this.getMinSize();\n\t\tif (fileSize <= 0 || fileSize < minSize) {\n\t\t\terror = this.options.fileTooSmallError(fileSize, minSize);\n\t\t}\n\t\tconst maxSize = this.getMaxSize();\n\t\tif (maxSize > 0 && fileSize > maxSize) {\n\t\t\terror = this.options.fileTooLargeError(fileSize, maxSize);\n\t\t}\n\t\t// Check extension\n\t\tconst allowedExtensions = this.getExtensions();\n\t\tconst fileExtension = file.extension;\n\t\tif (allowedExtensions && !allowedExtensions.includes(fileExtension)) {\n\t\t\terror = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n\t\t}\n\t\t// Check content type\n\t\tconst allowedContentTypes = this.getContentTypes();\n\t\tconst fileTypes = file.type;\n\t\tif (allowedContentTypes && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n\t\t\terror = this.options.invalidFileType(fileTypes, allowedContentTypes);\n\t\t}\n\t\t// Apply custom check\n\t\tif (typeof this.onCheck === 'function' && !this.onCheck(file)) {\n\t\t\terror = new Meteor.Error('invalid-file', 'File does not match filter');\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the allowed content types\n\t * @return {Array}\n\t */\n\tgetContentTypes() {\n\t\treturn this.options.contentTypes;\n\t}\n\n\t/**\n\t * Returns the allowed extensions\n\t * @return {Array}\n\t */\n\tgetExtensions() {\n\t\treturn this.options.extensions;\n\t}\n\n\t/**\n\t * Returns the maximum file size\n\t * @return {Number}\n\t */\n\tgetMaxSize() {\n\t\treturn this.options.maxSize;\n\t}\n\n\t/**\n\t * Returns the minimum file size\n\t * @return {Number}\n\t */\n\tgetMinSize() {\n\t\treturn this.options.minSize;\n\t}\n\n\t/**\n\t * Checks if content type is in the given list\n\t * @param type\n\t * @param list\n\t * @return {boolean}\n\t */\n\tisContentTypeInList(type, list) {\n\t\tif (typeof type === 'string' && list instanceof Array) {\n\t\t\tif (list.includes(type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst wildCardGlob = '/*';\n\t\t\tconst wildcards = list.filter((item) => item.indexOf(wildCardGlob) > 0);\n\n\t\t\tif (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks if the file matches filter\n\t * @param file\n\t * @return {boolean}\n\t */\n\tisValid(file) {\n\t\tlet result = true;\n\t\ttry {\n\t\t\tthis.check(file);\n\t\t} catch (err) {\n\t\t\tresult = false;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Executes custom checks\n\t * @param file\n\t * @return {boolean}\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tonCheck(file) {\n\t\treturn true;\n\t}\n}\n"]},"sourceType":"module","hash":"d4b8cae48789a1cf834eaea3cabf6dc1b63eab5c"}
