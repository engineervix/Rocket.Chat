{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/emoji/client/emojiParser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/emoji/client/emojiParser.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/emoji/client/emojiParser.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/emoji/client/emojiParser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/emoji/client/emojiParser.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\nmodule.export({\n  emojiParser: function () {\n    return emojiParser;\n  },\n  createEmojiMessageRenderer: function () {\n    return createEmojiMessageRenderer;\n  }\n});\nvar isIE11;\nmodule.link(\"../../../client/lib/utils/isIE11\", {\n  isIE11: function (v) {\n    isIE11 = v;\n  }\n}, 0);\nvar emoji;\nmodule.link(\"../lib/rocketchat\", {\n  emoji: function (v) {\n    emoji = v;\n  }\n}, 1);\n\n/*\n * emojiParser is a function that will replace emojis\n * @param {Object} message - The message object\n */\nvar emojiParser = function (message) {\n  var _message$html;\n\n  if (!((_message$html = message.html) !== null && _message$html !== void 0 && _message$html.trim())) {\n    return message;\n  }\n\n  var html = message.html.trim(); // &#39; to apostrophe (') for emojis such as :')\n\n  html = html.replace(/&#39;/g, \"'\"); // '<br>' to ' <br> ' for emojis such at line breaks\n\n  html = html.replace(/<br>/g, ' <br> ');\n  html = Object.entries(emoji.packages).reverse().reduce(function (value, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        emojiPackage = _ref2[1];\n\n    return emojiPackage.render(value);\n  }, html);\n  var checkEmojiOnly = document.createElement('div');\n  checkEmojiOnly.innerHTML = html;\n  var emojis = Array.from(checkEmojiOnly.querySelectorAll('.emoji:not(:empty), .emojione:not(:empty)'));\n  var hasText = false;\n\n  if (!isIE11) {\n    var filter = function (node) {\n      if (node.nodeType === Node.ELEMENT_NODE && (node.classList.contains('emojione') || node.classList.contains('emoji'))) {\n        return NodeFilter.FILTER_REJECT;\n      }\n\n      return NodeFilter.FILTER_ACCEPT;\n    };\n\n    var walker = document.createTreeWalker(checkEmojiOnly, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, filter);\n\n    while (walker.nextNode()) {\n      if (walker.currentNode.nodeType === Node.TEXT_NODE && walker.currentNode.nodeValue.trim() !== '') {\n        hasText = true;\n        break;\n      }\n    }\n\n    var emojiOnly = emojis.length && !hasText;\n\n    if (emojiOnly) {\n      for (var i = 0, len = emojis.length; i < len; i++) {\n        var classList = emojis[i].classList;\n        classList.add('big');\n      }\n\n      html = checkEmojiOnly.innerHTML;\n    }\n  } // apostrophe (') back to &#39;\n\n\n  html = html.replace(/\\'/g, '&#39;'); // line breaks ' <br> ' back to '<br>'\n\n  html = html.replace(/ <br> /g, '<br>');\n  return _objectSpread(_objectSpread({}, message), {}, {\n    html: html\n  });\n};\n\nvar createEmojiMessageRenderer = function () {\n  return emojiParser;\n};","map":{"version":3,"sources":["app/emoji/client/emojiParser.js"],"names":["_objectSpread","module","link","default","v","_slicedToArray","export","emojiParser","createEmojiMessageRenderer","isIE11","emoji","message","html","trim","replace","Object","entries","packages","reverse","reduce","value","emojiPackage","render","checkEmojiOnly","document","createElement","innerHTML","emojis","Array","from","querySelectorAll","hasText","filter","node","nodeType","Node","ELEMENT_NODE","classList","contains","NodeFilter","FILTER_REJECT","FILTER_ACCEPT","walker","createTreeWalker","SHOW_ELEMENT","SHOW_TEXT","nextNode","currentNode","TEXT_NODE","nodeValue","emojiOnly","length","i","len","add"],"mappings":"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","sourcesContent":["import { isIE11 } from '../../../client/lib/utils/isIE11';\nimport { emoji } from '../lib/rocketchat';\n\n/*\n * emojiParser is a function that will replace emojis\n * @param {Object} message - The message object\n */\n\nconst emojiParser = (message) => {\n\tif (!message.html?.trim()) {\n\t\treturn message;\n\t}\n\n\tlet html = message.html.trim();\n\n\t// &#39; to apostrophe (') for emojis such as :')\n\thtml = html.replace(/&#39;/g, \"'\");\n\n\t// '<br>' to ' <br> ' for emojis such at line breaks\n\thtml = html.replace(/<br>/g, ' <br> ');\n\n\thtml = Object.entries(emoji.packages)\n\t\t.reverse()\n\t\t.reduce((value, [, emojiPackage]) => emojiPackage.render(value), html);\n\n\tconst checkEmojiOnly = document.createElement('div');\n\n\tcheckEmojiOnly.innerHTML = html;\n\n\tconst emojis = Array.from(checkEmojiOnly.querySelectorAll('.emoji:not(:empty), .emojione:not(:empty)'));\n\n\tlet hasText = false;\n\n\tif (!isIE11) {\n\t\tconst filter = (node) => {\n\t\t\tif (node.nodeType === Node.ELEMENT_NODE && (node.classList.contains('emojione') || node.classList.contains('emoji'))) {\n\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t}\n\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t};\n\n\t\tconst walker = document.createTreeWalker(checkEmojiOnly, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, filter);\n\n\t\twhile (walker.nextNode()) {\n\t\t\tif (walker.currentNode.nodeType === Node.TEXT_NODE && walker.currentNode.nodeValue.trim() !== '') {\n\t\t\t\thasText = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst emojiOnly = emojis.length && !hasText;\n\n\t\tif (emojiOnly) {\n\t\t\tfor (let i = 0, len = emojis.length; i < len; i++) {\n\t\t\t\tconst { classList } = emojis[i];\n\t\t\t\tclassList.add('big');\n\t\t\t}\n\t\t\thtml = checkEmojiOnly.innerHTML;\n\t\t}\n\t}\n\n\t// apostrophe (') back to &#39;\n\thtml = html.replace(/\\'/g, '&#39;');\n\n\t// line breaks ' <br> ' back to '<br>'\n\thtml = html.replace(/ <br> /g, '<br>');\n\n\treturn { ...message, html };\n};\n\nexport { emojiParser };\n\nexport const createEmojiMessageRenderer = () => emojiParser;\n"]},"sourceType":"module","hash":"398f1d2100d44ca2768e93f77ccbbf17afbc2631"}
