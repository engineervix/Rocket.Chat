{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/mimic-fn/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/client/mimic-fn/index.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/mimic-fn/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/mimic-fn/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/mimic-fn/index.js"}},"code":"'use strict';\n\n!function (module1) {\n  var _createForOfIteratorHelperLoose;\n\n  module1.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n    default: function (v) {\n      _createForOfIteratorHelperLoose = v;\n    }\n  }, 0);\n\n  var _objectSpread;\n\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default: function (v) {\n      _objectSpread = v;\n    }\n  }, 1);\n\n  var copyProperty = function (to, from, property, ignoreNonConfigurable) {\n    // `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n    // `Function#prototype` is non-writable and non-configurable so can never be modified.\n    if (property === 'length' || property === 'prototype') {\n      return;\n    } // `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\n\n    if (property === 'arguments' || property === 'caller') {\n      return;\n    }\n\n    var toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n    var fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n    if (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n      return;\n    }\n\n    Object.defineProperty(to, property, fromDescriptor);\n  }; // `Object.defineProperty()` throws if the property exists, is not configurable and either:\n  //  - one its descriptors is changed\n  //  - it is non-writable and its value is changed\n\n\n  var canCopyProperty = function (toDescriptor, fromDescriptor) {\n    return toDescriptor === undefined || toDescriptor.configurable || toDescriptor.writable === fromDescriptor.writable && toDescriptor.enumerable === fromDescriptor.enumerable && toDescriptor.configurable === fromDescriptor.configurable && (toDescriptor.writable || toDescriptor.value === fromDescriptor.value);\n  };\n\n  var changePrototype = function (to, from) {\n    var fromPrototype = Object.getPrototypeOf(from);\n\n    if (fromPrototype === Object.getPrototypeOf(to)) {\n      return;\n    }\n\n    Object.setPrototypeOf(to, fromPrototype);\n  };\n\n  var wrappedToString = function (withName, fromBody) {\n    return \"/* Wrapped \" + withName + \"*/\\n\" + fromBody;\n  };\n\n  var toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\n  var toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name'); // We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n  // We use `bind()` instead of a closure for the same reason.\n  // Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\n\n  var changeToString = function (to, from, name) {\n    var withName = name === '' ? '' : \"with \" + name.trim() + \"() \";\n    var newToString = wrappedToString.bind(null, withName, from.toString()); // Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\n    Object.defineProperty(newToString, 'name', toStringName);\n    Object.defineProperty(to, 'toString', _objectSpread(_objectSpread({}, toStringDescriptor), {}, {\n      value: newToString\n    }));\n  };\n\n  var mimicFn = function (to, from) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$ignoreNonConfigu = _ref.ignoreNonConfigurable,\n        ignoreNonConfigurable = _ref$ignoreNonConfigu === void 0 ? false : _ref$ignoreNonConfigu;\n\n    var name = to.name;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(Reflect.ownKeys(from)), _step; !(_step = _iterator()).done;) {\n      var property = _step.value;\n      copyProperty(to, from, property, ignoreNonConfigurable);\n    }\n\n    changePrototype(to, from);\n    changeToString(to, from, name);\n    return to;\n  };\n\n  module.exports = mimicFn;\n}.call(this, module);","map":{"version":3,"sources":["imports/client/mimic-fn/index.js"],"names":["_createForOfIteratorHelperLoose","module1","link","default","v","_objectSpread","copyProperty","to","from","property","ignoreNonConfigurable","toDescriptor","Object","getOwnPropertyDescriptor","fromDescriptor","canCopyProperty","defineProperty","undefined","configurable","writable","enumerable","value","changePrototype","fromPrototype","getPrototypeOf","setPrototypeOf","wrappedToString","withName","fromBody","toStringDescriptor","Function","prototype","toStringName","toString","changeToString","name","trim","newToString","bind","mimicFn","Reflect","ownKeys","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n//  - one its descriptors is changed\n//  - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nconst mimicFn = (to, from, {ignoreNonConfigurable = false} = {}) => {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n"]},"sourceType":"module","hash":"b9353eb639d8e6e745b8cef3d8f8a557682ed2b2"}
