{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-sidenav/client/userPresence.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-sidenav/client/userPresence.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-sidenav/client/userPresence.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-sidenav/client/userPresence.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-sidenav/client/userPresence.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet Presence;\nmodule.link(\"../../../client/lib/presence\", {\n  Presence(v) {\n    Presence = v;\n  }\n\n}, 4);\nmodule.link(\"./userPresence.html\");\nconst data = new Map();\nconst options = {\n  threshold: 0.1\n};\nlet lastEntries = [];\n\nconst handleEntries = function (entries) {\n  lastEntries = entries.filter(_ref => {\n    let {\n      isIntersecting\n    } = _ref;\n    return isIntersecting;\n  });\n  lastEntries.forEach(async entry => {\n    const {\n      uid\n    } = data.get(entry.target);\n    Presence.get(uid);\n  });\n};\n\nconst featureExists = !!window.IntersectionObserver;\nconst observer = featureExists && new IntersectionObserver(handleEntries, options);\nTracker.autorun(() => {\n  // Only clear statuses on disconnect, prevent process it on reconnect again\n  const isConnected = Meteor.status().connected;\n\n  if (!Meteor.userId() || !isConnected) {\n    Presence.reset();\n    return Meteor.users.update({\n      status: {\n        $exists: true\n      }\n    }, {\n      $unset: {\n        status: true\n      }\n    }, {\n      multi: true\n    });\n  }\n\n  Presence.restart();\n\n  if (featureExists) {\n    for (const node of data.keys()) {\n      observer.unobserve(node);\n      observer.observe(node);\n    }\n\n    return;\n  }\n\n  Accounts.onLogout(() => {\n    Presence.reset();\n  });\n});\nTemplate.userPresence.onRendered(function () {\n  if (!this.data || !this.data.uid) {\n    return;\n  }\n\n  data.set(this.firstNode, this.data);\n\n  if (featureExists) {\n    return observer.observe(this.firstNode);\n  }\n});","map":{"version":3,"sources":["app/ui-sidenav/client/userPresence.js"],"names":["Meteor","module","link","v","Accounts","Template","Tracker","Presence","data","Map","options","threshold","lastEntries","handleEntries","entries","filter","isIntersecting","forEach","entry","uid","get","target","featureExists","window","IntersectionObserver","observer","autorun","isConnected","status","connected","userId","reset","users","update","$exists","$unset","multi","restart","node","keys","unobserve","observe","onLogout","userPresence","onRendered","set","firstNode"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Template } from 'meteor/templating';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Presence } from '../../../client/lib/presence';\n\nimport './userPresence.html';\n\nconst data = new Map();\nconst options = {\n\tthreshold: 0.1,\n};\n\nlet lastEntries = [];\nconst handleEntries = function (entries) {\n\tlastEntries = entries.filter(({ isIntersecting }) => isIntersecting);\n\tlastEntries.forEach(async (entry) => {\n\t\tconst { uid } = data.get(entry.target);\n\t\tPresence.get(uid);\n\t});\n};\n\nconst featureExists = !!window.IntersectionObserver;\n\nconst observer = featureExists && new IntersectionObserver(handleEntries, options);\n\nTracker.autorun(() => {\n\t// Only clear statuses on disconnect, prevent process it on reconnect again\n\tconst isConnected = Meteor.status().connected;\n\tif (!Meteor.userId() || !isConnected) {\n\t\tPresence.reset();\n\t\treturn Meteor.users.update({ status: { $exists: true } }, { $unset: { status: true } }, { multi: true });\n\t}\n\n\tPresence.restart();\n\n\tif (featureExists) {\n\t\tfor (const node of data.keys()) {\n\t\t\tobserver.unobserve(node);\n\t\t\tobserver.observe(node);\n\t\t}\n\t\treturn;\n\t}\n\n\tAccounts.onLogout(() => {\n\t\tPresence.reset();\n\t});\n});\n\nTemplate.userPresence.onRendered(function () {\n\tif (!this.data || !this.data.uid) {\n\t\treturn;\n\t}\n\tdata.set(this.firstNode, this.data);\n\tif (featureExists) {\n\t\treturn observer.observe(this.firstNode);\n\t}\n});\n"]},"sourceType":"module","hash":"21d1816f299c012689f60dcf33190119ebd567ea"}
