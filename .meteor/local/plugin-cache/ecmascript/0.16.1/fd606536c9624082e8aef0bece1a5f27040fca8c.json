{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-sidenav/client/roomList.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-sidenav/client/roomList.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-sidenav/client/roomList.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-sidenav/client/roomList.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-sidenav/client/roomList.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar callbacks;\nmodule.link(\"../../../lib/callbacks\", {\n  callbacks: function (v) {\n    callbacks = v;\n  }\n}, 2);\nvar ChatSubscription, Rooms, Users, Subscriptions;\nmodule.link(\"../../models\", {\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  },\n  Rooms: function (v) {\n    Rooms = v;\n  },\n  Users: function (v) {\n    Users = v;\n  },\n  Subscriptions: function (v) {\n    Subscriptions = v;\n  }\n}, 3);\nvar getUserPreference;\nmodule.link(\"../../utils\", {\n  getUserPreference: function (v) {\n    getUserPreference = v;\n  }\n}, 4);\nvar UiTextContext;\nmodule.link(\"../../../definition/IRoomTypeConfig\", {\n  UiTextContext: function (v) {\n    UiTextContext = v;\n  }\n}, 5);\nvar settings;\nmodule.link(\"../../settings\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 6);\nvar roomCoordinator;\nmodule.link(\"../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 7);\nTemplate.roomList.helpers({\n  rooms: function () {\n    /*\n    \tmodes:\n    \t\tsortby activity/alphabetical\n    \t\tmerge channels into one list\n    \t\tshow favorites\n    \t\tshow unread\n    */\n    if (this.anonymous) {\n      return Rooms.find({\n        t: 'c'\n      }, {\n        sort: {\n          name: 1\n        }\n      });\n    }\n\n    var user = Users.findOne(Meteor.userId(), {\n      fields: {\n        'settings.preferences.sidebarSortby': 1,\n        'settings.preferences.sidebarShowFavorites': 1,\n        'settings.preferences.sidebarShowUnread': 1,\n        'services.tokenpass': 1,\n        'messageViewMode': 1\n      }\n    });\n    var sortBy = getUserPreference(user, 'sidebarSortby') || 'activity';\n    var query = {\n      open: true\n    };\n    var sort = {};\n\n    if (sortBy === 'activity') {\n      sort.lm = -1;\n    } else {\n      // alphabetical\n      sort[this.identifier === 'd' && settings.get('UI_Use_Real_Name') ? 'lowerCaseFName' : 'lowerCaseName'] = /descending/.test(sortBy) ? -1 : 1;\n    }\n\n    if (this.identifier === 'unread') {\n      query.alert = true;\n      query.$or = [{\n        hideUnreadStatus: {\n          $ne: true\n        }\n      }, {\n        unread: {\n          $gt: 0\n        }\n      }];\n      return ChatSubscription.find(query, {\n        sort: sort\n      });\n    }\n\n    var favoritesEnabled = !!(settings.get('Favorite_Rooms') && getUserPreference(user, 'sidebarShowFavorites'));\n\n    if (this.identifier === 'f') {\n      query.f = favoritesEnabled;\n    } else {\n      var types = [this.identifier];\n\n      if (this.identifier === 'merged') {\n        types = ['c', 'p', 'd'];\n      }\n\n      if (this.identifier === 'discussion') {\n        types = ['c', 'p', 'd'];\n        query.prid = {\n          $exists: true\n        };\n      }\n\n      if (this.identifier === 'tokens') {\n        types = ['c', 'p'];\n      }\n\n      if (['c', 'p'].includes(this.identifier)) {\n        query.tokens = {\n          $exists: false\n        };\n      } else if (this.identifier === 'tokens' && user && user.services && user.services.tokenpass) {\n        query.tokens = {\n          $exists: true\n        };\n      }\n\n      if (getUserPreference(user, 'sidebarShowUnread')) {\n        query.$or = [{\n          alert: {\n            $ne: true\n          }\n        }, {\n          $and: [{\n            hideUnreadStatus: true\n          }, {\n            unread: 0\n          }]\n        }];\n      }\n\n      query.t = {\n        $in: types\n      };\n\n      if (favoritesEnabled) {\n        query.f = {\n          $ne: favoritesEnabled\n        };\n      }\n    }\n\n    return ChatSubscription.find(query, {\n      sort: sort\n    });\n  },\n  isLivechat: function () {\n    return this.identifier === 'l';\n  },\n  shouldAppear: function (group, rooms) {\n    /*\n    if is a normal group ('channel' 'private' 'direct')\n    or is favorite and has one room\n    or is unread and has one room\n    */\n    return !['unread', 'f'].includes(group.identifier) || rooms.length || rooms.count && rooms.count();\n  },\n  roomType: function (room) {\n    if (room.header || room.identifier) {\n      return \"type-\" + (room.header || room.identifier);\n    }\n  },\n  noSubscriptionText: function () {\n    var _roomCoordinator$getR;\n\n    var instance = Template.instance();\n\n    if (instance.data.anonymous) {\n      return 'No_channels_yet';\n    }\n\n    return ((_roomCoordinator$getR = roomCoordinator.getRoomDirectives(instance.data.identifier)) === null || _roomCoordinator$getR === void 0 ? void 0 : _roomCoordinator$getR.getUiText(UiTextContext.NO_ROOMS_SUBSCRIBED)) || 'No_channels_yet';\n  }\n});\n\nvar getLowerCaseNames = function (room) {\n  var nameDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var fnameDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var name = room.name || nameDefault;\n  var fname = room.fname || fnameDefault || name;\n  return {\n    lowerCaseName: String(name).toLowerCase(),\n    lowerCaseFName: String(fname).toLowerCase()\n  };\n};\n\nvar mergeSubRoom = function (subscription) {\n  var options = {\n    fields: {\n      lm: 1,\n      lastMessage: 1,\n      uids: 1,\n      streamingOptions: 1,\n      usernames: 1,\n      topic: 1,\n      encrypted: 1,\n      jitsiTimeout: 1,\n      // autoTranslate: 1,\n      // autoTranslateLanguage: 1,\n      description: 1,\n      announcement: 1,\n      broadcast: 1,\n      archived: 1,\n      avatarETag: 1,\n      retention: 1,\n      teamId: 1,\n      teamMain: 1,\n      onHold: 1,\n      metrics: 1,\n      muted: 1,\n      servedBy: 1,\n      ts: 1,\n      waitingResponse: 1,\n      v: 1,\n      transcriptRequest: 1,\n      tags: 1,\n      closedAt: 1,\n      responseBy: 1,\n      priorityId: 1,\n      livechatData: 1,\n      departmentId: 1,\n      source: 1,\n      queuedAt: 1\n    }\n  };\n  var room = Rooms.findOne({\n    _id: subscription.rid\n  }, options) || {};\n  var lastRoomUpdate = room.lm || subscription.ts || subscription._updatedAt;\n  var encrypted = room.encrypted,\n      description = room.description,\n      cl = room.cl,\n      topic = room.topic,\n      announcement = room.announcement,\n      broadcast = room.broadcast,\n      archived = room.archived,\n      avatarETag = room.avatarETag,\n      retention = room.retention,\n      lastMessage = room.lastMessage,\n      streamingOptions = room.streamingOptions,\n      teamId = room.teamId,\n      teamMain = room.teamMain,\n      uids = room.uids,\n      usernames = room.usernames,\n      jitsiTimeout = room.jitsiTimeout,\n      v = room.v,\n      transcriptRequest = room.transcriptRequest,\n      servedBy = room.servedBy,\n      onHold = room.onHold,\n      tags = room.tags,\n      closedAt = room.closedAt,\n      metrics = room.metrics,\n      muted = room.muted,\n      waitingResponse = room.waitingResponse,\n      responseBy = room.responseBy,\n      priorityId = room.priorityId,\n      livechatData = room.livechatData,\n      departmentId = room.departmentId,\n      ts = room.ts,\n      source = room.source,\n      queuedAt = room.queuedAt;\n  subscription.lm = subscription.lr ? new Date(Math.max(subscription.lr, lastRoomUpdate)) : lastRoomUpdate;\n  return Object.assign(subscription, getLowerCaseNames(subscription), {\n    encrypted: encrypted,\n    description: description,\n    cl: cl,\n    topic: topic,\n    announcement: announcement,\n    broadcast: broadcast,\n    archived: archived,\n    avatarETag: avatarETag,\n    retention: retention,\n    lastMessage: lastMessage,\n    streamingOptions: streamingOptions,\n    teamId: teamId,\n    teamMain: teamMain,\n    uids: uids,\n    usernames: usernames,\n    jitsiTimeout: jitsiTimeout,\n    v: v,\n    transcriptRequest: transcriptRequest,\n    servedBy: servedBy,\n    onHold: onHold,\n    tags: tags,\n    closedAt: closedAt,\n    metrics: metrics,\n    muted: muted,\n    waitingResponse: waitingResponse,\n    responseBy: responseBy,\n    priorityId: priorityId,\n    livechatData: livechatData,\n    departmentId: departmentId,\n    ts: ts,\n    source: source,\n    queuedAt: queuedAt\n  });\n};\n\nvar mergeRoomSub = function (room) {\n  var sub = Subscriptions.findOne({\n    rid: room._id\n  });\n\n  if (!sub) {\n    return room;\n  }\n\n  var encrypted = room.encrypted,\n      description = room.description,\n      cl = room.cl,\n      topic = room.topic,\n      announcement = room.announcement,\n      broadcast = room.broadcast,\n      archived = room.archived,\n      avatarETag = room.avatarETag,\n      retention = room.retention,\n      lastMessage = room.lastMessage,\n      streamingOptions = room.streamingOptions,\n      teamId = room.teamId,\n      teamMain = room.teamMain,\n      uids = room.uids,\n      usernames = room.usernames,\n      jitsiTimeout = room.jitsiTimeout,\n      v = room.v,\n      transcriptRequest = room.transcriptRequest,\n      servedBy = room.servedBy,\n      onHold = room.onHold,\n      tags = room.tags,\n      closedAt = room.closedAt,\n      metrics = room.metrics,\n      muted = room.muted,\n      waitingResponse = room.waitingResponse,\n      responseBy = room.responseBy,\n      priorityId = room.priorityId,\n      livechatData = room.livechatData,\n      departmentId = room.departmentId,\n      ts = room.ts,\n      source = room.source,\n      queuedAt = room.queuedAt;\n  Subscriptions.update({\n    rid: room._id\n  }, {\n    $set: _objectSpread({\n      encrypted: encrypted,\n      description: description,\n      cl: cl,\n      topic: topic,\n      announcement: announcement,\n      broadcast: broadcast,\n      archived: archived,\n      avatarETag: avatarETag,\n      retention: retention,\n      uids: uids,\n      usernames: usernames,\n      lastMessage: lastMessage,\n      streamingOptions: streamingOptions,\n      teamId: teamId,\n      teamMain: teamMain,\n      v: v,\n      transcriptRequest: transcriptRequest,\n      servedBy: servedBy,\n      onHold: onHold,\n      tags: tags,\n      closedAt: closedAt,\n      metrics: metrics,\n      muted: muted,\n      waitingResponse: waitingResponse,\n      responseBy: responseBy,\n      priorityId: priorityId,\n      livechatData: livechatData,\n      departmentId: departmentId,\n      jitsiTimeout: jitsiTimeout,\n      ts: ts,\n      source: source,\n      queuedAt: queuedAt\n    }, getLowerCaseNames(room, sub.name, sub.fname))\n  });\n  Subscriptions.update({\n    rid: room._id,\n    lm: {\n      $lt: room.lm\n    }\n  }, {\n    $set: {\n      lm: room.lm\n    }\n  });\n  return room;\n};\n\ncallbacks.add('cachedCollection-received-rooms', mergeRoomSub);\ncallbacks.add('cachedCollection-sync-rooms', mergeRoomSub);\ncallbacks.add('cachedCollection-loadFromServer-rooms', mergeRoomSub);\ncallbacks.add('cachedCollection-received-subscriptions', mergeSubRoom);\ncallbacks.add('cachedCollection-sync-subscriptions', mergeSubRoom);\ncallbacks.add('cachedCollection-loadFromServer-subscriptions', mergeSubRoom);","map":{"version":3,"sources":["app/ui-sidenav/client/roomList.js"],"names":["_objectSpread","module","link","default","v","Meteor","Template","callbacks","ChatSubscription","Rooms","Users","Subscriptions","getUserPreference","UiTextContext","settings","roomCoordinator","roomList","helpers","rooms","anonymous","find","t","sort","name","user","findOne","userId","fields","sortBy","query","open","lm","identifier","get","test","alert","$or","hideUnreadStatus","$ne","unread","$gt","favoritesEnabled","f","types","prid","$exists","includes","tokens","services","tokenpass","$and","$in","isLivechat","shouldAppear","group","length","count","roomType","room","header","noSubscriptionText","instance","data","getRoomDirectives","getUiText","NO_ROOMS_SUBSCRIBED","getLowerCaseNames","nameDefault","fnameDefault","fname","lowerCaseName","String","toLowerCase","lowerCaseFName","mergeSubRoom","subscription","options","lastMessage","uids","streamingOptions","usernames","topic","encrypted","jitsiTimeout","description","announcement","broadcast","archived","avatarETag","retention","teamId","teamMain","onHold","metrics","muted","servedBy","ts","waitingResponse","transcriptRequest","tags","closedAt","responseBy","priorityId","livechatData","departmentId","source","queuedAt","_id","rid","lastRoomUpdate","_updatedAt","cl","lr","Date","Math","max","Object","assign","mergeRoomSub","sub","update","$set","$lt","add"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\n\nimport { callbacks } from '../../../lib/callbacks';\nimport { ChatSubscription, Rooms, Users, Subscriptions } from '../../models';\nimport { getUserPreference } from '../../utils';\nimport { UiTextContext } from '../../../definition/IRoomTypeConfig';\nimport { settings } from '../../settings';\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\n\nTemplate.roomList.helpers({\n\trooms() {\n\t\t/*\n\t\t\tmodes:\n\t\t\t\tsortby activity/alphabetical\n\t\t\t\tmerge channels into one list\n\t\t\t\tshow favorites\n\t\t\t\tshow unread\n\t\t*/\n\t\tif (this.anonymous) {\n\t\t\treturn Rooms.find({ t: 'c' }, { sort: { name: 1 } });\n\t\t}\n\n\t\tconst user = Users.findOne(Meteor.userId(), {\n\t\t\tfields: {\n\t\t\t\t'settings.preferences.sidebarSortby': 1,\n\t\t\t\t'settings.preferences.sidebarShowFavorites': 1,\n\t\t\t\t'settings.preferences.sidebarShowUnread': 1,\n\t\t\t\t'services.tokenpass': 1,\n\t\t\t\t'messageViewMode': 1,\n\t\t\t},\n\t\t});\n\n\t\tconst sortBy = getUserPreference(user, 'sidebarSortby') || 'activity';\n\t\tconst query = {\n\t\t\topen: true,\n\t\t};\n\n\t\tconst sort = {};\n\n\t\tif (sortBy === 'activity') {\n\t\t\tsort.lm = -1;\n\t\t} else {\n\t\t\t// alphabetical\n\t\t\tsort[this.identifier === 'd' && settings.get('UI_Use_Real_Name') ? 'lowerCaseFName' : 'lowerCaseName'] = /descending/.test(sortBy)\n\t\t\t\t? -1\n\t\t\t\t: 1;\n\t\t}\n\n\t\tif (this.identifier === 'unread') {\n\t\t\tquery.alert = true;\n\t\t\tquery.$or = [{ hideUnreadStatus: { $ne: true } }, { unread: { $gt: 0 } }];\n\n\t\t\treturn ChatSubscription.find(query, { sort });\n\t\t}\n\n\t\tconst favoritesEnabled = !!(settings.get('Favorite_Rooms') && getUserPreference(user, 'sidebarShowFavorites'));\n\n\t\tif (this.identifier === 'f') {\n\t\t\tquery.f = favoritesEnabled;\n\t\t} else {\n\t\t\tlet types = [this.identifier];\n\n\t\t\tif (this.identifier === 'merged') {\n\t\t\t\ttypes = ['c', 'p', 'd'];\n\t\t\t}\n\n\t\t\tif (this.identifier === 'discussion') {\n\t\t\t\ttypes = ['c', 'p', 'd'];\n\t\t\t\tquery.prid = { $exists: true };\n\t\t\t}\n\n\t\t\tif (this.identifier === 'tokens') {\n\t\t\t\ttypes = ['c', 'p'];\n\t\t\t}\n\n\t\t\tif (['c', 'p'].includes(this.identifier)) {\n\t\t\t\tquery.tokens = { $exists: false };\n\t\t\t} else if (this.identifier === 'tokens' && user && user.services && user.services.tokenpass) {\n\t\t\t\tquery.tokens = { $exists: true };\n\t\t\t}\n\n\t\t\tif (getUserPreference(user, 'sidebarShowUnread')) {\n\t\t\t\tquery.$or = [\n\t\t\t\t\t{ alert: { $ne: true } },\n\t\t\t\t\t{\n\t\t\t\t\t\t$and: [{ hideUnreadStatus: true }, { unread: 0 }],\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\t\t\tquery.t = { $in: types };\n\t\t\tif (favoritesEnabled) {\n\t\t\t\tquery.f = { $ne: favoritesEnabled };\n\t\t\t}\n\t\t}\n\t\treturn ChatSubscription.find(query, { sort });\n\t},\n\n\tisLivechat() {\n\t\treturn this.identifier === 'l';\n\t},\n\n\tshouldAppear(group, rooms) {\n\t\t/*\n\t\tif is a normal group ('channel' 'private' 'direct')\n\t\tor is favorite and has one room\n\t\tor is unread and has one room\n\t\t*/\n\n\t\treturn !['unread', 'f'].includes(group.identifier) || rooms.length || (rooms.count && rooms.count());\n\t},\n\n\troomType(room) {\n\t\tif (room.header || room.identifier) {\n\t\t\treturn `type-${room.header || room.identifier}`;\n\t\t}\n\t},\n\n\tnoSubscriptionText() {\n\t\tconst instance = Template.instance();\n\t\tif (instance.data.anonymous) {\n\t\t\treturn 'No_channels_yet';\n\t\t}\n\t\treturn roomCoordinator.getRoomDirectives(instance.data.identifier)?.getUiText(UiTextContext.NO_ROOMS_SUBSCRIBED) || 'No_channels_yet';\n\t},\n});\n\nconst getLowerCaseNames = (room, nameDefault = '', fnameDefault = '') => {\n\tconst name = room.name || nameDefault;\n\tconst fname = room.fname || fnameDefault || name;\n\treturn {\n\t\tlowerCaseName: String(name).toLowerCase(),\n\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t};\n};\n\nconst mergeSubRoom = (subscription) => {\n\tconst options = {\n\t\tfields: {\n\t\t\tlm: 1,\n\t\t\tlastMessage: 1,\n\t\t\tuids: 1,\n\t\t\tstreamingOptions: 1,\n\t\t\tusernames: 1,\n\t\t\ttopic: 1,\n\t\t\tencrypted: 1,\n\t\t\tjitsiTimeout: 1,\n\t\t\t// autoTranslate: 1,\n\t\t\t// autoTranslateLanguage: 1,\n\t\t\tdescription: 1,\n\t\t\tannouncement: 1,\n\t\t\tbroadcast: 1,\n\t\t\tarchived: 1,\n\t\t\tavatarETag: 1,\n\t\t\tretention: 1,\n\t\t\tteamId: 1,\n\t\t\tteamMain: 1,\n\n\t\t\tonHold: 1,\n\t\t\tmetrics: 1,\n\t\t\tmuted: 1,\n\t\t\tservedBy: 1,\n\t\t\tts: 1,\n\t\t\twaitingResponse: 1,\n\t\t\tv: 1,\n\t\t\ttranscriptRequest: 1,\n\t\t\ttags: 1,\n\t\t\tclosedAt: 1,\n\t\t\tresponseBy: 1,\n\t\t\tpriorityId: 1,\n\t\t\tlivechatData: 1,\n\t\t\tdepartmentId: 1,\n\t\t\tsource: 1,\n\t\t\tqueuedAt: 1,\n\t\t},\n\t};\n\n\tconst room = Rooms.findOne({ _id: subscription.rid }, options) || {};\n\n\tconst lastRoomUpdate = room.lm || subscription.ts || subscription._updatedAt;\n\n\tconst {\n\t\tencrypted,\n\t\tdescription,\n\t\tcl,\n\t\ttopic,\n\t\tannouncement,\n\t\tbroadcast,\n\t\tarchived,\n\t\tavatarETag,\n\t\tretention,\n\t\tlastMessage,\n\t\tstreamingOptions,\n\t\tteamId,\n\t\tteamMain,\n\t\tuids,\n\t\tusernames,\n\t\tjitsiTimeout,\n\n\t\tv,\n\t\ttranscriptRequest,\n\t\tservedBy,\n\t\tonHold,\n\t\ttags,\n\t\tclosedAt,\n\t\tmetrics,\n\t\tmuted,\n\t\twaitingResponse,\n\t\tresponseBy,\n\t\tpriorityId,\n\t\tlivechatData,\n\t\tdepartmentId,\n\t\tts,\n\t\tsource,\n\t\tqueuedAt,\n\t} = room;\n\n\tsubscription.lm = subscription.lr ? new Date(Math.max(subscription.lr, lastRoomUpdate)) : lastRoomUpdate;\n\n\treturn Object.assign(subscription, getLowerCaseNames(subscription), {\n\t\tencrypted,\n\t\tdescription,\n\t\tcl,\n\t\ttopic,\n\t\tannouncement,\n\t\tbroadcast,\n\t\tarchived,\n\t\tavatarETag,\n\t\tretention,\n\t\tlastMessage,\n\t\tstreamingOptions,\n\t\tteamId,\n\t\tteamMain,\n\t\tuids,\n\t\tusernames,\n\t\tjitsiTimeout,\n\n\t\tv,\n\t\ttranscriptRequest,\n\t\tservedBy,\n\t\tonHold,\n\t\ttags,\n\t\tclosedAt,\n\t\tmetrics,\n\t\tmuted,\n\t\twaitingResponse,\n\t\tresponseBy,\n\t\tpriorityId,\n\t\tlivechatData,\n\t\tdepartmentId,\n\t\tts,\n\t\tsource,\n\t\tqueuedAt,\n\t});\n};\n\nconst mergeRoomSub = (room) => {\n\tconst sub = Subscriptions.findOne({ rid: room._id });\n\tif (!sub) {\n\t\treturn room;\n\t}\n\n\tconst {\n\t\tencrypted,\n\t\tdescription,\n\t\tcl,\n\t\ttopic,\n\t\tannouncement,\n\t\tbroadcast,\n\t\tarchived,\n\t\tavatarETag,\n\t\tretention,\n\t\tlastMessage,\n\t\tstreamingOptions,\n\t\tteamId,\n\t\tteamMain,\n\t\tuids,\n\t\tusernames,\n\t\tjitsiTimeout,\n\n\t\tv,\n\t\ttranscriptRequest,\n\t\tservedBy,\n\t\tonHold,\n\t\ttags,\n\t\tclosedAt,\n\t\tmetrics,\n\t\tmuted,\n\t\twaitingResponse,\n\t\tresponseBy,\n\t\tpriorityId,\n\t\tlivechatData,\n\t\tdepartmentId,\n\t\tts,\n\t\tsource,\n\t\tqueuedAt,\n\t} = room;\n\n\tSubscriptions.update(\n\t\t{\n\t\t\trid: room._id,\n\t\t},\n\t\t{\n\t\t\t$set: {\n\t\t\t\tencrypted,\n\t\t\t\tdescription,\n\t\t\t\tcl,\n\t\t\t\ttopic,\n\t\t\t\tannouncement,\n\t\t\t\tbroadcast,\n\t\t\t\tarchived,\n\t\t\t\tavatarETag,\n\t\t\t\tretention,\n\t\t\t\tuids,\n\t\t\t\tusernames,\n\t\t\t\tlastMessage,\n\t\t\t\tstreamingOptions,\n\t\t\t\tteamId,\n\t\t\t\tteamMain,\n\t\t\t\tv,\n\t\t\t\ttranscriptRequest,\n\t\t\t\tservedBy,\n\t\t\t\tonHold,\n\t\t\t\ttags,\n\t\t\t\tclosedAt,\n\t\t\t\tmetrics,\n\t\t\t\tmuted,\n\t\t\t\twaitingResponse,\n\t\t\t\tresponseBy,\n\t\t\t\tpriorityId,\n\t\t\t\tlivechatData,\n\t\t\t\tdepartmentId,\n\t\t\t\tjitsiTimeout,\n\t\t\t\tts,\n\t\t\t\tsource,\n\t\t\t\tqueuedAt,\n\t\t\t\t...getLowerCaseNames(room, sub.name, sub.fname),\n\t\t\t},\n\t\t},\n\t);\n\n\tSubscriptions.update(\n\t\t{\n\t\t\trid: room._id,\n\t\t\tlm: { $lt: room.lm },\n\t\t},\n\t\t{\n\t\t\t$set: {\n\t\t\t\tlm: room.lm,\n\t\t\t},\n\t\t},\n\t);\n\n\treturn room;\n};\n\ncallbacks.add('cachedCollection-received-rooms', mergeRoomSub);\ncallbacks.add('cachedCollection-sync-rooms', mergeRoomSub);\ncallbacks.add('cachedCollection-loadFromServer-rooms', mergeRoomSub);\n\ncallbacks.add('cachedCollection-received-subscriptions', mergeSubRoom);\ncallbacks.add('cachedCollection-sync-subscriptions', mergeSubRoom);\ncallbacks.add('cachedCollection-loadFromServer-subscriptions', mergeSubRoom);\n"]},"sourceType":"module","hash":"fd606536c9624082e8aef0bece1a5f27040fca8c"}
