{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/e2e/client/rocketchat.e2e.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/e2e/client/rocketchat.e2e.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/e2e/client/rocketchat.e2e.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/e2e/client/rocketchat.e2e.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/client/rocketchat.e2e.js"}},"code":"var _excluded = [\"_id\"];\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\n\nvar _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 3);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 4);\nmodule.export({\n  e2e: function () {\n    return e2e;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 2);\nvar TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n: function (v) {\n    TAPi18n = v;\n  }\n}, 3);\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 4);\nvar E2ERoom;\nmodule.link(\"./rocketchat.e2e.room\", {\n  E2ERoom: function (v) {\n    E2ERoom = v;\n  }\n}, 5);\nvar toString, toArrayBuffer, joinVectorAndEcryptedData, splitVectorAndEcryptedData, encryptAES, decryptAES, generateRSAKey, exportJWKKey, importRSAKey, importRawKey, deriveKey, generateMnemonicPhrase;\nmodule.link(\"./helper\", {\n  toString: function (v) {\n    toString = v;\n  },\n  toArrayBuffer: function (v) {\n    toArrayBuffer = v;\n  },\n  joinVectorAndEcryptedData: function (v) {\n    joinVectorAndEcryptedData = v;\n  },\n  splitVectorAndEcryptedData: function (v) {\n    splitVectorAndEcryptedData = v;\n  },\n  encryptAES: function (v) {\n    encryptAES = v;\n  },\n  decryptAES: function (v) {\n    decryptAES = v;\n  },\n  generateRSAKey: function (v) {\n    generateRSAKey = v;\n  },\n  exportJWKKey: function (v) {\n    exportJWKKey = v;\n  },\n  importRSAKey: function (v) {\n    importRSAKey = v;\n  },\n  importRawKey: function (v) {\n    importRawKey = v;\n  },\n  deriveKey: function (v) {\n    deriveKey = v;\n  },\n  generateMnemonicPhrase: function (v) {\n    generateMnemonicPhrase = v;\n  }\n}, 6);\nvar banners;\nmodule.link(\"../../../client/lib/banners\", {\n  \"*\": function (v) {\n    banners = v;\n  }\n}, 7);\nvar Rooms, Subscriptions, Messages;\nmodule.link(\"../../models/client\", {\n  Rooms: function (v) {\n    Rooms = v;\n  },\n  Subscriptions: function (v) {\n    Subscriptions = v;\n  },\n  Messages: function (v) {\n    Messages = v;\n  }\n}, 8);\nmodule.link(\"./events.js\");\nmodule.link(\"./tabbar\");\n\nvar _log, logError;\n\nmodule.link(\"./logger\", {\n  log: function (v) {\n    _log = v;\n  },\n  logError: function (v) {\n    logError = v;\n  }\n}, 9);\nvar waitUntilFind;\nmodule.link(\"../../../client/lib/utils/waitUntilFind\", {\n  waitUntilFind: function (v) {\n    waitUntilFind = v;\n  }\n}, 10);\nvar imperativeModal;\nmodule.link(\"../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 11);\nvar SaveE2EPasswordModal;\nmodule.link(\"../../../client/views/e2e/SaveE2EPasswordModal\", {\n  \"default\": function (v) {\n    SaveE2EPasswordModal = v;\n  }\n}, 12);\nvar EnterE2EPasswordModal;\nmodule.link(\"../../../client/views/e2e/EnterE2EPasswordModal\", {\n  \"default\": function (v) {\n    EnterE2EPasswordModal = v;\n  }\n}, 13);\nvar call;\nmodule.link(\"../../../client/lib/utils/call\", {\n  call: function (v) {\n    call = v;\n  }\n}, 14);\nvar failedToDecodeKey = false;\n\nvar E2E = /*#__PURE__*/function (_Emitter) {\n  _inheritsLoose(E2E, _Emitter);\n\n  function E2E() {\n    var _this;\n\n    _this = _Emitter.call(this) || this;\n    _this.started = false;\n    _this.enabled = new ReactiveVar(false);\n    _this._ready = new ReactiveVar(false);\n    _this.instancesByRoomId = {};\n\n    _this.on('ready', function () {\n      _this._ready.set(true);\n\n      _this.log('startClient -> Done');\n\n      _this.log('decryptSubscriptions');\n\n      _this.decryptSubscriptions();\n\n      _this.log('decryptSubscriptions -> Done');\n    });\n\n    return _this;\n  }\n\n  var _proto = E2E.prototype;\n\n  _proto.log = function () {\n    function log() {\n      for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n        msg[_key] = arguments[_key];\n      }\n\n      _log.apply(void 0, ['E2E'].concat(msg));\n    }\n\n    return log;\n  }();\n\n  _proto.error = function () {\n    function error() {\n      for (var _len2 = arguments.length, msg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        msg[_key2] = arguments[_key2];\n      }\n\n      logError.apply(void 0, ['E2E'].concat(msg));\n    }\n\n    return error;\n  }();\n\n  _proto.isEnabled = function () {\n    function isEnabled() {\n      return this.enabled.get();\n    }\n\n    return isEnabled;\n  }();\n\n  _proto.isReady = function () {\n    function isReady() {\n      return this.enabled.get() && this._ready.get();\n    }\n\n    return isReady;\n  }();\n\n  _proto.getInstanceByRoomId = function () {\n    function getInstanceByRoomId(rid) {\n      var room;\n      return _regeneratorRuntime.async(function () {\n        function getInstanceByRoomId$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(waitUntilFind(function () {\n                  return Rooms.findOne({\n                    _id: rid\n                  });\n                }));\n\n              case 2:\n                room = _context.sent;\n\n                if (!(room.t !== 'd' && room.t !== 'p')) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 5:\n                if (!(room.encrypted !== true && !room.e2eKeyId)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 7:\n                if (!this.instancesByRoomId[rid]) {\n                  this.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), rid, room.t);\n                }\n\n                return _context.abrupt(\"return\", this.instancesByRoomId[rid]);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return getInstanceByRoomId$;\n      }(), null, this, null, Promise);\n    }\n\n    return getInstanceByRoomId;\n  }();\n\n  _proto.removeInstanceByRoomId = function () {\n    function removeInstanceByRoomId(rid) {\n      delete this.instancesByRoomId[rid];\n    }\n\n    return removeInstanceByRoomId;\n  }();\n\n  _proto.startClient = function () {\n    function startClient() {\n      var _this2 = this;\n\n      var public_key, private_key, randomPassword, passwordRevealText;\n      return _regeneratorRuntime.async(function () {\n        function startClient$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.started) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                this.log('startClient -> STARTED');\n                this.started = true;\n                public_key = Meteor._localStorage.getItem('public_key');\n                private_key = Meteor._localStorage.getItem('private_key');\n                _context2.next = 8;\n                return _regeneratorRuntime.awrap(this.loadKeysFromDB());\n\n              case 8:\n                if (!public_key && this.db_public_key) {\n                  public_key = this.db_public_key;\n                }\n\n                if (!(!private_key && this.db_private_key)) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.prev = 10;\n                _context2.next = 13;\n                return _regeneratorRuntime.awrap(this.decodePrivateKey(this.db_private_key));\n\n              case 13:\n                private_key = _context2.sent;\n                _context2.next = 22;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](10);\n                this.started = false;\n                failedToDecodeKey = true;\n                this.openAlert({\n                  title: TAPi18n.__(\"Wasn't possible to decode your encryption key to be imported.\"),\n                  html: '<div>Your encryption password seems wrong. Click here to try again.</div>',\n                  modifiers: ['large', 'danger'],\n                  closable: true,\n                  icon: 'key',\n                  action: function () {\n                    _this2.startClient();\n\n                    _this2.closeAlert();\n                  }\n                });\n                return _context2.abrupt(\"return\");\n\n              case 22:\n                if (!(public_key && private_key)) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                _context2.next = 25;\n                return _regeneratorRuntime.awrap(this.loadKeys({\n                  public_key: public_key,\n                  private_key: private_key\n                }));\n\n              case 25:\n                _context2.next = 29;\n                break;\n\n              case 27:\n                _context2.next = 29;\n                return _regeneratorRuntime.awrap(this.createAndLoadKeys());\n\n              case 29:\n                if (!(!this.db_public_key || !this.db_private_key)) {\n                  _context2.next = 47;\n                  break;\n                }\n\n                _context2.t1 = _regeneratorRuntime;\n                _context2.t2 = call;\n                _context2.t3 = Meteor._localStorage.getItem('public_key');\n                _context2.t4 = _regeneratorRuntime;\n                _context2.t5 = this;\n                _context2.t6 = Meteor._localStorage.getItem('private_key');\n                _context2.next = 38;\n                return _regeneratorRuntime.awrap(this.createRandomPassword());\n\n              case 38:\n                _context2.t7 = _context2.sent;\n                _context2.t8 = _context2.t5.encodePrivateKey.call(_context2.t5, _context2.t6, _context2.t7);\n                _context2.next = 42;\n                return _context2.t4.awrap.call(_context2.t4, _context2.t8);\n\n              case 42:\n                _context2.t9 = _context2.sent;\n                _context2.t10 = {\n                  public_key: _context2.t3,\n                  private_key: _context2.t9\n                };\n                _context2.t11 = (0, _context2.t2)('e2e.setUserPublicAndPrivateKeys', _context2.t10);\n                _context2.next = 47;\n                return _context2.t1.awrap.call(_context2.t1, _context2.t11);\n\n              case 47:\n                randomPassword = Meteor._localStorage.getItem('e2e.randomPassword');\n\n                if (randomPassword) {\n                  passwordRevealText = TAPi18n.__('E2E_password_reveal_text', {\n                    postProcess: 'sprintf',\n                    sprintf: [randomPassword]\n                  });\n                  this.openAlert({\n                    title: TAPi18n.__('Save_Your_Encryption_Password'),\n                    html: TAPi18n.__('Click_here_to_view_and_copy_your_password'),\n                    modifiers: ['large'],\n                    closable: false,\n                    icon: 'key',\n                    action: function () {\n                      imperativeModal.open({\n                        component: SaveE2EPasswordModal,\n                        props: {\n                          passwordRevealText: passwordRevealText,\n                          onClose: imperativeModal.close,\n                          onCancel: function () {\n                            _this2.closeAlert();\n\n                            imperativeModal.close();\n                          },\n                          onConfirm: function () {\n                            Meteor._localStorage.removeItem('e2e.randomPassword');\n\n                            _this2.closeAlert();\n\n                            imperativeModal.close();\n                          }\n                        }\n                      });\n                    }\n                  });\n                }\n\n                this.emit('ready');\n\n              case 50:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }\n\n        return startClient$;\n      }(), null, this, [[10, 16]], Promise);\n    }\n\n    return startClient;\n  }();\n\n  _proto.stopClient = function () {\n    function stopClient() {\n      return _regeneratorRuntime.async(function () {\n        function stopClient$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.log('-> Stop Client');\n                this.closeAlert();\n\n                Meteor._localStorage.removeItem('public_key');\n\n                Meteor._localStorage.removeItem('private_key');\n\n                this.instancesByRoomId = {};\n                this.privateKey = null;\n                this.enabled.set(false);\n\n                this._ready.set(false);\n\n                this.started = false;\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }\n\n        return stopClient$;\n      }(), null, this, null, Promise);\n    }\n\n    return stopClient;\n  }();\n\n  _proto.changePassword = function () {\n    function changePassword(newPassword) {\n      return _regeneratorRuntime.async(function () {\n        function changePassword$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.t0 = _regeneratorRuntime;\n                _context4.t1 = call;\n                _context4.t2 = Meteor._localStorage.getItem('public_key');\n                _context4.next = 5;\n                return _regeneratorRuntime.awrap(this.encodePrivateKey(Meteor._localStorage.getItem('private_key'), newPassword));\n\n              case 5:\n                _context4.t3 = _context4.sent;\n                _context4.t4 = {\n                  public_key: _context4.t2,\n                  private_key: _context4.t3\n                };\n                _context4.t5 = (0, _context4.t1)('e2e.setUserPublicAndPrivateKeys', _context4.t4);\n                _context4.next = 10;\n                return _context4.t0.awrap.call(_context4.t0, _context4.t5);\n\n              case 10:\n                if (Meteor._localStorage.getItem('e2e.randomPassword')) {\n                  Meteor._localStorage.setItem('e2e.randomPassword', newPassword);\n                }\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }\n\n        return changePassword$;\n      }(), null, this, null, Promise);\n    }\n\n    return changePassword;\n  }();\n\n  _proto.loadKeysFromDB = function () {\n    function loadKeysFromDB() {\n      var _await$call, public_key, private_key;\n\n      return _regeneratorRuntime.async(function () {\n        function loadKeysFromDB$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return _regeneratorRuntime.awrap(call('e2e.fetchMyKeys'));\n\n              case 3:\n                _await$call = _context5.sent;\n                public_key = _await$call.public_key;\n                private_key = _await$call.private_key;\n                this.db_public_key = public_key;\n                this.db_private_key = private_key;\n                _context5.next = 13;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", this.error('Error fetching RSA keys: ', _context5.t0));\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }\n\n        return loadKeysFromDB$;\n      }(), null, this, [[0, 10]], Promise);\n    }\n\n    return loadKeysFromDB;\n  }();\n\n  _proto.loadKeys = function () {\n    function loadKeys(_ref) {\n      var public_key, private_key;\n      return _regeneratorRuntime.async(function () {\n        function loadKeys$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                public_key = _ref.public_key, private_key = _ref.private_key;\n\n                Meteor._localStorage.setItem('public_key', public_key);\n\n                _context6.prev = 2;\n                _context6.next = 5;\n                return _regeneratorRuntime.awrap(importRSAKey(EJSON.parse(private_key), ['decrypt']));\n\n              case 5:\n                this.privateKey = _context6.sent;\n\n                Meteor._localStorage.setItem('private_key', private_key);\n\n                _context6.next = 12;\n                break;\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](2);\n                return _context6.abrupt(\"return\", this.error('Error importing private key: ', _context6.t0));\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }\n\n        return loadKeys$;\n      }(), null, this, [[2, 9]], Promise);\n    }\n\n    return loadKeys;\n  }();\n\n  _proto.createAndLoadKeys = function () {\n    function createAndLoadKeys() {\n      var key, publicKey, privateKey;\n      return _regeneratorRuntime.async(function () {\n        function createAndLoadKeys$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return _regeneratorRuntime.awrap(generateRSAKey());\n\n              case 3:\n                key = _context7.sent;\n                this.privateKey = key.privateKey;\n                _context7.next = 10;\n                break;\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n                return _context7.abrupt(\"return\", this.error('Error generating key: ', _context7.t0));\n\n              case 10:\n                _context7.prev = 10;\n                _context7.next = 13;\n                return _regeneratorRuntime.awrap(exportJWKKey(key.publicKey));\n\n              case 13:\n                publicKey = _context7.sent;\n\n                Meteor._localStorage.setItem('public_key', JSON.stringify(publicKey));\n\n                _context7.next = 20;\n                break;\n\n              case 17:\n                _context7.prev = 17;\n                _context7.t1 = _context7[\"catch\"](10);\n                return _context7.abrupt(\"return\", this.error('Error exporting public key: ', _context7.t1));\n\n              case 20:\n                _context7.prev = 20;\n                _context7.next = 23;\n                return _regeneratorRuntime.awrap(exportJWKKey(key.privateKey));\n\n              case 23:\n                privateKey = _context7.sent;\n\n                Meteor._localStorage.setItem('private_key', JSON.stringify(privateKey));\n\n                _context7.next = 30;\n                break;\n\n              case 27:\n                _context7.prev = 27;\n                _context7.t2 = _context7[\"catch\"](20);\n                return _context7.abrupt(\"return\", this.error('Error exporting private key: ', _context7.t2));\n\n              case 30:\n                this.requestSubscriptionKeys();\n\n              case 31:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }\n\n        return createAndLoadKeys$;\n      }(), null, this, [[0, 7], [10, 17], [20, 27]], Promise);\n    }\n\n    return createAndLoadKeys;\n  }();\n\n  _proto.requestSubscriptionKeys = function () {\n    function requestSubscriptionKeys() {\n      return _regeneratorRuntime.async(function () {\n        function requestSubscriptionKeys$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                call('e2e.requestSubscriptionKeys');\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }\n\n        return requestSubscriptionKeys$;\n      }(), null, null, null, Promise);\n    }\n\n    return requestSubscriptionKeys;\n  }();\n\n  _proto.createRandomPassword = function () {\n    function createRandomPassword() {\n      var randomPassword;\n      return _regeneratorRuntime.async(function () {\n        function createRandomPassword$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _regeneratorRuntime.awrap(generateMnemonicPhrase(5));\n\n              case 2:\n                randomPassword = _context9.sent;\n\n                Meteor._localStorage.setItem('e2e.randomPassword', randomPassword);\n\n                return _context9.abrupt(\"return\", randomPassword);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }\n\n        return createRandomPassword$;\n      }(), null, null, null, Promise);\n    }\n\n    return createRandomPassword;\n  }();\n\n  _proto.encodePrivateKey = function () {\n    function encodePrivateKey(private_key, password) {\n      var masterKey, vector, encodedPrivateKey;\n      return _regeneratorRuntime.async(function () {\n        function encodePrivateKey$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return _regeneratorRuntime.awrap(this.getMasterKey(password));\n\n              case 2:\n                masterKey = _context10.sent;\n                vector = crypto.getRandomValues(new Uint8Array(16));\n                _context10.prev = 4;\n                _context10.next = 7;\n                return _regeneratorRuntime.awrap(encryptAES(vector, masterKey, toArrayBuffer(private_key)));\n\n              case 7:\n                encodedPrivateKey = _context10.sent;\n                return _context10.abrupt(\"return\", EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey)));\n\n              case 11:\n                _context10.prev = 11;\n                _context10.t0 = _context10[\"catch\"](4);\n                return _context10.abrupt(\"return\", this.error('Error encrypting encodedPrivateKey: ', _context10.t0));\n\n              case 14:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }\n\n        return encodePrivateKey$;\n      }(), null, this, [[4, 11]], Promise);\n    }\n\n    return encodePrivateKey;\n  }();\n\n  _proto.getMasterKey = function () {\n    function getMasterKey(password) {\n      var baseKey;\n      return _regeneratorRuntime.async(function () {\n        function getMasterKey$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (password == null) {\n                  alert('You should provide a password');\n                } // First, create a PBKDF2 \"key\" containing the password\n\n\n                _context11.prev = 1;\n                _context11.next = 4;\n                return _regeneratorRuntime.awrap(importRawKey(toArrayBuffer(password)));\n\n              case 4:\n                baseKey = _context11.sent;\n                _context11.next = 10;\n                break;\n\n              case 7:\n                _context11.prev = 7;\n                _context11.t0 = _context11[\"catch\"](1);\n                return _context11.abrupt(\"return\", this.error('Error creating a key based on user password: ', _context11.t0));\n\n              case 10:\n                _context11.prev = 10;\n                _context11.next = 13;\n                return _regeneratorRuntime.awrap(deriveKey(toArrayBuffer(Meteor.userId()), baseKey));\n\n              case 13:\n                return _context11.abrupt(\"return\", _context11.sent);\n\n              case 16:\n                _context11.prev = 16;\n                _context11.t1 = _context11[\"catch\"](10);\n                return _context11.abrupt(\"return\", this.error('Error deriving baseKey: ', _context11.t1));\n\n              case 19:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }\n\n        return getMasterKey$;\n      }(), null, this, [[1, 7], [10, 16]], Promise);\n    }\n\n    return getMasterKey;\n  }();\n\n  _proto.requestPassword = function () {\n    function requestPassword() {\n      var _this3 = this;\n\n      return _regeneratorRuntime.async(function () {\n        function requestPassword$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", new Promise(function (resolve) {\n                  var showModal = function () {\n                    imperativeModal.open({\n                      component: EnterE2EPasswordModal,\n                      props: {\n                        onClose: imperativeModal.close,\n                        onCancel: function () {\n                          failedToDecodeKey = false;\n\n                          _this3.closeAlert();\n\n                          imperativeModal.close();\n                        },\n                        onConfirm: function (password) {\n                          resolve(password);\n\n                          _this3.closeAlert();\n\n                          imperativeModal.close();\n                        }\n                      }\n                    });\n                  };\n\n                  var showAlert = function () {\n                    _this3.openAlert({\n                      title: TAPi18n.__('Enter_your_E2E_password'),\n                      html: TAPi18n.__('Click_here_to_enter_your_encryption_password'),\n                      modifiers: ['large'],\n                      closable: false,\n                      icon: 'key',\n                      action: function () {\n                        showModal();\n                      }\n                    });\n                  };\n\n                  if (failedToDecodeKey) {\n                    showModal();\n                  } else {\n                    showAlert();\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }\n\n        return requestPassword$;\n      }(), null, null, null, Promise);\n    }\n\n    return requestPassword;\n  }();\n\n  _proto.decodePrivateKey = function () {\n    function decodePrivateKey(private_key) {\n      var password, masterKey, _splitVectorAndEcrypt, _splitVectorAndEcrypt2, vector, cipherText, privKey;\n\n      return _regeneratorRuntime.async(function () {\n        function decodePrivateKey$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return _regeneratorRuntime.awrap(this.requestPassword());\n\n              case 2:\n                password = _context13.sent;\n                _context13.next = 5;\n                return _regeneratorRuntime.awrap(this.getMasterKey(password));\n\n              case 5:\n                masterKey = _context13.sent;\n                _splitVectorAndEcrypt = splitVectorAndEcryptedData(EJSON.parse(private_key)), _splitVectorAndEcrypt2 = _slicedToArray(_splitVectorAndEcrypt, 2), vector = _splitVectorAndEcrypt2[0], cipherText = _splitVectorAndEcrypt2[1];\n                _context13.prev = 7;\n                _context13.next = 10;\n                return _regeneratorRuntime.awrap(decryptAES(vector, masterKey, cipherText));\n\n              case 10:\n                privKey = _context13.sent;\n                return _context13.abrupt(\"return\", toString(privKey));\n\n              case 14:\n                _context13.prev = 14;\n                _context13.t0 = _context13[\"catch\"](7);\n                throw new Error('E2E -> Error decrypting private key');\n\n              case 17:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }\n\n        return decodePrivateKey$;\n      }(), null, this, [[7, 14]], Promise);\n    }\n\n    return decodePrivateKey;\n  }();\n\n  _proto.decryptMessage = function () {\n    function decryptMessage(message) {\n      var e2eRoom, data;\n      return _regeneratorRuntime.async(function () {\n        function decryptMessage$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (!(message.t !== 'e2e' || message.e2e === 'done')) {\n                  _context14.next = 2;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", message);\n\n              case 2:\n                _context14.next = 4;\n                return _regeneratorRuntime.awrap(this.getInstanceByRoomId(message.rid));\n\n              case 4:\n                e2eRoom = _context14.sent;\n\n                if (e2eRoom) {\n                  _context14.next = 7;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", message);\n\n              case 7:\n                _context14.next = 9;\n                return _regeneratorRuntime.awrap(e2eRoom.decrypt(message.msg));\n\n              case 9:\n                data = _context14.sent;\n\n                if (data) {\n                  _context14.next = 12;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", message);\n\n              case 12:\n                return _context14.abrupt(\"return\", _objectSpread(_objectSpread({}, message), {}, {\n                  msg: data.text,\n                  e2e: 'done'\n                }));\n\n              case 13:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }\n\n        return decryptMessage$;\n      }(), null, this, null, Promise);\n    }\n\n    return decryptMessage;\n  }();\n\n  _proto.decryptPendingMessages = function () {\n    function decryptPendingMessages() {\n      var _this4 = this;\n\n      return _regeneratorRuntime.async(function () {\n        function decryptPendingMessages$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                return _context16.abrupt(\"return\", Messages.find({\n                  t: 'e2e',\n                  e2e: 'pending'\n                }).forEach(function () {\n                  function _callee(_ref2) {\n                    var _id, msg;\n\n                    return _regeneratorRuntime.async(function () {\n                      function _callee$(_context15) {\n                        while (1) {\n                          switch (_context15.prev = _context15.next) {\n                            case 0:\n                              _id = _ref2._id, msg = _objectWithoutProperties(_ref2, _excluded);\n                              _context15.t0 = Messages.direct;\n                              _context15.t1 = {\n                                _id: _id\n                              };\n                              _context15.next = 5;\n                              return _regeneratorRuntime.awrap(_this4.decryptMessage(msg));\n\n                            case 5:\n                              _context15.t2 = _context15.sent;\n\n                              _context15.t0.update.call(_context15.t0, _context15.t1, _context15.t2);\n\n                            case 7:\n                            case \"end\":\n                              return _context15.stop();\n                          }\n                        }\n                      }\n\n                      return _callee$;\n                    }(), null, null, null, Promise);\n                  }\n\n                  return _callee;\n                }()));\n\n              case 1:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }\n\n        return decryptPendingMessages$;\n      }(), null, null, null, Promise);\n    }\n\n    return decryptPendingMessages;\n  }();\n\n  _proto.decryptSubscription = function () {\n    function decryptSubscription(rid) {\n      var e2eRoom;\n      return _regeneratorRuntime.async(function () {\n        function decryptSubscription$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return _regeneratorRuntime.awrap(this.getInstanceByRoomId(rid));\n\n              case 2:\n                e2eRoom = _context17.sent;\n                this.log('decryptSubscription ->', rid);\n                e2eRoom === null || e2eRoom === void 0 ? void 0 : e2eRoom.decryptSubscription();\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }\n\n        return decryptSubscription$;\n      }(), null, this, null, Promise);\n    }\n\n    return decryptSubscription;\n  }();\n\n  _proto.decryptSubscriptions = function () {\n    function decryptSubscriptions() {\n      var _this5 = this;\n\n      return _regeneratorRuntime.async(function () {\n        function decryptSubscriptions$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                Subscriptions.find({\n                  encrypted: true\n                }).forEach(function (room) {\n                  return _this5.decryptSubscription(room._id);\n                });\n\n              case 1:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }\n\n        return decryptSubscriptions$;\n      }(), null, null, null, Promise);\n    }\n\n    return decryptSubscriptions;\n  }();\n\n  _proto.openAlert = function () {\n    function openAlert(config) {\n      banners.open(_objectSpread({\n        id: 'e2e'\n      }, config));\n    }\n\n    return openAlert;\n  }();\n\n  _proto.closeAlert = function () {\n    function closeAlert() {\n      banners.closeById('e2e');\n    }\n\n    return closeAlert;\n  }();\n\n  return E2E;\n}(Emitter);\n\nvar e2e = new E2E();","map":{"version":3,"sources":["app/e2e/client/rocketchat.e2e.js"],"names":["_objectWithoutProperties","module","link","default","v","_regeneratorRuntime","_objectSpread","_slicedToArray","_inheritsLoose","export","e2e","Meteor","ReactiveVar","EJSON","TAPi18n","Emitter","E2ERoom","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptAES","decryptAES","generateRSAKey","exportJWKKey","importRSAKey","importRawKey","deriveKey","generateMnemonicPhrase","banners","Rooms","Subscriptions","Messages","log","logError","waitUntilFind","imperativeModal","SaveE2EPasswordModal","EnterE2EPasswordModal","call","failedToDecodeKey","E2E","started","enabled","_ready","instancesByRoomId","on","set","decryptSubscriptions","msg","error","isEnabled","get","isReady","getInstanceByRoomId","rid","findOne","_id","room","t","encrypted","e2eKeyId","userId","removeInstanceByRoomId","startClient","public_key","_localStorage","getItem","private_key","loadKeysFromDB","db_public_key","db_private_key","decodePrivateKey","openAlert","title","__","html","modifiers","closable","icon","action","closeAlert","loadKeys","createAndLoadKeys","createRandomPassword","encodePrivateKey","randomPassword","passwordRevealText","postProcess","sprintf","open","component","props","onClose","close","onCancel","onConfirm","removeItem","emit","stopClient","privateKey","changePassword","newPassword","setItem","parse","key","publicKey","JSON","stringify","requestSubscriptionKeys","password","getMasterKey","masterKey","vector","crypto","getRandomValues","Uint8Array","encodedPrivateKey","alert","baseKey","requestPassword","Promise","resolve","showModal","showAlert","cipherText","privKey","Error","decryptMessage","message","e2eRoom","decrypt","data","text","decryptPendingMessages","find","forEach","direct","update","decryptSubscription","config","id","closeById"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { EJSON } from 'meteor/ejson';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { Emitter } from '@rocket.chat/emitter';\n\nimport { E2ERoom } from './rocketchat.e2e.room';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptAES,\n\tdecryptAES,\n\tgenerateRSAKey,\n\texportJWKKey,\n\timportRSAKey,\n\timportRawKey,\n\tderiveKey,\n\tgenerateMnemonicPhrase,\n} from './helper';\nimport * as banners from '../../../client/lib/banners';\nimport { Rooms, Subscriptions, Messages } from '../../models/client';\nimport './events.js';\nimport './tabbar';\nimport { log, logError } from './logger';\nimport { waitUntilFind } from '../../../client/lib/utils/waitUntilFind';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport SaveE2EPasswordModal from '../../../client/views/e2e/SaveE2EPasswordModal';\nimport EnterE2EPasswordModal from '../../../client/views/e2e/EnterE2EPasswordModal';\nimport { call } from '../../../client/lib/utils/call';\n\nlet failedToDecodeKey = false;\n\nclass E2E extends Emitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.started = false;\n\t\tthis.enabled = new ReactiveVar(false);\n\t\tthis._ready = new ReactiveVar(false);\n\t\tthis.instancesByRoomId = {};\n\n\t\tthis.on('ready', () => {\n\t\t\tthis._ready.set(true);\n\t\t\tthis.log('startClient -> Done');\n\t\t\tthis.log('decryptSubscriptions');\n\n\t\t\tthis.decryptSubscriptions();\n\t\t\tthis.log('decryptSubscriptions -> Done');\n\t\t});\n\t}\n\n\tlog(...msg) {\n\t\tlog('E2E', ...msg);\n\t}\n\n\terror(...msg) {\n\t\tlogError('E2E', ...msg);\n\t}\n\n\tisEnabled() {\n\t\treturn this.enabled.get();\n\t}\n\n\tisReady() {\n\t\treturn this.enabled.get() && this._ready.get();\n\t}\n\n\tasync getInstanceByRoomId(rid) {\n\t\tconst room = await waitUntilFind(() => Rooms.findOne({ _id: rid }));\n\n\t\tif (room.t !== 'd' && room.t !== 'p') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (room.encrypted !== true && !room.e2eKeyId) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.instancesByRoomId[rid]) {\n\t\t\tthis.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), rid, room.t);\n\t\t}\n\n\t\treturn this.instancesByRoomId[rid];\n\t}\n\n\tremoveInstanceByRoomId(rid) {\n\t\tdelete this.instancesByRoomId[rid];\n\t}\n\n\tasync startClient() {\n\t\tif (this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('startClient -> STARTED');\n\n\t\tthis.started = true;\n\t\tlet public_key = Meteor._localStorage.getItem('public_key');\n\t\tlet private_key = Meteor._localStorage.getItem('private_key');\n\n\t\tawait this.loadKeysFromDB();\n\n\t\tif (!public_key && this.db_public_key) {\n\t\t\tpublic_key = this.db_public_key;\n\t\t}\n\n\t\tif (!private_key && this.db_private_key) {\n\t\t\ttry {\n\t\t\t\tprivate_key = await this.decodePrivateKey(this.db_private_key);\n\t\t\t} catch (error) {\n\t\t\t\tthis.started = false;\n\t\t\t\tfailedToDecodeKey = true;\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: TAPi18n.__(\"Wasn't possible to decode your encryption key to be imported.\"),\n\t\t\t\t\thtml: '<div>Your encryption password seems wrong. Click here to try again.</div>',\n\t\t\t\t\tmodifiers: ['large', 'danger'],\n\t\t\t\t\tclosable: true,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tthis.startClient();\n\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (public_key && private_key) {\n\t\t\tawait this.loadKeys({ public_key, private_key });\n\t\t} else {\n\t\t\tawait this.createAndLoadKeys();\n\t\t}\n\n\t\t// TODO: Split in 2 methods to persist keys\n\t\tif (!this.db_public_key || !this.db_private_key) {\n\t\t\tawait call('e2e.setUserPublicAndPrivateKeys', {\n\t\t\t\tpublic_key: Meteor._localStorage.getItem('public_key'),\n\t\t\t\tprivate_key: await this.encodePrivateKey(Meteor._localStorage.getItem('private_key'), await this.createRandomPassword()),\n\t\t\t});\n\t\t}\n\n\t\tconst randomPassword = Meteor._localStorage.getItem('e2e.randomPassword');\n\t\tif (randomPassword) {\n\t\t\tconst passwordRevealText = TAPi18n.__('E2E_password_reveal_text', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [randomPassword],\n\t\t\t});\n\n\t\t\tthis.openAlert({\n\t\t\t\ttitle: TAPi18n.__('Save_Your_Encryption_Password'),\n\t\t\t\thtml: TAPi18n.__('Click_here_to_view_and_copy_your_password'),\n\t\t\t\tmodifiers: ['large'],\n\t\t\t\tclosable: false,\n\t\t\t\ticon: 'key',\n\t\t\t\taction: () => {\n\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\tcomponent: SaveE2EPasswordModal,\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tpasswordRevealText,\n\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\t\tMeteor._localStorage.removeItem('e2e.randomPassword');\n\t\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tthis.emit('ready');\n\t}\n\n\tasync stopClient() {\n\t\tthis.log('-> Stop Client');\n\t\tthis.closeAlert();\n\n\t\tMeteor._localStorage.removeItem('public_key');\n\t\tMeteor._localStorage.removeItem('private_key');\n\t\tthis.instancesByRoomId = {};\n\t\tthis.privateKey = null;\n\t\tthis.enabled.set(false);\n\t\tthis._ready.set(false);\n\t\tthis.started = false;\n\t}\n\n\tasync changePassword(newPassword) {\n\t\tawait call('e2e.setUserPublicAndPrivateKeys', {\n\t\t\tpublic_key: Meteor._localStorage.getItem('public_key'),\n\t\t\tprivate_key: await this.encodePrivateKey(Meteor._localStorage.getItem('private_key'), newPassword),\n\t\t});\n\n\t\tif (Meteor._localStorage.getItem('e2e.randomPassword')) {\n\t\t\tMeteor._localStorage.setItem('e2e.randomPassword', newPassword);\n\t\t}\n\t}\n\n\tasync loadKeysFromDB() {\n\t\ttry {\n\t\t\tconst { public_key, private_key } = await call('e2e.fetchMyKeys');\n\n\t\t\tthis.db_public_key = public_key;\n\t\t\tthis.db_private_key = private_key;\n\t\t} catch (error) {\n\t\t\treturn this.error('Error fetching RSA keys: ', error);\n\t\t}\n\t}\n\n\tasync loadKeys({ public_key, private_key }) {\n\t\tMeteor._localStorage.setItem('public_key', public_key);\n\n\t\ttry {\n\t\t\tthis.privateKey = await importRSAKey(EJSON.parse(private_key), ['decrypt']);\n\n\t\t\tMeteor._localStorage.setItem('private_key', private_key);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error importing private key: ', error);\n\t\t}\n\t}\n\n\tasync createAndLoadKeys() {\n\t\t// Could not obtain public-private keypair from server.\n\t\tlet key;\n\t\ttry {\n\t\t\tkey = await generateRSAKey();\n\t\t\tthis.privateKey = key.privateKey;\n\t\t} catch (error) {\n\t\t\treturn this.error('Error generating key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst publicKey = await exportJWKKey(key.publicKey);\n\n\t\t\tMeteor._localStorage.setItem('public_key', JSON.stringify(publicKey));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error exporting public key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst privateKey = await exportJWKKey(key.privateKey);\n\n\t\t\tMeteor._localStorage.setItem('private_key', JSON.stringify(privateKey));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error exporting private key: ', error);\n\t\t}\n\n\t\tthis.requestSubscriptionKeys();\n\t}\n\n\tasync requestSubscriptionKeys() {\n\t\tcall('e2e.requestSubscriptionKeys');\n\t}\n\n\tasync createRandomPassword() {\n\t\tconst randomPassword = await generateMnemonicPhrase(5);\n\t\tMeteor._localStorage.setItem('e2e.randomPassword', randomPassword);\n\t\treturn randomPassword;\n\t}\n\n\tasync encodePrivateKey(private_key, password) {\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\ttry {\n\t\t\tconst encodedPrivateKey = await encryptAES(vector, masterKey, toArrayBuffer(private_key));\n\n\t\t\treturn EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting encodedPrivateKey: ', error);\n\t\t}\n\t}\n\n\tasync getMasterKey(password) {\n\t\tif (password == null) {\n\t\t\talert('You should provide a password');\n\t\t}\n\n\t\t// First, create a PBKDF2 \"key\" containing the password\n\t\tlet baseKey;\n\t\ttry {\n\t\t\tbaseKey = await importRawKey(toArrayBuffer(password));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error creating a key based on user password: ', error);\n\t\t}\n\n\t\t// Derive a key from the password\n\t\ttry {\n\t\t\treturn await deriveKey(toArrayBuffer(Meteor.userId()), baseKey);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error deriving baseKey: ', error);\n\t\t}\n\t}\n\n\tasync requestPassword() {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst showModal = () => {\n\t\t\t\timperativeModal.open({\n\t\t\t\t\tcomponent: EnterE2EPasswordModal,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\tfailedToDecodeKey = false;\n\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonConfirm: (password) => {\n\t\t\t\t\t\t\tresolve(password);\n\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst showAlert = () => {\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: TAPi18n.__('Enter_your_E2E_password'),\n\t\t\t\t\thtml: TAPi18n.__('Click_here_to_enter_your_encryption_password'),\n\t\t\t\t\tmodifiers: ['large'],\n\t\t\t\t\tclosable: false,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction() {\n\t\t\t\t\t\tshowModal();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (failedToDecodeKey) {\n\t\t\t\tshowModal();\n\t\t\t} else {\n\t\t\t\tshowAlert();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync decodePrivateKey(private_key) {\n\t\tconst password = await this.requestPassword();\n\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(private_key));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\treturn toString(privKey);\n\t\t} catch (error) {\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decryptMessage(message) {\n\t\tif (message.t !== 'e2e' || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await e2eRoom.decrypt(message.msg);\n\n\t\tif (!data) {\n\t\t\treturn message;\n\t\t}\n\n\t\treturn {\n\t\t\t...message,\n\t\t\tmsg: data.text,\n\t\t\te2e: 'done',\n\t\t};\n\t}\n\n\tasync decryptPendingMessages() {\n\t\treturn Messages.find({ t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }) => {\n\t\t\tMessages.direct.update({ _id }, await this.decryptMessage(msg));\n\t\t});\n\t}\n\n\tasync decryptSubscription(rid) {\n\t\tconst e2eRoom = await this.getInstanceByRoomId(rid);\n\t\tthis.log('decryptSubscription ->', rid);\n\t\te2eRoom?.decryptSubscription();\n\t}\n\n\tasync decryptSubscriptions() {\n\t\tSubscriptions.find({\n\t\t\tencrypted: true,\n\t\t}).forEach((room) => this.decryptSubscription(room._id));\n\t}\n\n\topenAlert(config) {\n\t\tbanners.open({ id: 'e2e', ...config });\n\t}\n\n\tcloseAlert() {\n\t\tbanners.closeById('e2e');\n\t}\n}\n\nexport const e2e = new E2E();\n"]},"sourceType":"module","hash":"5f775c58bd27870f27417106fd348fb960041040"}
