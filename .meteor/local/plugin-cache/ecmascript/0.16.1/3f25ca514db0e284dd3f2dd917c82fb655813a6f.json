{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/preferences/PreferencesSoundSection.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/account/preferences/PreferencesSoundSection.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/preferences/PreferencesSoundSection.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/account/preferences/PreferencesSoundSection.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/account/preferences/PreferencesSoundSection.js"}},"code":"const _excluded = [\"onChange\", \"commitRef\"];\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nlet Accordion, Field, Select, FieldGroup, ToggleSwitch, Tooltip, Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Accordion(v) {\n    Accordion = v;\n  },\n\n  Field(v) {\n    Field = v;\n  },\n\n  Select(v) {\n    Select = v;\n  },\n\n  FieldGroup(v) {\n    FieldGroup = v;\n  },\n\n  ToggleSwitch(v) {\n    ToggleSwitch = v;\n  },\n\n  Tooltip(v) {\n    Tooltip = v;\n  },\n\n  Box(v) {\n    Box = v;\n  }\n\n}, 0);\nlet React, useMemo, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 1);\nlet CustomSounds;\nmodule.link(\"../../../../app/custom-sounds/client\", {\n  CustomSounds(v) {\n    CustomSounds = v;\n  }\n\n}, 2);\nlet useTranslation;\nmodule.link(\"../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 3);\nlet useUserPreference;\nmodule.link(\"../../../contexts/UserContext\", {\n  useUserPreference(v) {\n    useUserPreference = v;\n  }\n\n}, 4);\nlet useForm;\nmodule.link(\"../../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 5);\n\nconst useCustomSoundsOptions = () => useMemo(() => CustomSounds && CustomSounds.getList && CustomSounds.getList().map(_ref => {\n  let {\n    _id,\n    name\n  } = _ref;\n  return [_id, name];\n}), []);\n\nconst PreferencesSoundSection = _ref2 => {\n  let {\n    onChange,\n    commitRef\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  const t = useTranslation();\n  const soundsList = useCustomSoundsOptions();\n  const settings = {\n    newRoomNotification: useUserPreference('newRoomNotification'),\n    newMessageNotification: useUserPreference('newMessageNotification'),\n    muteFocusedConversations: useUserPreference('muteFocusedConversations'),\n    notificationsSoundVolume: useUserPreference('notificationsSoundVolume')\n  };\n  const {\n    values,\n    handlers,\n    commit\n  } = useForm(settings, onChange);\n  const {\n    newRoomNotification,\n    newMessageNotification,\n    muteFocusedConversations,\n    notificationsSoundVolume\n  } = values;\n  const {\n    handleNewRoomNotification,\n    handleNewMessageNotification,\n    handleMuteFocusedConversations,\n    handleNotificationsSoundVolume\n  } = handlers;\n  const onChangeNotificationsSoundVolume = useCallback(e => handleNotificationsSoundVolume(Math.max(0, Math.min(Number(e.currentTarget.value), 100))), [handleNotificationsSoundVolume]);\n  commitRef.current.sound = commit;\n  return /*#__PURE__*/React.createElement(Accordion.Item, _extends({\n    title: t('Sound')\n  }, props), /*#__PURE__*/React.createElement(FieldGroup, null, useMemo(() => /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('New_Room_Notification')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Select, {\n    value: newRoomNotification,\n    onChange: handleNewRoomNotification,\n    options: soundsList\n  }))), [handleNewRoomNotification, newRoomNotification, soundsList, t]), useMemo(() => /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('New_Message_Notification')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Select, {\n    value: newMessageNotification,\n    onChange: handleNewMessageNotification,\n    options: soundsList\n  }))), [handleNewMessageNotification, newMessageNotification, soundsList, t]), useMemo(() => /*#__PURE__*/React.createElement(Field, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"spaceBetween\",\n    flexGrow: 1\n  }, /*#__PURE__*/React.createElement(Field.Label, null, t('Mute_Focused_Conversations')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(ToggleSwitch, {\n    checked: muteFocusedConversations,\n    onChange: handleMuteFocusedConversations\n  }))), [handleMuteFocusedConversations, muteFocusedConversations, t]), useMemo(() => /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Notifications_Sound_Volume')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Box, {\n    is: \"input\",\n    flexGrow: 1,\n    type: \"range\",\n    value: notificationsSoundVolume,\n    onChange: onChangeNotificationsSoundVolume,\n    min: \"0\",\n    max: \"100\"\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right-left\",\n    mis: \"x8\"\n  }, notificationsSoundVolume))), [notificationsSoundVolume, onChangeNotificationsSoundVolume, t])));\n};\n\nmodule.exportDefault(PreferencesSoundSection);","map":{"version":3,"sources":["client/views/account/preferences/PreferencesSoundSection.js"],"names":["_extends","module","link","default","v","_objectWithoutProperties","Accordion","Field","Select","FieldGroup","ToggleSwitch","Tooltip","Box","React","useMemo","useCallback","CustomSounds","useTranslation","useUserPreference","useForm","useCustomSoundsOptions","getList","map","_id","name","PreferencesSoundSection","onChange","commitRef","props","t","soundsList","settings","newRoomNotification","newMessageNotification","muteFocusedConversations","notificationsSoundVolume","values","handlers","commit","handleNewRoomNotification","handleNewMessageNotification","handleMuteFocusedConversations","handleNotificationsSoundVolume","onChangeNotificationsSoundVolume","e","Math","max","min","Number","currentTarget","value","current","sound","exportDefault"],"mappings":"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","sourcesContent":["import { Accordion, Field, Select, FieldGroup, ToggleSwitch, Tooltip, Box } from '@rocket.chat/fuselage';\nimport React, { useMemo, useCallback } from 'react';\n\nimport { CustomSounds } from '../../../../app/custom-sounds/client';\nimport { useTranslation } from '../../../contexts/TranslationContext';\nimport { useUserPreference } from '../../../contexts/UserContext';\nimport { useForm } from '../../../hooks/useForm';\n\nconst useCustomSoundsOptions = () =>\n\tuseMemo(() => CustomSounds && CustomSounds.getList && CustomSounds.getList().map(({ _id, name }) => [_id, name]), []);\n\nconst PreferencesSoundSection = ({ onChange, commitRef, ...props }) => {\n\tconst t = useTranslation();\n\n\tconst soundsList = useCustomSoundsOptions();\n\n\tconst settings = {\n\t\tnewRoomNotification: useUserPreference('newRoomNotification'),\n\t\tnewMessageNotification: useUserPreference('newMessageNotification'),\n\t\tmuteFocusedConversations: useUserPreference('muteFocusedConversations'),\n\t\tnotificationsSoundVolume: useUserPreference('notificationsSoundVolume'),\n\t};\n\n\tconst { values, handlers, commit } = useForm(settings, onChange);\n\n\tconst { newRoomNotification, newMessageNotification, muteFocusedConversations, notificationsSoundVolume } = values;\n\n\tconst { handleNewRoomNotification, handleNewMessageNotification, handleMuteFocusedConversations, handleNotificationsSoundVolume } =\n\t\thandlers;\n\n\tconst onChangeNotificationsSoundVolume = useCallback(\n\t\t(e) => handleNotificationsSoundVolume(Math.max(0, Math.min(Number(e.currentTarget.value), 100))),\n\t\t[handleNotificationsSoundVolume],\n\t);\n\n\tcommitRef.current.sound = commit;\n\n\treturn (\n\t\t<Accordion.Item title={t('Sound')} {...props}>\n\t\t\t<FieldGroup>\n\t\t\t\t{useMemo(\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Field.Label>{t('New_Room_Notification')}</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<Select value={newRoomNotification} onChange={handleNewRoomNotification} options={soundsList} />\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t),\n\t\t\t\t\t[handleNewRoomNotification, newRoomNotification, soundsList, t],\n\t\t\t\t)}\n\t\t\t\t{useMemo(\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Field.Label>{t('New_Message_Notification')}</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<Select value={newMessageNotification} onChange={handleNewMessageNotification} options={soundsList} />\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t),\n\t\t\t\t\t[handleNewMessageNotification, newMessageNotification, soundsList, t],\n\t\t\t\t)}\n\t\t\t\t{useMemo(\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<Field display='flex' flexDirection='row' justifyContent='spaceBetween' flexGrow={1}>\n\t\t\t\t\t\t\t<Field.Label>{t('Mute_Focused_Conversations')}</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<ToggleSwitch checked={muteFocusedConversations} onChange={handleMuteFocusedConversations} />\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t),\n\t\t\t\t\t[handleMuteFocusedConversations, muteFocusedConversations, t],\n\t\t\t\t)}\n\t\t\t\t{useMemo(\n\t\t\t\t\t() => (\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Field.Label>{t('Notifications_Sound_Volume')}</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tis='input'\n\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\ttype='range'\n\t\t\t\t\t\t\t\t\tvalue={notificationsSoundVolume}\n\t\t\t\t\t\t\t\t\tonChange={onChangeNotificationsSoundVolume}\n\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\tmax='100'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Tooltip placement='right-left' mis='x8'>\n\t\t\t\t\t\t\t\t\t{notificationsSoundVolume}\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t),\n\t\t\t\t\t[notificationsSoundVolume, onChangeNotificationsSoundVolume, t],\n\t\t\t\t)}\n\t\t\t</FieldGroup>\n\t\t</Accordion.Item>\n\t);\n};\n\nexport default PreferencesSoundSection;\n"]},"sourceType":"module","hash":"3f25ca514db0e284dd3f2dd917c82fb655813a6f"}
