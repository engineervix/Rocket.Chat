{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/SortList/ViewModeList.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/SortList/ViewModeList.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/SortList/ViewModeList.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/SortList/ViewModeList.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/SortList/ViewModeList.js"}},"code":"let ToggleSwitch, RadioButton, OptionTitle;\nmodule.link(\"@rocket.chat/fuselage\", {\n  ToggleSwitch(v) {\n    ToggleSwitch = v;\n  },\n\n  RadioButton(v) {\n    RadioButton = v;\n  },\n\n  OptionTitle(v) {\n    OptionTitle = v;\n  }\n\n}, 0);\nlet React, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useCallback(v) {\n    useCallback = v;\n  }\n\n}, 1);\nlet useMethod;\nmodule.link(\"../../contexts/ServerContext\", {\n  useMethod(v) {\n    useMethod = v;\n  }\n\n}, 2);\nlet useTranslation;\nmodule.link(\"../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 3);\nlet useUserPreference;\nmodule.link(\"../../contexts/UserContext\", {\n  useUserPreference(v) {\n    useUserPreference = v;\n  }\n\n}, 4);\nlet ListItem;\nmodule.link(\"../Sidebar/ListItem\", {\n  default(v) {\n    ListItem = v;\n  }\n\n}, 5);\nconst style = {\n  textTransform: 'uppercase'\n};\nconst checkBoxStyle = {\n  paddingLeft: '24px',\n  paddingInlineStart: '24px'\n};\n\nfunction ViewModeList() {\n  const t = useTranslation();\n  const saveUserPreferences = useMethod('saveUserPreferences');\n\n  const useHandleChange = value => useCallback(() => saveUserPreferences({\n    sidebarViewMode: value\n  }), [value]);\n\n  const sidebarViewMode = useUserPreference('sidebarViewMode', 'extended');\n  const sidebarDisplayAvatar = useUserPreference('sidebarDisplayAvatar', false);\n  const setToExtended = useHandleChange('extended');\n  const setToMedium = useHandleChange('medium');\n  const setToCondensed = useHandleChange('condensed');\n  const handleChangeSidebarDisplayAvatar = useCallback(() => saveUserPreferences({\n    sidebarDisplayAvatar: !sidebarDisplayAvatar\n  }), [saveUserPreferences, sidebarDisplayAvatar]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OptionTitle, {\n    style: style\n  }, t('Display')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"rc-popover__list\"\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    icon: 'extended-view',\n    text: t('Extended'),\n    input: /*#__PURE__*/React.createElement(RadioButton, {\n      style: checkBoxStyle,\n      onChange: setToExtended,\n      name: \"sidebarViewMode\",\n      value: \"extended\",\n      checked: sidebarViewMode === 'extended'\n    })\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    icon: 'medium-view',\n    text: t('Medium'),\n    input: /*#__PURE__*/React.createElement(RadioButton, {\n      style: checkBoxStyle,\n      onChange: setToMedium,\n      name: \"sidebarViewMode\",\n      value: \"medium\",\n      checked: sidebarViewMode === 'medium'\n    })\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    icon: 'condensed-view',\n    text: t('Condensed'),\n    input: /*#__PURE__*/React.createElement(RadioButton, {\n      style: checkBoxStyle,\n      onChange: setToCondensed,\n      name: \"sidebarViewMode\",\n      value: \"condensed\",\n      checked: sidebarViewMode === 'condensed'\n    })\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    icon: 'user-rounded',\n    text: t('Avatars'),\n    input: /*#__PURE__*/React.createElement(ToggleSwitch, {\n      style: checkBoxStyle,\n      onChange: handleChangeSidebarDisplayAvatar,\n      name: \"sidebarDisplayAvatar\",\n      checked: sidebarDisplayAvatar\n    })\n  })));\n}\n\nmodule.exportDefault(ViewModeList);","map":{"version":3,"sources":["client/components/SortList/ViewModeList.js"],"names":["ToggleSwitch","RadioButton","OptionTitle","module","link","v","React","useCallback","default","useMethod","useTranslation","useUserPreference","ListItem","style","textTransform","checkBoxStyle","paddingLeft","paddingInlineStart","ViewModeList","t","saveUserPreferences","useHandleChange","value","sidebarViewMode","sidebarDisplayAvatar","setToExtended","setToMedium","setToCondensed","handleChangeSidebarDisplayAvatar","exportDefault"],"mappings":"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","sourcesContent":["import { ToggleSwitch, RadioButton, OptionTitle } from '@rocket.chat/fuselage';\nimport React, { useCallback } from 'react';\n\nimport { useMethod } from '../../contexts/ServerContext';\nimport { useTranslation } from '../../contexts/TranslationContext';\nimport { useUserPreference } from '../../contexts/UserContext';\nimport ListItem from '../Sidebar/ListItem';\n\nconst style = {\n\ttextTransform: 'uppercase',\n};\n\nconst checkBoxStyle = {\n\tpaddingLeft: '24px',\n\tpaddingInlineStart: '24px',\n};\n\nfunction ViewModeList() {\n\tconst t = useTranslation();\n\n\tconst saveUserPreferences = useMethod('saveUserPreferences');\n\n\tconst useHandleChange = (value) => useCallback(() => saveUserPreferences({ sidebarViewMode: value }), [value]);\n\n\tconst sidebarViewMode = useUserPreference('sidebarViewMode', 'extended');\n\tconst sidebarDisplayAvatar = useUserPreference('sidebarDisplayAvatar', false);\n\n\tconst setToExtended = useHandleChange('extended');\n\tconst setToMedium = useHandleChange('medium');\n\tconst setToCondensed = useHandleChange('condensed');\n\n\tconst handleChangeSidebarDisplayAvatar = useCallback(\n\t\t() => saveUserPreferences({ sidebarDisplayAvatar: !sidebarDisplayAvatar }),\n\t\t[saveUserPreferences, sidebarDisplayAvatar],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<OptionTitle style={style}>{t('Display')}</OptionTitle>\n\t\t\t<ul className='rc-popover__list'>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'extended-view'}\n\t\t\t\t\ttext={t('Extended')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={setToExtended}\n\t\t\t\t\t\t\tname='sidebarViewMode'\n\t\t\t\t\t\t\tvalue='extended'\n\t\t\t\t\t\t\tchecked={sidebarViewMode === 'extended'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'medium-view'}\n\t\t\t\t\ttext={t('Medium')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={setToMedium}\n\t\t\t\t\t\t\tname='sidebarViewMode'\n\t\t\t\t\t\t\tvalue='medium'\n\t\t\t\t\t\t\tchecked={sidebarViewMode === 'medium'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'condensed-view'}\n\t\t\t\t\ttext={t('Condensed')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={setToCondensed}\n\t\t\t\t\t\t\tname='sidebarViewMode'\n\t\t\t\t\t\t\tvalue='condensed'\n\t\t\t\t\t\t\tchecked={sidebarViewMode === 'condensed'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ListItem\n\t\t\t\t\ticon={'user-rounded'}\n\t\t\t\t\ttext={t('Avatars')}\n\t\t\t\t\tinput={\n\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\tstyle={checkBoxStyle}\n\t\t\t\t\t\t\tonChange={handleChangeSidebarDisplayAvatar}\n\t\t\t\t\t\t\tname='sidebarDisplayAvatar'\n\t\t\t\t\t\t\tchecked={sidebarDisplayAvatar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n\nexport default ViewModeList;\n"]},"sourceType":"module","hash":"4ebfcc3053140bdc14ad450bed161438c73ed499"}
