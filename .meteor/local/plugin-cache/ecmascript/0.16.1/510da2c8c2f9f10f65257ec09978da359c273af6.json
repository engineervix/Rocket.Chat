{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/meteor-accounts-saml/client/saml_client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/meteor-accounts-saml/client/saml_client.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/meteor-accounts-saml/client/saml_client.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/meteor-accounts-saml/client/saml_client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/client/saml_client.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet ServiceConfiguration;\nmodule.link(\"meteor/service-configuration\", {\n  ServiceConfiguration(v) {\n    ServiceConfiguration = v;\n  }\n\n}, 3);\n\nif (!Accounts.saml) {\n  Accounts.saml = {};\n} // Override the standard logout behaviour.\n//\n// If we find a samlProvider, and we are using single\n// logout we will initiate logout from rocketchat via saml.\n// If not using single logout, we just do the standard logout.\n// This can be overridden by a configured logout behaviour.\n//\n// TODO: This may need some work as it is not clear if we are really\n// logging out of the idp when doing the standard logout.\n\n\nconst MeteorLogout = Meteor.logout;\nconst logoutBehaviour = {\n  TERMINATE_SAML: 'SAML',\n  ONLY_RC: 'Local'\n};\n\nMeteor.logout = function () {\n  const samlService = ServiceConfiguration.configurations.findOne({\n    service: 'saml'\n  });\n\n  if (samlService) {\n    const provider = samlService.clientConfig && samlService.clientConfig.provider;\n\n    if (provider) {\n      if (samlService.logoutBehaviour == null || samlService.logoutBehaviour === logoutBehaviour.TERMINATE_SAML) {\n        if (samlService.idpSLORedirectURL) {\n          console.info('SAML session terminated via SLO');\n          return Meteor.logoutWithSaml({\n            provider\n          });\n        }\n      }\n\n      if (samlService.logoutBehaviour === logoutBehaviour.ONLY_RC) {\n        console.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n      }\n    }\n  }\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return MeteorLogout.apply(Meteor, args);\n};\n\nMeteor.loginWithSaml = function (options\n/* , callback*/\n) {\n  options = options || {};\n  const credentialToken = \"id-\".concat(Random.id());\n  options.credentialToken = credentialToken;\n  window.location.href = \"_saml/authorize/\".concat(options.provider, \"/\").concat(options.credentialToken);\n};\n\nMeteor.logoutWithSaml = function (options\n/* , callback*/\n) {\n  // Accounts.saml.idpInitiatedSLO(options, callback);\n  Meteor.call('samlLogout', options.provider, function (err, result) {\n    if (err || !result) {\n      MeteorLogout.apply(Meteor);\n      return;\n    } // Remove the userId from the client to prevent calls to the server while the logout is processed.\n    // If the logout fails, the userId will be reloaded on the resume call\n\n\n    Meteor._localStorage.removeItem(Accounts.USER_ID_KEY); // A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\n\n    window.location.replace(Meteor.absoluteUrl(\"_saml/sloRedirect/\".concat(options.provider, \"/?redirect=\").concat(encodeURIComponent(result))));\n  });\n};\n\nMeteor.loginWithSamlToken = function (token, userCallback) {\n  Accounts.callLoginMethod({\n    methodArguments: [{\n      saml: true,\n      credentialToken: token\n    }],\n    userCallback\n  });\n};","map":{"version":3,"sources":["app/meteor-accounts-saml/client/saml_client.js"],"names":["Meteor","module","link","v","Accounts","Random","ServiceConfiguration","saml","MeteorLogout","logout","logoutBehaviour","TERMINATE_SAML","ONLY_RC","samlService","configurations","findOne","service","provider","clientConfig","idpSLORedirectURL","console","info","logoutWithSaml","args","apply","loginWithSaml","options","credentialToken","id","window","location","href","call","err","result","_localStorage","removeItem","USER_ID_KEY","replace","absoluteUrl","encodeURIComponent","loginWithSamlToken","token","userCallback","callLoginMethod","methodArguments"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Random } from 'meteor/random';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\n// Override the standard logout behaviour.\n//\n// If we find a samlProvider, and we are using single\n// logout we will initiate logout from rocketchat via saml.\n// If not using single logout, we just do the standard logout.\n// This can be overridden by a configured logout behaviour.\n//\n// TODO: This may need some work as it is not clear if we are really\n// logging out of the idp when doing the standard logout.\n\nconst MeteorLogout = Meteor.logout;\nconst logoutBehaviour = {\n\tTERMINATE_SAML: 'SAML',\n\tONLY_RC: 'Local',\n};\n\nMeteor.logout = function (...args) {\n\tconst samlService = ServiceConfiguration.configurations.findOne({ service: 'saml' });\n\tif (samlService) {\n\t\tconst provider = samlService.clientConfig && samlService.clientConfig.provider;\n\t\tif (provider) {\n\t\t\tif (samlService.logoutBehaviour == null || samlService.logoutBehaviour === logoutBehaviour.TERMINATE_SAML) {\n\t\t\t\tif (samlService.idpSLORedirectURL) {\n\t\t\t\t\tconsole.info('SAML session terminated via SLO');\n\t\t\t\t\treturn Meteor.logoutWithSaml({ provider });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (samlService.logoutBehaviour === logoutBehaviour.ONLY_RC) {\n\t\t\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\t\t}\n\t\t}\n\t}\n\treturn MeteorLogout.apply(Meteor, args);\n};\n\nMeteor.loginWithSaml = function (options /* , callback*/) {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nMeteor.logoutWithSaml = function (options /* , callback*/) {\n\t// Accounts.saml.idpInitiatedSLO(options, callback);\n\tMeteor.call('samlLogout', options.provider, function (err, result) {\n\t\tif (err || !result) {\n\t\t\tMeteorLogout.apply(Meteor);\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\tMeteor._localStorage.removeItem(Accounts.USER_ID_KEY);\n\n\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${options.provider}/?redirect=${encodeURIComponent(result)}`));\n\t});\n};\n\nMeteor.loginWithSamlToken = function (token, userCallback) {\n\tAccounts.callLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken: token,\n\t\t\t},\n\t\t],\n\t\tuserCallback,\n\t});\n};\n"]},"sourceType":"module","hash":"510da2c8c2f9f10f65257ec09978da359c273af6"}
