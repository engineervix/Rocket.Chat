{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/livechat/client/lib/stream/queueManager.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/livechat/client/lib/stream/queueManager.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/livechat/client/lib/stream/queueManager.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/livechat/client/lib/stream/queueManager.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/client/lib/stream/queueManager.js"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nmodule.export({\n  initializeLivechatInquiryStream: function () {\n    return initializeLivechatInquiryStream;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar APIClient;\nmodule.link(\"../../../../utils/client\", {\n  APIClient: function (v) {\n    APIClient = v;\n  }\n}, 1);\nvar LivechatInquiry;\nmodule.link(\"../../collections/LivechatInquiry\", {\n  LivechatInquiry: function (v) {\n    LivechatInquiry = v;\n  }\n}, 2);\nvar inquiryDataStream;\nmodule.link(\"./inquiry\", {\n  inquiryDataStream: function (v) {\n    inquiryDataStream = v;\n  }\n}, 3);\nvar callWithErrorHandling;\nmodule.link(\"../../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 4);\nvar getUserPreference;\nmodule.link(\"../../../../utils\", {\n  getUserPreference: function (v) {\n    getUserPreference = v;\n  }\n}, 5);\nvar CustomSounds;\nmodule.link(\"../../../../custom-sounds/client/lib/CustomSounds\", {\n  CustomSounds: function (v) {\n    CustomSounds = v;\n  }\n}, 6);\nvar departments = new Set();\n\nvar newInquirySound = function () {\n  var userId = Meteor.userId();\n  var audioVolume = getUserPreference(userId, 'notificationsSoundVolume');\n  var newRoomNotification = getUserPreference(userId, 'newRoomNotification');\n\n  if (newRoomNotification !== 'none') {\n    CustomSounds.play(newRoomNotification, {\n      volume: Number((audioVolume / 100).toPrecision(2))\n    });\n  }\n};\n\nvar events = {\n  added: function (inquiry) {\n    delete inquiry.type;\n    departments.has(inquiry.department) && LivechatInquiry.insert(_objectSpread(_objectSpread({}, inquiry), {}, {\n      alert: true,\n      _updatedAt: new Date(inquiry._updatedAt)\n    }));\n    newInquirySound();\n  },\n  changed: function (inquiry) {\n    if (inquiry.status !== 'queued' || inquiry.department && !departments.has(inquiry.department)) {\n      return LivechatInquiry.remove(inquiry._id);\n    }\n\n    delete inquiry.type;\n    var saveResult = LivechatInquiry.upsert({\n      _id: inquiry._id\n    }, _objectSpread(_objectSpread({}, inquiry), {}, {\n      alert: true,\n      _updatedAt: new Date(inquiry._updatedAt)\n    }));\n\n    if (saveResult !== null && saveResult !== void 0 && saveResult.insertedId) {\n      newInquirySound();\n    }\n  },\n  removed: function (inquiry) {\n    return LivechatInquiry.remove(inquiry._id);\n  }\n};\n\nvar updateCollection = function (inquiry) {\n  events[inquiry.type](inquiry);\n};\n\nvar getInquiriesFromAPI = function () {\n  function _callee() {\n    var _await$APIClient$v1$g, inquiries;\n\n    return _regeneratorRuntime.async(function () {\n      function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(APIClient.v1.get('livechat/inquiries.queuedForUser?sort={\"ts\": 1}'));\n\n            case 2:\n              _await$APIClient$v1$g = _context.sent;\n              inquiries = _await$APIClient$v1$g.inquiries;\n              return _context.abrupt(\"return\", inquiries);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }\n\n      return _callee$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee;\n}();\n\nvar removeListenerOfDepartment = function (departmentId) {\n  inquiryDataStream.removeListener(\"department/\" + departmentId, updateCollection);\n  departments.delete(departmentId);\n};\n\nvar appendListenerToDepartment = function (departmentId) {\n  departments.add(departmentId);\n  inquiryDataStream.on(\"department/\" + departmentId, updateCollection);\n  return function () {\n    return removeListenerOfDepartment(departmentId);\n  };\n};\n\nvar addListenerForeachDepartment = function () {\n  var departments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var cleanupFunctions = departments.map(function (department) {\n    return appendListenerToDepartment(department);\n  });\n  return function () {\n    return cleanupFunctions.forEach(function (cleanup) {\n      return cleanup();\n    });\n  };\n};\n\nvar updateInquiries = function () {\n  function _callee2() {\n    var inquiries,\n        _args2 = arguments;\n    return _regeneratorRuntime.async(function () {\n      function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              inquiries = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : [];\n              return _context2.abrupt(\"return\", inquiries.forEach(function (inquiry) {\n                return LivechatInquiry.upsert({\n                  _id: inquiry._id\n                }, _objectSpread(_objectSpread({}, inquiry), {}, {\n                  _updatedAt: new Date(inquiry._updatedAt)\n                }));\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }\n\n      return _callee2$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee2;\n}();\n\nvar getAgentsDepartments = function () {\n  function _callee3(userId) {\n    var _await$APIClient$v1$g2, departments;\n\n    return _regeneratorRuntime.async(function () {\n      function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(APIClient.v1.get(\"livechat/agents/\" + userId + \"/departments?enabledDepartmentsOnly=true\"));\n\n            case 2:\n              _await$APIClient$v1$g2 = _context3.sent;\n              departments = _await$APIClient$v1$g2.departments;\n              return _context3.abrupt(\"return\", departments);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }\n\n      return _callee3$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee3;\n}();\n\nvar removeGlobalListener = function () {\n  return inquiryDataStream.removeListener('public', updateCollection);\n};\n\nvar addGlobalListener = function () {\n  inquiryDataStream.on('public', updateCollection);\n  return removeGlobalListener;\n};\n\nvar subscribe = function () {\n  function _callee4(userId) {\n    var config, agentDepartments, cleanDepartmentListeners, globalCleanup;\n    return _regeneratorRuntime.async(function () {\n      function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(callWithErrorHandling('livechat:getRoutingConfig'));\n\n            case 2:\n              config = _context4.sent;\n\n              if (!(config && config.autoAssignAgent)) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 5:\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(getAgentsDepartments(userId));\n\n            case 7:\n              agentDepartments = _context4.sent.map(function (department) {\n                return department.departmentId;\n              });\n              // Register to all depts + public queue always to match the inquiry list returned by backend\n              cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n              globalCleanup = addGlobalListener();\n              _context4.t0 = updateInquiries;\n              _context4.next = 13;\n              return _regeneratorRuntime.awrap(getInquiriesFromAPI());\n\n            case 13:\n              _context4.t1 = _context4.sent;\n              (0, _context4.t0)(_context4.t1);\n              return _context4.abrupt(\"return\", function () {\n                LivechatInquiry.remove({});\n                removeGlobalListener();\n                cleanDepartmentListeners && cleanDepartmentListeners();\n                globalCleanup && globalCleanup();\n                departments.clear();\n              });\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }\n\n      return _callee4$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee4;\n}();\n\nvar initializeLivechatInquiryStream = function () {\n  var cleanUp;\n  return function () {\n    function _callee5() {\n      var _args5 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cleanUp && cleanUp();\n                _context5.next = 3;\n                return _regeneratorRuntime.awrap(subscribe.apply(void 0, _args5));\n\n              case 3:\n                cleanUp = _context5.sent;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }\n\n        return _callee5$;\n      }(), null, null, null, Promise);\n    }\n\n    return _callee5;\n  }();\n}();","map":{"version":3,"sources":["app/livechat/client/lib/stream/queueManager.js"],"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","export","initializeLivechatInquiryStream","Meteor","APIClient","LivechatInquiry","inquiryDataStream","callWithErrorHandling","getUserPreference","CustomSounds","departments","Set","newInquirySound","userId","audioVolume","newRoomNotification","play","volume","Number","toPrecision","events","added","inquiry","type","has","department","insert","alert","_updatedAt","Date","changed","status","remove","_id","saveResult","upsert","insertedId","removed","updateCollection","getInquiriesFromAPI","v1","get","inquiries","removeListenerOfDepartment","departmentId","removeListener","delete","appendListenerToDepartment","add","on","addListenerForeachDepartment","cleanupFunctions","map","forEach","cleanup","updateInquiries","getAgentsDepartments","removeGlobalListener","addGlobalListener","subscribe","config","autoAssignAgent","agentDepartments","cleanDepartmentListeners","globalCleanup","clear","cleanUp"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { APIClient } from '../../../../utils/client';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\nimport { inquiryDataStream } from './inquiry';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { getUserPreference } from '../../../../utils';\nimport { CustomSounds } from '../../../../custom-sounds/client/lib/CustomSounds';\n\nconst departments = new Set();\n\nconst newInquirySound = () => {\n\tconst userId = Meteor.userId();\n\tconst audioVolume = getUserPreference(userId, 'notificationsSoundVolume');\n\tconst newRoomNotification = getUserPreference(userId, 'newRoomNotification');\n\n\tif (newRoomNotification !== 'none') {\n\t\tCustomSounds.play(newRoomNotification, {\n\t\t\tvolume: Number((audioVolume / 100).toPrecision(2)),\n\t\t});\n\t}\n};\n\nconst events = {\n\tadded: (inquiry) => {\n\t\tdelete inquiry.type;\n\t\tdepartments.has(inquiry.department) && LivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tnewInquirySound();\n\t},\n\tchanged: (inquiry) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn LivechatInquiry.remove(inquiry._id);\n\t\t}\n\t\tdelete inquiry.type;\n\t\tconst saveResult = LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tif (saveResult?.insertedId) {\n\t\t\tnewInquirySound();\n\t\t}\n\t},\n\tremoved: (inquiry) => LivechatInquiry.remove(inquiry._id),\n};\n\nconst updateCollection = (inquiry) => {\n\tevents[inquiry.type](inquiry);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst { inquiries } = await APIClient.v1.get('livechat/inquiries.queuedForUser?sort={\"ts\": 1}');\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId) => {\n\tinquiryDataStream.removeListener(`department/${departmentId}`, updateCollection);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId) => {\n\tdepartments.add(departmentId);\n\tinquiryDataStream.on(`department/${departmentId}`, updateCollection);\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId) => {\n\tconst { departments } = await APIClient.v1.get(`livechat/agents/${userId}/departments?enabledDepartmentsOnly=true`);\n\treturn departments;\n};\n\nconst removeGlobalListener = () => inquiryDataStream.removeListener('public', updateCollection);\n\nconst addGlobalListener = () => {\n\tinquiryDataStream.on('public', updateCollection);\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config && config.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tupdateInquiries(await getInquiriesFromAPI());\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners && cleanDepartmentListeners();\n\t\tglobalCleanup && globalCleanup();\n\t\tdepartments.clear();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp;\n\n\treturn async (...args) => {\n\t\tcleanUp && cleanUp();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"]},"sourceType":"module","hash":"f51e165d03d648c0fc593d16c1f92e3016675f52"}
