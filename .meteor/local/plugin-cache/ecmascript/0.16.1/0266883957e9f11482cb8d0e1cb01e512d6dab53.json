{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/mem/dist/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/client/mem/dist/index.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/mem/dist/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/mem/dist/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/mem/dist/index.js"}},"code":"'use strict';\n\n!function (module1) {\n  var mimicFn = require(\"mimic-fn\");\n\n  var mapAgeCleaner = require(\"map-age-cleaner\");\n\n  var decoratorInstanceMap = new WeakMap();\n  var cacheStore = new WeakMap();\n  /**\n  [Memoize](https://en.wikipedia.org/wiki/Memoization) functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n  \n  @param fn - Function to be memoized.\n  \n  @example\n  ```\n  import mem = require('mem');\n  \n  let i = 0;\n  const counter = () => ++i;\n  const memoized = mem(counter);\n  \n  memoized('foo');\n  //=> 1\n  \n  // Cached as it's the same arguments\n  memoized('foo');\n  //=> 1\n  \n  // Not cached anymore as the arguments changed\n  memoized('bar');\n  //=> 2\n  \n  memoized('bar');\n  //=> 2\n  ```\n  */\n\n  var mem = function (fn) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        cacheKey = _ref.cacheKey,\n        _ref$cache = _ref.cache,\n        cache = _ref$cache === void 0 ? new Map() : _ref$cache,\n        maxAge = _ref.maxAge;\n\n    if (typeof maxAge === 'number') {\n      // TODO: Drop after https://github.com/SamVerschueren/map-age-cleaner/issues/5\n      // @ts-expect-error\n      mapAgeCleaner(cache);\n    }\n\n    var memoized = function () {\n      for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n        arguments_[_key] = arguments[_key];\n      }\n\n      var key = cacheKey ? cacheKey(arguments_) : arguments_[0];\n      var cacheItem = cache.get(key);\n\n      if (cacheItem) {\n        return cacheItem.data;\n      }\n\n      var result = fn.apply(this, arguments_);\n      cache.set(key, {\n        data: result,\n        maxAge: maxAge ? Date.now() + maxAge : Number.POSITIVE_INFINITY\n      });\n      return result;\n    };\n\n    mimicFn(memoized, fn, {\n      ignoreNonConfigurable: true\n    });\n    cacheStore.set(memoized, cache);\n    return memoized;\n  };\n  /**\n  @returns A [decorator](https://github.com/tc39/proposal-decorators) to memoize class methods or static class methods.\n  \n  @example\n  ```\n  import mem = require('mem');\n  \n  class Example {\n      index = 0\n  \n      @mem.decorator()\n      counter() {\n          return ++this.index;\n      }\n  }\n  \n  class ExampleWithOptions {\n      index = 0\n  \n      @mem.decorator({maxAge: 1000})\n      counter() {\n          return ++this.index;\n      }\n  }\n  ```\n  */\n\n\n  mem.decorator = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function (target, propertyKey, descriptor) {\n      var input = target[propertyKey];\n\n      if (typeof input !== 'function') {\n        throw new TypeError('The decorated value must be a function');\n      }\n\n      delete descriptor.value;\n      delete descriptor.writable;\n\n      descriptor.get = function () {\n        if (!decoratorInstanceMap.has(this)) {\n          var value = mem(input, options);\n          decoratorInstanceMap.set(this, value);\n          return value;\n        }\n\n        return decoratorInstanceMap.get(this);\n      };\n    };\n  };\n  /**\n  Clear all cached data of a memoized function.\n  \n  @param fn - Memoized function.\n  */\n\n\n  mem.clear = function (fn) {\n    var cache = cacheStore.get(fn);\n\n    if (!cache) {\n      throw new TypeError('Can\\'t clear a function that was not memoized!');\n    }\n\n    if (typeof cache.clear !== 'function') {\n      throw new TypeError('The cache Map can\\'t be cleared!');\n    }\n\n    cache.clear();\n  };\n\n  module.exports = mem;\n}.call(this, module);","map":{"version":3,"sources":["imports/client/mem/dist/index.js"],"names":["mimicFn","require","mapAgeCleaner","decoratorInstanceMap","WeakMap","cacheStore","mem","fn","cacheKey","cache","Map","maxAge","memoized","arguments_","key","cacheItem","get","data","result","apply","set","Date","now","Number","POSITIVE_INFINITY","ignoreNonConfigurable","decorator","options","target","propertyKey","descriptor","input","TypeError","value","writable","has","clear","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst mimicFn = require(\"mimic-fn\");\nconst mapAgeCleaner = require(\"map-age-cleaner\");\nconst decoratorInstanceMap = new WeakMap();\nconst cacheStore = new WeakMap();\n/**\n[Memoize](https://en.wikipedia.org/wiki/Memoization) functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n\n@param fn - Function to be memoized.\n\n@example\n```\nimport mem = require('mem');\n\nlet i = 0;\nconst counter = () => ++i;\nconst memoized = mem(counter);\n\nmemoized('foo');\n//=> 1\n\n// Cached as it's the same arguments\nmemoized('foo');\n//=> 1\n\n// Not cached anymore as the arguments changed\nmemoized('bar');\n//=> 2\n\nmemoized('bar');\n//=> 2\n```\n*/\nconst mem = (fn, { cacheKey, cache = new Map(), maxAge } = {}) => {\n    if (typeof maxAge === 'number') {\n        // TODO: Drop after https://github.com/SamVerschueren/map-age-cleaner/issues/5\n        // @ts-expect-error\n        mapAgeCleaner(cache);\n    }\n    const memoized = function (...arguments_) {\n        const key = cacheKey ? cacheKey(arguments_) : arguments_[0];\n        const cacheItem = cache.get(key);\n        if (cacheItem) {\n            return cacheItem.data;\n        }\n        const result = fn.apply(this, arguments_);\n        cache.set(key, {\n            data: result,\n            maxAge: maxAge ? Date.now() + maxAge : Number.POSITIVE_INFINITY\n        });\n        return result;\n    };\n    mimicFn(memoized, fn, {\n        ignoreNonConfigurable: true\n    });\n    cacheStore.set(memoized, cache);\n    return memoized;\n};\n/**\n@returns A [decorator](https://github.com/tc39/proposal-decorators) to memoize class methods or static class methods.\n\n@example\n```\nimport mem = require('mem');\n\nclass Example {\n    index = 0\n\n    @mem.decorator()\n    counter() {\n        return ++this.index;\n    }\n}\n\nclass ExampleWithOptions {\n    index = 0\n\n    @mem.decorator({maxAge: 1000})\n    counter() {\n        return ++this.index;\n    }\n}\n```\n*/\nmem.decorator = (options = {}) => (target, propertyKey, descriptor) => {\n    const input = target[propertyKey];\n    if (typeof input !== 'function') {\n        throw new TypeError('The decorated value must be a function');\n    }\n    delete descriptor.value;\n    delete descriptor.writable;\n    descriptor.get = function () {\n        if (!decoratorInstanceMap.has(this)) {\n            const value = mem(input, options);\n            decoratorInstanceMap.set(this, value);\n            return value;\n        }\n        return decoratorInstanceMap.get(this);\n    };\n};\n/**\nClear all cached data of a memoized function.\n\n@param fn - Memoized function.\n*/\nmem.clear = (fn) => {\n    const cache = cacheStore.get(fn);\n    if (!cache) {\n        throw new TypeError('Can\\'t clear a function that was not memoized!');\n    }\n    if (typeof cache.clear !== 'function') {\n        throw new TypeError('The cache Map can\\'t be cleared!');\n    }\n    cache.clear();\n};\nmodule.exports = mem;\n"]},"sourceType":"module","hash":"0266883957e9f11482cb8d0e1cb01e512d6dab53"}
