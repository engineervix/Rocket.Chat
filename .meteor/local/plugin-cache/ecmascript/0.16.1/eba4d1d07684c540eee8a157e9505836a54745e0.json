{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/recorderjs/audioEncoder.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui/client/lib/recorderjs/audioEncoder.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/recorderjs/audioEncoder.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui/client/lib/recorderjs/audioEncoder.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui/client/lib/recorderjs/audioEncoder.js"}},"code":"module.export({\n  AudioEncoder: () => AudioEncoder\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\n\nclass AudioEncoder extends Emitter {\n  constructor(source) {\n    let {\n      bufferLen = 4096,\n      numChannels = 1,\n      bitRate = settings.get('Message_Audio_bitRate') || 32\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    this.handleWorkerMessage = event => {\n      switch (event.data.command) {\n        case 'end':\n          {\n            const blob = new Blob(event.data.buffer, {\n              type: 'audio/mpeg'\n            });\n            this.emit('encoded', blob);\n            this.worker.terminate();\n            break;\n          }\n      }\n    };\n\n    this.handleAudioProcess = event => {\n      for (let channel = 0; channel < event.inputBuffer.numberOfChannels; channel++) {\n        const buffer = event.inputBuffer.getChannelData(channel);\n        this.worker.postMessage({\n          command: 'encode',\n          buffer\n        });\n      }\n    };\n\n    const workerPath = Meteor.absoluteUrl('workers/mp3-encoder/index.js');\n    this.worker = new Worker(workerPath);\n    this.worker.onmessage = this.handleWorkerMessage;\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: source.context.sampleRate,\n        numChannels,\n        bitRate\n      }\n    });\n    this.scriptNode = (source.context.createScriptProcessor || source.context.createJavaScriptNode).call(source.context, bufferLen, numChannels, numChannels);\n    this.scriptNode.onaudioprocess = this.handleAudioProcess;\n    source.connect(this.scriptNode);\n    this.scriptNode.connect(source.context.destination);\n  }\n\n  close() {\n    this.worker.postMessage({\n      command: 'finish'\n    });\n  }\n\n}","map":{"version":3,"sources":["app/ui/client/lib/recorderjs/audioEncoder.js"],"names":["module","export","AudioEncoder","Meteor","link","v","Emitter","settings","constructor","source","bufferLen","numChannels","bitRate","get","handleWorkerMessage","event","data","command","blob","Blob","buffer","type","emit","worker","terminate","handleAudioProcess","channel","inputBuffer","numberOfChannels","getChannelData","postMessage","workerPath","absoluteUrl","Worker","onmessage","config","sampleRate","context","scriptNode","createScriptProcessor","createJavaScriptNode","call","onaudioprocess","connect","destination","close"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Emitter } from '@rocket.chat/emitter';\n\nimport { settings } from '../../../../settings';\n\nclass AudioEncoder extends Emitter {\n\tconstructor(source, { bufferLen = 4096, numChannels = 1, bitRate = settings.get('Message_Audio_bitRate') || 32 } = {}) {\n\t\tsuper();\n\n\t\tconst workerPath = Meteor.absoluteUrl('workers/mp3-encoder/index.js');\n\n\t\tthis.worker = new Worker(workerPath);\n\t\tthis.worker.onmessage = this.handleWorkerMessage;\n\n\t\tthis.worker.postMessage({\n\t\t\tcommand: 'init',\n\t\t\tconfig: {\n\t\t\t\tsampleRate: source.context.sampleRate,\n\t\t\t\tnumChannels,\n\t\t\t\tbitRate,\n\t\t\t},\n\t\t});\n\n\t\tthis.scriptNode = (source.context.createScriptProcessor || source.context.createJavaScriptNode).call(\n\t\t\tsource.context,\n\t\t\tbufferLen,\n\t\t\tnumChannels,\n\t\t\tnumChannels,\n\t\t);\n\t\tthis.scriptNode.onaudioprocess = this.handleAudioProcess;\n\n\t\tsource.connect(this.scriptNode);\n\t\tthis.scriptNode.connect(source.context.destination);\n\t}\n\n\tclose() {\n\t\tthis.worker.postMessage({ command: 'finish' });\n\t}\n\n\thandleWorkerMessage = (event) => {\n\t\tswitch (event.data.command) {\n\t\t\tcase 'end': {\n\t\t\t\tconst blob = new Blob(event.data.buffer, { type: 'audio/mpeg' });\n\t\t\t\tthis.emit('encoded', blob);\n\t\t\t\tthis.worker.terminate();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\thandleAudioProcess = (event) => {\n\t\tfor (let channel = 0; channel < event.inputBuffer.numberOfChannels; channel++) {\n\t\t\tconst buffer = event.inputBuffer.getChannelData(channel);\n\t\t\tthis.worker.postMessage({\n\t\t\t\tcommand: 'encode',\n\t\t\t\tbuffer,\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport { AudioEncoder };\n"]},"sourceType":"module","hash":"eba4d1d07684c540eee8a157e9505836a54745e0"}
