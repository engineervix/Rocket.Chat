{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/message.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-message/client/message.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/message.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-message/client/message.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-message/client/message.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet dompurify;\nmodule.link(\"dompurify\", {\n  default(v) {\n    dompurify = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 4);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 5);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 6);\nlet timeAgo;\nmodule.link(\"../../../client/lib/utils/timeAgo\", {\n  timeAgo(v) {\n    timeAgo = v;\n  }\n\n}, 7);\nlet formatDateAndTime;\nmodule.link(\"../../../client/lib/utils/formatDateAndTime\", {\n  formatDateAndTime(v) {\n    formatDateAndTime = v;\n  }\n\n}, 8);\nlet normalizeThreadTitle;\nmodule.link(\"../../threads/client/lib/normalizeThreadTitle\", {\n  normalizeThreadTitle(v) {\n    normalizeThreadTitle = v;\n  }\n\n}, 9);\nlet MessageTypes, MessageAction;\nmodule.link(\"../../ui-utils/client\", {\n  MessageTypes(v) {\n    MessageTypes = v;\n  },\n\n  MessageAction(v) {\n    MessageAction = v;\n  }\n\n}, 10);\nlet RoomRoles, UserRoles, Roles;\nmodule.link(\"../../models/client\", {\n  RoomRoles(v) {\n    RoomRoles = v;\n  },\n\n  UserRoles(v) {\n    UserRoles = v;\n  },\n\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 11);\nlet Markdown;\nmodule.link(\"../../markdown/client\", {\n  Markdown(v) {\n    Markdown = v;\n  }\n\n}, 12);\nlet t;\nmodule.link(\"../../utils\", {\n  t(v) {\n    t = v;\n  }\n\n}, 13);\nlet AutoTranslate;\nmodule.link(\"../../autotranslate/client\", {\n  AutoTranslate(v) {\n    AutoTranslate = v;\n  }\n\n}, 14);\nlet renderMentions;\nmodule.link(\"../../mentions/client/client\", {\n  renderMentions(v) {\n    renderMentions = v;\n  }\n\n}, 15);\nlet renderMessageBody;\nmodule.link(\"../../../client/lib/utils/renderMessageBody\", {\n  renderMessageBody(v) {\n    renderMessageBody = v;\n  }\n\n}, 16);\nlet settings;\nmodule.link(\"../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 17);\nlet formatTime;\nmodule.link(\"../../../client/lib/utils/formatTime\", {\n  formatTime(v) {\n    formatTime = v;\n  }\n\n}, 18);\nlet formatDate;\nmodule.link(\"../../../client/lib/utils/formatDate\", {\n  formatDate(v) {\n    formatDate = v;\n  }\n\n}, 19);\nmodule.link(\"./messageThread\");\nmodule.link(\"./message.html\");\nlet roomCoordinator;\nmodule.link(\"../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 20);\n\nconst renderBody = (msg, settings) => {\n  const searchedText = msg.searchedText ? msg.searchedText : '';\n  const isSystemMessage = MessageTypes.isSystemMessage(msg);\n  const messageType = MessageTypes.getType(msg) || {};\n\n  if (messageType.render) {\n    msg = messageType.render(msg);\n  } else if (messageType.template) {// render template\n  } else if (messageType.message) {\n    msg.msg = escapeHTML(msg.msg);\n    msg = TAPi18n.__(messageType.message, _objectSpread({}, typeof messageType.data === 'function' && messageType.data(msg)));\n    msg = dompurify.sanitize(msg);\n  } else if (msg.u && msg.u.username === settings.Chatops_Username) {\n    msg.html = msg.msg;\n    msg = renderMentions(msg);\n    msg = msg.html;\n  } else {\n    msg = renderMessageBody(msg);\n  }\n\n  if (isSystemMessage) {\n    msg.html = Markdown.parse(msg.html);\n  }\n\n  if (searchedText) {\n    msg = msg.replace(new RegExp(searchedText, 'gi'), str => \"<mark>\".concat(str, \"</mark>\"));\n  }\n\n  return msg;\n};\n\nTemplate.message.helpers({\n  enableMessageParserEarlyAdoption() {\n    const {\n      settings: {\n        enableMessageParserEarlyAdoption\n      },\n      msg\n    } = this;\n    return enableMessageParserEarlyAdoption && msg.md;\n  },\n\n  unread() {\n    var _subscription$tunread;\n\n    const {\n      msg,\n      subscription\n    } = this;\n    return subscription === null || subscription === void 0 ? void 0 : (_subscription$tunread = subscription.tunread) === null || _subscription$tunread === void 0 ? void 0 : _subscription$tunread.includes(msg._id);\n  },\n\n  mention() {\n    var _subscription$tunread2;\n\n    const {\n      msg,\n      subscription\n    } = this;\n    return subscription === null || subscription === void 0 ? void 0 : (_subscription$tunread2 = subscription.tunreadUser) === null || _subscription$tunread2 === void 0 ? void 0 : _subscription$tunread2.includes(msg._id);\n  },\n\n  all() {\n    var _subscription$tunread3;\n\n    const {\n      msg,\n      subscription\n    } = this;\n    return subscription === null || subscription === void 0 ? void 0 : (_subscription$tunread3 = subscription.tunreadGroup) === null || _subscription$tunread3 === void 0 ? void 0 : _subscription$tunread3.includes(msg._id);\n  },\n\n  following() {\n    const {\n      msg,\n      u\n    } = this;\n    return msg.replies && msg.replies.indexOf(u._id) > -1;\n  },\n\n  body() {\n    const {\n      msg,\n      settings\n    } = this;\n    return Tracker.nonreactive(() => renderBody(msg, settings));\n  },\n\n  i18nReplyCounter() {\n    const {\n      msg\n    } = this;\n\n    if (msg.tcount === 1) {\n      return 'reply_counter';\n    }\n\n    return 'reply_counter_plural';\n  },\n\n  i18nDiscussionCounter() {\n    const {\n      msg\n    } = this;\n    return \"<span class='reply-counter'>\".concat(msg.dcount, \"</span>\");\n  },\n\n  formatDateAndTime,\n\n  encodeURI(text) {\n    return encodeURI(text);\n  },\n\n  broadcast() {\n    const {\n      msg,\n      room = {},\n      u\n    } = this;\n    return !msg.private && !msg.t && msg.u._id !== u._id && room && room.broadcast;\n  },\n\n  isIgnored() {\n    const {\n      ignored,\n      msg\n    } = this;\n    const isIgnored = typeof ignored !== 'undefined' ? ignored : msg.ignored;\n    return isIgnored;\n  },\n\n  ignoredClass() {\n    const {\n      ignored,\n      msg\n    } = this;\n    const isIgnored = typeof ignored !== 'undefined' ? ignored : msg.ignored;\n    return isIgnored ? 'message--ignored' : '';\n  },\n\n  isDecrypting() {\n    const {\n      msg\n    } = this;\n    return msg.e2e === 'pending';\n  },\n\n  isBot() {\n    const {\n      msg\n    } = this;\n    return msg.bot && 'bot';\n  },\n\n  hasAttachments() {\n    var _msg$attachments;\n\n    const {\n      msg\n    } = this;\n    return (_msg$attachments = msg.attachments) === null || _msg$attachments === void 0 ? void 0 : _msg$attachments.length;\n  },\n\n  roleTags() {\n    const {\n      msg,\n      hideRoles,\n      settings\n    } = this;\n\n    if (settings.hideRoles || hideRoles) {\n      return [];\n    }\n\n    if (!msg.u || !msg.u._id) {\n      return [];\n    }\n\n    const userRoles = UserRoles.findOne(msg.u._id);\n    const roomRoles = RoomRoles.findOne({\n      'u._id': msg.u._id,\n      'rid': msg.rid\n    });\n    const roles = [...(userRoles && userRoles.roles || []), ...(roomRoles && roomRoles.roles || [])];\n    return Roles.find({\n      _id: {\n        $in: roles\n      },\n      description: {\n        $exists: 1,\n        $ne: ''\n      }\n    }, {\n      fields: {\n        description: 1\n      }\n    });\n  },\n\n  isGroupable() {\n    const {\n      msg,\n      room = {},\n      settings,\n      groupable\n    } = this;\n\n    if (groupable === false || settings.allowGroup === false || room.broadcast || msg.groupable === false || MessageTypes.isSystemMessage(msg) && !msg.tmid) {\n      return 'false';\n    }\n  },\n\n  avatarFromUsername() {\n    const {\n      msg\n    } = this;\n\n    if (msg.avatar != null && msg.avatar[0] === '@') {\n      return msg.avatar.replace(/^@/, '');\n    }\n  },\n\n  avatarFromMessage() {\n    const {\n      msg\n    } = this;\n\n    if (msg && msg.avatar) {\n      return encodeURI(msg.avatar);\n    }\n\n    return '';\n  },\n\n  getName() {\n    const {\n      msg,\n      settings\n    } = this;\n\n    if (msg.alias) {\n      return msg.alias;\n    }\n\n    if (!msg.u) {\n      return '';\n    }\n\n    return settings.UI_Use_Real_Name && msg.u.name || msg.u.username;\n  },\n\n  showUsername() {\n    const {\n      msg,\n      settings\n    } = this;\n    return msg.alias || settings.UI_Use_Real_Name && msg.u && msg.u.name;\n  },\n\n  own() {\n    const {\n      msg,\n      u = {}\n    } = this;\n\n    if (msg.u && msg.u._id === u._id) {\n      return 'own';\n    }\n  },\n\n  t() {\n    const {\n      msg\n    } = this;\n    return msg.t;\n  },\n\n  timestamp() {\n    const {\n      msg\n    } = this;\n    return +msg.ts;\n  },\n\n  chatops() {\n    const {\n      msg,\n      settings\n    } = this;\n\n    if (msg.u && msg.u.username === settings.Chatops_Username) {\n      return 'chatops-message';\n    }\n  },\n\n  time() {\n    const {\n      msg,\n      timeAgo: useTimeAgo\n    } = this;\n    return useTimeAgo ? timeAgo(msg.ts) : formatTime(msg.ts);\n  },\n\n  date() {\n    const {\n      msg\n    } = this;\n    return formatDate(msg.ts);\n  },\n\n  isTemp() {\n    const {\n      msg\n    } = this;\n\n    if (msg.temp === true) {\n      return 'temp';\n    }\n  },\n\n  threadMessage() {\n    const {\n      msg\n    } = this;\n    return normalizeThreadTitle(msg);\n  },\n\n  bodyClass() {\n    const {\n      msg\n    } = this;\n    return MessageTypes.isSystemMessage(msg) ? 'color-info-font-color' : 'color-primary-font-color';\n  },\n\n  system(returnClass) {\n    const {\n      msg\n    } = this;\n\n    if (MessageTypes.isSystemMessage(msg)) {\n      if (returnClass) {\n        return 'color-info-font-color';\n      }\n\n      return 'system';\n    }\n  },\n\n  showTranslated() {\n    const {\n      msg,\n      subscription,\n      settings,\n      u\n    } = this;\n\n    if (settings.AutoTranslate_Enabled && msg.u && msg.u._id !== u._id && !MessageTypes.isSystemMessage(msg)) {\n      const autoTranslate = subscription && subscription.autoTranslate;\n      return msg.autoTranslateFetching || !!autoTranslate !== !!msg.autoTranslateShowInverse && msg.translations && msg.translations[settings.translateLanguage];\n    }\n  },\n\n  translationProvider() {\n    var _AutoTranslate$provid;\n\n    const instance = Template.instance();\n    const {\n      translationProvider\n    } = instance.data.msg;\n    return translationProvider && ((_AutoTranslate$provid = AutoTranslate.providersMetadata[translationProvider]) === null || _AutoTranslate$provid === void 0 ? void 0 : _AutoTranslate$provid.displayName);\n  },\n\n  edited() {\n    const {\n      msg\n    } = this;\n    return msg.editedAt && !MessageTypes.isSystemMessage(msg);\n  },\n\n  editTime() {\n    const {\n      msg\n    } = this;\n    return msg.editedAt ? formatDateAndTime(msg.editedAt) : '';\n  },\n\n  editedBy() {\n    const {\n      msg\n    } = this;\n\n    if (!msg.editedAt) {\n      return '';\n    } // try to return the username of the editor,\n    // otherwise a special \"?\" character that will be\n    // rendered as a special avatar\n\n\n    return msg.editedBy && msg.editedBy.username || '?';\n  },\n\n  label() {\n    const {\n      msg\n    } = this;\n\n    if (msg.i18nLabel) {\n      return t(msg.i18nLabel);\n    }\n\n    if (msg.label) {\n      return msg.label;\n    }\n  },\n\n  hasOembed() {\n    const {\n      msg,\n      settings\n    } = this; // there is no URLs, there is no template to show the oembed (oembed package removed) or oembed is not enable\n\n    if (!(msg.urls && msg.urls.length > 0) || !Template.oembedBaseWidget || !settings.API_Embed) {\n      return false;\n    } // check if oembed is disabled for message's sender\n\n\n    if ((settings.API_EmbedDisabledFor || '').split(',').map(username => username.trim()).includes(msg.u && msg.u.username)) {\n      return false;\n    }\n\n    return true;\n  },\n\n  reactions() {\n    const {\n      msg: {\n        reactions = {}\n      },\n      u: {\n        username: myUsername,\n        name: myName\n      }\n    } = this;\n    return Object.entries(reactions).map(_ref => {\n      let [emoji, reaction] = _ref;\n      const myDisplayName = reaction.names ? myName : \"@\".concat(myUsername);\n      const displayNames = reaction.names || reaction.usernames.map(username => \"@\".concat(username));\n      const selectedDisplayNames = displayNames.slice(0, 15).filter(displayName => displayName !== myDisplayName);\n\n      if (displayNames.some(displayName => displayName === myDisplayName)) {\n        selectedDisplayNames.unshift(t('You'));\n      }\n\n      let usernames;\n\n      if (displayNames.length > 15) {\n        usernames = \"\".concat(selectedDisplayNames.join(', '), \" \").concat(t('And_more', {\n          length: displayNames.length - 15\n        }).toLowerCase());\n      } else if (displayNames.length > 1) {\n        usernames = \"\".concat(selectedDisplayNames.slice(0, -1).join(', '), \" \").concat(t('and'), \" \").concat(selectedDisplayNames[selectedDisplayNames.length - 1]);\n      } else {\n        usernames = selectedDisplayNames[0];\n      }\n\n      return {\n        emoji,\n        count: displayNames.length,\n        usernames,\n        reaction: \" \".concat(t('Reacted_with').toLowerCase(), \" \").concat(emoji),\n        userReacted: displayNames.indexOf(myDisplayName) > -1\n      };\n    });\n  },\n\n  markUserReaction(reaction) {\n    if (reaction.userReacted) {\n      return {\n        class: 'selected'\n      };\n    }\n  },\n\n  hideReactions() {\n    const {\n      msg\n    } = this;\n\n    if (_.isEmpty(msg.reactions)) {\n      return 'hidden';\n    }\n  },\n\n  hideAddReaction() {\n    const {\n      room,\n      u,\n      msg,\n      subscription\n    } = this;\n\n    if (!room) {\n      return true;\n    }\n\n    if (!subscription) {\n      return true;\n    }\n\n    if (msg.private) {\n      return true;\n    }\n\n    if (roomCoordinator.readOnly(room._id, u) && !room.reactWhenReadOnly) {\n      return true;\n    }\n  },\n\n  hideMessageActions() {\n    const {\n      msg\n    } = this;\n    return msg.private || MessageTypes.isSystemMessage(msg);\n  },\n\n  actionLinks() {\n    const {\n      msg\n    } = this; // remove 'method_id' and 'params' properties\n\n    return _.map(msg.actionLinks, function (actionLink, key) {\n      return _.extend({\n        id: key\n      }, _.omit(actionLink, 'method_id', 'params'));\n    });\n  },\n\n  hideActionLinks() {\n    const {\n      msg\n    } = this;\n\n    if (_.isEmpty(msg.actionLinks)) {\n      return 'hidden';\n    }\n  },\n\n  injectMessage(data, _ref2) {\n    let {\n      _id,\n      rid\n    } = _ref2;\n    data.msg = {\n      _id,\n      rid\n    };\n  },\n\n  injectIndex(data, index) {\n    data.index = index;\n  },\n\n  injectSettings(data, settings) {\n    data.settings = settings;\n  },\n\n  className() {\n    return this.msg.className;\n  },\n\n  channelName() {\n    const {\n      subscription\n    } = this; // const subscription = Subscriptions.findOne({ rid: this.rid });\n\n    return subscription && subscription.name;\n  },\n\n  roomIcon() {\n    const {\n      room\n    } = this;\n\n    if (room && room.t === 'd') {\n      return 'at';\n    }\n\n    return roomCoordinator.getIcon(room);\n  },\n\n  customClass() {\n    const {\n      customClass\n    } = this;\n    return customClass;\n  },\n\n  fromSearch() {\n    const {\n      customClass\n    } = this;\n    return customClass === 'search';\n  },\n\n  actionContext() {\n    const {\n      msg\n    } = this;\n    return msg.actionContext;\n  },\n\n  messageActions(group) {\n    const {\n      msg,\n      context: ctx\n    } = this;\n    let messageGroup = group;\n    let context = ctx || msg.actionContext;\n\n    if (!group) {\n      messageGroup = 'message';\n    }\n\n    if (!context) {\n      context = 'message';\n    }\n\n    return MessageAction.getButtons(this, context, messageGroup);\n  },\n\n  isSnippet() {\n    const {\n      msg\n    } = this;\n    return msg.actionContext === 'snippeted';\n  },\n\n  isThreadReply() {\n    const {\n      groupable,\n      msg: {\n        tmid,\n        t,\n        groupable: _groupable\n      },\n      settings: {\n        showreply\n      }\n    } = this;\n    return !(groupable === true || _groupable === true) && !!(tmid && showreply && (!t || t === 'e2e'));\n  },\n\n  shouldHideBody() {\n    const {\n      msg: {\n        tmid,\n        actionContext\n      },\n      settings: {\n        showreply\n      },\n      context\n    } = this;\n    return showreply && tmid && !(actionContext || context);\n  },\n\n  collapsed() {\n    const {\n      msg: {\n        tmid,\n        collapsed\n      },\n      settings: {\n        showreply\n      },\n      shouldCollapseReplies\n    } = this;\n    const isCollapsedThreadReply = shouldCollapseReplies && tmid && showreply && collapsed !== false;\n\n    if (isCollapsedThreadReply) {\n      return 'collapsed';\n    }\n  },\n\n  collapseSwitchClass() {\n    const {\n      msg: {\n        collapsed = true\n      }\n    } = this;\n    return collapsed ? 'icon-right-dir' : 'icon-down-dir';\n  },\n\n  parentMessage() {\n    const {\n      msg: {\n        threadMsg\n      }\n    } = this;\n    return threadMsg;\n  },\n\n  showStar() {\n    const {\n      msg\n    } = this;\n    return msg.starred && msg.starred.length > 0 && msg.starred.find(star => star._id === Meteor.userId()) && !(msg.actionContext === 'starred' || this.context === 'starred');\n  },\n\n  readReceipt() {\n    if (!settings.get('Message_Read_Receipt_Enabled')) {\n      return;\n    }\n\n    return {\n      readByEveryone: !this.msg.unread && 'read' || 'color-component-color'\n    };\n  }\n\n});\n\nconst hasTempClass = node => node.classList.contains('temp');\n\nconst getPreviousSentMessage = currentNode => {\n  if (hasTempClass(currentNode)) {\n    return currentNode.previousElementSibling;\n  }\n\n  if (currentNode.previousElementSibling != null) {\n    let previousValid = currentNode.previousElementSibling;\n\n    while (previousValid != null && (hasTempClass(previousValid) || !previousValid.classList.contains('message'))) {\n      previousValid = previousValid.previousElementSibling;\n    }\n\n    return previousValid;\n  }\n};\n\nconst isNewDay = (currentNode, previousNode, forceDate, showDateSeparator) => {\n  if (!showDateSeparator) {\n    return false;\n  }\n\n  if (forceDate || !previousNode) {\n    return true;\n  }\n\n  const {\n    dataset: currentDataset\n  } = currentNode;\n  const {\n    dataset: previousDataset\n  } = previousNode;\n  const previousMessageDate = new Date(parseInt(previousDataset.timestamp));\n  const currentMessageDate = new Date(parseInt(currentDataset.timestamp));\n\n  if (previousMessageDate.toDateString() !== currentMessageDate.toDateString()) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isSequential = (currentNode, previousNode, forceDate, period, showDateSeparator, shouldCollapseReplies) => {\n  if (!previousNode) {\n    return false;\n  }\n\n  if (showDateSeparator && forceDate) {\n    return false;\n  }\n\n  const {\n    dataset: currentDataset\n  } = currentNode;\n  const {\n    dataset: previousDataset\n  } = previousNode;\n  const previousMessageDate = new Date(parseInt(previousDataset.timestamp));\n  const currentMessageDate = new Date(parseInt(currentDataset.timestamp));\n\n  if (showDateSeparator && previousMessageDate.toDateString() !== currentMessageDate.toDateString()) {\n    return false;\n  }\n\n  if (!shouldCollapseReplies && currentDataset.tmid) {\n    return previousDataset.id === currentDataset.tmid || previousDataset.tmid === currentDataset.tmid;\n  }\n\n  if (previousDataset.tmid && !currentDataset.tmid) {\n    return false;\n  }\n\n  if ([previousDataset.groupable, currentDataset.groupable].includes('false')) {\n    return false;\n  }\n\n  if (previousDataset.username !== currentDataset.username) {\n    return false;\n  }\n\n  if (previousDataset.alias !== currentDataset.alias) {\n    return false;\n  }\n\n  if (parseInt(currentDataset.timestamp) - parseInt(previousDataset.timestamp) <= period) {\n    return true;\n  }\n\n  return false;\n};\n\nconst processSequentials = _ref3 => {\n  let {\n    index,\n    currentNode,\n    settings,\n    forceDate,\n    showDateSeparator = true,\n    groupable,\n    shouldCollapseReplies\n  } = _ref3;\n\n  if (!showDateSeparator && !groupable) {\n    return;\n  } // const currentDataset = currentNode.dataset;\n\n\n  const previousNode = (index === undefined || index > 0) && getPreviousSentMessage(currentNode);\n  const nextNode = currentNode.nextElementSibling;\n\n  if (!previousNode) {\n    setTimeout(() => {\n      currentNode.dispatchEvent(new CustomEvent('MessageGroup', {\n        bubbles: true\n      }));\n    }, 100);\n  }\n\n  if (isSequential(currentNode, previousNode, forceDate, settings.Message_GroupingPeriod, showDateSeparator, shouldCollapseReplies)) {\n    currentNode.classList.add('sequential');\n  } else {\n    currentNode.classList.remove('sequential');\n  }\n\n  if (isNewDay(currentNode, previousNode, forceDate, showDateSeparator)) {\n    currentNode.classList.add('new-day');\n  } else {\n    currentNode.classList.remove('new-day');\n  }\n\n  if (nextNode && nextNode.dataset) {\n    if (isSequential(nextNode, currentNode, forceDate, settings.Message_GroupingPeriod, showDateSeparator, shouldCollapseReplies)) {\n      nextNode.classList.add('sequential');\n    } else {\n      nextNode.classList.remove('sequential');\n    }\n\n    if (isNewDay(nextNode, currentNode, forceDate, showDateSeparator)) {\n      nextNode.classList.add('new-day');\n    } else {\n      nextNode.classList.remove('new-day');\n    }\n  }\n};\n\nTemplate.message.onRendered(function () {\n  const currentNode = this.firstNode;\n  this.autorun(() => processSequentials(_objectSpread({\n    currentNode\n  }, Template.currentData())));\n});","map":{"version":3,"sources":["app/ui-message/client/message.js"],"names":["_objectSpread","module","link","default","v","_","dompurify","Meteor","Tracker","Template","TAPi18n","escapeHTML","timeAgo","formatDateAndTime","normalizeThreadTitle","MessageTypes","MessageAction","RoomRoles","UserRoles","Roles","Markdown","t","AutoTranslate","renderMentions","renderMessageBody","settings","formatTime","formatDate","roomCoordinator","renderBody","msg","searchedText","isSystemMessage","messageType","getType","render","template","message","__","data","sanitize","u","username","Chatops_Username","html","parse","replace","RegExp","str","helpers","enableMessageParserEarlyAdoption","md","unread","subscription","tunread","includes","_id","mention","tunreadUser","all","tunreadGroup","following","replies","indexOf","body","nonreactive","i18nReplyCounter","tcount","i18nDiscussionCounter","dcount","encodeURI","text","broadcast","room","private","isIgnored","ignored","ignoredClass","isDecrypting","e2e","isBot","bot","hasAttachments","attachments","length","roleTags","hideRoles","userRoles","findOne","roomRoles","rid","roles","find","$in","description","$exists","$ne","fields","isGroupable","groupable","allowGroup","tmid","avatarFromUsername","avatar","avatarFromMessage","getName","alias","UI_Use_Real_Name","name","showUsername","own","timestamp","ts","chatops","time","useTimeAgo","date","isTemp","temp","threadMessage","bodyClass","system","returnClass","showTranslated","AutoTranslate_Enabled","autoTranslate","autoTranslateFetching","autoTranslateShowInverse","translations","translateLanguage","translationProvider","instance","providersMetadata","displayName","edited","editedAt","editTime","editedBy","label","i18nLabel","hasOembed","urls","oembedBaseWidget","API_Embed","API_EmbedDisabledFor","split","map","trim","reactions","myUsername","myName","Object","entries","emoji","reaction","myDisplayName","names","displayNames","usernames","selectedDisplayNames","slice","filter","some","unshift","join","toLowerCase","count","userReacted","markUserReaction","class","hideReactions","isEmpty","hideAddReaction","readOnly","reactWhenReadOnly","hideMessageActions","actionLinks","actionLink","key","extend","id","omit","hideActionLinks","injectMessage","injectIndex","index","injectSettings","className","channelName","roomIcon","getIcon","customClass","fromSearch","actionContext","messageActions","group","context","ctx","messageGroup","getButtons","isSnippet","isThreadReply","_groupable","showreply","shouldHideBody","collapsed","shouldCollapseReplies","isCollapsedThreadReply","collapseSwitchClass","parentMessage","threadMsg","showStar","starred","star","userId","readReceipt","get","readByEveryone","hasTempClass","node","classList","contains","getPreviousSentMessage","currentNode","previousElementSibling","previousValid","isNewDay","previousNode","forceDate","showDateSeparator","dataset","currentDataset","previousDataset","previousMessageDate","Date","parseInt","currentMessageDate","toDateString","isSequential","period","processSequentials","undefined","nextNode","nextElementSibling","setTimeout","dispatchEvent","CustomEvent","bubbles","Message_GroupingPeriod","add","remove","onRendered","firstNode","autorun","currentData"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;;AAAlB,IAAIC,CAAJ;;AAAMJ,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,CAAC,GAACD,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIE,SAAJ;AAAcL,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACE,IAAAA,SAAS,GAACF,CAAV;AAAY;;AAAxB,CAAxB,EAAkD,CAAlD;AAAqD,IAAIG,MAAJ;AAAWN,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACK,EAAAA,MAAM,CAACH,CAAD,EAAG;AAACG,IAAAA,MAAM,GAACH,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAII,OAAJ;AAAYP,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACM,EAAAA,OAAO,CAACJ,CAAD,EAAG;AAACI,IAAAA,OAAO,GAACJ,CAAR;AAAU;;AAAtB,CAA7B,EAAqD,CAArD;AAAwD,IAAIK,QAAJ;AAAaR,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACO,EAAAA,QAAQ,CAACL,CAAD,EAAG;AAACK,IAAAA,QAAQ,GAACL,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIM,OAAJ;AAAYT,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACQ,EAAAA,OAAO,CAACN,CAAD,EAAG;AAACM,IAAAA,OAAO,GAACN,CAAR;AAAU;;AAAtB,CAAzC,EAAiE,CAAjE;AAAoE,IAAIO,UAAJ;AAAeV,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACS,EAAAA,UAAU,CAACP,CAAD,EAAG;AAACO,IAAAA,UAAU,GAACP,CAAX;AAAa;;AAA5B,CAA1C,EAAwE,CAAxE;AAA2E,IAAIQ,OAAJ;AAAYX,MAAM,CAACC,IAAP,CAAY,mCAAZ,EAAgD;AAACU,EAAAA,OAAO,CAACR,CAAD,EAAG;AAACQ,IAAAA,OAAO,GAACR,CAAR;AAAU;;AAAtB,CAAhD,EAAwE,CAAxE;AAA2E,IAAIS,iBAAJ;AAAsBZ,MAAM,CAACC,IAAP,CAAY,6CAAZ,EAA0D;AAACW,EAAAA,iBAAiB,CAACT,CAAD,EAAG;AAACS,IAAAA,iBAAiB,GAACT,CAAlB;AAAoB;;AAA1C,CAA1D,EAAsG,CAAtG;AAAyG,IAAIU,oBAAJ;AAAyBb,MAAM,CAACC,IAAP,CAAY,+CAAZ,EAA4D;AAACY,EAAAA,oBAAoB,CAACV,CAAD,EAAG;AAACU,IAAAA,oBAAoB,GAACV,CAArB;AAAuB;;AAAhD,CAA5D,EAA8G,CAA9G;AAAiH,IAAIW,YAAJ,EAAiBC,aAAjB;AAA+Bf,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACa,EAAAA,YAAY,CAACX,CAAD,EAAG;AAACW,IAAAA,YAAY,GAACX,CAAb;AAAe,GAAhC;;AAAiCY,EAAAA,aAAa,CAACZ,CAAD,EAAG;AAACY,IAAAA,aAAa,GAACZ,CAAd;AAAgB;;AAAlE,CAApC,EAAwG,EAAxG;AAA4G,IAAIa,SAAJ,EAAcC,SAAd,EAAwBC,KAAxB;AAA8BlB,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACe,EAAAA,SAAS,CAACb,CAAD,EAAG;AAACa,IAAAA,SAAS,GAACb,CAAV;AAAY,GAA1B;;AAA2Bc,EAAAA,SAAS,CAACd,CAAD,EAAG;AAACc,IAAAA,SAAS,GAACd,CAAV;AAAY,GAApD;;AAAqDe,EAAAA,KAAK,CAACf,CAAD,EAAG;AAACe,IAAAA,KAAK,GAACf,CAAN;AAAQ;;AAAtE,CAAlC,EAA0G,EAA1G;AAA8G,IAAIgB,QAAJ;AAAanB,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACkB,EAAAA,QAAQ,CAAChB,CAAD,EAAG;AAACgB,IAAAA,QAAQ,GAAChB,CAAT;AAAW;;AAAxB,CAApC,EAA8D,EAA9D;AAAkE,IAAIiB,CAAJ;AAAMpB,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACmB,EAAAA,CAAC,CAACjB,CAAD,EAAG;AAACiB,IAAAA,CAAC,GAACjB,CAAF;AAAI;;AAAV,CAA1B,EAAsC,EAAtC;AAA0C,IAAIkB,aAAJ;AAAkBrB,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACoB,EAAAA,aAAa,CAAClB,CAAD,EAAG;AAACkB,IAAAA,aAAa,GAAClB,CAAd;AAAgB;;AAAlC,CAAzC,EAA6E,EAA7E;AAAiF,IAAImB,cAAJ;AAAmBtB,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAACqB,EAAAA,cAAc,CAACnB,CAAD,EAAG;AAACmB,IAAAA,cAAc,GAACnB,CAAf;AAAiB;;AAApC,CAA3C,EAAiF,EAAjF;AAAqF,IAAIoB,iBAAJ;AAAsBvB,MAAM,CAACC,IAAP,CAAY,6CAAZ,EAA0D;AAACsB,EAAAA,iBAAiB,CAACpB,CAAD,EAAG;AAACoB,IAAAA,iBAAiB,GAACpB,CAAlB;AAAoB;;AAA1C,CAA1D,EAAsG,EAAtG;AAA0G,IAAIqB,QAAJ;AAAaxB,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACuB,EAAAA,QAAQ,CAACrB,CAAD,EAAG;AAACqB,IAAAA,QAAQ,GAACrB,CAAT;AAAW;;AAAxB,CAApC,EAA8D,EAA9D;AAAkE,IAAIsB,UAAJ;AAAezB,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACwB,EAAAA,UAAU,CAACtB,CAAD,EAAG;AAACsB,IAAAA,UAAU,GAACtB,CAAX;AAAa;;AAA5B,CAAnD,EAAiF,EAAjF;AAAqF,IAAIuB,UAAJ;AAAe1B,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACyB,EAAAA,UAAU,CAACvB,CAAD,EAAG;AAACuB,IAAAA,UAAU,GAACvB,CAAX;AAAa;;AAA5B,CAAnD,EAAiF,EAAjF;AAAqFH,MAAM,CAACC,IAAP,CAAY,iBAAZ;AAA+BD,MAAM,CAACC,IAAP,CAAY,gBAAZ;AAA8B,IAAI0B,eAAJ;AAAoB3B,MAAM,CAACC,IAAP,CAAY,2CAAZ,EAAwD;AAAC0B,EAAAA,eAAe,CAACxB,CAAD,EAAG;AAACwB,IAAAA,eAAe,GAACxB,CAAhB;AAAkB;;AAAtC,CAAxD,EAAgG,EAAhG;;AAyBx5D,MAAMyB,UAAU,GAAG,CAACC,GAAD,EAAML,QAAN,KAAmB;AACrC,QAAMM,YAAY,GAAGD,GAAG,CAACC,YAAJ,GAAmBD,GAAG,CAACC,YAAvB,GAAsC,EAA3D;AACA,QAAMC,eAAe,GAAGjB,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,CAAxB;AACA,QAAMG,WAAW,GAAGlB,YAAY,CAACmB,OAAb,CAAqBJ,GAArB,KAA6B,EAAjD;;AAEA,MAAIG,WAAW,CAACE,MAAhB,EAAwB;AACvBL,IAAAA,GAAG,GAAGG,WAAW,CAACE,MAAZ,CAAmBL,GAAnB,CAAN;AACA,GAFD,MAEO,IAAIG,WAAW,CAACG,QAAhB,EAA0B,CAChC;AACA,GAFM,MAEA,IAAIH,WAAW,CAACI,OAAhB,EAAyB;AAC/BP,IAAAA,GAAG,CAACA,GAAJ,GAAUnB,UAAU,CAACmB,GAAG,CAACA,GAAL,CAApB;AACAA,IAAAA,GAAG,GAAGpB,OAAO,CAAC4B,EAAR,CAAWL,WAAW,CAACI,OAAvB,oBAAsC,OAAOJ,WAAW,CAACM,IAAnB,KAA4B,UAA5B,IAA0CN,WAAW,CAACM,IAAZ,CAAiBT,GAAjB,CAAhF,EAAN;AACAA,IAAAA,GAAG,GAAGxB,SAAS,CAACkC,QAAV,CAAmBV,GAAnB,CAAN;AACA,GAJM,MAIA,IAAIA,GAAG,CAACW,CAAJ,IAASX,GAAG,CAACW,CAAJ,CAAMC,QAAN,KAAmBjB,QAAQ,CAACkB,gBAAzC,EAA2D;AACjEb,IAAAA,GAAG,CAACc,IAAJ,GAAWd,GAAG,CAACA,GAAf;AACAA,IAAAA,GAAG,GAAGP,cAAc,CAACO,GAAD,CAApB;AACAA,IAAAA,GAAG,GAAGA,GAAG,CAACc,IAAV;AACA,GAJM,MAIA;AACNd,IAAAA,GAAG,GAAGN,iBAAiB,CAACM,GAAD,CAAvB;AACA;;AAED,MAAIE,eAAJ,EAAqB;AACpBF,IAAAA,GAAG,CAACc,IAAJ,GAAWxB,QAAQ,CAACyB,KAAT,CAAef,GAAG,CAACc,IAAnB,CAAX;AACA;;AAED,MAAIb,YAAJ,EAAkB;AACjBD,IAAAA,GAAG,GAAGA,GAAG,CAACgB,OAAJ,CAAY,IAAIC,MAAJ,CAAWhB,YAAX,EAAyB,IAAzB,CAAZ,EAA6CiB,GAAD,oBAAkBA,GAAlB,YAA5C,CAAN;AACA;;AAED,SAAOlB,GAAP;AACA,CA9BD;;AAgCArB,QAAQ,CAAC4B,OAAT,CAAiBY,OAAjB,CAAyB;AACxBC,EAAAA,gCAAgC,GAAG;AAClC,UAAM;AACLzB,MAAAA,QAAQ,EAAE;AAAEyB,QAAAA;AAAF,OADL;AAELpB,MAAAA;AAFK,QAGF,IAHJ;AAIA,WAAOoB,gCAAgC,IAAIpB,GAAG,CAACqB,EAA/C;AACA,GAPuB;;AAQxBC,EAAAA,MAAM,GAAG;AAAA;;AACR,UAAM;AAAEtB,MAAAA,GAAF;AAAOuB,MAAAA;AAAP,QAAwB,IAA9B;AACA,WAAOA,YAAP,aAAOA,YAAP,gDAAOA,YAAY,CAAEC,OAArB,0DAAO,sBAAuBC,QAAvB,CAAgCzB,GAAG,CAAC0B,GAApC,CAAP;AACA,GAXuB;;AAYxBC,EAAAA,OAAO,GAAG;AAAA;;AACT,UAAM;AAAE3B,MAAAA,GAAF;AAAOuB,MAAAA;AAAP,QAAwB,IAA9B;AACA,WAAOA,YAAP,aAAOA,YAAP,iDAAOA,YAAY,CAAEK,WAArB,2DAAO,uBAA2BH,QAA3B,CAAoCzB,GAAG,CAAC0B,GAAxC,CAAP;AACA,GAfuB;;AAiBxBG,EAAAA,GAAG,GAAG;AAAA;;AACL,UAAM;AAAE7B,MAAAA,GAAF;AAAOuB,MAAAA;AAAP,QAAwB,IAA9B;AACA,WAAOA,YAAP,aAAOA,YAAP,iDAAOA,YAAY,CAAEO,YAArB,2DAAO,uBAA4BL,QAA5B,CAAqCzB,GAAG,CAAC0B,GAAzC,CAAP;AACA,GApBuB;;AAqBxBK,EAAAA,SAAS,GAAG;AACX,UAAM;AAAE/B,MAAAA,GAAF;AAAOW,MAAAA;AAAP,QAAa,IAAnB;AACA,WAAOX,GAAG,CAACgC,OAAJ,IAAehC,GAAG,CAACgC,OAAJ,CAAYC,OAAZ,CAAoBtB,CAAC,CAACe,GAAtB,IAA6B,CAAC,CAApD;AACA,GAxBuB;;AAyBxBQ,EAAAA,IAAI,GAAG;AACN,UAAM;AAAElC,MAAAA,GAAF;AAAOL,MAAAA;AAAP,QAAoB,IAA1B;AACA,WAAOjB,OAAO,CAACyD,WAAR,CAAoB,MAAMpC,UAAU,CAACC,GAAD,EAAML,QAAN,CAApC,CAAP;AACA,GA5BuB;;AA6BxByC,EAAAA,gBAAgB,GAAG;AAClB,UAAM;AAAEpC,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAIA,GAAG,CAACqC,MAAJ,KAAe,CAAnB,EAAsB;AACrB,aAAO,eAAP;AACA;;AACD,WAAO,sBAAP;AACA,GAnCuB;;AAoCxBC,EAAAA,qBAAqB,GAAG;AACvB,UAAM;AAAEtC,MAAAA;AAAF,QAAU,IAAhB;AACA,iDAAsCA,GAAG,CAACuC,MAA1C;AACA,GAvCuB;;AAwCxBxD,EAAAA,iBAxCwB;;AAyCxByD,EAAAA,SAAS,CAACC,IAAD,EAAO;AACf,WAAOD,SAAS,CAACC,IAAD,CAAhB;AACA,GA3CuB;;AA4CxBC,EAAAA,SAAS,GAAG;AACX,UAAM;AAAE1C,MAAAA,GAAF;AAAO2C,MAAAA,IAAI,GAAG,EAAd;AAAkBhC,MAAAA;AAAlB,QAAwB,IAA9B;AACA,WAAO,CAACX,GAAG,CAAC4C,OAAL,IAAgB,CAAC5C,GAAG,CAACT,CAArB,IAA0BS,GAAG,CAACW,CAAJ,CAAMe,GAAN,KAAcf,CAAC,CAACe,GAA1C,IAAiDiB,IAAjD,IAAyDA,IAAI,CAACD,SAArE;AACA,GA/CuB;;AAgDxBG,EAAAA,SAAS,GAAG;AACX,UAAM;AAAEC,MAAAA,OAAF;AAAW9C,MAAAA;AAAX,QAAmB,IAAzB;AACA,UAAM6C,SAAS,GAAG,OAAOC,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C9C,GAAG,CAAC8C,OAAjE;AACA,WAAOD,SAAP;AACA,GApDuB;;AAqDxBE,EAAAA,YAAY,GAAG;AACd,UAAM;AAAED,MAAAA,OAAF;AAAW9C,MAAAA;AAAX,QAAmB,IAAzB;AACA,UAAM6C,SAAS,GAAG,OAAOC,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C9C,GAAG,CAAC8C,OAAjE;AACA,WAAOD,SAAS,GAAG,kBAAH,GAAwB,EAAxC;AACA,GAzDuB;;AA0DxBG,EAAAA,YAAY,GAAG;AACd,UAAM;AAAEhD,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACiD,GAAJ,KAAY,SAAnB;AACA,GA7DuB;;AA8DxBC,EAAAA,KAAK,GAAG;AACP,UAAM;AAAElD,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACmD,GAAJ,IAAW,KAAlB;AACA,GAjEuB;;AAkExBC,EAAAA,cAAc,GAAG;AAAA;;AAChB,UAAM;AAAEpD,MAAAA;AAAF,QAAU,IAAhB;AACA,+BAAOA,GAAG,CAACqD,WAAX,qDAAO,iBAAiBC,MAAxB;AACA,GArEuB;;AAsExBC,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEvD,MAAAA,GAAF;AAAOwD,MAAAA,SAAP;AAAkB7D,MAAAA;AAAlB,QAA+B,IAArC;;AACA,QAAIA,QAAQ,CAAC6D,SAAT,IAAsBA,SAA1B,EAAqC;AACpC,aAAO,EAAP;AACA;;AAED,QAAI,CAACxD,GAAG,CAACW,CAAL,IAAU,CAACX,GAAG,CAACW,CAAJ,CAAMe,GAArB,EAA0B;AACzB,aAAO,EAAP;AACA;;AACD,UAAM+B,SAAS,GAAGrE,SAAS,CAACsE,OAAV,CAAkB1D,GAAG,CAACW,CAAJ,CAAMe,GAAxB,CAAlB;AACA,UAAMiC,SAAS,GAAGxE,SAAS,CAACuE,OAAV,CAAkB;AACnC,eAAS1D,GAAG,CAACW,CAAJ,CAAMe,GADoB;AAEnC,aAAO1B,GAAG,CAAC4D;AAFwB,KAAlB,CAAlB;AAIA,UAAMC,KAAK,GAAG,CAAC,IAAKJ,SAAS,IAAIA,SAAS,CAACI,KAAxB,IAAkC,EAAtC,CAAD,EAA4C,IAAKF,SAAS,IAAIA,SAAS,CAACE,KAAxB,IAAkC,EAAtC,CAA5C,CAAd;AACA,WAAOxE,KAAK,CAACyE,IAAN,CACN;AACCpC,MAAAA,GAAG,EAAE;AACJqC,QAAAA,GAAG,EAAEF;AADD,OADN;AAICG,MAAAA,WAAW,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,GAAG,EAAE;AAFO;AAJd,KADM,EAUN;AACCC,MAAAA,MAAM,EAAE;AACPH,QAAAA,WAAW,EAAE;AADN;AADT,KAVM,CAAP;AAgBA,GArGuB;;AAsGxBI,EAAAA,WAAW,GAAG;AACb,UAAM;AAAEpE,MAAAA,GAAF;AAAO2C,MAAAA,IAAI,GAAG,EAAd;AAAkBhD,MAAAA,QAAlB;AAA4B0E,MAAAA;AAA5B,QAA0C,IAAhD;;AACA,QACCA,SAAS,KAAK,KAAd,IACA1E,QAAQ,CAAC2E,UAAT,KAAwB,KADxB,IAEA3B,IAAI,CAACD,SAFL,IAGA1C,GAAG,CAACqE,SAAJ,KAAkB,KAHlB,IAICpF,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,KAAqC,CAACA,GAAG,CAACuE,IAL5C,EAME;AACD,aAAO,OAAP;AACA;AACD,GAjHuB;;AAkHxBC,EAAAA,kBAAkB,GAAG;AACpB,UAAM;AAAExE,MAAAA;AAAF,QAAU,IAAhB;;AAEA,QAAIA,GAAG,CAACyE,MAAJ,IAAc,IAAd,IAAsBzE,GAAG,CAACyE,MAAJ,CAAW,CAAX,MAAkB,GAA5C,EAAiD;AAChD,aAAOzE,GAAG,CAACyE,MAAJ,CAAWzD,OAAX,CAAmB,IAAnB,EAAyB,EAAzB,CAAP;AACA;AACD,GAxHuB;;AAyHxB0D,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAE1E,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAIA,GAAG,IAAIA,GAAG,CAACyE,MAAf,EAAuB;AACtB,aAAOjC,SAAS,CAACxC,GAAG,CAACyE,MAAL,CAAhB;AACA;;AACD,WAAO,EAAP;AACA,GA/HuB;;AAgIxBE,EAAAA,OAAO,GAAG;AACT,UAAM;AAAE3E,MAAAA,GAAF;AAAOL,MAAAA;AAAP,QAAoB,IAA1B;;AACA,QAAIK,GAAG,CAAC4E,KAAR,EAAe;AACd,aAAO5E,GAAG,CAAC4E,KAAX;AACA;;AACD,QAAI,CAAC5E,GAAG,CAACW,CAAT,EAAY;AACX,aAAO,EAAP;AACA;;AACD,WAAQhB,QAAQ,CAACkF,gBAAT,IAA6B7E,GAAG,CAACW,CAAJ,CAAMmE,IAApC,IAA6C9E,GAAG,CAACW,CAAJ,CAAMC,QAA1D;AACA,GAzIuB;;AA0IxBmE,EAAAA,YAAY,GAAG;AACd,UAAM;AAAE/E,MAAAA,GAAF;AAAOL,MAAAA;AAAP,QAAoB,IAA1B;AACA,WAAOK,GAAG,CAAC4E,KAAJ,IAAcjF,QAAQ,CAACkF,gBAAT,IAA6B7E,GAAG,CAACW,CAAjC,IAAsCX,GAAG,CAACW,CAAJ,CAAMmE,IAAjE;AACA,GA7IuB;;AA8IxBE,EAAAA,GAAG,GAAG;AACL,UAAM;AAAEhF,MAAAA,GAAF;AAAOW,MAAAA,CAAC,GAAG;AAAX,QAAkB,IAAxB;;AACA,QAAIX,GAAG,CAACW,CAAJ,IAASX,GAAG,CAACW,CAAJ,CAAMe,GAAN,KAAcf,CAAC,CAACe,GAA7B,EAAkC;AACjC,aAAO,KAAP;AACA;AACD,GAnJuB;;AAoJxBnC,EAAAA,CAAC,GAAG;AACH,UAAM;AAAES,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACT,CAAX;AACA,GAvJuB;;AAwJxB0F,EAAAA,SAAS,GAAG;AACX,UAAM;AAAEjF,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAO,CAACA,GAAG,CAACkF,EAAZ;AACA,GA3JuB;;AA4JxBC,EAAAA,OAAO,GAAG;AACT,UAAM;AAAEnF,MAAAA,GAAF;AAAOL,MAAAA;AAAP,QAAoB,IAA1B;;AACA,QAAIK,GAAG,CAACW,CAAJ,IAASX,GAAG,CAACW,CAAJ,CAAMC,QAAN,KAAmBjB,QAAQ,CAACkB,gBAAzC,EAA2D;AAC1D,aAAO,iBAAP;AACA;AACD,GAjKuB;;AAkKxBuE,EAAAA,IAAI,GAAG;AACN,UAAM;AAAEpF,MAAAA,GAAF;AAAOlB,MAAAA,OAAO,EAAEuG;AAAhB,QAA+B,IAArC;AAEA,WAAOA,UAAU,GAAGvG,OAAO,CAACkB,GAAG,CAACkF,EAAL,CAAV,GAAqBtF,UAAU,CAACI,GAAG,CAACkF,EAAL,CAAhD;AACA,GAtKuB;;AAuKxBI,EAAAA,IAAI,GAAG;AACN,UAAM;AAAEtF,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOH,UAAU,CAACG,GAAG,CAACkF,EAAL,CAAjB;AACA,GA1KuB;;AA2KxBK,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEvF,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAIA,GAAG,CAACwF,IAAJ,KAAa,IAAjB,EAAuB;AACtB,aAAO,MAAP;AACA;AACD,GAhLuB;;AAiLxBC,EAAAA,aAAa,GAAG;AACf,UAAM;AAAEzF,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOhB,oBAAoB,CAACgB,GAAD,CAA3B;AACA,GApLuB;;AAqLxB0F,EAAAA,SAAS,GAAG;AACX,UAAM;AAAE1F,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOf,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,IAAoC,uBAApC,GAA8D,0BAArE;AACA,GAxLuB;;AAyLxB2F,EAAAA,MAAM,CAACC,WAAD,EAAc;AACnB,UAAM;AAAE5F,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAIf,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,CAAJ,EAAuC;AACtC,UAAI4F,WAAJ,EAAiB;AAChB,eAAO,uBAAP;AACA;;AACD,aAAO,QAAP;AACA;AACD,GAjMuB;;AAkMxBC,EAAAA,cAAc,GAAG;AAChB,UAAM;AAAE7F,MAAAA,GAAF;AAAOuB,MAAAA,YAAP;AAAqB5B,MAAAA,QAArB;AAA+BgB,MAAAA;AAA/B,QAAqC,IAA3C;;AACA,QAAIhB,QAAQ,CAACmG,qBAAT,IAAkC9F,GAAG,CAACW,CAAtC,IAA2CX,GAAG,CAACW,CAAJ,CAAMe,GAAN,KAAcf,CAAC,CAACe,GAA3D,IAAkE,CAACzC,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,CAAvE,EAA0G;AACzG,YAAM+F,aAAa,GAAGxE,YAAY,IAAIA,YAAY,CAACwE,aAAnD;AACA,aACC/F,GAAG,CAACgG,qBAAJ,IACC,CAAC,CAACD,aAAF,KAAoB,CAAC,CAAC/F,GAAG,CAACiG,wBAA1B,IAAsDjG,GAAG,CAACkG,YAA1D,IAA0ElG,GAAG,CAACkG,YAAJ,CAAiBvG,QAAQ,CAACwG,iBAA1B,CAF5E;AAIA;AACD,GA3MuB;;AA4MxBC,EAAAA,mBAAmB,GAAG;AAAA;;AACrB,UAAMC,QAAQ,GAAG1H,QAAQ,CAAC0H,QAAT,EAAjB;AACA,UAAM;AAAED,MAAAA;AAAF,QAA0BC,QAAQ,CAAC5F,IAAT,CAAcT,GAA9C;AACA,WAAOoG,mBAAmB,8BAAI5G,aAAa,CAAC8G,iBAAd,CAAgCF,mBAAhC,CAAJ,0DAAI,sBAAsDG,WAA1D,CAA1B;AACA,GAhNuB;;AAiNxBC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAExG,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACyG,QAAJ,IAAgB,CAACxH,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,CAAxB;AACA,GApNuB;;AAqNxB0G,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAE1G,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACyG,QAAJ,GAAe1H,iBAAiB,CAACiB,GAAG,CAACyG,QAAL,CAAhC,GAAiD,EAAxD;AACA,GAxNuB;;AAyNxBE,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAE3G,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAI,CAACA,GAAG,CAACyG,QAAT,EAAmB;AAClB,aAAO,EAAP;AACA,KAJS,CAKV;AACA;AACA;;;AACA,WAAQzG,GAAG,CAAC2G,QAAJ,IAAgB3G,GAAG,CAAC2G,QAAJ,CAAa/F,QAA9B,IAA2C,GAAlD;AACA,GAlOuB;;AAmOxBgG,EAAAA,KAAK,GAAG;AACP,UAAM;AAAE5G,MAAAA;AAAF,QAAU,IAAhB;;AAEA,QAAIA,GAAG,CAAC6G,SAAR,EAAmB;AAClB,aAAOtH,CAAC,CAACS,GAAG,CAAC6G,SAAL,CAAR;AACA;;AACD,QAAI7G,GAAG,CAAC4G,KAAR,EAAe;AACd,aAAO5G,GAAG,CAAC4G,KAAX;AACA;AACD,GA5OuB;;AA6OxBE,EAAAA,SAAS,GAAG;AACX,UAAM;AAAE9G,MAAAA,GAAF;AAAOL,MAAAA;AAAP,QAAoB,IAA1B,CADW,CAEX;;AACA,QAAI,EAAEK,GAAG,CAAC+G,IAAJ,IAAY/G,GAAG,CAAC+G,IAAJ,CAASzD,MAAT,GAAkB,CAAhC,KAAsC,CAAC3E,QAAQ,CAACqI,gBAAhD,IAAoE,CAACrH,QAAQ,CAACsH,SAAlF,EAA6F;AAC5F,aAAO,KAAP;AACA,KALU,CAOX;;;AACA,QACC,CAACtH,QAAQ,CAACuH,oBAAT,IAAiC,EAAlC,EACEC,KADF,CACQ,GADR,EAEEC,GAFF,CAEOxG,QAAD,IAAcA,QAAQ,CAACyG,IAAT,EAFpB,EAGE5F,QAHF,CAGWzB,GAAG,CAACW,CAAJ,IAASX,GAAG,CAACW,CAAJ,CAAMC,QAH1B,CADD,EAKE;AACD,aAAO,KAAP;AACA;;AACD,WAAO,IAAP;AACA,GA9PuB;;AA+PxB0G,EAAAA,SAAS,GAAG;AACX,UAAM;AACLtH,MAAAA,GAAG,EAAE;AAAEsH,QAAAA,SAAS,GAAG;AAAd,OADA;AAEL3G,MAAAA,CAAC,EAAE;AAAEC,QAAAA,QAAQ,EAAE2G,UAAZ;AAAwBzC,QAAAA,IAAI,EAAE0C;AAA9B;AAFE,QAGF,IAHJ;AAKA,WAAOC,MAAM,CAACC,OAAP,CAAeJ,SAAf,EAA0BF,GAA1B,CAA8B,QAAuB;AAAA,UAAtB,CAACO,KAAD,EAAQC,QAAR,CAAsB;AAC3D,YAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAT,GAAiBN,MAAjB,cAA8BD,UAA9B,CAAtB;AACA,YAAMQ,YAAY,GAAGH,QAAQ,CAACE,KAAT,IAAkBF,QAAQ,CAACI,SAAT,CAAmBZ,GAAnB,CAAwBxG,QAAD,eAAkBA,QAAlB,CAAvB,CAAvC;AACA,YAAMqH,oBAAoB,GAAGF,YAAY,CAACG,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,EAA0BC,MAA1B,CAAkC5B,WAAD,IAAiBA,WAAW,KAAKsB,aAAlE,CAA7B;;AAEA,UAAIE,YAAY,CAACK,IAAb,CAAmB7B,WAAD,IAAiBA,WAAW,KAAKsB,aAAnD,CAAJ,EAAuE;AACtEI,QAAAA,oBAAoB,CAACI,OAArB,CAA6B9I,CAAC,CAAC,KAAD,CAA9B;AACA;;AAED,UAAIyI,SAAJ;;AAEA,UAAID,YAAY,CAACzE,MAAb,GAAsB,EAA1B,EAA8B;AAC7B0E,QAAAA,SAAS,aAAMC,oBAAoB,CAACK,IAArB,CAA0B,IAA1B,CAAN,cAAyC/I,CAAC,CAAC,UAAD,EAAa;AAC/D+D,UAAAA,MAAM,EAAEyE,YAAY,CAACzE,MAAb,GAAsB;AADiC,SAAb,CAAD,CAE/CiF,WAF+C,EAAzC,CAAT;AAGA,OAJD,MAIO,IAAIR,YAAY,CAACzE,MAAb,GAAsB,CAA1B,EAA6B;AACnC0E,QAAAA,SAAS,aAAMC,oBAAoB,CAACC,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,EAAkCI,IAAlC,CAAuC,IAAvC,CAAN,cAAsD/I,CAAC,CAAC,KAAD,CAAvD,cAAkE0I,oBAAoB,CAACA,oBAAoB,CAAC3E,MAArB,GAA8B,CAA/B,CAAtF,CAAT;AACA,OAFM,MAEA;AACN0E,QAAAA,SAAS,GAAGC,oBAAoB,CAAC,CAAD,CAAhC;AACA;;AAED,aAAO;AACNN,QAAAA,KADM;AAENa,QAAAA,KAAK,EAAET,YAAY,CAACzE,MAFd;AAGN0E,QAAAA,SAHM;AAINJ,QAAAA,QAAQ,aAAMrI,CAAC,CAAC,cAAD,CAAD,CAAkBgJ,WAAlB,EAAN,cAAyCZ,KAAzC,CAJF;AAKNc,QAAAA,WAAW,EAAEV,YAAY,CAAC9F,OAAb,CAAqB4F,aAArB,IAAsC,CAAC;AAL9C,OAAP;AAOA,KA5BM,CAAP;AA6BA,GAlSuB;;AAmSxBa,EAAAA,gBAAgB,CAACd,QAAD,EAAW;AAC1B,QAAIA,QAAQ,CAACa,WAAb,EAA0B;AACzB,aAAO;AACNE,QAAAA,KAAK,EAAE;AADD,OAAP;AAGA;AACD,GAzSuB;;AA0SxBC,EAAAA,aAAa,GAAG;AACf,UAAM;AAAE5I,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAIzB,CAAC,CAACsK,OAAF,CAAU7I,GAAG,CAACsH,SAAd,CAAJ,EAA8B;AAC7B,aAAO,QAAP;AACA;AACD,GA/SuB;;AAgTxBwB,EAAAA,eAAe,GAAG;AACjB,UAAM;AAAEnG,MAAAA,IAAF;AAAQhC,MAAAA,CAAR;AAAWX,MAAAA,GAAX;AAAgBuB,MAAAA;AAAhB,QAAiC,IAAvC;;AAEA,QAAI,CAACoB,IAAL,EAAW;AACV,aAAO,IAAP;AACA;;AAED,QAAI,CAACpB,YAAL,EAAmB;AAClB,aAAO,IAAP;AACA;;AAED,QAAIvB,GAAG,CAAC4C,OAAR,EAAiB;AAChB,aAAO,IAAP;AACA;;AAED,QAAI9C,eAAe,CAACiJ,QAAhB,CAAyBpG,IAAI,CAACjB,GAA9B,EAAmCf,CAAnC,KAAyC,CAACgC,IAAI,CAACqG,iBAAnD,EAAsE;AACrE,aAAO,IAAP;AACA;AACD,GAlUuB;;AAmUxBC,EAAAA,kBAAkB,GAAG;AACpB,UAAM;AAAEjJ,MAAAA;AAAF,QAAU,IAAhB;AAEA,WAAOA,GAAG,CAAC4C,OAAJ,IAAe3D,YAAY,CAACiB,eAAb,CAA6BF,GAA7B,CAAtB;AACA,GAvUuB;;AAwUxBkJ,EAAAA,WAAW,GAAG;AACb,UAAM;AAAElJ,MAAAA;AAAF,QAAU,IAAhB,CADa,CAEb;;AACA,WAAOzB,CAAC,CAAC6I,GAAF,CAAMpH,GAAG,CAACkJ,WAAV,EAAuB,UAAUC,UAAV,EAAsBC,GAAtB,EAA2B;AACxD,aAAO7K,CAAC,CAAC8K,MAAF,CACN;AACCC,QAAAA,EAAE,EAAEF;AADL,OADM,EAIN7K,CAAC,CAACgL,IAAF,CAAOJ,UAAP,EAAmB,WAAnB,EAAgC,QAAhC,CAJM,CAAP;AAMA,KAPM,CAAP;AAQA,GAnVuB;;AAoVxBK,EAAAA,eAAe,GAAG;AACjB,UAAM;AAAExJ,MAAAA;AAAF,QAAU,IAAhB;;AACA,QAAIzB,CAAC,CAACsK,OAAF,CAAU7I,GAAG,CAACkJ,WAAd,CAAJ,EAAgC;AAC/B,aAAO,QAAP;AACA;AACD,GAzVuB;;AA0VxBO,EAAAA,aAAa,CAAChJ,IAAD,SAAqB;AAAA,QAAd;AAAEiB,MAAAA,GAAF;AAAOkC,MAAAA;AAAP,KAAc;AACjCnD,IAAAA,IAAI,CAACT,GAAL,GAAW;AAAE0B,MAAAA,GAAF;AAAOkC,MAAAA;AAAP,KAAX;AACA,GA5VuB;;AA6VxB8F,EAAAA,WAAW,CAACjJ,IAAD,EAAOkJ,KAAP,EAAc;AACxBlJ,IAAAA,IAAI,CAACkJ,KAAL,GAAaA,KAAb;AACA,GA/VuB;;AAgWxBC,EAAAA,cAAc,CAACnJ,IAAD,EAAOd,QAAP,EAAiB;AAC9Bc,IAAAA,IAAI,CAACd,QAAL,GAAgBA,QAAhB;AACA,GAlWuB;;AAmWxBkK,EAAAA,SAAS,GAAG;AACX,WAAO,KAAK7J,GAAL,CAAS6J,SAAhB;AACA,GArWuB;;AAsWxBC,EAAAA,WAAW,GAAG;AACb,UAAM;AAAEvI,MAAAA;AAAF,QAAmB,IAAzB,CADa,CAEb;;AACA,WAAOA,YAAY,IAAIA,YAAY,CAACuD,IAApC;AACA,GA1WuB;;AA2WxBiF,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEpH,MAAAA;AAAF,QAAW,IAAjB;;AACA,QAAIA,IAAI,IAAIA,IAAI,CAACpD,CAAL,KAAW,GAAvB,EAA4B;AAC3B,aAAO,IAAP;AACA;;AACD,WAAOO,eAAe,CAACkK,OAAhB,CAAwBrH,IAAxB,CAAP;AACA,GAjXuB;;AAkXxBsH,EAAAA,WAAW,GAAG;AACb,UAAM;AAAEA,MAAAA;AAAF,QAAkB,IAAxB;AACA,WAAOA,WAAP;AACA,GArXuB;;AAsXxBC,EAAAA,UAAU,GAAG;AACZ,UAAM;AAAED,MAAAA;AAAF,QAAkB,IAAxB;AACA,WAAOA,WAAW,KAAK,QAAvB;AACA,GAzXuB;;AA0XxBE,EAAAA,aAAa,GAAG;AACf,UAAM;AAAEnK,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACmK,aAAX;AACA,GA7XuB;;AA8XxBC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACrB,UAAM;AAAErK,MAAAA,GAAF;AAAOsK,MAAAA,OAAO,EAAEC;AAAhB,QAAwB,IAA9B;AACA,QAAIC,YAAY,GAAGH,KAAnB;AACA,QAAIC,OAAO,GAAGC,GAAG,IAAIvK,GAAG,CAACmK,aAAzB;;AAEA,QAAI,CAACE,KAAL,EAAY;AACXG,MAAAA,YAAY,GAAG,SAAf;AACA;;AAED,QAAI,CAACF,OAAL,EAAc;AACbA,MAAAA,OAAO,GAAG,SAAV;AACA;;AAED,WAAOpL,aAAa,CAACuL,UAAd,CAAyB,IAAzB,EAA+BH,OAA/B,EAAwCE,YAAxC,CAAP;AACA,GA5YuB;;AA6YxBE,EAAAA,SAAS,GAAG;AACX,UAAM;AAAE1K,MAAAA;AAAF,QAAU,IAAhB;AACA,WAAOA,GAAG,CAACmK,aAAJ,KAAsB,WAA7B;AACA,GAhZuB;;AAiZxBQ,EAAAA,aAAa,GAAG;AACf,UAAM;AACLtG,MAAAA,SADK;AAELrE,MAAAA,GAAG,EAAE;AAAEuE,QAAAA,IAAF;AAAQhF,QAAAA,CAAR;AAAW8E,QAAAA,SAAS,EAAEuG;AAAtB,OAFA;AAGLjL,MAAAA,QAAQ,EAAE;AAAEkL,QAAAA;AAAF;AAHL,QAIF,IAJJ;AAKA,WAAO,EAAExG,SAAS,KAAK,IAAd,IAAsBuG,UAAU,KAAK,IAAvC,KAAgD,CAAC,EAAErG,IAAI,IAAIsG,SAAR,KAAsB,CAACtL,CAAD,IAAMA,CAAC,KAAK,KAAlC,CAAF,CAAxD;AACA,GAxZuB;;AAyZxBuL,EAAAA,cAAc,GAAG;AAChB,UAAM;AACL9K,MAAAA,GAAG,EAAE;AAAEuE,QAAAA,IAAF;AAAQ4F,QAAAA;AAAR,OADA;AAELxK,MAAAA,QAAQ,EAAE;AAAEkL,QAAAA;AAAF,OAFL;AAGLP,MAAAA;AAHK,QAIF,IAJJ;AAKA,WAAOO,SAAS,IAAItG,IAAb,IAAqB,EAAE4F,aAAa,IAAIG,OAAnB,CAA5B;AACA,GAhauB;;AAiaxBS,EAAAA,SAAS,GAAG;AACX,UAAM;AACL/K,MAAAA,GAAG,EAAE;AAAEuE,QAAAA,IAAF;AAAQwG,QAAAA;AAAR,OADA;AAELpL,MAAAA,QAAQ,EAAE;AAAEkL,QAAAA;AAAF,OAFL;AAGLG,MAAAA;AAHK,QAIF,IAJJ;AAKA,UAAMC,sBAAsB,GAAGD,qBAAqB,IAAIzG,IAAzB,IAAiCsG,SAAjC,IAA8CE,SAAS,KAAK,KAA3F;;AACA,QAAIE,sBAAJ,EAA4B;AAC3B,aAAO,WAAP;AACA;AACD,GA3auB;;AA4axBC,EAAAA,mBAAmB,GAAG;AACrB,UAAM;AACLlL,MAAAA,GAAG,EAAE;AAAE+K,QAAAA,SAAS,GAAG;AAAd;AADA,QAEF,IAFJ;AAGA,WAAOA,SAAS,GAAG,gBAAH,GAAsB,eAAtC;AACA,GAjbuB;;AAkbxBI,EAAAA,aAAa,GAAG;AACf,UAAM;AACLnL,MAAAA,GAAG,EAAE;AAAEoL,QAAAA;AAAF;AADA,QAEF,IAFJ;AAGA,WAAOA,SAAP;AACA,GAvbuB;;AAwbxBC,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAErL,MAAAA;AAAF,QAAU,IAAhB;AACA,WACCA,GAAG,CAACsL,OAAJ,IACAtL,GAAG,CAACsL,OAAJ,CAAYhI,MAAZ,GAAqB,CADrB,IAEAtD,GAAG,CAACsL,OAAJ,CAAYxH,IAAZ,CAAkByH,IAAD,IAAUA,IAAI,CAAC7J,GAAL,KAAajD,MAAM,CAAC+M,MAAP,EAAxC,CAFA,IAGA,EAAExL,GAAG,CAACmK,aAAJ,KAAsB,SAAtB,IAAmC,KAAKG,OAAL,KAAiB,SAAtD,CAJD;AAMA,GAhcuB;;AAicxBmB,EAAAA,WAAW,GAAG;AACb,QAAI,CAAC9L,QAAQ,CAAC+L,GAAT,CAAa,8BAAb,CAAL,EAAmD;AAClD;AACA;;AAED,WAAO;AACNC,MAAAA,cAAc,EAAG,CAAC,KAAK3L,GAAL,CAASsB,MAAV,IAAoB,MAArB,IAAgC;AAD1C,KAAP;AAGA;;AAzcuB,CAAzB;;AA4cA,MAAMsK,YAAY,GAAIC,IAAD,IAAUA,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,MAAxB,CAA/B;;AAEA,MAAMC,sBAAsB,GAAIC,WAAD,IAAiB;AAC/C,MAAIL,YAAY,CAACK,WAAD,CAAhB,EAA+B;AAC9B,WAAOA,WAAW,CAACC,sBAAnB;AACA;;AACD,MAAID,WAAW,CAACC,sBAAZ,IAAsC,IAA1C,EAAgD;AAC/C,QAAIC,aAAa,GAAGF,WAAW,CAACC,sBAAhC;;AACA,WAAOC,aAAa,IAAI,IAAjB,KAA0BP,YAAY,CAACO,aAAD,CAAZ,IAA+B,CAACA,aAAa,CAACL,SAAd,CAAwBC,QAAxB,CAAiC,SAAjC,CAA1D,CAAP,EAA+G;AAC9GI,MAAAA,aAAa,GAAGA,aAAa,CAACD,sBAA9B;AACA;;AACD,WAAOC,aAAP;AACA;AACD,CAXD;;AAaA,MAAMC,QAAQ,GAAG,CAACH,WAAD,EAAcI,YAAd,EAA4BC,SAA5B,EAAuCC,iBAAvC,KAA6D;AAC7E,MAAI,CAACA,iBAAL,EAAwB;AACvB,WAAO,KAAP;AACA;;AAED,MAAID,SAAS,IAAI,CAACD,YAAlB,EAAgC;AAC/B,WAAO,IAAP;AACA;;AAED,QAAM;AAAEG,IAAAA,OAAO,EAAEC;AAAX,MAA8BR,WAApC;AACA,QAAM;AAAEO,IAAAA,OAAO,EAAEE;AAAX,MAA+BL,YAArC;AACA,QAAMM,mBAAmB,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACH,eAAe,CAACzH,SAAjB,CAAjB,CAA5B;AACA,QAAM6H,kBAAkB,GAAG,IAAIF,IAAJ,CAASC,QAAQ,CAACJ,cAAc,CAACxH,SAAhB,CAAjB,CAA3B;;AAEA,MAAI0H,mBAAmB,CAACI,YAApB,OAAuCD,kBAAkB,CAACC,YAAnB,EAA3C,EAA8E;AAC7E,WAAO,IAAP;AACA;;AAED,SAAO,KAAP;AACA,CAnBD;;AAqBA,MAAMC,YAAY,GAAG,CAACf,WAAD,EAAcI,YAAd,EAA4BC,SAA5B,EAAuCW,MAAvC,EAA+CV,iBAA/C,EAAkEvB,qBAAlE,KAA4F;AAChH,MAAI,CAACqB,YAAL,EAAmB;AAClB,WAAO,KAAP;AACA;;AAED,MAAIE,iBAAiB,IAAID,SAAzB,EAAoC;AACnC,WAAO,KAAP;AACA;;AAED,QAAM;AAAEE,IAAAA,OAAO,EAAEC;AAAX,MAA8BR,WAApC;AACA,QAAM;AAAEO,IAAAA,OAAO,EAAEE;AAAX,MAA+BL,YAArC;AACA,QAAMM,mBAAmB,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACH,eAAe,CAACzH,SAAjB,CAAjB,CAA5B;AACA,QAAM6H,kBAAkB,GAAG,IAAIF,IAAJ,CAASC,QAAQ,CAACJ,cAAc,CAACxH,SAAhB,CAAjB,CAA3B;;AAEA,MAAIsH,iBAAiB,IAAII,mBAAmB,CAACI,YAApB,OAAuCD,kBAAkB,CAACC,YAAnB,EAAhE,EAAmG;AAClG,WAAO,KAAP;AACA;;AAED,MAAI,CAAC/B,qBAAD,IAA0ByB,cAAc,CAAClI,IAA7C,EAAmD;AAClD,WAAOmI,eAAe,CAACpD,EAAhB,KAAuBmD,cAAc,CAAClI,IAAtC,IAA8CmI,eAAe,CAACnI,IAAhB,KAAyBkI,cAAc,CAAClI,IAA7F;AACA;;AAED,MAAImI,eAAe,CAACnI,IAAhB,IAAwB,CAACkI,cAAc,CAAClI,IAA5C,EAAkD;AACjD,WAAO,KAAP;AACA;;AAED,MAAI,CAACmI,eAAe,CAACrI,SAAjB,EAA4BoI,cAAc,CAACpI,SAA3C,EAAsD5C,QAAtD,CAA+D,OAA/D,CAAJ,EAA6E;AAC5E,WAAO,KAAP;AACA;;AAED,MAAIiL,eAAe,CAAC9L,QAAhB,KAA6B6L,cAAc,CAAC7L,QAAhD,EAA0D;AACzD,WAAO,KAAP;AACA;;AAED,MAAI8L,eAAe,CAAC9H,KAAhB,KAA0B6H,cAAc,CAAC7H,KAA7C,EAAoD;AACnD,WAAO,KAAP;AACA;;AAED,MAAIiI,QAAQ,CAACJ,cAAc,CAACxH,SAAhB,CAAR,GAAqC4H,QAAQ,CAACH,eAAe,CAACzH,SAAjB,CAA7C,IAA4EgI,MAAhF,EAAwF;AACvF,WAAO,IAAP;AACA;;AAED,SAAO,KAAP;AACA,CA3CD;;AA6CA,MAAMC,kBAAkB,GAAG,SAA6G;AAAA,MAA5G;AAAEvD,IAAAA,KAAF;AAASsC,IAAAA,WAAT;AAAsBtM,IAAAA,QAAtB;AAAgC2M,IAAAA,SAAhC;AAA2CC,IAAAA,iBAAiB,GAAG,IAA/D;AAAqElI,IAAAA,SAArE;AAAgF2G,IAAAA;AAAhF,GAA4G;;AACvI,MAAI,CAACuB,iBAAD,IAAsB,CAAClI,SAA3B,EAAsC;AACrC;AACA,GAHsI,CAIvI;;;AACA,QAAMgI,YAAY,GAAG,CAAC1C,KAAK,KAAKwD,SAAV,IAAuBxD,KAAK,GAAG,CAAhC,KAAsCqC,sBAAsB,CAACC,WAAD,CAAjF;AACA,QAAMmB,QAAQ,GAAGnB,WAAW,CAACoB,kBAA7B;;AAEA,MAAI,CAAChB,YAAL,EAAmB;AAClBiB,IAAAA,UAAU,CAAC,MAAM;AAChBrB,MAAAA,WAAW,CAACsB,aAAZ,CAA0B,IAAIC,WAAJ,CAAgB,cAAhB,EAAgC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAhC,CAA1B;AACA,KAFS,EAEP,GAFO,CAAV;AAGA;;AACD,MAAIT,YAAY,CAACf,WAAD,EAAcI,YAAd,EAA4BC,SAA5B,EAAuC3M,QAAQ,CAAC+N,sBAAhD,EAAwEnB,iBAAxE,EAA2FvB,qBAA3F,CAAhB,EAAmI;AAClIiB,IAAAA,WAAW,CAACH,SAAZ,CAAsB6B,GAAtB,CAA0B,YAA1B;AACA,GAFD,MAEO;AACN1B,IAAAA,WAAW,CAACH,SAAZ,CAAsB8B,MAAtB,CAA6B,YAA7B;AACA;;AAED,MAAIxB,QAAQ,CAACH,WAAD,EAAcI,YAAd,EAA4BC,SAA5B,EAAuCC,iBAAvC,CAAZ,EAAuE;AACtEN,IAAAA,WAAW,CAACH,SAAZ,CAAsB6B,GAAtB,CAA0B,SAA1B;AACA,GAFD,MAEO;AACN1B,IAAAA,WAAW,CAACH,SAAZ,CAAsB8B,MAAtB,CAA6B,SAA7B;AACA;;AAED,MAAIR,QAAQ,IAAIA,QAAQ,CAACZ,OAAzB,EAAkC;AACjC,QAAIQ,YAAY,CAACI,QAAD,EAAWnB,WAAX,EAAwBK,SAAxB,EAAmC3M,QAAQ,CAAC+N,sBAA5C,EAAoEnB,iBAApE,EAAuFvB,qBAAvF,CAAhB,EAA+H;AAC9HoC,MAAAA,QAAQ,CAACtB,SAAT,CAAmB6B,GAAnB,CAAuB,YAAvB;AACA,KAFD,MAEO;AACNP,MAAAA,QAAQ,CAACtB,SAAT,CAAmB8B,MAAnB,CAA0B,YAA1B;AACA;;AAED,QAAIxB,QAAQ,CAACgB,QAAD,EAAWnB,WAAX,EAAwBK,SAAxB,EAAmCC,iBAAnC,CAAZ,EAAmE;AAClEa,MAAAA,QAAQ,CAACtB,SAAT,CAAmB6B,GAAnB,CAAuB,SAAvB;AACA,KAFD,MAEO;AACNP,MAAAA,QAAQ,CAACtB,SAAT,CAAmB8B,MAAnB,CAA0B,SAA1B;AACA;AACD;AACD,CAtCD;;AAwCAjP,QAAQ,CAAC4B,OAAT,CAAiBsN,UAAjB,CAA4B,YAAY;AACvC,QAAM5B,WAAW,GAAG,KAAK6B,SAAzB;AACA,OAAKC,OAAL,CAAa,MAAMb,kBAAkB;AAAGjB,IAAAA;AAAH,KAAmBtN,QAAQ,CAACqP,WAAT,EAAnB,EAArC;AACA,CAHD","sourcesContent":["import _ from 'underscore';\nimport dompurify from 'dompurify';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { Template } from 'meteor/templating';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nimport { timeAgo } from '../../../client/lib/utils/timeAgo';\nimport { formatDateAndTime } from '../../../client/lib/utils/formatDateAndTime';\nimport { normalizeThreadTitle } from '../../threads/client/lib/normalizeThreadTitle';\nimport { MessageTypes, MessageAction } from '../../ui-utils/client';\nimport { RoomRoles, UserRoles, Roles } from '../../models/client';\nimport { Markdown } from '../../markdown/client';\nimport { t } from '../../utils';\nimport { AutoTranslate } from '../../autotranslate/client';\nimport { renderMentions } from '../../mentions/client/client';\nimport { renderMessageBody } from '../../../client/lib/utils/renderMessageBody';\nimport { settings } from '../../settings/client';\nimport { formatTime } from '../../../client/lib/utils/formatTime';\nimport { formatDate } from '../../../client/lib/utils/formatDate';\nimport './messageThread';\nimport './message.html';\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\n\nconst renderBody = (msg, settings) => {\n\tconst searchedText = msg.searchedText ? msg.searchedText : '';\n\tconst isSystemMessage = MessageTypes.isSystemMessage(msg);\n\tconst messageType = MessageTypes.getType(msg) || {};\n\n\tif (messageType.render) {\n\t\tmsg = messageType.render(msg);\n\t} else if (messageType.template) {\n\t\t// render template\n\t} else if (messageType.message) {\n\t\tmsg.msg = escapeHTML(msg.msg);\n\t\tmsg = TAPi18n.__(messageType.message, { ...(typeof messageType.data === 'function' && messageType.data(msg)) });\n\t\tmsg = dompurify.sanitize(msg);\n\t} else if (msg.u && msg.u.username === settings.Chatops_Username) {\n\t\tmsg.html = msg.msg;\n\t\tmsg = renderMentions(msg);\n\t\tmsg = msg.html;\n\t} else {\n\t\tmsg = renderMessageBody(msg);\n\t}\n\n\tif (isSystemMessage) {\n\t\tmsg.html = Markdown.parse(msg.html);\n\t}\n\n\tif (searchedText) {\n\t\tmsg = msg.replace(new RegExp(searchedText, 'gi'), (str) => `<mark>${str}</mark>`);\n\t}\n\n\treturn msg;\n};\n\nTemplate.message.helpers({\n\tenableMessageParserEarlyAdoption() {\n\t\tconst {\n\t\t\tsettings: { enableMessageParserEarlyAdoption },\n\t\t\tmsg,\n\t\t} = this;\n\t\treturn enableMessageParserEarlyAdoption && msg.md;\n\t},\n\tunread() {\n\t\tconst { msg, subscription } = this;\n\t\treturn subscription?.tunread?.includes(msg._id);\n\t},\n\tmention() {\n\t\tconst { msg, subscription } = this;\n\t\treturn subscription?.tunreadUser?.includes(msg._id);\n\t},\n\n\tall() {\n\t\tconst { msg, subscription } = this;\n\t\treturn subscription?.tunreadGroup?.includes(msg._id);\n\t},\n\tfollowing() {\n\t\tconst { msg, u } = this;\n\t\treturn msg.replies && msg.replies.indexOf(u._id) > -1;\n\t},\n\tbody() {\n\t\tconst { msg, settings } = this;\n\t\treturn Tracker.nonreactive(() => renderBody(msg, settings));\n\t},\n\ti18nReplyCounter() {\n\t\tconst { msg } = this;\n\t\tif (msg.tcount === 1) {\n\t\t\treturn 'reply_counter';\n\t\t}\n\t\treturn 'reply_counter_plural';\n\t},\n\ti18nDiscussionCounter() {\n\t\tconst { msg } = this;\n\t\treturn `<span class='reply-counter'>${msg.dcount}</span>`;\n\t},\n\tformatDateAndTime,\n\tencodeURI(text) {\n\t\treturn encodeURI(text);\n\t},\n\tbroadcast() {\n\t\tconst { msg, room = {}, u } = this;\n\t\treturn !msg.private && !msg.t && msg.u._id !== u._id && room && room.broadcast;\n\t},\n\tisIgnored() {\n\t\tconst { ignored, msg } = this;\n\t\tconst isIgnored = typeof ignored !== 'undefined' ? ignored : msg.ignored;\n\t\treturn isIgnored;\n\t},\n\tignoredClass() {\n\t\tconst { ignored, msg } = this;\n\t\tconst isIgnored = typeof ignored !== 'undefined' ? ignored : msg.ignored;\n\t\treturn isIgnored ? 'message--ignored' : '';\n\t},\n\tisDecrypting() {\n\t\tconst { msg } = this;\n\t\treturn msg.e2e === 'pending';\n\t},\n\tisBot() {\n\t\tconst { msg } = this;\n\t\treturn msg.bot && 'bot';\n\t},\n\thasAttachments() {\n\t\tconst { msg } = this;\n\t\treturn msg.attachments?.length;\n\t},\n\troleTags() {\n\t\tconst { msg, hideRoles, settings } = this;\n\t\tif (settings.hideRoles || hideRoles) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!msg.u || !msg.u._id) {\n\t\t\treturn [];\n\t\t}\n\t\tconst userRoles = UserRoles.findOne(msg.u._id);\n\t\tconst roomRoles = RoomRoles.findOne({\n\t\t\t'u._id': msg.u._id,\n\t\t\t'rid': msg.rid,\n\t\t});\n\t\tconst roles = [...((userRoles && userRoles.roles) || []), ...((roomRoles && roomRoles.roles) || [])];\n\t\treturn Roles.find(\n\t\t\t{\n\t\t\t\t_id: {\n\t\t\t\t\t$in: roles,\n\t\t\t\t},\n\t\t\t\tdescription: {\n\t\t\t\t\t$exists: 1,\n\t\t\t\t\t$ne: '',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\tdescription: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t},\n\tisGroupable() {\n\t\tconst { msg, room = {}, settings, groupable } = this;\n\t\tif (\n\t\t\tgroupable === false ||\n\t\t\tsettings.allowGroup === false ||\n\t\t\troom.broadcast ||\n\t\t\tmsg.groupable === false ||\n\t\t\t(MessageTypes.isSystemMessage(msg) && !msg.tmid)\n\t\t) {\n\t\t\treturn 'false';\n\t\t}\n\t},\n\tavatarFromUsername() {\n\t\tconst { msg } = this;\n\n\t\tif (msg.avatar != null && msg.avatar[0] === '@') {\n\t\t\treturn msg.avatar.replace(/^@/, '');\n\t\t}\n\t},\n\tavatarFromMessage() {\n\t\tconst { msg } = this;\n\t\tif (msg && msg.avatar) {\n\t\t\treturn encodeURI(msg.avatar);\n\t\t}\n\t\treturn '';\n\t},\n\tgetName() {\n\t\tconst { msg, settings } = this;\n\t\tif (msg.alias) {\n\t\t\treturn msg.alias;\n\t\t}\n\t\tif (!msg.u) {\n\t\t\treturn '';\n\t\t}\n\t\treturn (settings.UI_Use_Real_Name && msg.u.name) || msg.u.username;\n\t},\n\tshowUsername() {\n\t\tconst { msg, settings } = this;\n\t\treturn msg.alias || (settings.UI_Use_Real_Name && msg.u && msg.u.name);\n\t},\n\town() {\n\t\tconst { msg, u = {} } = this;\n\t\tif (msg.u && msg.u._id === u._id) {\n\t\t\treturn 'own';\n\t\t}\n\t},\n\tt() {\n\t\tconst { msg } = this;\n\t\treturn msg.t;\n\t},\n\ttimestamp() {\n\t\tconst { msg } = this;\n\t\treturn +msg.ts;\n\t},\n\tchatops() {\n\t\tconst { msg, settings } = this;\n\t\tif (msg.u && msg.u.username === settings.Chatops_Username) {\n\t\t\treturn 'chatops-message';\n\t\t}\n\t},\n\ttime() {\n\t\tconst { msg, timeAgo: useTimeAgo } = this;\n\n\t\treturn useTimeAgo ? timeAgo(msg.ts) : formatTime(msg.ts);\n\t},\n\tdate() {\n\t\tconst { msg } = this;\n\t\treturn formatDate(msg.ts);\n\t},\n\tisTemp() {\n\t\tconst { msg } = this;\n\t\tif (msg.temp === true) {\n\t\t\treturn 'temp';\n\t\t}\n\t},\n\tthreadMessage() {\n\t\tconst { msg } = this;\n\t\treturn normalizeThreadTitle(msg);\n\t},\n\tbodyClass() {\n\t\tconst { msg } = this;\n\t\treturn MessageTypes.isSystemMessage(msg) ? 'color-info-font-color' : 'color-primary-font-color';\n\t},\n\tsystem(returnClass) {\n\t\tconst { msg } = this;\n\t\tif (MessageTypes.isSystemMessage(msg)) {\n\t\t\tif (returnClass) {\n\t\t\t\treturn 'color-info-font-color';\n\t\t\t}\n\t\t\treturn 'system';\n\t\t}\n\t},\n\tshowTranslated() {\n\t\tconst { msg, subscription, settings, u } = this;\n\t\tif (settings.AutoTranslate_Enabled && msg.u && msg.u._id !== u._id && !MessageTypes.isSystemMessage(msg)) {\n\t\t\tconst autoTranslate = subscription && subscription.autoTranslate;\n\t\t\treturn (\n\t\t\t\tmsg.autoTranslateFetching ||\n\t\t\t\t(!!autoTranslate !== !!msg.autoTranslateShowInverse && msg.translations && msg.translations[settings.translateLanguage])\n\t\t\t);\n\t\t}\n\t},\n\ttranslationProvider() {\n\t\tconst instance = Template.instance();\n\t\tconst { translationProvider } = instance.data.msg;\n\t\treturn translationProvider && AutoTranslate.providersMetadata[translationProvider]?.displayName;\n\t},\n\tedited() {\n\t\tconst { msg } = this;\n\t\treturn msg.editedAt && !MessageTypes.isSystemMessage(msg);\n\t},\n\teditTime() {\n\t\tconst { msg } = this;\n\t\treturn msg.editedAt ? formatDateAndTime(msg.editedAt) : '';\n\t},\n\teditedBy() {\n\t\tconst { msg } = this;\n\t\tif (!msg.editedAt) {\n\t\t\treturn '';\n\t\t}\n\t\t// try to return the username of the editor,\n\t\t// otherwise a special \"?\" character that will be\n\t\t// rendered as a special avatar\n\t\treturn (msg.editedBy && msg.editedBy.username) || '?';\n\t},\n\tlabel() {\n\t\tconst { msg } = this;\n\n\t\tif (msg.i18nLabel) {\n\t\t\treturn t(msg.i18nLabel);\n\t\t}\n\t\tif (msg.label) {\n\t\t\treturn msg.label;\n\t\t}\n\t},\n\thasOembed() {\n\t\tconst { msg, settings } = this;\n\t\t// there is no URLs, there is no template to show the oembed (oembed package removed) or oembed is not enable\n\t\tif (!(msg.urls && msg.urls.length > 0) || !Template.oembedBaseWidget || !settings.API_Embed) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check if oembed is disabled for message's sender\n\t\tif (\n\t\t\t(settings.API_EmbedDisabledFor || '')\n\t\t\t\t.split(',')\n\t\t\t\t.map((username) => username.trim())\n\t\t\t\t.includes(msg.u && msg.u.username)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\treactions() {\n\t\tconst {\n\t\t\tmsg: { reactions = {} },\n\t\t\tu: { username: myUsername, name: myName },\n\t\t} = this;\n\n\t\treturn Object.entries(reactions).map(([emoji, reaction]) => {\n\t\t\tconst myDisplayName = reaction.names ? myName : `@${myUsername}`;\n\t\t\tconst displayNames = reaction.names || reaction.usernames.map((username) => `@${username}`);\n\t\t\tconst selectedDisplayNames = displayNames.slice(0, 15).filter((displayName) => displayName !== myDisplayName);\n\n\t\t\tif (displayNames.some((displayName) => displayName === myDisplayName)) {\n\t\t\t\tselectedDisplayNames.unshift(t('You'));\n\t\t\t}\n\n\t\t\tlet usernames;\n\n\t\t\tif (displayNames.length > 15) {\n\t\t\t\tusernames = `${selectedDisplayNames.join(', ')} ${t('And_more', {\n\t\t\t\t\tlength: displayNames.length - 15,\n\t\t\t\t}).toLowerCase()}`;\n\t\t\t} else if (displayNames.length > 1) {\n\t\t\t\tusernames = `${selectedDisplayNames.slice(0, -1).join(', ')} ${t('and')} ${selectedDisplayNames[selectedDisplayNames.length - 1]}`;\n\t\t\t} else {\n\t\t\t\tusernames = selectedDisplayNames[0];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\temoji,\n\t\t\t\tcount: displayNames.length,\n\t\t\t\tusernames,\n\t\t\t\treaction: ` ${t('Reacted_with').toLowerCase()} ${emoji}`,\n\t\t\t\tuserReacted: displayNames.indexOf(myDisplayName) > -1,\n\t\t\t};\n\t\t});\n\t},\n\tmarkUserReaction(reaction) {\n\t\tif (reaction.userReacted) {\n\t\t\treturn {\n\t\t\t\tclass: 'selected',\n\t\t\t};\n\t\t}\n\t},\n\thideReactions() {\n\t\tconst { msg } = this;\n\t\tif (_.isEmpty(msg.reactions)) {\n\t\t\treturn 'hidden';\n\t\t}\n\t},\n\thideAddReaction() {\n\t\tconst { room, u, msg, subscription } = this;\n\n\t\tif (!room) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!subscription) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (msg.private) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (roomCoordinator.readOnly(room._id, u) && !room.reactWhenReadOnly) {\n\t\t\treturn true;\n\t\t}\n\t},\n\thideMessageActions() {\n\t\tconst { msg } = this;\n\n\t\treturn msg.private || MessageTypes.isSystemMessage(msg);\n\t},\n\tactionLinks() {\n\t\tconst { msg } = this;\n\t\t// remove 'method_id' and 'params' properties\n\t\treturn _.map(msg.actionLinks, function (actionLink, key) {\n\t\t\treturn _.extend(\n\t\t\t\t{\n\t\t\t\t\tid: key,\n\t\t\t\t},\n\t\t\t\t_.omit(actionLink, 'method_id', 'params'),\n\t\t\t);\n\t\t});\n\t},\n\thideActionLinks() {\n\t\tconst { msg } = this;\n\t\tif (_.isEmpty(msg.actionLinks)) {\n\t\t\treturn 'hidden';\n\t\t}\n\t},\n\tinjectMessage(data, { _id, rid }) {\n\t\tdata.msg = { _id, rid };\n\t},\n\tinjectIndex(data, index) {\n\t\tdata.index = index;\n\t},\n\tinjectSettings(data, settings) {\n\t\tdata.settings = settings;\n\t},\n\tclassName() {\n\t\treturn this.msg.className;\n\t},\n\tchannelName() {\n\t\tconst { subscription } = this;\n\t\t// const subscription = Subscriptions.findOne({ rid: this.rid });\n\t\treturn subscription && subscription.name;\n\t},\n\troomIcon() {\n\t\tconst { room } = this;\n\t\tif (room && room.t === 'd') {\n\t\t\treturn 'at';\n\t\t}\n\t\treturn roomCoordinator.getIcon(room);\n\t},\n\tcustomClass() {\n\t\tconst { customClass } = this;\n\t\treturn customClass;\n\t},\n\tfromSearch() {\n\t\tconst { customClass } = this;\n\t\treturn customClass === 'search';\n\t},\n\tactionContext() {\n\t\tconst { msg } = this;\n\t\treturn msg.actionContext;\n\t},\n\tmessageActions(group) {\n\t\tconst { msg, context: ctx } = this;\n\t\tlet messageGroup = group;\n\t\tlet context = ctx || msg.actionContext;\n\n\t\tif (!group) {\n\t\t\tmessageGroup = 'message';\n\t\t}\n\n\t\tif (!context) {\n\t\t\tcontext = 'message';\n\t\t}\n\n\t\treturn MessageAction.getButtons(this, context, messageGroup);\n\t},\n\tisSnippet() {\n\t\tconst { msg } = this;\n\t\treturn msg.actionContext === 'snippeted';\n\t},\n\tisThreadReply() {\n\t\tconst {\n\t\t\tgroupable,\n\t\t\tmsg: { tmid, t, groupable: _groupable },\n\t\t\tsettings: { showreply },\n\t\t} = this;\n\t\treturn !(groupable === true || _groupable === true) && !!(tmid && showreply && (!t || t === 'e2e'));\n\t},\n\tshouldHideBody() {\n\t\tconst {\n\t\t\tmsg: { tmid, actionContext },\n\t\t\tsettings: { showreply },\n\t\t\tcontext,\n\t\t} = this;\n\t\treturn showreply && tmid && !(actionContext || context);\n\t},\n\tcollapsed() {\n\t\tconst {\n\t\t\tmsg: { tmid, collapsed },\n\t\t\tsettings: { showreply },\n\t\t\tshouldCollapseReplies,\n\t\t} = this;\n\t\tconst isCollapsedThreadReply = shouldCollapseReplies && tmid && showreply && collapsed !== false;\n\t\tif (isCollapsedThreadReply) {\n\t\t\treturn 'collapsed';\n\t\t}\n\t},\n\tcollapseSwitchClass() {\n\t\tconst {\n\t\t\tmsg: { collapsed = true },\n\t\t} = this;\n\t\treturn collapsed ? 'icon-right-dir' : 'icon-down-dir';\n\t},\n\tparentMessage() {\n\t\tconst {\n\t\t\tmsg: { threadMsg },\n\t\t} = this;\n\t\treturn threadMsg;\n\t},\n\tshowStar() {\n\t\tconst { msg } = this;\n\t\treturn (\n\t\t\tmsg.starred &&\n\t\t\tmsg.starred.length > 0 &&\n\t\t\tmsg.starred.find((star) => star._id === Meteor.userId()) &&\n\t\t\t!(msg.actionContext === 'starred' || this.context === 'starred')\n\t\t);\n\t},\n\treadReceipt() {\n\t\tif (!settings.get('Message_Read_Receipt_Enabled')) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\treadByEveryone: (!this.msg.unread && 'read') || 'color-component-color',\n\t\t};\n\t},\n});\n\nconst hasTempClass = (node) => node.classList.contains('temp');\n\nconst getPreviousSentMessage = (currentNode) => {\n\tif (hasTempClass(currentNode)) {\n\t\treturn currentNode.previousElementSibling;\n\t}\n\tif (currentNode.previousElementSibling != null) {\n\t\tlet previousValid = currentNode.previousElementSibling;\n\t\twhile (previousValid != null && (hasTempClass(previousValid) || !previousValid.classList.contains('message'))) {\n\t\t\tpreviousValid = previousValid.previousElementSibling;\n\t\t}\n\t\treturn previousValid;\n\t}\n};\n\nconst isNewDay = (currentNode, previousNode, forceDate, showDateSeparator) => {\n\tif (!showDateSeparator) {\n\t\treturn false;\n\t}\n\n\tif (forceDate || !previousNode) {\n\t\treturn true;\n\t}\n\n\tconst { dataset: currentDataset } = currentNode;\n\tconst { dataset: previousDataset } = previousNode;\n\tconst previousMessageDate = new Date(parseInt(previousDataset.timestamp));\n\tconst currentMessageDate = new Date(parseInt(currentDataset.timestamp));\n\n\tif (previousMessageDate.toDateString() !== currentMessageDate.toDateString()) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nconst isSequential = (currentNode, previousNode, forceDate, period, showDateSeparator, shouldCollapseReplies) => {\n\tif (!previousNode) {\n\t\treturn false;\n\t}\n\n\tif (showDateSeparator && forceDate) {\n\t\treturn false;\n\t}\n\n\tconst { dataset: currentDataset } = currentNode;\n\tconst { dataset: previousDataset } = previousNode;\n\tconst previousMessageDate = new Date(parseInt(previousDataset.timestamp));\n\tconst currentMessageDate = new Date(parseInt(currentDataset.timestamp));\n\n\tif (showDateSeparator && previousMessageDate.toDateString() !== currentMessageDate.toDateString()) {\n\t\treturn false;\n\t}\n\n\tif (!shouldCollapseReplies && currentDataset.tmid) {\n\t\treturn previousDataset.id === currentDataset.tmid || previousDataset.tmid === currentDataset.tmid;\n\t}\n\n\tif (previousDataset.tmid && !currentDataset.tmid) {\n\t\treturn false;\n\t}\n\n\tif ([previousDataset.groupable, currentDataset.groupable].includes('false')) {\n\t\treturn false;\n\t}\n\n\tif (previousDataset.username !== currentDataset.username) {\n\t\treturn false;\n\t}\n\n\tif (previousDataset.alias !== currentDataset.alias) {\n\t\treturn false;\n\t}\n\n\tif (parseInt(currentDataset.timestamp) - parseInt(previousDataset.timestamp) <= period) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nconst processSequentials = ({ index, currentNode, settings, forceDate, showDateSeparator = true, groupable, shouldCollapseReplies }) => {\n\tif (!showDateSeparator && !groupable) {\n\t\treturn;\n\t}\n\t// const currentDataset = currentNode.dataset;\n\tconst previousNode = (index === undefined || index > 0) && getPreviousSentMessage(currentNode);\n\tconst nextNode = currentNode.nextElementSibling;\n\n\tif (!previousNode) {\n\t\tsetTimeout(() => {\n\t\t\tcurrentNode.dispatchEvent(new CustomEvent('MessageGroup', { bubbles: true }));\n\t\t}, 100);\n\t}\n\tif (isSequential(currentNode, previousNode, forceDate, settings.Message_GroupingPeriod, showDateSeparator, shouldCollapseReplies)) {\n\t\tcurrentNode.classList.add('sequential');\n\t} else {\n\t\tcurrentNode.classList.remove('sequential');\n\t}\n\n\tif (isNewDay(currentNode, previousNode, forceDate, showDateSeparator)) {\n\t\tcurrentNode.classList.add('new-day');\n\t} else {\n\t\tcurrentNode.classList.remove('new-day');\n\t}\n\n\tif (nextNode && nextNode.dataset) {\n\t\tif (isSequential(nextNode, currentNode, forceDate, settings.Message_GroupingPeriod, showDateSeparator, shouldCollapseReplies)) {\n\t\t\tnextNode.classList.add('sequential');\n\t\t} else {\n\t\t\tnextNode.classList.remove('sequential');\n\t\t}\n\n\t\tif (isNewDay(nextNode, currentNode, forceDate, showDateSeparator)) {\n\t\t\tnextNode.classList.add('new-day');\n\t\t} else {\n\t\t\tnextNode.classList.remove('new-day');\n\t\t}\n\t}\n};\n\nTemplate.message.onRendered(function () {\n\tconst currentNode = this.firstNode;\n\tthis.autorun(() => processSequentials({ currentNode, ...Template.currentData() }));\n});\n"]},"sourceType":"module","hash":"5bb9fec9704665e2edd84be8aceafbd42bdf17f6"}
