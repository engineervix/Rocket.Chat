{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/sodium-plus/lib/backend.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/client/sodium-plus/lib/backend.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/sodium-plus/lib/backend.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/sodium-plus/lib/backend.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/sodium-plus/lib/backend.js"}},"code":"!function (module1) {\n  var _regeneratorRuntime;\n\n  module1.link(\"@babel/runtime/regenerator\", {\n    default: function (v) {\n      _regeneratorRuntime = v;\n    }\n  }, 0);\n\n  var CryptographyKey = require('./cryptography-key');\n  /* istanbul ignore if */\n\n\n  if (typeof Buffer === 'undefined') {\n    var _Buffer = require('buffer/').Buffer;\n  }\n\n  module.exports = /*#__PURE__*/function () {\n    function Backend() {\n      // NOP\n      this.backendName = 'UndefinedBackend';\n    }\n    /**\n     * @param {CryptographyKey} sKey\n     * @param {CryptographyKey} pKey\n     * @return {Promise<CryptographyKey>}\n     */\n\n\n    var _proto = Backend.prototype;\n\n    _proto.crypto_box_keypair_from_secretkey_and_publickey = function () {\n      function crypto_box_keypair_from_secretkey_and_publickey(sKey, pKey) {\n        var keypair;\n        return _regeneratorRuntime.async(function () {\n          function crypto_box_keypair_from_secretkey_and_publickey$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(sKey.getLength() !== 32)) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  throw new Error('Secret key must be 32 bytes');\n\n                case 2:\n                  if (!(pKey.getLength() !== 32)) {\n                    _context.next = 4;\n                    break;\n                  }\n\n                  throw new Error('Public key must be 32 bytes');\n\n                case 4:\n                  keypair = Buffer.alloc(64);\n                  sKey.getBuffer().copy(keypair, 0, 0, 32);\n                  pKey.getBuffer().copy(keypair, 32, 0, 32);\n                  return _context.abrupt(\"return\", new CryptographyKey(Buffer.from(keypair)));\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }\n\n          return crypto_box_keypair_from_secretkey_and_publickey$;\n        }(), null, null, null, Promise);\n      }\n\n      return crypto_box_keypair_from_secretkey_and_publickey;\n    }();\n\n    return Backend;\n  }();\n}.call(this, module);","map":{"version":3,"sources":["imports/client/sodium-plus/lib/backend.js"],"names":["_regeneratorRuntime","module1","link","default","v","CryptographyKey","require","Buffer","module","exports","backendName","crypto_box_keypair_from_secretkey_and_publickey","sKey","pKey","getLength","Error","keypair","alloc","getBuffer","copy","from"],"mappings":";AAAA,MAAIA,mBAAJ;;AAAwBC,EAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb,EAA0C;AAACC,IAAAA,OAAO,EAAC,UAASC,CAAT,EAAW;AAACJ,MAAAA,mBAAmB,GAACI,CAApB;AAAsB;AAA3C,GAA1C,EAAuF,CAAvF;;AAAxB,MAAMC,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA/B;AACA;;;AACA,MAAI,OAAQC,MAAR,KAAoB,WAAxB,EAAqC;AACjC,QAAIA,OAAM,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAhC;AACH;;AAEDC,EAAAA,MAAM,CAACC,OAAP;AACI,uBAAc;AACV;AACA,WAAKC,WAAL,GAAmB,kBAAnB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AAVA;;AAAA,WAWUC,+CAXV;AAWI,+DAAsDC,IAAtD,EAA4DC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEQD,IAAI,CAACE,SAAL,OAAqB,EAF7B;AAAA;AAAA;AAAA;;AAAA,wBAGc,IAAIC,KAAJ,CAAU,6BAAV,CAHd;;AAAA;AAAA,wBAMQF,IAAI,CAACC,SAAL,OAAqB,EAN7B;AAAA;AAAA;AAAA;;AAAA,wBAOc,IAAIC,KAAJ,CAAU,6BAAV,CAPd;;AAAA;AASUC,kBAAAA,OATV,GASoBT,MAAM,CAACU,KAAP,CAAa,EAAb,CATpB;AAUIL,kBAAAA,IAAI,CAACM,SAAL,GAAiBC,IAAjB,CAAsBH,OAAtB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,EAArC;AACAH,kBAAAA,IAAI,CAACK,SAAL,GAAiBC,IAAjB,CAAsBH,OAAtB,EAA+B,EAA/B,EAAmC,CAAnC,EAAsC,EAAtC;AAXJ,mDAYW,IAAIX,eAAJ,CAAoBE,MAAM,CAACa,IAAP,CAAYJ,OAAZ,CAApB,CAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAXJ;AAAA;;AAAA;AAAA","sourcesContent":["const CryptographyKey = require('./cryptography-key');\n/* istanbul ignore if */\nif (typeof (Buffer) === 'undefined') {\n    let Buffer = require('buffer/').Buffer;\n}\n\nmodule.exports = class Backend {\n    constructor() {\n        // NOP\n        this.backendName = 'UndefinedBackend';\n    }\n\n    /**\n     * @param {CryptographyKey} sKey\n     * @param {CryptographyKey} pKey\n     * @return {Promise<CryptographyKey>}\n     */\n    async crypto_box_keypair_from_secretkey_and_publickey(sKey, pKey) {\n        /* istanbul ignore if */\n        if (sKey.getLength() !== 32) {\n            throw new Error('Secret key must be 32 bytes');\n        }\n        /* istanbul ignore if */\n        if (pKey.getLength() !== 32) {\n            throw new Error('Public key must be 32 bytes');\n        }\n        const keypair = Buffer.alloc(64);\n        sKey.getBuffer().copy(keypair, 0, 0, 32);\n        pKey.getBuffer().copy(keypair, 32, 0, 32);\n        return new CryptographyKey(Buffer.from(keypair));\n    }\n};\n"]},"sourceType":"module","hash":"48184bec6bb7859875ed0c84719ff12d7b7ec48b"}
