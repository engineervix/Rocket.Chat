{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/MessageAction.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-utils/client/lib/MessageAction.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/MessageAction.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/MessageAction.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/MessageAction.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  addMessageToList: () => addMessageToList,\n  MessageAction: () => MessageAction\n});\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet mem;\nmodule.link(\"mem\", {\n  default(v) {\n    mem = v;\n  }\n\n}, 3);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 4);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 5);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 6);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 7);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 8);\nlet messageArgs;\nmodule.link(\"./messageArgs\", {\n  messageArgs(v) {\n    messageArgs = v;\n  }\n\n}, 9);\nlet roomCoordinator;\nmodule.link(\"../../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 10);\nlet Messages, Rooms, Subscriptions;\nmodule.link(\"../../../models/client\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 11);\nlet hasAtLeastOnePermission, hasPermission;\nmodule.link(\"../../../authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 12);\nlet modal;\nmodule.link(\"./modal\", {\n  modal(v) {\n    modal = v;\n  }\n\n}, 13);\nlet imperativeModal;\nmodule.link(\"../../../../client/lib/imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n\n}, 14);\nlet ReactionList;\nmodule.link(\"../../../../client/views/room/modals/ReactionListModal\", {\n  default(v) {\n    ReactionList = v;\n  }\n\n}, 15);\nlet call;\nmodule.link(\"../../../../client/lib/utils/call\", {\n  call(v) {\n    call = v;\n  }\n\n}, 16);\nlet canDeleteMessage;\nmodule.link(\"../../../../client/lib/utils/canDeleteMessage\", {\n  canDeleteMessage(v) {\n    canDeleteMessage = v;\n  }\n\n}, 17);\nlet dispatchToastMessage;\nmodule.link(\"../../../../client/lib/toast\", {\n  dispatchToastMessage(v) {\n    dispatchToastMessage = v;\n  }\n\n}, 18);\n\nconst addMessageToList = (messagesList, message) => {\n  // checks if the message is not already on the list\n  if (!messagesList.find(_ref => {\n    let {\n      _id\n    } = _ref;\n    return _id === message._id;\n  })) {\n    messagesList.push(message);\n  }\n\n  return messagesList;\n};\n\nconst MessageAction = new class {\n  /*\n   \tconfig expects the following keys (only id is mandatory):\n   \t\tid (mandatory)\n   \t\ticon: string\n   \t\tlabel: string\n   \t\taction: function(event, instance)\n   \t\tcondition: function(message)\n  \t\torder: integer\n  \t\tgroup: string (message or menu)\n    */\n  constructor() {\n    this._getButtons = mem(function () {\n      return _.sortBy(_.toArray(this.buttons.get()), 'order');\n    });\n    this._getButtonsByGroup = mem(function (group) {\n      return this._getButtons().filter(button => Array.isArray(button.group) ? button.group.includes(group) : button.group === group);\n    });\n    this.buttons = new ReactiveVar({});\n  }\n\n  addButton(config) {\n    if (!config || !config.id) {\n      return false;\n    }\n\n    if (!config.group) {\n      config.group = 'menu';\n    }\n\n    if (config.condition) {\n      config.condition = mem(config.condition, {\n        maxAge: 1000,\n        cacheKey: JSON.stringify\n      });\n    }\n\n    return Tracker.nonreactive(() => {\n      const btns = this.buttons.get();\n      btns[config.id] = config;\n      mem.clear(this._getButtons);\n      mem.clear(this._getButtonsByGroup);\n      return this.buttons.set(btns);\n    });\n  }\n\n  removeButton(id) {\n    return Tracker.nonreactive(() => {\n      const btns = this.buttons.get();\n      delete btns[id];\n      mem.clear(this._getButtons);\n      mem.clear(this._getButtonsByGroup);\n      return this.buttons.set(btns);\n    });\n  }\n\n  updateButton(id, config) {\n    return Tracker.nonreactive(() => {\n      const btns = this.buttons.get();\n\n      if (btns[id]) {\n        btns[id] = _.extend(btns[id], config);\n        mem.clear(this._getButtons);\n        mem.clear(this._getButtonsByGroup);\n        return this.buttons.set(btns);\n      }\n    });\n  }\n\n  getButtonById(id) {\n    const allButtons = this.buttons.get();\n    return allButtons[id];\n  }\n\n  getButtons(message, context, group) {\n    const allButtons = group ? this._getButtonsByGroup(group) : this._getButtons();\n\n    if (message) {\n      return allButtons.filter(function (button) {\n        if (button.context == null || button.context.includes(context)) {\n          return button.condition == null || button.condition(message, context);\n        }\n\n        return false;\n      });\n    }\n\n    return allButtons;\n  }\n\n  resetButtons() {\n    mem.clear(this._getButtons);\n    mem.clear(this._getButtonsByGroup);\n    return this.buttons.set({});\n  }\n\n  async getPermaLink(msgId) {\n    if (!msgId) {\n      throw new Error('invalid-parameter');\n    }\n\n    const msg = Messages.findOne(msgId) || (await call('getSingleMessage', msgId));\n\n    if (!msg) {\n      throw new Error('message-not-found');\n    }\n\n    const roomData = Rooms.findOne({\n      _id: msg.rid\n    });\n\n    if (!roomData) {\n      throw new Error('room-not-found');\n    }\n\n    const subData = Subscriptions.findOne({\n      'rid': roomData._id,\n      'u._id': Meteor.userId()\n    });\n    const roomURL = roomCoordinator.getURL(roomData.t, subData || roomData);\n    return \"\".concat(roomURL, \"?msg=\").concat(msgId);\n  }\n\n}();\nMeteor.startup(async function () {\n  const {\n    chatMessages\n  } = await module.dynamicImport('../../../ui');\n\n  const getChatMessagesFrom = msg => {\n    const {\n      rid = Session.get('openedRoom'),\n      tmid = msg._id\n    } = msg;\n    return chatMessages[\"\".concat(rid, \"-\").concat(tmid)] || chatMessages[rid];\n  };\n\n  MessageAction.addButton({\n    id: 'reply-directly',\n    icon: 'reply-directly',\n    label: 'Reply_in_direct_message',\n    context: ['message', 'message-mobile', 'threads'],\n\n    action() {\n      const {\n        msg\n      } = messageArgs(this);\n      roomCoordinator.openRouteLink('d', {\n        name: msg.u.username\n      }, _objectSpread(_objectSpread({}, FlowRouter.current().queryParams), {}, {\n        reply: msg._id\n      }));\n    },\n\n    condition(_ref2) {\n      let {\n        subscription,\n        room,\n        msg,\n        u\n      } = _ref2;\n\n      if (subscription == null) {\n        return false;\n      }\n\n      if (room.t === 'd' || room.t === 'l') {\n        return false;\n      } // Check if we already have a DM started with the message user (not ourselves) or we can start one\n\n\n      if (u._id !== msg.u._id && !hasPermission('create-d')) {\n        const dmRoom = Rooms.findOne({\n          _id: [u._id, msg.u._id].sort().join('')\n        });\n\n        if (!dmRoom || !Subscriptions.findOne({\n          'rid': dmRoom._id,\n          'u._id': u._id\n        })) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    order: 0,\n    group: 'menu'\n  });\n  MessageAction.addButton({\n    id: 'quote-message',\n    icon: 'quote',\n    label: 'Quote',\n    context: ['message', 'message-mobile', 'threads'],\n\n    action() {\n      const {\n        msg: message\n      } = messageArgs(this);\n      const {\n        input\n      } = getChatMessagesFrom(message);\n      const $input = $(input);\n      let messages = $input.data('reply') || [];\n      messages = addMessageToList(messages, message, input);\n      $input.focus().data('mention-user', false).data('reply', messages).trigger('dataChange');\n    },\n\n    condition(_ref3) {\n      let {\n        subscription,\n        room\n      } = _ref3;\n\n      if (subscription == null) {\n        return false;\n      }\n\n      const isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\n      if (isLivechatRoom) {\n        return false;\n      }\n\n      return true;\n    },\n\n    order: -3,\n    group: ['message', 'menu']\n  });\n  MessageAction.addButton({\n    id: 'permalink',\n    icon: 'permalink',\n    label: 'Get_link',\n    classes: 'clipboard',\n    context: ['message', 'message-mobile', 'threads'],\n\n    async action() {\n      const {\n        msg: message\n      } = messageArgs(this);\n      const permalink = await MessageAction.getPermaLink(message._id);\n      navigator.clipboard.writeText(permalink);\n      dispatchToastMessage({\n        type: 'success',\n        message: TAPi18n.__('Copied')\n      });\n    },\n\n    condition(_ref4) {\n      let {\n        subscription\n      } = _ref4;\n      return !!subscription;\n    },\n\n    order: 4,\n    group: 'menu'\n  });\n  MessageAction.addButton({\n    id: 'copy',\n    icon: 'copy',\n    label: 'Copy',\n    classes: 'clipboard',\n    context: ['message', 'message-mobile', 'threads'],\n\n    action() {\n      const {\n        msg: {\n          msg\n        }\n      } = messageArgs(this);\n      navigator.clipboard.writeText(msg);\n      dispatchToastMessage({\n        type: 'success',\n        message: TAPi18n.__('Copied')\n      });\n    },\n\n    condition(_ref5) {\n      let {\n        subscription\n      } = _ref5;\n      return !!subscription;\n    },\n\n    order: 5,\n    group: 'menu'\n  });\n  MessageAction.addButton({\n    id: 'edit-message',\n    icon: 'edit',\n    label: 'Edit',\n    context: ['message', 'message-mobile', 'threads'],\n\n    action() {\n      const {\n        msg\n      } = messageArgs(this);\n      getChatMessagesFrom(msg).edit(document.getElementById(msg.tmid ? \"thread-\".concat(msg._id) : msg._id));\n    },\n\n    condition(_ref6) {\n      let {\n        msg: message,\n        subscription,\n        settings\n      } = _ref6;\n\n      if (subscription == null) {\n        return false;\n      }\n\n      const hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n      const isEditAllowed = settings.Message_AllowEditing;\n      const editOwn = message.u && message.u._id === Meteor.userId();\n\n      if (!(hasPermission || isEditAllowed && editOwn)) {\n        return;\n      }\n\n      const blockEditInMinutes = settings.Message_AllowEditing_BlockEditInMinutes;\n\n      if (blockEditInMinutes) {\n        let msgTs;\n\n        if (message.ts != null) {\n          msgTs = moment(message.ts);\n        }\n\n        let currentTsDiff;\n\n        if (msgTs != null) {\n          currentTsDiff = moment().diff(msgTs, 'minutes');\n        }\n\n        return currentTsDiff < blockEditInMinutes;\n      }\n\n      return true;\n    },\n\n    order: 6,\n    group: 'menu'\n  });\n  MessageAction.addButton({\n    id: 'delete-message',\n    icon: 'trash',\n    label: 'Delete',\n    context: ['message', 'message-mobile', 'threads'],\n    color: 'alert',\n\n    action() {\n      const {\n        msg\n      } = messageArgs(this);\n      getChatMessagesFrom(msg).confirmDeleteMsg(msg);\n    },\n\n    condition(_ref7) {\n      let {\n        msg: message,\n        subscription,\n        room\n      } = _ref7;\n\n      if (!subscription) {\n        return false;\n      }\n\n      const isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\n      if (isLivechatRoom) {\n        return false;\n      }\n\n      return canDeleteMessage({\n        rid: message.rid,\n        ts: message.ts,\n        uid: message.u._id\n      });\n    },\n\n    order: 18,\n    group: 'menu'\n  });\n  MessageAction.addButton({\n    id: 'report-message',\n    icon: 'report',\n    label: 'Report',\n    context: ['message', 'message-mobile', 'threads'],\n    color: 'alert',\n\n    action() {\n      const {\n        msg: message\n      } = messageArgs(this);\n      modal.open({\n        title: TAPi18n.__('Report_this_message_question_mark'),\n        text: message.msg,\n        inputPlaceholder: TAPi18n.__('Why_do_you_want_to_report_question_mark'),\n        type: 'input',\n        showCancelButton: true,\n        confirmButtonColor: '#DD6B55',\n        confirmButtonText: TAPi18n.__('Report_exclamation_mark'),\n        cancelButtonText: TAPi18n.__('Cancel'),\n        closeOnConfirm: false,\n        html: false\n      }, inputValue => {\n        if (inputValue === false) {\n          return false;\n        }\n\n        if (!inputValue.trim()) {\n          modal.showInputError(TAPi18n.__('You_need_to_write_something'));\n          return false;\n        }\n\n        Meteor.call('reportMessage', message._id, inputValue);\n        modal.open({\n          title: TAPi18n.__('Report_sent'),\n          text: TAPi18n.__('Thank_you_exclamation_mark'),\n          type: 'success',\n          timer: 1000,\n          showConfirmButton: false\n        });\n      });\n    },\n\n    condition(_ref8) {\n      let {\n        subscription,\n        room\n      } = _ref8;\n      const isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\n      if (isLivechatRoom) {\n        return false;\n      }\n\n      return Boolean(subscription);\n    },\n\n    order: 17,\n    group: 'menu'\n  });\n  MessageAction.addButton({\n    id: 'reaction-list',\n    icon: 'emoji',\n    label: 'Reactions',\n    context: ['message', 'message-mobile', 'threads'],\n\n    action(_, _ref9) {\n      let {\n        tabBar,\n        rid\n      } = _ref9;\n      const {\n        msg: {\n          reactions\n        }\n      } = messageArgs(this);\n      imperativeModal.open({\n        component: ReactionList,\n        props: {\n          reactions,\n          rid,\n          tabBar,\n          onClose: imperativeModal.close\n        }\n      });\n    },\n\n    condition(_ref10) {\n      let {\n        msg: {\n          reactions\n        }\n      } = _ref10;\n      return !!reactions;\n    },\n\n    order: 18,\n    group: 'menu'\n  });\n});","map":{"version":3,"sources":["app/ui-utils/client/lib/MessageAction.js"],"names":["_objectSpread","module","link","default","v","export","addMessageToList","MessageAction","_","FlowRouter","moment","mem","Meteor","TAPi18n","ReactiveVar","Tracker","Session","messageArgs","roomCoordinator","Messages","Rooms","Subscriptions","hasAtLeastOnePermission","hasPermission","modal","imperativeModal","ReactionList","call","canDeleteMessage","dispatchToastMessage","messagesList","message","find","_id","push","constructor","_getButtons","sortBy","toArray","buttons","get","_getButtonsByGroup","group","filter","button","Array","isArray","includes","addButton","config","id","condition","maxAge","cacheKey","JSON","stringify","nonreactive","btns","clear","set","removeButton","updateButton","extend","getButtonById","allButtons","getButtons","context","resetButtons","getPermaLink","msgId","Error","msg","findOne","roomData","rid","subData","userId","roomURL","getURL","t","startup","chatMessages","getChatMessagesFrom","tmid","icon","label","action","openRouteLink","name","u","username","current","queryParams","reply","subscription","room","dmRoom","sort","join","order","input","$input","$","messages","data","focus","trigger","isLivechatRoom","classes","permalink","navigator","clipboard","writeText","type","__","edit","document","getElementById","settings","isEditAllowed","Message_AllowEditing","editOwn","blockEditInMinutes","Message_AllowEditing_BlockEditInMinutes","msgTs","ts","currentTsDiff","diff","color","confirmDeleteMsg","uid","open","title","text","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","cancelButtonText","closeOnConfirm","html","inputValue","trim","showInputError","timer","showConfirmButton","Boolean","tabBar","reactions","component","props","onClose","close"],"mappings":"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","sourcesContent":["import _ from 'underscore';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport moment from 'moment';\nimport mem from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport { Session } from 'meteor/session';\n\nimport { messageArgs } from './messageArgs';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport { Messages, Rooms, Subscriptions } from '../../../models/client';\nimport { hasAtLeastOnePermission, hasPermission } from '../../../authorization/client';\nimport { modal } from './modal';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport ReactionList from '../../../../client/views/room/modals/ReactionListModal';\nimport { call } from '../../../../client/lib/utils/call';\nimport { canDeleteMessage } from '../../../../client/lib/utils/canDeleteMessage';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\n\nexport const addMessageToList = (messagesList, message) => {\n\t// checks if the message is not already on the list\n\tif (!messagesList.find(({ _id }) => _id === message._id)) {\n\t\tmessagesList.push(message);\n\t}\n\n\treturn messagesList;\n};\n\nexport const MessageAction = new (class {\n\t/*\n  \tconfig expects the following keys (only id is mandatory):\n  \t\tid (mandatory)\n  \t\ticon: string\n  \t\tlabel: string\n  \t\taction: function(event, instance)\n  \t\tcondition: function(message)\n\t\t\torder: integer\n\t\t\tgroup: string (message or menu)\n   */\n\n\tconstructor() {\n\t\tthis.buttons = new ReactiveVar({});\n\t}\n\n\taddButton(config) {\n\t\tif (!config || !config.id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!config.group) {\n\t\t\tconfig.group = 'menu';\n\t\t}\n\n\t\tif (config.condition) {\n\t\t\tconfig.condition = mem(config.condition, { maxAge: 1000, cacheKey: JSON.stringify });\n\t\t}\n\n\t\treturn Tracker.nonreactive(() => {\n\t\t\tconst btns = this.buttons.get();\n\t\t\tbtns[config.id] = config;\n\t\t\tmem.clear(this._getButtons);\n\t\t\tmem.clear(this._getButtonsByGroup);\n\t\t\treturn this.buttons.set(btns);\n\t\t});\n\t}\n\n\tremoveButton(id) {\n\t\treturn Tracker.nonreactive(() => {\n\t\t\tconst btns = this.buttons.get();\n\t\t\tdelete btns[id];\n\t\t\tmem.clear(this._getButtons);\n\t\t\tmem.clear(this._getButtonsByGroup);\n\t\t\treturn this.buttons.set(btns);\n\t\t});\n\t}\n\n\tupdateButton(id, config) {\n\t\treturn Tracker.nonreactive(() => {\n\t\t\tconst btns = this.buttons.get();\n\t\t\tif (btns[id]) {\n\t\t\t\tbtns[id] = _.extend(btns[id], config);\n\t\t\t\tmem.clear(this._getButtons);\n\t\t\t\tmem.clear(this._getButtonsByGroup);\n\t\t\t\treturn this.buttons.set(btns);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetButtonById(id) {\n\t\tconst allButtons = this.buttons.get();\n\t\treturn allButtons[id];\n\t}\n\n\t_getButtons = mem(function () {\n\t\treturn _.sortBy(_.toArray(this.buttons.get()), 'order');\n\t});\n\n\t_getButtonsByGroup = mem(function (group) {\n\t\treturn this._getButtons().filter((button) => (Array.isArray(button.group) ? button.group.includes(group) : button.group === group));\n\t});\n\n\tgetButtons(message, context, group) {\n\t\tconst allButtons = group ? this._getButtonsByGroup(group) : this._getButtons();\n\n\t\tif (message) {\n\t\t\treturn allButtons.filter(function (button) {\n\t\t\t\tif (button.context == null || button.context.includes(context)) {\n\t\t\t\t\treturn button.condition == null || button.condition(message, context);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t\treturn allButtons;\n\t}\n\n\tresetButtons() {\n\t\tmem.clear(this._getButtons);\n\t\tmem.clear(this._getButtonsByGroup);\n\t\treturn this.buttons.set({});\n\t}\n\n\tasync getPermaLink(msgId) {\n\t\tif (!msgId) {\n\t\t\tthrow new Error('invalid-parameter');\n\t\t}\n\n\t\tconst msg = Messages.findOne(msgId) || (await call('getSingleMessage', msgId));\n\t\tif (!msg) {\n\t\t\tthrow new Error('message-not-found');\n\t\t}\n\t\tconst roomData = Rooms.findOne({\n\t\t\t_id: msg.rid,\n\t\t});\n\n\t\tif (!roomData) {\n\t\t\tthrow new Error('room-not-found');\n\t\t}\n\n\t\tconst subData = Subscriptions.findOne({ 'rid': roomData._id, 'u._id': Meteor.userId() });\n\t\tconst roomURL = roomCoordinator.getURL(roomData.t, subData || roomData);\n\t\treturn `${roomURL}?msg=${msgId}`;\n\t}\n})();\n\nMeteor.startup(async function () {\n\tconst { chatMessages } = await import('../../../ui');\n\n\tconst getChatMessagesFrom = (msg) => {\n\t\tconst { rid = Session.get('openedRoom'), tmid = msg._id } = msg;\n\n\t\treturn chatMessages[`${rid}-${tmid}`] || chatMessages[rid];\n\t};\n\n\tMessageAction.addButton({\n\t\tid: 'reply-directly',\n\t\ticon: 'reply-directly',\n\t\tlabel: 'Reply_in_direct_message',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst { msg } = messageArgs(this);\n\t\t\troomCoordinator.openRouteLink(\n\t\t\t\t'd',\n\t\t\t\t{ name: msg.u.username },\n\t\t\t\t{\n\t\t\t\t\t...FlowRouter.current().queryParams,\n\t\t\t\t\treply: msg._id,\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t\tcondition({ subscription, room, msg, u }) {\n\t\t\tif (subscription == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (room.t === 'd' || room.t === 'l') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check if we already have a DM started with the message user (not ourselves) or we can start one\n\t\t\tif (u._id !== msg.u._id && !hasPermission('create-d')) {\n\t\t\t\tconst dmRoom = Rooms.findOne({ _id: [u._id, msg.u._id].sort().join('') });\n\t\t\t\tif (!dmRoom || !Subscriptions.findOne({ 'rid': dmRoom._id, 'u._id': u._id })) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\torder: 0,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'quote-message',\n\t\ticon: 'quote',\n\t\tlabel: 'Quote',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst { msg: message } = messageArgs(this);\n\t\t\tconst { input } = getChatMessagesFrom(message);\n\t\t\tconst $input = $(input);\n\n\t\t\tlet messages = $input.data('reply') || [];\n\n\t\t\tmessages = addMessageToList(messages, message, input);\n\n\t\t\t$input.focus().data('mention-user', false).data('reply', messages).trigger('dataChange');\n\t\t},\n\t\tcondition({ subscription, room }) {\n\t\t\tif (subscription == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\t\t\tif (isLivechatRoom) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\torder: -3,\n\t\tgroup: ['message', 'menu'],\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'permalink',\n\t\ticon: 'permalink',\n\t\tlabel: 'Get_link',\n\t\tclasses: 'clipboard',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\tasync action() {\n\t\t\tconst { msg: message } = messageArgs(this);\n\t\t\tconst permalink = await MessageAction.getPermaLink(message._id);\n\t\t\tnavigator.clipboard.writeText(permalink);\n\t\t\tdispatchToastMessage({ type: 'success', message: TAPi18n.__('Copied') });\n\t\t},\n\t\tcondition({ subscription }) {\n\t\t\treturn !!subscription;\n\t\t},\n\t\torder: 4,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'copy',\n\t\ticon: 'copy',\n\t\tlabel: 'Copy',\n\t\tclasses: 'clipboard',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst {\n\t\t\t\tmsg: { msg },\n\t\t\t} = messageArgs(this);\n\t\t\tnavigator.clipboard.writeText(msg);\n\t\t\tdispatchToastMessage({ type: 'success', message: TAPi18n.__('Copied') });\n\t\t},\n\t\tcondition({ subscription }) {\n\t\t\treturn !!subscription;\n\t\t},\n\t\torder: 5,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'edit-message',\n\t\ticon: 'edit',\n\t\tlabel: 'Edit',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction() {\n\t\t\tconst { msg } = messageArgs(this);\n\t\t\tgetChatMessagesFrom(msg).edit(document.getElementById(msg.tmid ? `thread-${msg._id}` : msg._id));\n\t\t},\n\t\tcondition({ msg: message, subscription, settings }) {\n\t\t\tif (subscription == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst hasPermission = hasAtLeastOnePermission('edit-message', message.rid);\n\t\t\tconst isEditAllowed = settings.Message_AllowEditing;\n\t\t\tconst editOwn = message.u && message.u._id === Meteor.userId();\n\t\t\tif (!(hasPermission || (isEditAllowed && editOwn))) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst blockEditInMinutes = settings.Message_AllowEditing_BlockEditInMinutes;\n\t\t\tif (blockEditInMinutes) {\n\t\t\t\tlet msgTs;\n\t\t\t\tif (message.ts != null) {\n\t\t\t\t\tmsgTs = moment(message.ts);\n\t\t\t\t}\n\t\t\t\tlet currentTsDiff;\n\t\t\t\tif (msgTs != null) {\n\t\t\t\t\tcurrentTsDiff = moment().diff(msgTs, 'minutes');\n\t\t\t\t}\n\t\t\t\treturn currentTsDiff < blockEditInMinutes;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\torder: 6,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'delete-message',\n\t\ticon: 'trash',\n\t\tlabel: 'Delete',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\tcolor: 'alert',\n\t\taction() {\n\t\t\tconst { msg } = messageArgs(this);\n\t\t\tgetChatMessagesFrom(msg).confirmDeleteMsg(msg);\n\t\t},\n\t\tcondition({ msg: message, subscription, room }) {\n\t\t\tif (!subscription) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\t\t\tif (isLivechatRoom) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn canDeleteMessage({\n\t\t\t\trid: message.rid,\n\t\t\t\tts: message.ts,\n\t\t\t\tuid: message.u._id,\n\t\t\t});\n\t\t},\n\t\torder: 18,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'report-message',\n\t\ticon: 'report',\n\t\tlabel: 'Report',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\tcolor: 'alert',\n\t\taction() {\n\t\t\tconst { msg: message } = messageArgs(this);\n\t\t\tmodal.open(\n\t\t\t\t{\n\t\t\t\t\ttitle: TAPi18n.__('Report_this_message_question_mark'),\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t\tinputPlaceholder: TAPi18n.__('Why_do_you_want_to_report_question_mark'),\n\t\t\t\t\ttype: 'input',\n\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\tconfirmButtonColor: '#DD6B55',\n\t\t\t\t\tconfirmButtonText: TAPi18n.__('Report_exclamation_mark'),\n\t\t\t\t\tcancelButtonText: TAPi18n.__('Cancel'),\n\t\t\t\t\tcloseOnConfirm: false,\n\t\t\t\t\thtml: false,\n\t\t\t\t},\n\t\t\t\t(inputValue) => {\n\t\t\t\t\tif (inputValue === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!inputValue.trim()) {\n\t\t\t\t\t\tmodal.showInputError(TAPi18n.__('You_need_to_write_something'));\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tMeteor.call('reportMessage', message._id, inputValue);\n\n\t\t\t\t\tmodal.open({\n\t\t\t\t\t\ttitle: TAPi18n.__('Report_sent'),\n\t\t\t\t\t\ttext: TAPi18n.__('Thank_you_exclamation_mark'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttimer: 1000,\n\t\t\t\t\t\tshowConfirmButton: false,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t\tcondition({ subscription, room }) {\n\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room.t);\n\t\t\tif (isLivechatRoom) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Boolean(subscription);\n\t\t},\n\t\torder: 17,\n\t\tgroup: 'menu',\n\t});\n\n\tMessageAction.addButton({\n\t\tid: 'reaction-list',\n\t\ticon: 'emoji',\n\t\tlabel: 'Reactions',\n\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\taction(_, { tabBar, rid }) {\n\t\t\tconst {\n\t\t\t\tmsg: { reactions },\n\t\t\t} = messageArgs(this);\n\n\t\t\timperativeModal.open({\n\t\t\t\tcomponent: ReactionList,\n\t\t\t\tprops: { reactions, rid, tabBar, onClose: imperativeModal.close },\n\t\t\t});\n\t\t},\n\t\tcondition({ msg: { reactions } }) {\n\t\t\treturn !!reactions;\n\t\t},\n\t\torder: 18,\n\t\tgroup: 'menu',\n\t});\n});\n"]},"sourceType":"module","hash":"7c75d2592d28983206d3b56795620077339fc89c"}
