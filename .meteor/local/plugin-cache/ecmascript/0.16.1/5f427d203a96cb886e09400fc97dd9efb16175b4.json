{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/@rocket.chat/apps-engine/definition/uikit/blocks/BlockBuilder.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/client/@rocket.chat/apps-engine/definition/uikit/blocks/BlockBuilder.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/@rocket.chat/apps-engine/definition/uikit/blocks/BlockBuilder.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/@rocket.chat/apps-engine/definition/uikit/blocks/BlockBuilder.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/@rocket.chat/apps-engine/definition/uikit/blocks/BlockBuilder.js"}},"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlockBuilder = void 0;\n\nconst uuid = require(\"uuid/v1\");\n\nconst Blocks_1 = require(\"./Blocks\");\n\nconst Elements_1 = require(\"./Elements\");\n\nconst Objects_1 = require(\"./Objects\");\n\nclass BlockBuilder {\n  constructor(appId) {\n    this.appId = appId;\n    this.blocks = [];\n  }\n\n  addSectionBlock(block) {\n    this.addBlock(Object.assign({\n      type: Blocks_1.BlockType.SECTION\n    }, block));\n    return this;\n  }\n\n  addImageBlock(block) {\n    this.addBlock(Object.assign({\n      type: Blocks_1.BlockType.IMAGE\n    }, block));\n    return this;\n  }\n\n  addDividerBlock() {\n    this.addBlock({\n      type: Blocks_1.BlockType.DIVIDER\n    });\n    return this;\n  }\n\n  addActionsBlock(block) {\n    this.addBlock(Object.assign({\n      type: Blocks_1.BlockType.ACTIONS\n    }, block));\n    return this;\n  }\n\n  addContextBlock(block) {\n    this.addBlock(Object.assign({\n      type: Blocks_1.BlockType.CONTEXT\n    }, block));\n    return this;\n  }\n\n  addInputBlock(block) {\n    this.addBlock(Object.assign({\n      type: Blocks_1.BlockType.INPUT\n    }, block));\n    return this;\n  }\n\n  addConditionalBlock(innerBlocks, condition) {\n    const render = innerBlocks instanceof BlockBuilder ? innerBlocks.getBlocks() : innerBlocks;\n    this.addBlock({\n      type: Blocks_1.BlockType.CONDITIONAL,\n      render,\n      when: condition\n    });\n    return this;\n  }\n\n  getBlocks() {\n    return this.blocks;\n  }\n\n  newPlainTextObject(text) {\n    let emoji = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return {\n      type: Objects_1.TextObjectType.PLAINTEXT,\n      text,\n      emoji\n    };\n  }\n\n  newMarkdownTextObject(text) {\n    return {\n      type: Objects_1.TextObjectType.MARKDOWN,\n      text\n    };\n  }\n\n  newButtonElement(info) {\n    return this.newInteractiveElement(Object.assign({\n      type: Elements_1.BlockElementType.BUTTON\n    }, info));\n  }\n\n  newImageElement(info) {\n    return Object.assign({\n      type: Elements_1.BlockElementType.IMAGE\n    }, info);\n  }\n\n  newOverflowMenuElement(info) {\n    return this.newInteractiveElement(Object.assign({\n      type: Elements_1.BlockElementType.OVERFLOW_MENU\n    }, info));\n  }\n\n  newPlainTextInputElement(info) {\n    return this.newInputElement(Object.assign({\n      type: Elements_1.BlockElementType.PLAIN_TEXT_INPUT\n    }, info));\n  }\n\n  newStaticSelectElement(info) {\n    return this.newSelectElement(Object.assign({\n      type: Elements_1.BlockElementType.STATIC_SELECT\n    }, info));\n  }\n\n  newMultiStaticElement(info) {\n    return this.newSelectElement(Object.assign({\n      type: Elements_1.BlockElementType.MULTI_STATIC_SELECT\n    }, info));\n  }\n\n  newInteractiveElement(element) {\n    if (!element.actionId) {\n      element.actionId = this.generateActionId();\n    }\n\n    return element;\n  }\n\n  newInputElement(element) {\n    if (!element.actionId) {\n      element.actionId = this.generateActionId();\n    }\n\n    return element;\n  }\n\n  newSelectElement(element) {\n    if (!element.actionId) {\n      element.actionId = this.generateActionId();\n    }\n\n    return element;\n  }\n\n  addBlock(block) {\n    if (!block.blockId) {\n      block.blockId = this.generateBlockId();\n    }\n\n    block.appId = this.appId;\n    this.blocks.push(block);\n  }\n\n  generateBlockId() {\n    return uuid();\n  }\n\n  generateActionId() {\n    return uuid();\n  }\n\n}\n\nexports.BlockBuilder = BlockBuilder;","map":{"version":3,"sources":["src/definition/uikit/blocks/BlockBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import * as uuid from 'uuid/v1';\nimport { Omit } from '../../../lib/utils';\nimport { BlockType, IActionsBlock, IBlock, IConditionalBlock, IConditionalBlockFilters, IContextBlock, IImageBlock, IInputBlock, ISectionBlock } from './Blocks';\nimport {\n    BlockElementType,\n    IBlockElement,\n    IButtonElement,\n    IImageElement,\n    IInputElement,\n    IInteractiveElement,\n    IMultiStaticSelectElement,\n    IOverflowMenuElement,\n    IPlainTextInputElement,\n    ISelectElement,\n    IStaticSelectElement,\n} from './Elements';\nimport { ITextObject, TextObjectType } from './Objects';\n\ntype BlockFunctionParameter<T extends IBlock> = Omit<T, 'type'>;\ntype ElementFunctionParameter<T extends IBlockElement> = T extends IInteractiveElement\n    ? Omit<T, 'type' | 'actionId'> | Partial<Pick<T, 'actionId'>> : Omit<T, 'type'>;\n\ntype SectionBlockParam = BlockFunctionParameter<ISectionBlock>;\ntype ImageBlockParam = BlockFunctionParameter<IImageBlock>;\ntype ActionsBlockParam = BlockFunctionParameter<IActionsBlock>;\ntype ContextBlockParam = BlockFunctionParameter<IContextBlock>;\ntype InputBlockParam = BlockFunctionParameter<IInputBlock>;\n\ntype ButtonElementParam = ElementFunctionParameter<IButtonElement>;\ntype ImageElementParam = ElementFunctionParameter<IImageElement>;\ntype OverflowMenuElementParam = ElementFunctionParameter<IOverflowMenuElement>;\ntype PlainTextInputElementParam = ElementFunctionParameter<IPlainTextInputElement>;\ntype StaticSelectElementParam = ElementFunctionParameter<IStaticSelectElement>;\ntype MultiStaticSelectElementParam = ElementFunctionParameter<IMultiStaticSelectElement>;\n\nexport class BlockBuilder {\n    private readonly blocks: Array<IBlock>;\n\n    constructor(private readonly appId: string) {\n        this.blocks = [];\n    }\n\n    public addSectionBlock(block: SectionBlockParam): BlockBuilder {\n        this.addBlock({ type: BlockType.SECTION, ...block } as ISectionBlock);\n\n        return this;\n    }\n\n    public addImageBlock(block: ImageBlockParam): BlockBuilder {\n        this.addBlock({ type: BlockType.IMAGE, ...block } as IImageBlock);\n\n        return this;\n    }\n\n    public addDividerBlock(): BlockBuilder {\n        this.addBlock({ type: BlockType.DIVIDER });\n\n        return this;\n    }\n\n    public addActionsBlock(block: ActionsBlockParam): BlockBuilder {\n        this.addBlock({ type: BlockType.ACTIONS, ...block } as IActionsBlock);\n\n        return this;\n    }\n\n    public addContextBlock(block: ContextBlockParam): BlockBuilder {\n        this.addBlock({ type: BlockType.CONTEXT, ...block } as IContextBlock);\n\n        return this;\n    }\n\n    public addInputBlock(block: InputBlockParam): BlockBuilder {\n        this.addBlock({ type: BlockType.INPUT, ...block } as IInputBlock);\n\n        return this;\n    }\n\n    public addConditionalBlock(innerBlocks: BlockBuilder | Array<IBlock>, condition?: IConditionalBlockFilters): BlockBuilder {\n        const render = innerBlocks instanceof BlockBuilder ? innerBlocks.getBlocks() : innerBlocks;\n\n        this.addBlock({ type: BlockType.CONDITIONAL, render, when: condition } as IConditionalBlock);\n\n        return this;\n    }\n\n    public getBlocks() {\n        return this.blocks;\n    }\n\n    public newPlainTextObject(text: string, emoji: boolean = false): ITextObject {\n        return {\n            type: TextObjectType.PLAINTEXT,\n            text,\n            emoji,\n        };\n    }\n\n    public newMarkdownTextObject(text: string): ITextObject {\n        return {\n            type: TextObjectType.MARKDOWN,\n            text,\n        };\n    }\n\n    public newButtonElement(info: ButtonElementParam): IButtonElement {\n        return this.newInteractiveElement({\n            type: BlockElementType.BUTTON,\n            ...info,\n        } as IButtonElement);\n    }\n\n    public newImageElement(info: ImageElementParam): IImageElement {\n        return {\n            type: BlockElementType.IMAGE,\n            ...info,\n       };\n    }\n\n    public newOverflowMenuElement(info: OverflowMenuElementParam): IOverflowMenuElement {\n        return this.newInteractiveElement({\n            type: BlockElementType.OVERFLOW_MENU,\n            ...info,\n        } as IOverflowMenuElement);\n    }\n\n    public newPlainTextInputElement(info: PlainTextInputElementParam): IPlainTextInputElement {\n        return this.newInputElement({\n            type: BlockElementType.PLAIN_TEXT_INPUT,\n            ...info,\n        } as IPlainTextInputElement);\n    }\n\n    public newStaticSelectElement(info: StaticSelectElementParam): IStaticSelectElement {\n        return this.newSelectElement({\n            type: BlockElementType.STATIC_SELECT,\n            ...info,\n        } as IStaticSelectElement);\n    }\n\n    public newMultiStaticElement(info: MultiStaticSelectElementParam): IMultiStaticSelectElement {\n        return this.newSelectElement({\n            type: BlockElementType.MULTI_STATIC_SELECT,\n            ...info,\n        } as IMultiStaticSelectElement);\n    }\n\n    private newInteractiveElement<T extends IInteractiveElement>(element: T): T {\n        if (!element.actionId) {\n            element.actionId = this.generateActionId();\n        }\n\n        return element;\n    }\n\n    private newInputElement<T extends IInputElement>(element: T): T {\n        if (!element.actionId) {\n            element.actionId = this.generateActionId();\n        }\n\n        return element;\n    }\n\n    private newSelectElement<T extends ISelectElement>(element: T): T {\n        if (!element.actionId) {\n            element.actionId = this.generateActionId();\n        }\n\n        return element;\n    }\n\n    private addBlock(block: IBlock): void {\n        if (!block.blockId) {\n            block.blockId = this.generateBlockId();\n        }\n\n        block.appId = this.appId;\n\n        this.blocks.push(block);\n    }\n\n    private generateBlockId(): string {\n        return uuid();\n    }\n\n    private generateActionId(): string {\n        return uuid();\n    }\n}\n"]},"sourceType":"module","hash":"5f427d203a96cb886e09400fc97dd9efb16175b4"}
