{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/models/client/models/Users.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/models/client/models/Users.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/models/client/models/Users.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/models/client/models/Users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/client/models/Users.js"}},"code":"module.export({\n  Users: function () {\n    return Users;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar Users = {\n  findOneById: function (userId) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var query = {\n      _id: userId\n    };\n    return this.findOne(query, options);\n  },\n\n  /**\n   * @param {string} userId\n   * @param {IRole['_id']} roleId\n   */\n  isUserInRole: function (userId, roleId) {\n    var user = this.findOneById(userId, {\n      fields: {\n        roles: 1\n      }\n    });\n    return user && Array.isArray(user.roles) && user.roles.includes(roleId);\n  },\n\n  /**\n   * @param {IRole['_id'][]} roles the list of role ids\n   * @param {string} scope the value for the scope (room id)\n   * @param {any} options\n   */\n  findUsersInRoles: function (roles, scope, options) {\n    roles = [].concat(roles);\n    var query = {\n      roles: {\n        $in: roles\n      }\n    };\n    return this.find(query, options);\n  }\n};\n// overwrite Meteor.users collection so records on it don't get erased whenever the client reconnects to websocket\nMeteor.users = new Mongo.Collection(null);\n\nMeteor.user = function () {\n  return Meteor.users.findOne({\n    _id: Meteor.userId()\n  });\n};","map":{"version":3,"sources":["app/models/client/models/Users.js"],"names":["module","export","Users","Meteor","link","v","Mongo","findOneById","userId","options","query","_id","findOne","isUserInRole","roleId","user","fields","roles","Array","isArray","includes","findUsersInRoles","scope","concat","$in","find","users","Collection"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,KAAK,EAAC,YAAU;AAAC,WAAOA,KAAP;AAAa;AAA/B,CAAd;AAAgD,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,EAAC,UAASE,CAAT,EAAW;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIC,KAAJ;AAAUN,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACE,EAAAA,KAAK,EAAC,UAASD,CAAT,EAAW;AAACC,IAAAA,KAAK,GAACD,CAAN;AAAQ;AAA3B,CAA3B,EAAwD,CAAxD;AAG5H,IAAMH,KAAK,GAAG;AACpBK,EAAAA,WADoB,YACRC,MADQ,EACc;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACjC,QAAMC,KAAK,GAAG;AACbC,MAAAA,GAAG,EAAEH;AADQ,KAAd;AAIA,WAAO,KAAKI,OAAL,CAAaF,KAAb,EAAoBD,OAApB,CAAP;AACA,GAPmB;;AASpB;AACD;AACA;AACA;AACCI,EAAAA,YAboB,YAaPL,MAbO,EAaCM,MAbD,EAaS;AAC5B,QAAMC,IAAI,GAAG,KAAKR,WAAL,CAAiBC,MAAjB,EAAyB;AAAEQ,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAV,KAAzB,CAAb;AACA,WAAOF,IAAI,IAAIG,KAAK,CAACC,OAAN,CAAcJ,IAAI,CAACE,KAAnB,CAAR,IAAqCF,IAAI,CAACE,KAAL,CAAWG,QAAX,CAAoBN,MAApB,CAA5C;AACA,GAhBmB;;AAkBpB;AACD;AACA;AACA;AACA;AACCO,EAAAA,gBAvBoB,YAuBHJ,KAvBG,EAuBIK,KAvBJ,EAuBWb,OAvBX,EAuBoB;AACvCQ,IAAAA,KAAK,GAAG,GAAGM,MAAH,CAAUN,KAAV,CAAR;AAEA,QAAMP,KAAK,GAAG;AACbO,MAAAA,KAAK,EAAE;AAAEO,QAAAA,GAAG,EAAEP;AAAP;AADM,KAAd;AAIA,WAAO,KAAKQ,IAAL,CAAUf,KAAV,EAAiBD,OAAjB,CAAP;AACA;AA/BmB,CAAd;AAkCP;AACAN,MAAM,CAACuB,KAAP,GAAe,IAAIpB,KAAK,CAACqB,UAAV,CAAqB,IAArB,CAAf;;AACAxB,MAAM,CAACY,IAAP,GAAc;AAAA,SAAMZ,MAAM,CAACuB,KAAP,CAAad,OAAb,CAAqB;AAAED,IAAAA,GAAG,EAAER,MAAM,CAACK,MAAP;AAAP,GAArB,CAAN;AAAA,CAAd","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nexport const Users = {\n\tfindOneById(userId, options = {}) {\n\t\tconst query = {\n\t\t\t_id: userId,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t},\n\n\t/**\n\t * @param {string} userId\n\t * @param {IRole['_id']} roleId\n\t */\n\tisUserInRole(userId, roleId) {\n\t\tconst user = this.findOneById(userId, { fields: { roles: 1 } });\n\t\treturn user && Array.isArray(user.roles) && user.roles.includes(roleId);\n\t},\n\n\t/**\n\t * @param {IRole['_id'][]} roles the list of role ids\n\t * @param {string} scope the value for the scope (room id)\n\t * @param {any} options\n\t */\n\tfindUsersInRoles(roles, scope, options) {\n\t\troles = [].concat(roles);\n\n\t\tconst query = {\n\t\t\troles: { $in: roles },\n\t\t};\n\n\t\treturn this.find(query, options);\n\t},\n};\n\n// overwrite Meteor.users collection so records on it don't get erased whenever the client reconnects to websocket\nMeteor.users = new Mongo.Collection(null);\nMeteor.user = () => Meteor.users.findOne({ _id: Meteor.userId() });\n"]},"sourceType":"module","hash":"8af85df68c3197f6bd1eb133a37e176ff8980f19"}
