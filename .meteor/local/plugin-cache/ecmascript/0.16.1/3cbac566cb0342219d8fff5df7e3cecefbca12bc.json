{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _toConsumableArray;\n\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\n\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nvar useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  }\n}, 0);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 1);\nvar React, useCallback, useEffect, useState;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 2);\nvar GenericModal;\nmodule.link(\"../../../../components/GenericModal\", {\n  \"default\": function (v) {\n    GenericModal = v;\n  }\n}, 3);\nvar useSetModal;\nmodule.link(\"../../../../contexts/ModalContext\", {\n  useSetModal: function (v) {\n    useSetModal = v;\n  }\n}, 4);\nvar useEndpoint;\nmodule.link(\"../../../../contexts/ServerContext\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 5);\nvar useToastMessageDispatch;\nmodule.link(\"../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  }\n}, 6);\nvar useTranslation;\nmodule.link(\"../../../../contexts/TranslationContext\", {\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 7);\nvar useUserRoom;\nmodule.link(\"../../../../contexts/UserContext\", {\n  useUserRoom: function (v) {\n    useUserRoom = v;\n  }\n}, 8);\nvar useForm;\nmodule.link(\"../../../../hooks/useForm\", {\n  useForm: function (v) {\n    useForm = v;\n  }\n}, 9);\nvar PruneMessages;\nmodule.link(\"./PruneMessages\", {\n  \"default\": function (v) {\n    PruneMessages = v;\n  }\n}, 10);\n\nvar getTimeZoneOffset = function () {\n  var offset = new Date().getTimezoneOffset();\n  var absOffset = Math.abs(offset);\n  return \"\" + (offset < 0 ? '+' : '-') + (\"00\" + Math.floor(absOffset / 60)).slice(-2) + \":\" + (\"00\" + absOffset % 60).slice(-2);\n};\n\nvar initialValues = {\n  newerDate: '',\n  newerTime: '',\n  olderDate: '',\n  olderTime: '',\n  users: [],\n  inclusive: false,\n  pinned: false,\n  discussion: false,\n  threads: false,\n  attached: false\n};\n\nvar PruneMessagesWithData = function (_ref) {\n  var rid = _ref.rid,\n      tabBar = _ref.tabBar;\n  var t = useTranslation();\n  var room = useUserRoom(rid);\n  room.type = room.t;\n  room.rid = rid;\n  var name = room.name,\n      usernames = room.usernames;\n  var setModal = useSetModal();\n  var onClickClose = useMutableCallback(function () {\n    return tabBar && tabBar.close();\n  });\n  var closeModal = useCallback(function () {\n    return setModal(null);\n  }, [setModal]);\n  var dispatchToastMessage = useToastMessageDispatch();\n  var pruneMessages = useEndpoint('POST', 'rooms.cleanHistory');\n\n  var _useState = useState(new Date('0001-01-01T00:00:00Z')),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromDate = _useState2[0],\n      setFromDate = _useState2[1];\n\n  var _useState3 = useState(new Date('9999-12-31T23:59:59Z')),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toDate = _useState4[0],\n      setToDate = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      callOutText = _useState6[0],\n      setCallOutText = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validateText = _useState8[0],\n      setValidateText = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      counter = _useState10[0],\n      setCounter = _useState10[1];\n\n  var _useForm = useForm(initialValues),\n      values = _useForm.values,\n      handlers = _useForm.handlers,\n      reset = _useForm.reset;\n\n  var newerDate = values.newerDate,\n      newerTime = values.newerTime,\n      olderDate = values.olderDate,\n      olderTime = values.olderTime,\n      users = values.users,\n      inclusive = values.inclusive,\n      pinned = values.pinned,\n      discussion = values.discussion,\n      threads = values.threads,\n      attached = values.attached;\n  var handleNewerDate = handlers.handleNewerDate,\n      handleNewerTime = handlers.handleNewerTime,\n      handleOlderDate = handlers.handleOlderDate,\n      handleOlderTime = handlers.handleOlderTime,\n      handleUsers = handlers.handleUsers,\n      handleInclusive = handlers.handleInclusive,\n      handlePinned = handlers.handlePinned,\n      handleDiscussion = handlers.handleDiscussion,\n      handleThreads = handlers.handleThreads,\n      handleAttached = handlers.handleAttached;\n  var onChangeUsers = useMutableCallback(function (value, action) {\n    if (!action) {\n      if (users.includes(value)) {\n        return;\n      }\n\n      return handleUsers([].concat(_toConsumableArray(users), [value]));\n    }\n\n    handleUsers(users.filter(function (current) {\n      return current !== value;\n    }));\n  });\n  var handlePrune = useMutableCallback(function () {\n    function _callee() {\n      var limit, _await$pruneMessages, count;\n\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                limit = 2000;\n                _context.prev = 1;\n\n                if (!(counter === limit)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(pruneMessages({\n                  roomId: rid,\n                  latest: toDate,\n                  oldest: fromDate,\n                  inclusive: inclusive,\n                  limit: limit,\n                  excludePinned: pinned,\n                  filesOnly: attached,\n                  ignoreDiscussion: discussion,\n                  ignoreThreads: threads,\n                  users: users\n                }));\n\n              case 6:\n                _await$pruneMessages = _context.sent;\n                count = _await$pruneMessages.count;\n                setCounter(count);\n\n                if (!(count < 1)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                throw new Error(t('No_messages_found_to_prune'));\n\n              case 11:\n                dispatchToastMessage({\n                  type: 'success',\n                  message: count + \" \" + t('messages_pruned')\n                });\n                closeModal();\n                reset();\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](1);\n                dispatchToastMessage({\n                  type: 'error',\n                  message: _context.t0.message\n                });\n                closeModal();\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }\n\n        return _callee$;\n      }(), null, null, [[1, 16]], Promise);\n    }\n\n    return _callee;\n  }());\n\n  var handleModal = function () {\n    setModal( /*#__PURE__*/React.createElement(GenericModal, {\n      variant: \"danger\",\n      onClose: closeModal,\n      onCancel: closeModal,\n      onConfirm: handlePrune,\n      confirmText: t('Yes_prune_them')\n    }, t('Prune_Modal')));\n  };\n\n  useEffect(function () {\n    if (newerDate) {\n      setFromDate(new Date(newerDate + \"T\" + (newerTime || '00:00') + \":00\" + getTimeZoneOffset()));\n    }\n\n    if (olderDate) {\n      setToDate(new Date(olderDate + \"T\" + (olderTime || '24:00') + \":00\" + getTimeZoneOffset()));\n    }\n  }, [newerDate, newerTime, olderDate, olderTime]);\n  useEffect(function () {\n    var exceptPinned = pinned ? \" \" + t('except_pinned', {}) : '';\n    var ifFrom = users.length ? \" \" + t('if_they_are_from', {\n      postProcess: 'sprintf',\n      sprintf: [users.map(function (element) {\n        return element;\n      }).join(', ')]\n    }) : '';\n    var filesOrMessages = t(attached ? 'files' : 'messages', {});\n\n    if (newerDate && olderDate) {\n      setCallOutText(t('Prune_Warning_between', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name, moment(fromDate).format('L LT'), moment(toDate).format('L LT')]\n      }) + exceptPinned + ifFrom);\n    } else if (newerDate) {\n      setCallOutText(t('Prune_Warning_after', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name, moment(fromDate).format('L LT')]\n      }) + exceptPinned + ifFrom);\n    } else if (olderDate) {\n      setCallOutText(t('Prune_Warning_before', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name, moment(toDate).format('L LT')]\n      }) + exceptPinned + ifFrom);\n    } else {\n      setCallOutText(t('Prune_Warning_all', {\n        postProcess: 'sprintf',\n        sprintf: [filesOrMessages, name || (usernames === null || usernames === void 0 ? void 0 : usernames.join(' x '))]\n      }) + exceptPinned + ifFrom);\n    }\n\n    if (fromDate > toDate) {\n      return setValidateText(t('Newer_than_may_not_exceed_Older_than', {\n        postProcess: 'sprintf',\n        sprintf: []\n      }));\n    }\n\n    if (isNaN(fromDate.getTime()) || isNaN(toDate.getTime())) {\n      return setValidateText(t('error-invalid-date', {\n        postProcess: 'sprintf',\n        sprintf: []\n      }));\n    }\n\n    setValidateText();\n  }, [newerDate, olderDate, fromDate, toDate, attached, name, t, pinned, users, usernames]);\n  return /*#__PURE__*/React.createElement(PruneMessages, {\n    callOutText: callOutText,\n    validateText: validateText,\n    newerDateTime: {\n      date: newerDate,\n      time: newerTime\n    },\n    handleNewerDateTime: {\n      date: handleNewerDate,\n      time: handleNewerTime\n    },\n    olderDateTime: {\n      date: olderDate,\n      time: olderTime\n    },\n    handleOlderDateTime: {\n      date: handleOlderDate,\n      time: handleOlderTime\n    },\n    users: users,\n    inclusive: inclusive,\n    pinned: pinned,\n    discussion: discussion,\n    threads: threads,\n    attached: attached,\n    handleInclusive: handleInclusive,\n    handlePinned: handlePinned,\n    handleDiscussion: handleDiscussion,\n    handleThreads: handleThreads,\n    handleAttached: handleAttached,\n    onClickClose: onClickClose,\n    onClickPrune: handleModal,\n    onChangeUsers: onChangeUsers\n  });\n};\n\nmodule.exportDefault(PruneMessagesWithData);","map":{"version":3,"sources":["client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.js"],"names":["_regeneratorRuntime","module","link","default","v","_toConsumableArray","_slicedToArray","useMutableCallback","moment","React","useCallback","useEffect","useState","GenericModal","useSetModal","useEndpoint","useToastMessageDispatch","useTranslation","useUserRoom","useForm","PruneMessages","getTimeZoneOffset","offset","Date","getTimezoneOffset","absOffset","Math","abs","floor","slice","initialValues","newerDate","newerTime","olderDate","olderTime","users","inclusive","pinned","discussion","threads","attached","PruneMessagesWithData","rid","tabBar","t","room","type","name","usernames","setModal","onClickClose","close","closeModal","dispatchToastMessage","pruneMessages","fromDate","setFromDate","toDate","setToDate","callOutText","setCallOutText","validateText","setValidateText","counter","setCounter","values","handlers","reset","handleNewerDate","handleNewerTime","handleOlderDate","handleOlderTime","handleUsers","handleInclusive","handlePinned","handleDiscussion","handleThreads","handleAttached","onChangeUsers","value","action","includes","filter","current","handlePrune","limit","roomId","latest","oldest","excludePinned","filesOnly","ignoreDiscussion","ignoreThreads","count","Error","message","handleModal","exceptPinned","ifFrom","length","postProcess","sprintf","map","element","join","filesOrMessages","format","isNaN","getTime","date","time","exportDefault"],"mappings":"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","sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport GenericModal from '../../../../components/GenericModal';\nimport { useSetModal } from '../../../../contexts/ModalContext';\nimport { useEndpoint } from '../../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { useUserRoom } from '../../../../contexts/UserContext';\nimport { useForm } from '../../../../hooks/useForm';\nimport PruneMessages from './PruneMessages';\n\nconst getTimeZoneOffset = function () {\n\tconst offset = new Date().getTimezoneOffset();\n\tconst absOffset = Math.abs(offset);\n\treturn `${offset < 0 ? '+' : '-'}${`00${Math.floor(absOffset / 60)}`.slice(-2)}:${`00${absOffset % 60}`.slice(-2)}`;\n};\n\nconst initialValues = {\n\tnewerDate: '',\n\tnewerTime: '',\n\tolderDate: '',\n\tolderTime: '',\n\tusers: [],\n\tinclusive: false,\n\tpinned: false,\n\tdiscussion: false,\n\tthreads: false,\n\tattached: false,\n};\n\nconst PruneMessagesWithData = ({ rid, tabBar }) => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\troom.type = room.t;\n\troom.rid = rid;\n\tconst { name, usernames } = room;\n\n\tconst setModal = useSetModal();\n\tconst onClickClose = useMutableCallback(() => tabBar && tabBar.close());\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst pruneMessages = useEndpoint('POST', 'rooms.cleanHistory');\n\n\tconst [fromDate, setFromDate] = useState(new Date('0001-01-01T00:00:00Z'));\n\tconst [toDate, setToDate] = useState(new Date('9999-12-31T23:59:59Z'));\n\tconst [callOutText, setCallOutText] = useState();\n\tconst [validateText, setValidateText] = useState();\n\tconst [counter, setCounter] = useState(0);\n\n\tconst { values, handlers, reset } = useForm(initialValues);\n\tconst { newerDate, newerTime, olderDate, olderTime, users, inclusive, pinned, discussion, threads, attached } = values;\n\n\tconst {\n\t\thandleNewerDate,\n\t\thandleNewerTime,\n\t\thandleOlderDate,\n\t\thandleOlderTime,\n\t\thandleUsers,\n\t\thandleInclusive,\n\t\thandlePinned,\n\t\thandleDiscussion,\n\t\thandleThreads,\n\t\thandleAttached,\n\t} = handlers;\n\n\tconst onChangeUsers = useMutableCallback((value, action) => {\n\t\tif (!action) {\n\t\t\tif (users.includes(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn handleUsers([...users, value]);\n\t\t}\n\t\thandleUsers(users.filter((current) => current !== value));\n\t});\n\n\tconst handlePrune = useMutableCallback(async () => {\n\t\tconst limit = 2000;\n\n\t\ttry {\n\t\t\tif (counter === limit) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { count } = await pruneMessages({\n\t\t\t\troomId: rid,\n\t\t\t\tlatest: toDate,\n\t\t\t\toldest: fromDate,\n\t\t\t\tinclusive,\n\t\t\t\tlimit,\n\t\t\t\texcludePinned: pinned,\n\t\t\t\tfilesOnly: attached,\n\t\t\t\tignoreDiscussion: discussion,\n\t\t\t\tignoreThreads: threads,\n\t\t\t\tusers,\n\t\t\t});\n\n\t\t\tsetCounter(count);\n\n\t\t\tif (count < 1) {\n\t\t\t\tthrow new Error(t('No_messages_found_to_prune'));\n\t\t\t}\n\n\t\t\tdispatchToastMessage({ type: 'success', message: `${count} ${t('messages_pruned')}` });\n\t\t\tcloseModal();\n\t\t\treset();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error.message });\n\t\t\tcloseModal();\n\t\t}\n\t});\n\n\tconst handleModal = () => {\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onClose={closeModal} onCancel={closeModal} onConfirm={handlePrune} confirmText={t('Yes_prune_them')}>\n\t\t\t\t{t('Prune_Modal')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tif (newerDate) {\n\t\t\tsetFromDate(new Date(`${newerDate}T${newerTime || '00:00'}:00${getTimeZoneOffset()}`));\n\t\t}\n\n\t\tif (olderDate) {\n\t\t\tsetToDate(new Date(`${olderDate}T${olderTime || '24:00'}:00${getTimeZoneOffset()}`));\n\t\t}\n\t}, [newerDate, newerTime, olderDate, olderTime]);\n\n\tuseEffect(() => {\n\t\tconst exceptPinned = pinned ? ` ${t('except_pinned', {})}` : '';\n\t\tconst ifFrom = users.length\n\t\t\t? ` ${t('if_they_are_from', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [users.map((element) => element).join(', ')],\n\t\t\t  })}`\n\t\t\t: '';\n\t\tconst filesOrMessages = t(attached ? 'files' : 'messages', {});\n\n\t\tif (newerDate && olderDate) {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_between', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT'), moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t} else if (newerDate) {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_after', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t} else if (olderDate) {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_before', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t} else {\n\t\t\tsetCallOutText(\n\t\t\t\tt('Prune_Warning_all', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name || usernames?.join(' x ')],\n\t\t\t\t}) +\n\t\t\t\t\texceptPinned +\n\t\t\t\t\tifFrom,\n\t\t\t);\n\t\t}\n\n\t\tif (fromDate > toDate) {\n\t\t\treturn setValidateText(\n\t\t\t\tt('Newer_than_may_not_exceed_Older_than', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [],\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tif (isNaN(fromDate.getTime()) || isNaN(toDate.getTime())) {\n\t\t\treturn setValidateText(\n\t\t\t\tt('error-invalid-date', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [],\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tsetValidateText();\n\t}, [newerDate, olderDate, fromDate, toDate, attached, name, t, pinned, users, usernames]);\n\n\treturn (\n\t\t<PruneMessages\n\t\t\tcallOutText={callOutText}\n\t\t\tvalidateText={validateText}\n\t\t\tnewerDateTime={{ date: newerDate, time: newerTime }}\n\t\t\thandleNewerDateTime={{ date: handleNewerDate, time: handleNewerTime }}\n\t\t\tolderDateTime={{ date: olderDate, time: olderTime }}\n\t\t\thandleOlderDateTime={{ date: handleOlderDate, time: handleOlderTime }}\n\t\t\tusers={users}\n\t\t\tinclusive={inclusive}\n\t\t\tpinned={pinned}\n\t\t\tdiscussion={discussion}\n\t\t\tthreads={threads}\n\t\t\tattached={attached}\n\t\t\thandleInclusive={handleInclusive}\n\t\t\thandlePinned={handlePinned}\n\t\t\thandleDiscussion={handleDiscussion}\n\t\t\thandleThreads={handleThreads}\n\t\t\thandleAttached={handleAttached}\n\t\t\tonClickClose={onClickClose}\n\t\t\tonClickPrune={handleModal}\n\t\t\tonChangeUsers={onChangeUsers}\n\t\t/>\n\t);\n};\n\nexport default PruneMessagesWithData;\n"]},"sourceType":"module","hash":"3cbac566cb0342219d8fff5df7e3cecefbca12bc"}
