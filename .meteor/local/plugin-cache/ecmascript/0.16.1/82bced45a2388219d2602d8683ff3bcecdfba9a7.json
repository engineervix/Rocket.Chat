{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.js"}},"code":"let Field, TextInput, ButtonGroup, Button;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Field(v) {\n    Field = v;\n  },\n\n  TextInput(v) {\n    TextInput = v;\n  },\n\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n\n  Button(v) {\n    Button = v;\n  }\n\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 1);\nlet React, useState, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 2);\nlet useSubscription;\nmodule.link(\"use-subscription\", {\n  useSubscription(v) {\n    useSubscription = v;\n  }\n\n}, 3);\nlet hasAtLeastOnePermission;\nmodule.link(\"../../../../../../app/authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n\n}, 4);\nlet validateEmail;\nmodule.link(\"../../../../../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n\n}, 5);\nlet CustomFieldsForm;\nmodule.link(\"../../../../../components/CustomFieldsForm\", {\n  default(v) {\n    CustomFieldsForm = v;\n  }\n\n}, 6);\nlet VerticalBar;\nmodule.link(\"../../../../../components/VerticalBar\", {\n  default(v) {\n    VerticalBar = v;\n  }\n\n}, 7);\nlet useEndpoint;\nmodule.link(\"../../../../../contexts/ServerContext\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n\n}, 8);\nlet useToastMessageDispatch;\nmodule.link(\"../../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 9);\nlet useTranslation;\nmodule.link(\"../../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 10);\nlet AsyncStatePhase;\nmodule.link(\"../../../../../hooks/useAsyncState\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n\n}, 11);\nlet useComponentDidUpdate;\nmodule.link(\"../../../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n\n}, 12);\nlet useEndpointData;\nmodule.link(\"../../../../../hooks/useEndpointData\", {\n  useEndpointData(v) {\n    useEndpointData = v;\n  }\n\n}, 13);\nlet useForm;\nmodule.link(\"../../../../../hooks/useForm\", {\n  useForm(v) {\n    useForm = v;\n  }\n\n}, 14);\nlet createToken;\nmodule.link(\"../../../../../lib/utils/createToken\", {\n  createToken(v) {\n    createToken = v;\n  }\n\n}, 15);\nlet formsSubscription;\nmodule.link(\"../../../additionalForms\", {\n  formsSubscription(v) {\n    formsSubscription = v;\n  }\n\n}, 16);\nlet FormSkeleton;\nmodule.link(\"../../Skeleton\", {\n  FormSkeleton(v) {\n    FormSkeleton = v;\n  }\n\n}, 17);\nconst initialValues = {\n  token: '',\n  name: '',\n  email: '',\n  phone: '',\n  username: ''\n};\n\nconst getInitialValues = data => {\n  var _contactManager$usern;\n\n  if (!data) {\n    return initialValues;\n  }\n\n  const {\n    contact: {\n      name,\n      token,\n      phone,\n      visitorEmails,\n      livechatData,\n      contactManager\n    }\n  } = data;\n  return {\n    token: token !== null && token !== void 0 ? token : '',\n    name: name !== null && name !== void 0 ? name : '',\n    email: visitorEmails ? visitorEmails[0].address : '',\n    phone: phone ? phone[0].phoneNumber : '',\n    livechatData: livechatData !== null && livechatData !== void 0 ? livechatData : {},\n    username: (_contactManager$usern = contactManager === null || contactManager === void 0 ? void 0 : contactManager.username) !== null && _contactManager$usern !== void 0 ? _contactManager$usern : ''\n  };\n};\n\nfunction ContactNewEdit(_ref) {\n  let {\n    id,\n    data,\n    close\n  } = _ref;\n  const t = useTranslation();\n\n  const canViewCustomFields = () => hasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n  const {\n    values,\n    handlers,\n    hasUnsavedChanges: hasUnsavedChangesContact\n  } = useForm(getInitialValues(data));\n  const eeForms = useSubscription(formsSubscription);\n  const {\n    useContactManager = () => {}\n  } = eeForms;\n  const ContactManager = useContactManager();\n  const {\n    handleName,\n    handleEmail,\n    handlePhone,\n    handleUsername\n  } = handlers;\n  const {\n    token,\n    name,\n    email,\n    phone,\n    username\n  } = values;\n  const {\n    values: valueCustom,\n    handlers: handleValueCustom,\n    hasUnsavedChanges: hasUnsavedChangesCustomFields\n  } = useForm({\n    livechatData: values.livechatData\n  });\n  const {\n    handleLivechatData\n  } = handleValueCustom;\n  const {\n    livechatData\n  } = valueCustom;\n  const [nameError, setNameError] = useState();\n  const [emailError, setEmailError] = useState();\n  const [phoneError, setPhoneError] = useState();\n  const [customFieldsError, setCustomFieldsError] = useState([]);\n  const {\n    value: allCustomFields,\n    phase: state\n  } = useEndpointData('livechat/custom-fields');\n\n  const jsonConverterToValidFormat = customFields => {\n    const jsonObj = {};\n    customFields.forEach(_ref2 => {\n      let {\n        _id,\n        label,\n        visibility,\n        options,\n        scope,\n        defaultValue,\n        required\n      } = _ref2;\n      visibility === 'visible' & scope === 'visitor' && (jsonObj[_id] = {\n        label,\n        type: options ? 'select' : 'text',\n        required,\n        defaultValue,\n        options: options && options.split(',').map(item => item.trim())\n      });\n    });\n    return jsonObj;\n  };\n\n  const jsonCustomField = useMemo(() => allCustomFields && allCustomFields.customFields ? jsonConverterToValidFormat(allCustomFields.customFields) : {}, [allCustomFields]);\n  const saveContact = useEndpoint('POST', 'omnichannel/contact');\n  const emailAlreadyExistsAction = useEndpoint('GET', \"omnichannel/contact.search?email=\".concat(email));\n  const phoneAlreadyExistsAction = useEndpoint('GET', \"omnichannel/contact.search?phone=\".concat(phone));\n  const checkEmailExists = useMutableCallback(async () => {\n    if (!validateEmail(email)) {\n      return;\n    }\n\n    const {\n      contact\n    } = await emailAlreadyExistsAction();\n\n    if (!contact || id && contact._id === id) {\n      return setEmailError(null);\n    }\n\n    setEmailError(t('Email_already_exists'));\n  });\n  const checkPhoneExists = useMutableCallback(async () => {\n    if (!phone) {\n      return;\n    }\n\n    const {\n      contact\n    } = await phoneAlreadyExistsAction();\n\n    if (!contact || id && contact._id === id) {\n      return setPhoneError(null);\n    }\n\n    setPhoneError(t('Phone_already_exists'));\n  });\n  const dispatchToastMessage = useToastMessageDispatch();\n  useComponentDidUpdate(() => {\n    setNameError(!name ? t('The_field_is_required', t('Name')) : '');\n  }, [t, name]);\n  useComponentDidUpdate(() => {\n    setEmailError(email && !validateEmail(email) ? t('Validate_email_address') : null);\n  }, [t, email]);\n  useComponentDidUpdate(() => {\n    !phone && setPhoneError(null);\n  }, [phone]);\n  const handleSave = useMutableCallback(async e => {\n    e.preventDefault();\n    let error = false;\n\n    if (!name) {\n      setNameError(t('The_field_is_required', 'name'));\n      error = true;\n    }\n\n    if (email && !validateEmail(email)) {\n      setEmailError(t('Validate_email_address'));\n      error = true;\n    }\n\n    if (error) {\n      return;\n    }\n\n    const payload = {\n      name\n    };\n    payload.phone = phone;\n    payload.email = email;\n    payload.customFields = livechatData || {};\n    payload.contactManager = username ? {\n      username\n    } : {};\n\n    if (id) {\n      payload._id = id;\n      payload.token = token;\n    } else {\n      payload.token = createToken();\n    }\n\n    try {\n      await saveContact(payload);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Saved')\n      });\n      close();\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  });\n  const formIsValid = (hasUnsavedChangesContact || hasUnsavedChangesCustomFields) && name && !emailError && !phoneError && customFieldsError.length === 0;\n\n  if ([state].includes(AsyncStatePhase.LOADING)) {\n    return /*#__PURE__*/React.createElement(FormSkeleton, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VerticalBar.ScrollableContent, {\n    is: \"form\"\n  }, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Name'), \"*\"), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    error: nameError,\n    flexGrow: 1,\n    value: name,\n    onChange: handleName\n  })), /*#__PURE__*/React.createElement(Field.Error, null, nameError)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Email')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    onBlur: checkEmailExists,\n    error: emailError,\n    flexGrow: 1,\n    value: email,\n    onChange: handleEmail\n  })), /*#__PURE__*/React.createElement(Field.Error, null, t(emailError))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, null, t('Phone')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    onBlur: checkPhoneExists,\n    error: phoneError,\n    flexGrow: 1,\n    value: phone,\n    onChange: handlePhone\n  })), /*#__PURE__*/React.createElement(Field.Error, null, t(phoneError))), canViewCustomFields() && allCustomFields && /*#__PURE__*/React.createElement(CustomFieldsForm, {\n    jsonCustomFields: jsonCustomField,\n    customFieldsData: livechatData,\n    setCustomFieldsData: handleLivechatData,\n    setCustomFieldsError: setCustomFieldsError\n  }), ContactManager && /*#__PURE__*/React.createElement(ContactManager, {\n    value: username,\n    handler: handleUsername\n  })), /*#__PURE__*/React.createElement(VerticalBar.Footer, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    flexGrow: 1,\n    onClick: close\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    mie: \"none\",\n    flexGrow: 1,\n    onClick: handleSave,\n    disabled: !formIsValid,\n    primary: true\n  }, t('Save')))));\n}\n\nmodule.exportDefault(ContactNewEdit);","map":{"version":3,"sources":["client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.js"],"names":["Field","TextInput","ButtonGroup","Button","module","link","v","useMutableCallback","React","useState","useMemo","default","useSubscription","hasAtLeastOnePermission","validateEmail","CustomFieldsForm","VerticalBar","useEndpoint","useToastMessageDispatch","useTranslation","AsyncStatePhase","useComponentDidUpdate","useEndpointData","useForm","createToken","formsSubscription","FormSkeleton","initialValues","token","name","email","phone","username","getInitialValues","data","contact","visitorEmails","livechatData","contactManager","address","phoneNumber","ContactNewEdit","id","close","t","canViewCustomFields","values","handlers","hasUnsavedChanges","hasUnsavedChangesContact","eeForms","useContactManager","ContactManager","handleName","handleEmail","handlePhone","handleUsername","valueCustom","handleValueCustom","hasUnsavedChangesCustomFields","handleLivechatData","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","customFieldsError","setCustomFieldsError","value","allCustomFields","phase","state","jsonConverterToValidFormat","customFields","jsonObj","forEach","_id","label","visibility","options","scope","defaultValue","required","type","split","map","item","trim","jsonCustomField","saveContact","emailAlreadyExistsAction","phoneAlreadyExistsAction","checkEmailExists","checkPhoneExists","dispatchToastMessage","handleSave","e","preventDefault","error","payload","message","formIsValid","length","includes","LOADING","exportDefault"],"mappings":"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","sourcesContent":["import { Field, TextInput, ButtonGroup, Button } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { useState, useMemo } from 'react';\nimport { useSubscription } from 'use-subscription';\n\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\nimport { validateEmail } from '../../../../../../lib/emailValidator';\nimport CustomFieldsForm from '../../../../../components/CustomFieldsForm';\nimport VerticalBar from '../../../../../components/VerticalBar';\nimport { useEndpoint } from '../../../../../contexts/ServerContext';\nimport { useToastMessageDispatch } from '../../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../../contexts/TranslationContext';\nimport { AsyncStatePhase } from '../../../../../hooks/useAsyncState';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { useEndpointData } from '../../../../../hooks/useEndpointData';\nimport { useForm } from '../../../../../hooks/useForm';\nimport { createToken } from '../../../../../lib/utils/createToken';\nimport { formsSubscription } from '../../../additionalForms';\nimport { FormSkeleton } from '../../Skeleton';\n\nconst initialValues = {\n\ttoken: '',\n\tname: '',\n\temail: '',\n\tphone: '',\n\tusername: '',\n};\n\nconst getInitialValues = (data) => {\n\tif (!data) {\n\t\treturn initialValues;\n\t}\n\n\tconst {\n\t\tcontact: { name, token, phone, visitorEmails, livechatData, contactManager },\n\t} = data;\n\n\treturn {\n\t\ttoken: token ?? '',\n\t\tname: name ?? '',\n\t\temail: visitorEmails ? visitorEmails[0].address : '',\n\t\tphone: phone ? phone[0].phoneNumber : '',\n\t\tlivechatData: livechatData ?? {},\n\t\tusername: contactManager?.username ?? '',\n\t};\n};\n\nfunction ContactNewEdit({ id, data, close }) {\n\tconst t = useTranslation();\n\n\tconst canViewCustomFields = () => hasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n\tconst { values, handlers, hasUnsavedChanges: hasUnsavedChangesContact } = useForm(getInitialValues(data));\n\n\tconst eeForms = useSubscription(formsSubscription);\n\n\tconst { useContactManager = () => {} } = eeForms;\n\n\tconst ContactManager = useContactManager();\n\n\tconst { handleName, handleEmail, handlePhone, handleUsername } = handlers;\n\tconst { token, name, email, phone, username } = values;\n\n\tconst {\n\t\tvalues: valueCustom,\n\t\thandlers: handleValueCustom,\n\t\thasUnsavedChanges: hasUnsavedChangesCustomFields,\n\t} = useForm({\n\t\tlivechatData: values.livechatData,\n\t});\n\n\tconst { handleLivechatData } = handleValueCustom;\n\tconst { livechatData } = valueCustom;\n\n\tconst [nameError, setNameError] = useState();\n\tconst [emailError, setEmailError] = useState();\n\tconst [phoneError, setPhoneError] = useState();\n\tconst [customFieldsError, setCustomFieldsError] = useState([]);\n\n\tconst { value: allCustomFields, phase: state } = useEndpointData('livechat/custom-fields');\n\n\tconst jsonConverterToValidFormat = (customFields) => {\n\t\tconst jsonObj = {};\n\t\tcustomFields.forEach(({ _id, label, visibility, options, scope, defaultValue, required }) => {\n\t\t\t(visibility === 'visible') & (scope === 'visitor') &&\n\t\t\t\t(jsonObj[_id] = {\n\t\t\t\t\tlabel,\n\t\t\t\t\ttype: options ? 'select' : 'text',\n\t\t\t\t\trequired,\n\t\t\t\t\tdefaultValue,\n\t\t\t\t\toptions: options && options.split(',').map((item) => item.trim()),\n\t\t\t\t});\n\t\t});\n\t\treturn jsonObj;\n\t};\n\n\tconst jsonCustomField = useMemo(\n\t\t() => (allCustomFields && allCustomFields.customFields ? jsonConverterToValidFormat(allCustomFields.customFields) : {}),\n\t\t[allCustomFields],\n\t);\n\n\tconst saveContact = useEndpoint('POST', 'omnichannel/contact');\n\tconst emailAlreadyExistsAction = useEndpoint('GET', `omnichannel/contact.search?email=${email}`);\n\tconst phoneAlreadyExistsAction = useEndpoint('GET', `omnichannel/contact.search?phone=${phone}`);\n\n\tconst checkEmailExists = useMutableCallback(async () => {\n\t\tif (!validateEmail(email)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { contact } = await emailAlreadyExistsAction();\n\t\tif (!contact || (id && contact._id === id)) {\n\t\t\treturn setEmailError(null);\n\t\t}\n\t\tsetEmailError(t('Email_already_exists'));\n\t});\n\n\tconst checkPhoneExists = useMutableCallback(async () => {\n\t\tif (!phone) {\n\t\t\treturn;\n\t\t}\n\t\tconst { contact } = await phoneAlreadyExistsAction();\n\t\tif (!contact || (id && contact._id === id)) {\n\t\t\treturn setPhoneError(null);\n\t\t}\n\t\tsetPhoneError(t('Phone_already_exists'));\n\t});\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tuseComponentDidUpdate(() => {\n\t\tsetNameError(!name ? t('The_field_is_required', t('Name')) : '');\n\t}, [t, name]);\n\tuseComponentDidUpdate(() => {\n\t\tsetEmailError(email && !validateEmail(email) ? t('Validate_email_address') : null);\n\t}, [t, email]);\n\tuseComponentDidUpdate(() => {\n\t\t!phone && setPhoneError(null);\n\t}, [phone]);\n\n\tconst handleSave = useMutableCallback(async (e) => {\n\t\te.preventDefault();\n\t\tlet error = false;\n\t\tif (!name) {\n\t\t\tsetNameError(t('The_field_is_required', 'name'));\n\t\t\terror = true;\n\t\t}\n\t\tif (email && !validateEmail(email)) {\n\t\t\tsetEmailError(t('Validate_email_address'));\n\t\t\terror = true;\n\t\t}\n\n\t\tif (error) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t};\n\t\tpayload.phone = phone;\n\t\tpayload.email = email;\n\t\tpayload.customFields = livechatData || {};\n\t\tpayload.contactManager = username ? { username } : {};\n\n\t\tif (id) {\n\t\t\tpayload._id = id;\n\t\t\tpayload.token = token;\n\t\t} else {\n\t\t\tpayload.token = createToken();\n\t\t}\n\n\t\ttry {\n\t\t\tawait saveContact(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tclose();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst formIsValid =\n\t\t(hasUnsavedChangesContact || hasUnsavedChangesCustomFields) && name && !emailError && !phoneError && customFieldsError.length === 0;\n\n\tif ([state].includes(AsyncStatePhase.LOADING)) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<VerticalBar.ScrollableContent is='form'>\n\t\t\t\t<Field>\n\t\t\t\t\t<Field.Label>{t('Name')}*</Field.Label>\n\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t<TextInput error={nameError} flexGrow={1} value={name} onChange={handleName} />\n\t\t\t\t\t</Field.Row>\n\t\t\t\t\t<Field.Error>{nameError}</Field.Error>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<Field.Label>{t('Email')}</Field.Label>\n\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t<TextInput onBlur={checkEmailExists} error={emailError} flexGrow={1} value={email} onChange={handleEmail} />\n\t\t\t\t\t</Field.Row>\n\t\t\t\t\t<Field.Error>{t(emailError)}</Field.Error>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<Field.Label>{t('Phone')}</Field.Label>\n\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t<TextInput onBlur={checkPhoneExists} error={phoneError} flexGrow={1} value={phone} onChange={handlePhone} />\n\t\t\t\t\t</Field.Row>\n\t\t\t\t\t<Field.Error>{t(phoneError)}</Field.Error>\n\t\t\t\t</Field>\n\t\t\t\t{canViewCustomFields() && allCustomFields && (\n\t\t\t\t\t<CustomFieldsForm\n\t\t\t\t\t\tjsonCustomFields={jsonCustomField}\n\t\t\t\t\t\tcustomFieldsData={livechatData}\n\t\t\t\t\t\tsetCustomFieldsData={handleLivechatData}\n\t\t\t\t\t\tsetCustomFieldsError={setCustomFieldsError}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{ContactManager && <ContactManager value={username} handler={handleUsername} />}\n\t\t\t</VerticalBar.ScrollableContent>\n\t\t\t<VerticalBar.Footer>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button flexGrow={1} onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button mie='none' flexGrow={1} onClick={handleSave} disabled={!formIsValid} primary>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</VerticalBar.Footer>\n\t\t</>\n\t);\n}\n\nexport default ContactNewEdit;\n"]},"sourceType":"module","hash":"82bced45a2388219d2602d8683ff3bcecdfba9a7"}
