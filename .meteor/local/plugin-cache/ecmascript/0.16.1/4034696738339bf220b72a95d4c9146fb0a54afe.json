{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webrtc/client/WebRTCClass.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/webrtc/client/WebRTCClass.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webrtc/client/WebRTCClass.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/webrtc/client/WebRTCClass.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webrtc/client/WebRTCClass.js"}},"code":"module.export({\n  WebRTC: () => WebRTC\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 3);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 4);\nlet ChromeScreenShare;\nmodule.link(\"./screenShare\", {\n  ChromeScreenShare(v) {\n    ChromeScreenShare = v;\n  }\n\n}, 5);\nlet t;\nmodule.link(\"../../utils\", {\n  t(v) {\n    t = v;\n  }\n\n}, 6);\nlet Notifications;\nmodule.link(\"../../notifications\", {\n  Notifications(v) {\n    Notifications = v;\n  }\n\n}, 7);\nlet settings;\nmodule.link(\"../../settings\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 8);\nlet modal;\nmodule.link(\"../../ui-utils\", {\n  modal(v) {\n    modal = v;\n  }\n\n}, 9);\nlet ChatSubscription;\nmodule.link(\"../../models\", {\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n\n}, 10);\nlet WEB_RTC_EVENTS;\nmodule.link(\"..\", {\n  WEB_RTC_EVENTS(v) {\n    WEB_RTC_EVENTS = v;\n  }\n\n}, 11);\nlet goToRoomById;\nmodule.link(\"../../../client/lib/utils/goToRoomById\", {\n  goToRoomById(v) {\n    goToRoomById = v;\n  }\n\n}, 12);\n\nclass WebRTCTransportClass extends Emitter {\n  constructor(webrtcInstance) {\n    super();\n    this.debug = false;\n    this.webrtcInstance = webrtcInstance;\n    Notifications.onRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, (type, data) => {\n      this.log('WebRTCTransportClass - onRoom', type, data);\n      this.emit(type, data);\n    });\n  }\n\n  log() {\n    if (this.debug === true) {\n      console.log(...arguments);\n    }\n  }\n\n  onUserStream(type, data) {\n    if (data.room !== this.webrtcInstance.room) {\n      return;\n    }\n\n    this.log('WebRTCTransportClass - onUser', type, data);\n    this.emit(type, data);\n  }\n\n  startCall(data) {\n    this.log('WebRTCTransportClass - startCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n    Notifications.notifyUsersOfRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.CALL, {\n      from: this.webrtcInstance.selfId,\n      room: this.webrtcInstance.room,\n      media: data.media,\n      monitor: data.monitor\n    });\n  }\n\n  joinCall(data) {\n    this.log('WebRTCTransportClass - joinCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n\n    if (data.monitor === true) {\n      Notifications.notifyUser(data.to, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.JOIN, {\n        from: this.webrtcInstance.selfId,\n        room: this.webrtcInstance.room,\n        media: data.media,\n        monitor: data.monitor\n      });\n    } else {\n      Notifications.notifyUsersOfRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.JOIN, {\n        from: this.webrtcInstance.selfId,\n        room: this.webrtcInstance.room,\n        media: data.media,\n        monitor: data.monitor\n      });\n    }\n  }\n\n  sendCandidate(data) {\n    data.from = this.webrtcInstance.selfId;\n    data.room = this.webrtcInstance.room;\n    this.log('WebRTCTransportClass - sendCandidate', data);\n    Notifications.notifyUser(data.to, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.CANDIDATE, data);\n  }\n\n  sendDescription(data) {\n    data.from = this.webrtcInstance.selfId;\n    data.room = this.webrtcInstance.room;\n    this.log('WebRTCTransportClass - sendDescription', data);\n    Notifications.notifyUser(data.to, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.DESCRIPTION, data);\n  }\n\n  sendStatus(data) {\n    this.log('WebRTCTransportClass - sendStatus', data, this.webrtcInstance.room);\n    data.from = this.webrtcInstance.selfId;\n    Notifications.notifyRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.STATUS, data);\n  }\n\n  onRemoteCall(fn) {\n    return this.on(WEB_RTC_EVENTS.CALL, fn);\n  }\n\n  onRemoteJoin(fn) {\n    return this.on(WEB_RTC_EVENTS.JOIN, fn);\n  }\n\n  onRemoteCandidate(fn) {\n    return this.on(WEB_RTC_EVENTS.CANDIDATE, fn);\n  }\n\n  onRemoteDescription(fn) {\n    return this.on(WEB_RTC_EVENTS.DESCRIPTION, fn);\n  }\n\n  onRemoteStatus(fn) {\n    return this.on(WEB_RTC_EVENTS.STATUS, fn);\n  }\n\n}\n\nclass WebRTCClass {\n  /*\n   \t\t@param seldId {String}\n   \t\t@param room {String}\n    */\n  constructor(selfId, room) {\n    let autoAccept = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    this.resetCallInProgress = () => {\n      this.callInProgress.set(false);\n    };\n\n    this.stopPeerConnection = id => {\n      const peerConnection = this.peerConnections[id];\n\n      if (peerConnection == null) {\n        return;\n      }\n\n      delete this.peerConnections[id];\n      peerConnection.close();\n      this.updateRemoteItems();\n    };\n\n    this.config = {\n      iceServers: []\n    };\n    this.debug = false;\n    this.TransportClass = WebRTCTransportClass;\n    this.selfId = selfId;\n    this.room = room;\n    let servers = settings.get('WebRTC_Servers');\n\n    if (servers && servers.trim() !== '') {\n      servers = servers.replace(/\\s/g, '');\n      servers = servers.split(',');\n      servers.forEach(server => {\n        server = server.split('@');\n        const serverConfig = {\n          urls: server.pop()\n        };\n\n        if (server.length === 1) {\n          server = server[0].split(':');\n          serverConfig.username = decodeURIComponent(server[0]);\n          serverConfig.credential = decodeURIComponent(server[1]);\n        }\n\n        this.config.iceServers.push(serverConfig);\n      });\n    }\n\n    this.peerConnections = {};\n    this.remoteItems = new ReactiveVar([]);\n    this.remoteItemsById = new ReactiveVar({});\n    this.callInProgress = new ReactiveVar(false);\n    this.audioEnabled = new ReactiveVar(false);\n    this.videoEnabled = new ReactiveVar(false);\n    this.overlayEnabled = new ReactiveVar(false);\n    this.screenShareEnabled = new ReactiveVar(false);\n    this.localUrl = new ReactiveVar();\n    this.active = false;\n    this.remoteMonitoring = false;\n    this.monitor = false;\n    this.autoAccept = autoAccept;\n    this.navigator = undefined;\n    const userAgent = navigator.userAgent.toLocaleLowerCase();\n\n    if (userAgent.indexOf('electron') !== -1) {\n      this.navigator = 'electron';\n    } else if (userAgent.indexOf('chrome') !== -1) {\n      this.navigator = 'chrome';\n    } else if (userAgent.indexOf('firefox') !== -1) {\n      this.navigator = 'firefox';\n    } else if (userAgent.indexOf('safari') !== -1) {\n      this.navigator = 'safari';\n    }\n\n    this.screenShareAvailable = ['chrome', 'firefox', 'electron'].includes(this.navigator);\n    this.media = {\n      video: true,\n      audio: true\n    };\n    this.transport = new this.TransportClass(this);\n    this.transport.onRemoteCall(this.onRemoteCall.bind(this));\n    this.transport.onRemoteJoin(this.onRemoteJoin.bind(this));\n    this.transport.onRemoteCandidate(this.onRemoteCandidate.bind(this));\n    this.transport.onRemoteDescription(this.onRemoteDescription.bind(this));\n    this.transport.onRemoteStatus(this.onRemoteStatus.bind(this));\n    Meteor.setInterval(this.checkPeerConnections.bind(this), 1000); // Meteor.setInterval(this.broadcastStatus.bind(@), 1000);\n  }\n\n  onUserStream() {\n    return this.transport.onUserStream(...arguments);\n  }\n\n  log() {\n    if (this.debug === true) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      console.log.apply(console, args);\n    }\n  }\n\n  onError() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    console.error.apply(console, args);\n  }\n\n  checkPeerConnections() {\n    const {\n      peerConnections\n    } = this;\n    const date = Date.now();\n    Object.entries(peerConnections).some(_ref => {\n      let [id, peerConnection] = _ref;\n\n      if (!['connected', 'completed'].includes(peerConnection.iceConnectionState) && peerConnection.createdAt + 5000 < date) {\n        this.stopPeerConnection(id);\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  updateRemoteItems() {\n    const items = [];\n    const itemsById = {};\n    const {\n      peerConnections\n    } = this;\n    Object.entries(peerConnections).forEach(_ref2 => {\n      let [id, peerConnection] = _ref2;\n      peerConnection.getRemoteStreams().forEach(remoteStream => {\n        const item = {\n          id,\n          url: remoteStream,\n          state: peerConnection.iceConnectionState\n        };\n\n        switch (peerConnection.iceConnectionState) {\n          case 'checking':\n            item.stateText = 'Connecting...';\n            break;\n\n          case 'connected':\n          case 'completed':\n            item.stateText = 'Connected';\n            item.connected = true;\n            break;\n\n          case 'disconnected':\n            item.stateText = 'Disconnected';\n            break;\n\n          case 'failed':\n            item.stateText = 'Failed';\n            break;\n\n          case 'closed':\n            item.stateText = 'Closed';\n        }\n\n        items.push(item);\n        itemsById[id] = item;\n      });\n    });\n    this.remoteItems.set(items);\n    this.remoteItemsById.set(itemsById);\n  }\n\n  broadcastStatus() {\n    if (this.active !== true || this.monitor === true || this.remoteMonitoring === true) {\n      return;\n    }\n\n    const remoteConnections = [];\n    const {\n      peerConnections\n    } = this;\n    Object.keys(peerConnections).entries(_ref3 => {\n      let [id, {\n        remoteMedia: media\n      }] = _ref3;\n      remoteConnections.push({\n        id,\n        media\n      });\n    });\n    this.transport.sendStatus({\n      media: this.media,\n      remoteConnections\n    });\n  }\n  /*\n   \t\t@param data {Object}\n   \t\t\tfrom {String}\n   \t\t\tmedia {Object}\n   \t\t\tremoteConnections {Array[Object]}\n   \t\t\t\tid {String}\n   \t\t\t\tmedia {Object}\n    */\n\n\n  onRemoteStatus(data) {\n    // this.log(onRemoteStatus, arguments);\n    this.callInProgress.set(true);\n    Meteor.clearTimeout(this.callInProgressTimeout);\n    this.callInProgressTimeout = Meteor.setTimeout(this.resetCallInProgress, 2000);\n\n    if (this.active !== true) {\n      return;\n    }\n\n    const remoteConnections = [{\n      id: data.from,\n      media: data.media\n    }, ...data.remoteConnections];\n    remoteConnections.forEach(remoteConnection => {\n      if (remoteConnection.id !== this.selfId && this.peerConnections[remoteConnection.id] == null) {\n        this.log('reconnecting with', remoteConnection.id);\n        this.onRemoteJoin({\n          from: remoteConnection.id,\n          media: remoteConnection.media\n        });\n      }\n    });\n  }\n  /*\n   \t\t@param id {String}\n    */\n\n\n  getPeerConnection(id) {\n    if (this.peerConnections[id] != null) {\n      return this.peerConnections[id];\n    }\n\n    const peerConnection = new RTCPeerConnection(this.config);\n    peerConnection.createdAt = Date.now();\n    peerConnection.remoteMedia = {};\n    this.peerConnections[id] = peerConnection;\n    const eventNames = ['icecandidate', 'addstream', 'removestream', 'iceconnectionstatechange', 'datachannel', 'identityresult', 'idpassertionerror', 'idpvalidationerror', 'negotiationneeded', 'peeridentity', 'signalingstatechange'];\n    eventNames.forEach(eventName => {\n      peerConnection.addEventListener(eventName, e => {\n        this.log(id, e.type, e);\n      });\n    });\n    peerConnection.addEventListener('icecandidate', e => {\n      if (e.candidate == null) {\n        return;\n      }\n\n      this.transport.sendCandidate({\n        to: id,\n        candidate: {\n          candidate: e.candidate.candidate,\n          sdpMLineIndex: e.candidate.sdpMLineIndex,\n          sdpMid: e.candidate.sdpMid\n        }\n      });\n    });\n    peerConnection.addEventListener('addstream', () => {\n      this.updateRemoteItems();\n    });\n    peerConnection.addEventListener('removestream', () => {\n      this.updateRemoteItems();\n    });\n    peerConnection.addEventListener('iceconnectionstatechange', () => {\n      if ((peerConnection.iceConnectionState === 'disconnected' || peerConnection.iceConnectionState === 'closed') && peerConnection === this.peerConnections[id]) {\n        this.stopPeerConnection(id);\n        Meteor.setTimeout(() => {\n          if (Object.keys(this.peerConnections).length === 0) {\n            this.stop();\n          }\n        }, 3000);\n      }\n\n      this.updateRemoteItems();\n    });\n    return peerConnection;\n  }\n\n  _getUserMedia(media, onSuccess, onError) {\n    const onSuccessLocal = stream => {\n      if (AudioContext && stream.getAudioTracks().length > 0) {\n        const audioContext = new AudioContext();\n        const source = audioContext.createMediaStreamSource(stream);\n        const volume = audioContext.createGain();\n        source.connect(volume);\n        const peer = audioContext.createMediaStreamDestination();\n        volume.connect(peer);\n        volume.gain.value = 0.6;\n        stream.removeTrack(stream.getAudioTracks()[0]);\n        stream.addTrack(peer.stream.getAudioTracks()[0]);\n        stream.volume = volume;\n        this.audioContext = audioContext;\n      }\n\n      onSuccess(stream);\n    };\n\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(media).then(onSuccessLocal).catch(onError);\n    }\n\n    navigator.getUserMedia(media, onSuccessLocal, onError);\n  }\n\n  getUserMedia(media, onSuccess) {\n    let onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.onError;\n\n    if (media.desktop !== true) {\n      this._getUserMedia(media, onSuccess, onError);\n\n      return;\n    }\n\n    if (this.screenShareAvailable !== true) {\n      console.log('Screen share is not avaliable');\n      return;\n    }\n\n    const getScreen = audioStream => {\n      const refresh = function () {\n        modal.open({\n          type: 'warning',\n          title: TAPi18n.__('Refresh_your_page_after_install_to_enable_screen_sharing')\n        });\n      };\n\n      const isChromeExtensionInstalled = this.navigator === 'chrome' && ChromeScreenShare.installed;\n      const isFirefoxExtensionInstalled = this.navigator === 'firefox' && window.rocketchatscreenshare != null;\n\n      if (!isChromeExtensionInstalled && !isFirefoxExtensionInstalled) {\n        modal.open({\n          type: 'warning',\n          title: TAPi18n.__('Screen_Share'),\n          text: TAPi18n.__('You_need_install_an_extension_to_allow_screen_sharing'),\n          html: true,\n          showCancelButton: true,\n          confirmButtonText: TAPi18n.__('Install_Extension'),\n          cancelButtonText: TAPi18n.__('Cancel')\n        }, isConfirm => {\n          if (isConfirm) {\n            if (this.navigator === 'chrome') {\n              const url = 'https://chrome.google.com/webstore/detail/rocketchat-screen-share/nocfbnnmjnndkbipkabodnheejiegccf';\n\n              try {\n                chrome.webstore.install(url, refresh, function () {\n                  window.open(url);\n                  refresh();\n                });\n              } catch (_error) {\n                console.log(_error);\n                window.open(url);\n                refresh();\n              }\n            } else if (this.navigator === 'firefox') {\n              window.open('https://addons.mozilla.org/en-GB/firefox/addon/rocketchat-screen-share/');\n              refresh();\n            }\n          }\n        });\n        return onError(false);\n      }\n\n      const getScreenSuccess = stream => {\n        if (audioStream != null) {\n          stream.addTrack(audioStream.getAudioTracks()[0]);\n        }\n\n        onSuccess(stream);\n      };\n\n      if (this.navigator === 'firefox') {\n        media = {\n          audio: media.audio,\n          video: {\n            mozMediaSource: 'window',\n            mediaSource: 'window'\n          }\n        };\n\n        this._getUserMedia(media, getScreenSuccess, onError);\n      } else {\n        ChromeScreenShare.getSourceId(this.navigator, id => {\n          media = {\n            audio: false,\n            video: {\n              mandatory: {\n                chromeMediaSource: 'desktop',\n                chromeMediaSourceId: id,\n                maxWidth: 1280,\n                maxHeight: 720\n              }\n            }\n          };\n\n          this._getUserMedia(media, getScreenSuccess, onError);\n        });\n      }\n    };\n\n    if (this.navigator === 'firefox' || media.audio == null || media.audio === false) {\n      getScreen();\n    } else {\n      const getAudioSuccess = audioStream => {\n        getScreen(audioStream);\n      };\n\n      const getAudioError = () => {\n        getScreen();\n      };\n\n      this._getUserMedia({\n        audio: media.audio\n      }, getAudioSuccess, getAudioError);\n    }\n  }\n  /*\n   \t\t@param callback {Function}\n    */\n\n\n  getLocalUserMedia(callback) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    this.log('getLocalUserMedia', [callback, ...args]);\n\n    if (this.localStream != null) {\n      return callback(null, this.localStream);\n    }\n\n    const onSuccess = stream => {\n      this.localStream = stream;\n      !this.audioEnabled.get() && this.disableAudio();\n      !this.videoEnabled.get() && this.disableVideo();\n      this.localUrl.set(stream);\n      const {\n        peerConnections\n      } = this;\n      Object.entries(peerConnections).forEach(_ref4 => {\n        let [, peerConnection] = _ref4;\n        return peerConnection.addStream(stream);\n      });\n      document.querySelector('video#localVideo').srcObject = stream;\n      callback(null, this.localStream);\n    };\n\n    const onError = error => {\n      callback(false);\n      this.onError(error);\n    };\n\n    this.getUserMedia(this.media, onSuccess, onError);\n  }\n  /*\n   \t\t@param id {String}\n    */\n\n\n  stopAllPeerConnections() {\n    const {\n      peerConnections\n    } = this;\n    Object.keys(peerConnections).forEach(this.stopPeerConnection);\n    window.audioContext && window.audioContext.close();\n  }\n\n  setAudioEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (this.localStream != null) {\n      this.localStream.getAudioTracks().forEach(function (audio) {\n        audio.enabled = enabled;\n      });\n      this.audioEnabled.set(enabled);\n    }\n  }\n\n  disableAudio() {\n    this.setAudioEnabled(false);\n  }\n\n  enableAudio() {\n    this.setAudioEnabled(true);\n  }\n\n  toggleAudio() {\n    if (this.audioEnabled.get()) {\n      return this.disableAudio();\n    }\n\n    return this.enableAudio();\n  }\n\n  setVideoEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (this.localStream != null) {\n      this.localStream.getVideoTracks().forEach(function (video) {\n        video.enabled = enabled;\n      });\n      this.videoEnabled.set(enabled);\n    }\n  }\n\n  disableScreenShare() {\n    this.setScreenShareEnabled(false);\n  }\n\n  enableScreenShare() {\n    this.setScreenShareEnabled(true);\n  }\n\n  setScreenShareEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (this.localStream != null) {\n      this.media.desktop = enabled;\n      delete this.localStream;\n      this.getLocalUserMedia(err => {\n        if (err != null) {\n          return;\n        }\n\n        this.screenShareEnabled.set(enabled);\n        this.stopAllPeerConnections();\n        this.joinCall();\n      });\n    }\n  }\n\n  disableVideo() {\n    this.setVideoEnabled(false);\n  }\n\n  enableVideo() {\n    this.setVideoEnabled(true);\n  }\n\n  toggleVideo() {\n    if (this.videoEnabled.get()) {\n      return this.disableVideo();\n    }\n\n    return this.enableVideo();\n  }\n\n  stop() {\n    this.active = false;\n    this.monitor = false;\n    this.remoteMonitoring = false;\n\n    if (this.localStream != null && typeof this.localStream !== 'undefined') {\n      this.localStream.getTracks().forEach(track => track.stop());\n    }\n\n    this.localUrl.set(undefined);\n    delete this.localStream;\n    this.stopAllPeerConnections();\n  }\n  /*\n   \t\t@param media {Object}\n   \t\t\taudio {Boolean}\n   \t\t\tvideo {Boolean}\n    */\n\n\n  startCall() {\n    let media = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    this.log('startCall', [media, ...args]);\n    this.media = media;\n    this.getLocalUserMedia(() => {\n      this.active = true;\n      this.transport.startCall({\n        media: this.media\n      });\n    });\n  }\n\n  startCallAsMonitor() {\n    let media = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n\n    this.log('startCallAsMonitor', [media, ...args]);\n    this.media = media;\n    this.active = true;\n    this.monitor = true;\n    this.transport.startCall({\n      media: this.media,\n      monitor: true\n    });\n  }\n  /*\n   \t\t@param data {Object}\n   \t\t\tfrom {String}\n   \t\t\tmonitor {Boolean}\n   \t\t\tmedia {Object}\n   \t\t\t\taudio {Boolean}\n   \t\t\t\tvideo {Boolean}\n    */\n\n\n  onRemoteCall(data) {\n    if (this.autoAccept === true) {\n      Meteor.defer(() => {\n        this.joinCall({\n          to: data.from,\n          monitor: data.monitor,\n          media: data.media\n        });\n      });\n      return;\n    }\n\n    const user = Meteor.users.findOne(data.from);\n    let fromUsername = undefined;\n\n    if (user && user.username) {\n      fromUsername = user.username;\n    }\n\n    const subscription = ChatSubscription.findOne({\n      rid: data.room\n    });\n    let icon;\n    let title;\n\n    if (data.monitor === true) {\n      icon = 'eye';\n      title = t('WebRTC_monitor_call_from_%s', fromUsername);\n    } else if (subscription && subscription.t === 'd') {\n      if (data.media && data.media.video) {\n        icon = 'videocam';\n        title = t('WebRTC_direct_video_call_from_%s', fromUsername);\n      } else {\n        icon = 'phone';\n        title = t('WebRTC_direct_audio_call_from_%s', fromUsername);\n      }\n    } else if (data.media && data.media.video) {\n      icon = 'videocam';\n      title = t('WebRTC_group_video_call_from_%s', subscription.name);\n    } else {\n      icon = 'phone';\n      title = t('WebRTC_group_audio_call_from_%s', subscription.name);\n    }\n\n    modal.open({\n      title: \"<i class='icon-\".concat(icon, \" alert-icon success-color'></i>\").concat(title),\n      text: t('Do_you_want_to_accept'),\n      html: true,\n      showCancelButton: true,\n      confirmButtonText: t('Yes'),\n      cancelButtonText: t('No')\n    }, isConfirm => {\n      if (isConfirm) {\n        goToRoomById(data.room);\n        return this.joinCall({\n          to: data.from,\n          monitor: data.monitor,\n          media: data.media\n        });\n      }\n\n      this.stop();\n    });\n  }\n  /*\n   \t\t@param data {Object}\n   \t\t\tto {String}\n   \t\t\tmonitor {Boolean}\n   \t\t\tmedia {Object}\n   \t\t\t\taudio {Boolean}\n   \t\t\t\tvideo {Boolean}\n   \t\t\t\tdesktop {Boolean}\n    */\n\n\n  joinCall() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    data.media = this.media;\n\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n\n    this.log('joinCall', [data, ...args]);\n    this.getLocalUserMedia(() => {\n      this.remoteMonitoring = data.monitor;\n      this.active = true;\n      this.transport.joinCall(data);\n    });\n  }\n\n  onRemoteJoin(data) {\n    if (this.active !== true) {\n      return;\n    }\n\n    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      args[_key7 - 1] = arguments[_key7];\n    }\n\n    this.log('onRemoteJoin', [data, ...args]);\n    let peerConnection = this.getPeerConnection(data.from); // needsRefresh = false\n    // if peerConnection.iceConnectionState isnt 'new'\n    // needsAudio = data.media.audio is true and peerConnection.remoteMedia.audio isnt true\n    // needsVideo = data.media.video is true and peerConnection.remoteMedia.video isnt true\n    // needsRefresh = needsAudio or needsVideo or data.media.desktop isnt peerConnection.remoteMedia.desktop\n    // # if peerConnection.signalingState is \"have-local-offer\" or needsRefresh\n\n    if (peerConnection.signalingState !== 'checking') {\n      this.stopPeerConnection(data.from);\n      peerConnection = this.getPeerConnection(data.from);\n    }\n\n    if (peerConnection.iceConnectionState !== 'new') {\n      return;\n    }\n\n    peerConnection.remoteMedia = data.media;\n\n    if (this.localStream) {\n      peerConnection.addStream(this.localStream);\n    }\n\n    const onOffer = offer => {\n      const onLocalDescription = () => {\n        this.transport.sendDescription({\n          to: data.from,\n          type: 'offer',\n          ts: peerConnection.createdAt,\n          media: this.media,\n          description: {\n            sdp: offer.sdp,\n            type: offer.type\n          }\n        });\n      };\n\n      peerConnection.setLocalDescription(new RTCSessionDescription(offer), onLocalDescription, this.onError);\n    };\n\n    if (data.monitor === true) {\n      peerConnection.createOffer(onOffer, this.onError, {\n        mandatory: {\n          OfferToReceiveAudio: data.media.audio,\n          OfferToReceiveVideo: data.media.video\n        }\n      });\n    } else {\n      peerConnection.createOffer(onOffer, this.onError);\n    }\n  }\n\n  onRemoteOffer(data) {\n    if (this.active !== true) {\n      return;\n    }\n\n    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      args[_key8 - 1] = arguments[_key8];\n    }\n\n    this.log('onRemoteOffer', [data, ...args]);\n    let peerConnection = this.getPeerConnection(data.from);\n\n    if (['have-local-offer', 'stable'].includes(peerConnection.signalingState) && peerConnection.createdAt < data.ts) {\n      this.stopPeerConnection(data.from);\n      peerConnection = this.getPeerConnection(data.from);\n    }\n\n    if (peerConnection.iceConnectionState !== 'new') {\n      return;\n    }\n\n    peerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n\n    try {\n      if (this.localStream) {\n        peerConnection.addStream(this.localStream);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    const onAnswer = answer => {\n      const onLocalDescription = () => {\n        this.transport.sendDescription({\n          to: data.from,\n          type: 'answer',\n          ts: peerConnection.createdAt,\n          description: {\n            sdp: answer.sdp,\n            type: answer.type\n          }\n        });\n      };\n\n      peerConnection.setLocalDescription(new RTCSessionDescription(answer), onLocalDescription, this.onError);\n    };\n\n    peerConnection.createAnswer(onAnswer, this.onError);\n  }\n  /*\n   \t\t@param data {Object}\n   \t\t\tto {String}\n   \t\t\tfrom {String}\n   \t\t\tcandidate {RTCIceCandidate JSON encoded}\n    */\n\n\n  onRemoteCandidate(data) {\n    var _this$remoteItems$get;\n\n    if (this.active !== true) {\n      return;\n    }\n\n    if (data.to !== this.selfId) {\n      return;\n    }\n\n    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      args[_key9 - 1] = arguments[_key9];\n    }\n\n    this.log('onRemoteCandidate', [data, ...args]);\n    const peerConnection = this.getPeerConnection(data.from);\n\n    if (peerConnection.iceConnectionState !== 'closed' && peerConnection.iceConnectionState !== 'failed' && peerConnection.iceConnectionState !== 'disconnected' && peerConnection.iceConnectionState !== 'completed') {\n      peerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\n    }\n\n    document.querySelector('video#remoteVideo').srcObject = (_this$remoteItems$get = this.remoteItems.get()[0]) === null || _this$remoteItems$get === void 0 ? void 0 : _this$remoteItems$get.url;\n  }\n  /*\n   \t\t@param data {Object}\n   \t\t\tto {String}\n   \t\t\tfrom {String}\n   \t\t\ttype {String} [offer, answer]\n   \t\t\tdescription {RTCSessionDescription JSON encoded}\n   \t\t\tts {Integer}\n   \t\t\tmedia {Object}\n   \t\t\t\taudio {Boolean}\n   \t\t\t\tvideo {Boolean}\n   \t\t\t\tdesktop {Boolean}\n    */\n\n\n  onRemoteDescription(data) {\n    if (this.active !== true) {\n      return;\n    }\n\n    if (data.to !== this.selfId) {\n      return;\n    }\n\n    for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n      args[_key10 - 1] = arguments[_key10];\n    }\n\n    this.log('onRemoteDescription', [data, ...args]);\n    const peerConnection = this.getPeerConnection(data.from);\n\n    if (data.type === 'offer') {\n      peerConnection.remoteMedia = data.media;\n      this.onRemoteOffer({\n        from: data.from,\n        ts: data.ts,\n        description: data.description\n      });\n    } else {\n      peerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n    }\n  }\n\n}\n\nconst WebRTC = new class {\n  constructor() {\n    this.instancesByRoomId = {};\n  }\n\n  getInstanceByRoomId(rid) {\n    let visitorId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let enabled = false;\n\n    if (!visitorId) {\n      const subscription = ChatSubscription.findOne({\n        rid\n      });\n\n      if (!subscription) {\n        return;\n      }\n\n      switch (subscription.t) {\n        case 'd':\n          enabled = settings.get('WebRTC_Enable_Direct');\n          break;\n\n        case 'p':\n          enabled = settings.get('WebRTC_Enable_Private');\n          break;\n\n        case 'c':\n          enabled = settings.get('WebRTC_Enable_Channel');\n          break;\n\n        case 'l':\n          enabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n      }\n    } else {\n      enabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n    }\n\n    enabled = enabled && settings.get('WebRTC_Enabled');\n\n    if (enabled === false) {\n      return;\n    }\n\n    if (this.instancesByRoomId[rid] == null) {\n      let uid = Meteor.userId();\n      let autoAccept = false;\n\n      if (visitorId) {\n        uid = visitorId;\n        autoAccept = true;\n      }\n\n      this.instancesByRoomId[rid] = new WebRTCClass(uid, rid, autoAccept);\n    }\n\n    return this.instancesByRoomId[rid];\n  }\n\n}();\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    if (Meteor.userId()) {\n      Notifications.onUser(WEB_RTC_EVENTS.WEB_RTC, (type, data) => {\n        if (data.room == null) {\n          return;\n        }\n\n        const webrtc = WebRTC.getInstanceByRoomId(data.room);\n        webrtc.onUserStream(type, data);\n      });\n    }\n  });\n});","map":{"version":3,"sources":["app/webrtc/client/WebRTCClass.js"],"names":["module","export","WebRTC","Emitter","link","v","Meteor","Tracker","ReactiveVar","TAPi18n","ChromeScreenShare","t","Notifications","settings","modal","ChatSubscription","WEB_RTC_EVENTS","goToRoomById","WebRTCTransportClass","constructor","webrtcInstance","debug","onRoom","room","WEB_RTC","type","data","log","emit","console","onUserStream","startCall","selfId","notifyUsersOfRoom","CALL","from","media","monitor","joinCall","notifyUser","to","JOIN","sendCandidate","CANDIDATE","sendDescription","DESCRIPTION","sendStatus","notifyRoom","STATUS","onRemoteCall","fn","on","onRemoteJoin","onRemoteCandidate","onRemoteDescription","onRemoteStatus","WebRTCClass","autoAccept","resetCallInProgress","callInProgress","set","stopPeerConnection","id","peerConnection","peerConnections","close","updateRemoteItems","config","iceServers","TransportClass","servers","get","trim","replace","split","forEach","server","serverConfig","urls","pop","length","username","decodeURIComponent","credential","push","remoteItems","remoteItemsById","audioEnabled","videoEnabled","overlayEnabled","screenShareEnabled","localUrl","active","remoteMonitoring","navigator","undefined","userAgent","toLocaleLowerCase","indexOf","screenShareAvailable","includes","video","audio","transport","bind","setInterval","checkPeerConnections","args","apply","onError","error","date","Date","now","Object","entries","some","iceConnectionState","createdAt","items","itemsById","getRemoteStreams","remoteStream","item","url","state","stateText","connected","broadcastStatus","remoteConnections","keys","remoteMedia","clearTimeout","callInProgressTimeout","setTimeout","remoteConnection","getPeerConnection","RTCPeerConnection","eventNames","eventName","addEventListener","e","candidate","sdpMLineIndex","sdpMid","stop","_getUserMedia","onSuccess","onSuccessLocal","stream","AudioContext","getAudioTracks","audioContext","source","createMediaStreamSource","volume","createGain","connect","peer","createMediaStreamDestination","gain","value","removeTrack","addTrack","mediaDevices","getUserMedia","then","catch","desktop","getScreen","audioStream","refresh","open","title","__","isChromeExtensionInstalled","installed","isFirefoxExtensionInstalled","window","rocketchatscreenshare","text","html","showCancelButton","confirmButtonText","cancelButtonText","isConfirm","chrome","webstore","install","_error","getScreenSuccess","mozMediaSource","mediaSource","getSourceId","mandatory","chromeMediaSource","chromeMediaSourceId","maxWidth","maxHeight","getAudioSuccess","getAudioError","getLocalUserMedia","callback","localStream","disableAudio","disableVideo","addStream","document","querySelector","srcObject","stopAllPeerConnections","setAudioEnabled","enabled","enableAudio","toggleAudio","setVideoEnabled","getVideoTracks","disableScreenShare","setScreenShareEnabled","enableScreenShare","err","enableVideo","toggleVideo","getTracks","track","startCallAsMonitor","defer","user","users","findOne","fromUsername","subscription","rid","icon","name","signalingState","onOffer","offer","onLocalDescription","ts","description","sdp","setLocalDescription","RTCSessionDescription","createOffer","OfferToReceiveAudio","OfferToReceiveVideo","onRemoteOffer","setRemoteDescription","onAnswer","answer","createAnswer","addIceCandidate","RTCIceCandidate","instancesByRoomId","getInstanceByRoomId","visitorId","uid","userId","startup","autorun","onUser","webrtc"],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { ChromeScreenShare } from './screenShare';\nimport { t } from '../../utils';\nimport { Notifications } from '../../notifications';\nimport { settings } from '../../settings';\nimport { modal } from '../../ui-utils';\nimport { ChatSubscription } from '../../models';\nimport { WEB_RTC_EVENTS } from '..';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\n\nclass WebRTCTransportClass extends Emitter {\n\tconstructor(webrtcInstance) {\n\t\tsuper();\n\t\tthis.debug = false;\n\t\tthis.webrtcInstance = webrtcInstance;\n\t\tNotifications.onRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, (type, data) => {\n\t\t\tthis.log('WebRTCTransportClass - onRoom', type, data);\n\t\t\tthis.emit(type, data);\n\t\t});\n\t}\n\n\tlog(...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log(...args);\n\t\t}\n\t}\n\n\tonUserStream(type, data) {\n\t\tif (data.room !== this.webrtcInstance.room) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('WebRTCTransportClass - onUser', type, data);\n\t\tthis.emit(type, data);\n\t}\n\n\tstartCall(data) {\n\t\tthis.log('WebRTCTransportClass - startCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n\t\tNotifications.notifyUsersOfRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.CALL, {\n\t\t\tfrom: this.webrtcInstance.selfId,\n\t\t\troom: this.webrtcInstance.room,\n\t\t\tmedia: data.media,\n\t\t\tmonitor: data.monitor,\n\t\t});\n\t}\n\n\tjoinCall(data) {\n\t\tthis.log('WebRTCTransportClass - joinCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n\t\tif (data.monitor === true) {\n\t\t\tNotifications.notifyUser(data.to, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.JOIN, {\n\t\t\t\tfrom: this.webrtcInstance.selfId,\n\t\t\t\troom: this.webrtcInstance.room,\n\t\t\t\tmedia: data.media,\n\t\t\t\tmonitor: data.monitor,\n\t\t\t});\n\t\t} else {\n\t\t\tNotifications.notifyUsersOfRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.JOIN, {\n\t\t\t\tfrom: this.webrtcInstance.selfId,\n\t\t\t\troom: this.webrtcInstance.room,\n\t\t\t\tmedia: data.media,\n\t\t\t\tmonitor: data.monitor,\n\t\t\t});\n\t\t}\n\t}\n\n\tsendCandidate(data) {\n\t\tdata.from = this.webrtcInstance.selfId;\n\t\tdata.room = this.webrtcInstance.room;\n\t\tthis.log('WebRTCTransportClass - sendCandidate', data);\n\t\tNotifications.notifyUser(data.to, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.CANDIDATE, data);\n\t}\n\n\tsendDescription(data) {\n\t\tdata.from = this.webrtcInstance.selfId;\n\t\tdata.room = this.webrtcInstance.room;\n\t\tthis.log('WebRTCTransportClass - sendDescription', data);\n\t\tNotifications.notifyUser(data.to, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.DESCRIPTION, data);\n\t}\n\n\tsendStatus(data) {\n\t\tthis.log('WebRTCTransportClass - sendStatus', data, this.webrtcInstance.room);\n\t\tdata.from = this.webrtcInstance.selfId;\n\t\tNotifications.notifyRoom(this.webrtcInstance.room, WEB_RTC_EVENTS.WEB_RTC, WEB_RTC_EVENTS.STATUS, data);\n\t}\n\n\tonRemoteCall(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.CALL, fn);\n\t}\n\n\tonRemoteJoin(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.JOIN, fn);\n\t}\n\n\tonRemoteCandidate(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.CANDIDATE, fn);\n\t}\n\n\tonRemoteDescription(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.DESCRIPTION, fn);\n\t}\n\n\tonRemoteStatus(fn) {\n\t\treturn this.on(WEB_RTC_EVENTS.STATUS, fn);\n\t}\n}\n\nclass WebRTCClass {\n\t/*\n  \t\t@param seldId {String}\n  \t\t@param room {String}\n   */\n\n\tconstructor(selfId, room, autoAccept = false) {\n\t\tthis.config = {\n\t\t\ticeServers: [],\n\t\t};\n\t\tthis.debug = false;\n\t\tthis.TransportClass = WebRTCTransportClass;\n\t\tthis.selfId = selfId;\n\t\tthis.room = room;\n\t\tlet servers = settings.get('WebRTC_Servers');\n\t\tif (servers && servers.trim() !== '') {\n\t\t\tservers = servers.replace(/\\s/g, '');\n\t\t\tservers = servers.split(',');\n\n\t\t\tservers.forEach((server) => {\n\t\t\t\tserver = server.split('@');\n\t\t\t\tconst serverConfig = {\n\t\t\t\t\turls: server.pop(),\n\t\t\t\t};\n\t\t\t\tif (server.length === 1) {\n\t\t\t\t\tserver = server[0].split(':');\n\t\t\t\t\tserverConfig.username = decodeURIComponent(server[0]);\n\t\t\t\t\tserverConfig.credential = decodeURIComponent(server[1]);\n\t\t\t\t}\n\t\t\t\tthis.config.iceServers.push(serverConfig);\n\t\t\t});\n\t\t}\n\t\tthis.peerConnections = {};\n\t\tthis.remoteItems = new ReactiveVar([]);\n\t\tthis.remoteItemsById = new ReactiveVar({});\n\t\tthis.callInProgress = new ReactiveVar(false);\n\t\tthis.audioEnabled = new ReactiveVar(false);\n\t\tthis.videoEnabled = new ReactiveVar(false);\n\t\tthis.overlayEnabled = new ReactiveVar(false);\n\t\tthis.screenShareEnabled = new ReactiveVar(false);\n\t\tthis.localUrl = new ReactiveVar();\n\t\tthis.active = false;\n\t\tthis.remoteMonitoring = false;\n\t\tthis.monitor = false;\n\t\tthis.autoAccept = autoAccept;\n\t\tthis.navigator = undefined;\n\t\tconst userAgent = navigator.userAgent.toLocaleLowerCase();\n\n\t\tif (userAgent.indexOf('electron') !== -1) {\n\t\t\tthis.navigator = 'electron';\n\t\t} else if (userAgent.indexOf('chrome') !== -1) {\n\t\t\tthis.navigator = 'chrome';\n\t\t} else if (userAgent.indexOf('firefox') !== -1) {\n\t\t\tthis.navigator = 'firefox';\n\t\t} else if (userAgent.indexOf('safari') !== -1) {\n\t\t\tthis.navigator = 'safari';\n\t\t}\n\n\t\tthis.screenShareAvailable = ['chrome', 'firefox', 'electron'].includes(this.navigator);\n\t\tthis.media = {\n\t\t\tvideo: true,\n\t\t\taudio: true,\n\t\t};\n\t\tthis.transport = new this.TransportClass(this);\n\t\tthis.transport.onRemoteCall(this.onRemoteCall.bind(this));\n\t\tthis.transport.onRemoteJoin(this.onRemoteJoin.bind(this));\n\t\tthis.transport.onRemoteCandidate(this.onRemoteCandidate.bind(this));\n\t\tthis.transport.onRemoteDescription(this.onRemoteDescription.bind(this));\n\t\tthis.transport.onRemoteStatus(this.onRemoteStatus.bind(this));\n\n\t\tMeteor.setInterval(this.checkPeerConnections.bind(this), 1000);\n\n\t\t// Meteor.setInterval(this.broadcastStatus.bind(@), 1000);\n\t}\n\n\tonUserStream(...args) {\n\t\treturn this.transport.onUserStream(...args);\n\t}\n\n\tlog(...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log.apply(console, args);\n\t\t}\n\t}\n\n\tonError(...args) {\n\t\tconsole.error.apply(console, args);\n\t}\n\n\tcheckPeerConnections() {\n\t\tconst { peerConnections } = this;\n\t\tconst date = Date.now();\n\t\tObject.entries(peerConnections).some(([id, peerConnection]) => {\n\t\t\tif (!['connected', 'completed'].includes(peerConnection.iceConnectionState) && peerConnection.createdAt + 5000 < date) {\n\t\t\t\tthis.stopPeerConnection(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tupdateRemoteItems() {\n\t\tconst items = [];\n\t\tconst itemsById = {};\n\t\tconst { peerConnections } = this;\n\n\t\tObject.entries(peerConnections).forEach(([id, peerConnection]) => {\n\t\t\tpeerConnection.getRemoteStreams().forEach((remoteStream) => {\n\t\t\t\tconst item = {\n\t\t\t\t\tid,\n\t\t\t\t\turl: remoteStream,\n\t\t\t\t\tstate: peerConnection.iceConnectionState,\n\t\t\t\t};\n\t\t\t\tswitch (peerConnection.iceConnectionState) {\n\t\t\t\t\tcase 'checking':\n\t\t\t\t\t\titem.stateText = 'Connecting...';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'connected':\n\t\t\t\t\tcase 'completed':\n\t\t\t\t\t\titem.stateText = 'Connected';\n\t\t\t\t\t\titem.connected = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'disconnected':\n\t\t\t\t\t\titem.stateText = 'Disconnected';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'failed':\n\t\t\t\t\t\titem.stateText = 'Failed';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'closed':\n\t\t\t\t\t\titem.stateText = 'Closed';\n\t\t\t\t}\n\t\t\t\titems.push(item);\n\t\t\t\titemsById[id] = item;\n\t\t\t});\n\t\t});\n\t\tthis.remoteItems.set(items);\n\t\tthis.remoteItemsById.set(itemsById);\n\t}\n\n\tresetCallInProgress = () => {\n\t\tthis.callInProgress.set(false);\n\t};\n\n\tbroadcastStatus() {\n\t\tif (this.active !== true || this.monitor === true || this.remoteMonitoring === true) {\n\t\t\treturn;\n\t\t}\n\t\tconst remoteConnections = [];\n\t\tconst { peerConnections } = this;\n\t\tObject.keys(peerConnections).entries(([id, { remoteMedia: media }]) => {\n\t\t\tremoteConnections.push({\n\t\t\t\tid,\n\t\t\t\tmedia,\n\t\t\t});\n\t\t});\n\n\t\tthis.transport.sendStatus({\n\t\t\tmedia: this.media,\n\t\t\tremoteConnections,\n\t\t});\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmedia {Object}\n  \t\t\tremoteConnections {Array[Object]}\n  \t\t\t\tid {String}\n  \t\t\t\tmedia {Object}\n   */\n\n\tonRemoteStatus(data) {\n\t\t// this.log(onRemoteStatus, arguments);\n\t\tthis.callInProgress.set(true);\n\t\tMeteor.clearTimeout(this.callInProgressTimeout);\n\t\tthis.callInProgressTimeout = Meteor.setTimeout(this.resetCallInProgress, 2000);\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tconst remoteConnections = [\n\t\t\t{\n\t\t\t\tid: data.from,\n\t\t\t\tmedia: data.media,\n\t\t\t},\n\t\t\t...data.remoteConnections,\n\t\t];\n\n\t\tremoteConnections.forEach((remoteConnection) => {\n\t\t\tif (remoteConnection.id !== this.selfId && this.peerConnections[remoteConnection.id] == null) {\n\t\t\t\tthis.log('reconnecting with', remoteConnection.id);\n\t\t\t\tthis.onRemoteJoin({\n\t\t\t\t\tfrom: remoteConnection.id,\n\t\t\t\t\tmedia: remoteConnection.media,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n  \t\t@param id {String}\n   */\n\n\tgetPeerConnection(id) {\n\t\tif (this.peerConnections[id] != null) {\n\t\t\treturn this.peerConnections[id];\n\t\t}\n\t\tconst peerConnection = new RTCPeerConnection(this.config);\n\n\t\tpeerConnection.createdAt = Date.now();\n\t\tpeerConnection.remoteMedia = {};\n\t\tthis.peerConnections[id] = peerConnection;\n\t\tconst eventNames = [\n\t\t\t'icecandidate',\n\t\t\t'addstream',\n\t\t\t'removestream',\n\t\t\t'iceconnectionstatechange',\n\t\t\t'datachannel',\n\t\t\t'identityresult',\n\t\t\t'idpassertionerror',\n\t\t\t'idpvalidationerror',\n\t\t\t'negotiationneeded',\n\t\t\t'peeridentity',\n\t\t\t'signalingstatechange',\n\t\t];\n\n\t\teventNames.forEach((eventName) => {\n\t\t\tpeerConnection.addEventListener(eventName, (e) => {\n\t\t\t\tthis.log(id, e.type, e);\n\t\t\t});\n\t\t});\n\n\t\tpeerConnection.addEventListener('icecandidate', (e) => {\n\t\t\tif (e.candidate == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.transport.sendCandidate({\n\t\t\t\tto: id,\n\t\t\t\tcandidate: {\n\t\t\t\t\tcandidate: e.candidate.candidate,\n\t\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex,\n\t\t\t\t\tsdpMid: e.candidate.sdpMid,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\tpeerConnection.addEventListener('addstream', () => {\n\t\t\tthis.updateRemoteItems();\n\t\t});\n\t\tpeerConnection.addEventListener('removestream', () => {\n\t\t\tthis.updateRemoteItems();\n\t\t});\n\t\tpeerConnection.addEventListener('iceconnectionstatechange', () => {\n\t\t\tif (\n\t\t\t\t(peerConnection.iceConnectionState === 'disconnected' || peerConnection.iceConnectionState === 'closed') &&\n\t\t\t\tpeerConnection === this.peerConnections[id]\n\t\t\t) {\n\t\t\t\tthis.stopPeerConnection(id);\n\t\t\t\tMeteor.setTimeout(() => {\n\t\t\t\t\tif (Object.keys(this.peerConnections).length === 0) {\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t}\n\t\t\t\t}, 3000);\n\t\t\t}\n\t\t\tthis.updateRemoteItems();\n\t\t});\n\t\treturn peerConnection;\n\t}\n\n\t_getUserMedia(media, onSuccess, onError) {\n\t\tconst onSuccessLocal = (stream) => {\n\t\t\tif (AudioContext && stream.getAudioTracks().length > 0) {\n\t\t\t\tconst audioContext = new AudioContext();\n\t\t\t\tconst source = audioContext.createMediaStreamSource(stream);\n\t\t\t\tconst volume = audioContext.createGain();\n\t\t\t\tsource.connect(volume);\n\t\t\t\tconst peer = audioContext.createMediaStreamDestination();\n\t\t\t\tvolume.connect(peer);\n\t\t\t\tvolume.gain.value = 0.6;\n\t\t\t\tstream.removeTrack(stream.getAudioTracks()[0]);\n\t\t\t\tstream.addTrack(peer.stream.getAudioTracks()[0]);\n\t\t\t\tstream.volume = volume;\n\t\t\t\tthis.audioContext = audioContext;\n\t\t\t}\n\t\t\tonSuccess(stream);\n\t\t};\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n\t\t\treturn navigator.mediaDevices.getUserMedia(media).then(onSuccessLocal).catch(onError);\n\t\t}\n\n\t\tnavigator.getUserMedia(media, onSuccessLocal, onError);\n\t}\n\n\tgetUserMedia(media, onSuccess, onError = this.onError) {\n\t\tif (media.desktop !== true) {\n\t\t\tthis._getUserMedia(media, onSuccess, onError);\n\t\t\treturn;\n\t\t}\n\t\tif (this.screenShareAvailable !== true) {\n\t\t\tconsole.log('Screen share is not avaliable');\n\t\t\treturn;\n\t\t}\n\t\tconst getScreen = (audioStream) => {\n\t\t\tconst refresh = function () {\n\t\t\t\tmodal.open({\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\ttitle: TAPi18n.__('Refresh_your_page_after_install_to_enable_screen_sharing'),\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst isChromeExtensionInstalled = this.navigator === 'chrome' && ChromeScreenShare.installed;\n\t\t\tconst isFirefoxExtensionInstalled = this.navigator === 'firefox' && window.rocketchatscreenshare != null;\n\n\t\t\tif (!isChromeExtensionInstalled && !isFirefoxExtensionInstalled) {\n\t\t\t\tmodal.open(\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\ttitle: TAPi18n.__('Screen_Share'),\n\t\t\t\t\t\ttext: TAPi18n.__('You_need_install_an_extension_to_allow_screen_sharing'),\n\t\t\t\t\t\thtml: true,\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tconfirmButtonText: TAPi18n.__('Install_Extension'),\n\t\t\t\t\t\tcancelButtonText: TAPi18n.__('Cancel'),\n\t\t\t\t\t},\n\t\t\t\t\t(isConfirm) => {\n\t\t\t\t\t\tif (isConfirm) {\n\t\t\t\t\t\t\tif (this.navigator === 'chrome') {\n\t\t\t\t\t\t\t\tconst url = 'https://chrome.google.com/webstore/detail/rocketchat-screen-share/nocfbnnmjnndkbipkabodnheejiegccf';\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tchrome.webstore.install(url, refresh, function () {\n\t\t\t\t\t\t\t\t\t\twindow.open(url);\n\t\t\t\t\t\t\t\t\t\trefresh();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\t\t\t\tconsole.log(_error);\n\t\t\t\t\t\t\t\t\twindow.open(url);\n\t\t\t\t\t\t\t\t\trefresh();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (this.navigator === 'firefox') {\n\t\t\t\t\t\t\t\twindow.open('https://addons.mozilla.org/en-GB/firefox/addon/rocketchat-screen-share/');\n\t\t\t\t\t\t\t\trefresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\treturn onError(false);\n\t\t\t}\n\n\t\t\tconst getScreenSuccess = (stream) => {\n\t\t\t\tif (audioStream != null) {\n\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t}\n\t\t\t\tonSuccess(stream);\n\t\t\t};\n\t\t\tif (this.navigator === 'firefox') {\n\t\t\t\tmedia = {\n\t\t\t\t\taudio: media.audio,\n\t\t\t\t\tvideo: {\n\t\t\t\t\t\tmozMediaSource: 'window',\n\t\t\t\t\t\tmediaSource: 'window',\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tthis._getUserMedia(media, getScreenSuccess, onError);\n\t\t\t} else {\n\t\t\t\tChromeScreenShare.getSourceId(this.navigator, (id) => {\n\t\t\t\t\tmedia = {\n\t\t\t\t\t\taudio: false,\n\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\tchromeMediaSource: 'desktop',\n\t\t\t\t\t\t\t\tchromeMediaSourceId: id,\n\t\t\t\t\t\t\t\tmaxWidth: 1280,\n\t\t\t\t\t\t\t\tmaxHeight: 720,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tthis._getUserMedia(media, getScreenSuccess, onError);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tif (this.navigator === 'firefox' || media.audio == null || media.audio === false) {\n\t\t\tgetScreen();\n\t\t} else {\n\t\t\tconst getAudioSuccess = (audioStream) => {\n\t\t\t\tgetScreen(audioStream);\n\t\t\t};\n\t\t\tconst getAudioError = () => {\n\t\t\t\tgetScreen();\n\t\t\t};\n\n\t\t\tthis._getUserMedia(\n\t\t\t\t{\n\t\t\t\t\taudio: media.audio,\n\t\t\t\t},\n\t\t\t\tgetAudioSuccess,\n\t\t\t\tgetAudioError,\n\t\t\t);\n\t\t}\n\t}\n\n\t/*\n  \t\t@param callback {Function}\n   */\n\n\tgetLocalUserMedia(callback, ...args) {\n\t\tthis.log('getLocalUserMedia', [callback, ...args]);\n\t\tif (this.localStream != null) {\n\t\t\treturn callback(null, this.localStream);\n\t\t}\n\t\tconst onSuccess = (stream) => {\n\t\t\tthis.localStream = stream;\n\t\t\t!this.audioEnabled.get() && this.disableAudio();\n\t\t\t!this.videoEnabled.get() && this.disableVideo();\n\t\t\tthis.localUrl.set(stream);\n\t\t\tconst { peerConnections } = this;\n\t\t\tObject.entries(peerConnections).forEach(([, peerConnection]) => peerConnection.addStream(stream));\n\t\t\tdocument.querySelector('video#localVideo').srcObject = stream;\n\t\t\tcallback(null, this.localStream);\n\t\t};\n\t\tconst onError = (error) => {\n\t\t\tcallback(false);\n\t\t\tthis.onError(error);\n\t\t};\n\t\tthis.getUserMedia(this.media, onSuccess, onError);\n\t}\n\n\t/*\n  \t\t@param id {String}\n   */\n\n\tstopPeerConnection = (id) => {\n\t\tconst peerConnection = this.peerConnections[id];\n\t\tif (peerConnection == null) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this.peerConnections[id];\n\t\tpeerConnection.close();\n\t\tthis.updateRemoteItems();\n\t};\n\n\tstopAllPeerConnections() {\n\t\tconst { peerConnections } = this;\n\n\t\tObject.keys(peerConnections).forEach(this.stopPeerConnection);\n\n\t\twindow.audioContext && window.audioContext.close();\n\t}\n\n\tsetAudioEnabled(enabled = true) {\n\t\tif (this.localStream != null) {\n\t\t\tthis.localStream.getAudioTracks().forEach(function (audio) {\n\t\t\t\taudio.enabled = enabled;\n\t\t\t});\n\t\t\tthis.audioEnabled.set(enabled);\n\t\t}\n\t}\n\n\tdisableAudio() {\n\t\tthis.setAudioEnabled(false);\n\t}\n\n\tenableAudio() {\n\t\tthis.setAudioEnabled(true);\n\t}\n\n\ttoggleAudio() {\n\t\tif (this.audioEnabled.get()) {\n\t\t\treturn this.disableAudio();\n\t\t}\n\t\treturn this.enableAudio();\n\t}\n\n\tsetVideoEnabled(enabled = true) {\n\t\tif (this.localStream != null) {\n\t\t\tthis.localStream.getVideoTracks().forEach(function (video) {\n\t\t\t\tvideo.enabled = enabled;\n\t\t\t});\n\t\t\tthis.videoEnabled.set(enabled);\n\t\t}\n\t}\n\n\tdisableScreenShare() {\n\t\tthis.setScreenShareEnabled(false);\n\t}\n\n\tenableScreenShare() {\n\t\tthis.setScreenShareEnabled(true);\n\t}\n\n\tsetScreenShareEnabled(enabled = true) {\n\t\tif (this.localStream != null) {\n\t\t\tthis.media.desktop = enabled;\n\t\t\tdelete this.localStream;\n\t\t\tthis.getLocalUserMedia((err) => {\n\t\t\t\tif (err != null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.screenShareEnabled.set(enabled);\n\t\t\t\tthis.stopAllPeerConnections();\n\t\t\t\tthis.joinCall();\n\t\t\t});\n\t\t}\n\t}\n\n\tdisableVideo() {\n\t\tthis.setVideoEnabled(false);\n\t}\n\n\tenableVideo() {\n\t\tthis.setVideoEnabled(true);\n\t}\n\n\ttoggleVideo() {\n\t\tif (this.videoEnabled.get()) {\n\t\t\treturn this.disableVideo();\n\t\t}\n\t\treturn this.enableVideo();\n\t}\n\n\tstop() {\n\t\tthis.active = false;\n\t\tthis.monitor = false;\n\t\tthis.remoteMonitoring = false;\n\t\tif (this.localStream != null && typeof this.localStream !== 'undefined') {\n\t\t\tthis.localStream.getTracks().forEach((track) => track.stop());\n\t\t}\n\t\tthis.localUrl.set(undefined);\n\t\tdelete this.localStream;\n\t\tthis.stopAllPeerConnections();\n\t}\n\n\t/*\n  \t\t@param media {Object}\n  \t\t\taudio {Boolean}\n  \t\t\tvideo {Boolean}\n   */\n\n\tstartCall(media = {}, ...args) {\n\t\tthis.log('startCall', [media, ...args]);\n\t\tthis.media = media;\n\t\tthis.getLocalUserMedia(() => {\n\t\t\tthis.active = true;\n\t\t\tthis.transport.startCall({\n\t\t\t\tmedia: this.media,\n\t\t\t});\n\t\t});\n\t}\n\n\tstartCallAsMonitor(media = {}, ...args) {\n\t\tthis.log('startCallAsMonitor', [media, ...args]);\n\t\tthis.media = media;\n\t\tthis.active = true;\n\t\tthis.monitor = true;\n\t\tthis.transport.startCall({\n\t\t\tmedia: this.media,\n\t\t\tmonitor: true,\n\t\t});\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n   */\n\n\tonRemoteCall(data) {\n\t\tif (this.autoAccept === true) {\n\t\t\tMeteor.defer(() => {\n\t\t\t\tthis.joinCall({\n\t\t\t\t\tto: data.from,\n\t\t\t\t\tmonitor: data.monitor,\n\t\t\t\t\tmedia: data.media,\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = Meteor.users.findOne(data.from);\n\t\tlet fromUsername = undefined;\n\t\tif (user && user.username) {\n\t\t\tfromUsername = user.username;\n\t\t}\n\t\tconst subscription = ChatSubscription.findOne({\n\t\t\trid: data.room,\n\t\t});\n\n\t\tlet icon;\n\t\tlet title;\n\t\tif (data.monitor === true) {\n\t\t\ticon = 'eye';\n\t\t\ttitle = t('WebRTC_monitor_call_from_%s', fromUsername);\n\t\t} else if (subscription && subscription.t === 'd') {\n\t\t\tif (data.media && data.media.video) {\n\t\t\t\ticon = 'videocam';\n\t\t\t\ttitle = t('WebRTC_direct_video_call_from_%s', fromUsername);\n\t\t\t} else {\n\t\t\t\ticon = 'phone';\n\t\t\t\ttitle = t('WebRTC_direct_audio_call_from_%s', fromUsername);\n\t\t\t}\n\t\t} else if (data.media && data.media.video) {\n\t\t\ticon = 'videocam';\n\t\t\ttitle = t('WebRTC_group_video_call_from_%s', subscription.name);\n\t\t} else {\n\t\t\ticon = 'phone';\n\t\t\ttitle = t('WebRTC_group_audio_call_from_%s', subscription.name);\n\t\t}\n\t\tmodal.open(\n\t\t\t{\n\t\t\t\ttitle: `<i class='icon-${icon} alert-icon success-color'></i>${title}`,\n\t\t\t\ttext: t('Do_you_want_to_accept'),\n\t\t\t\thtml: true,\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tconfirmButtonText: t('Yes'),\n\t\t\t\tcancelButtonText: t('No'),\n\t\t\t},\n\t\t\t(isConfirm) => {\n\t\t\t\tif (isConfirm) {\n\t\t\t\t\tgoToRoomById(data.room);\n\t\t\t\t\treturn this.joinCall({\n\t\t\t\t\t\tto: data.from,\n\t\t\t\t\t\tmonitor: data.monitor,\n\t\t\t\t\t\tmedia: data.media,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.stop();\n\t\t\t},\n\t\t);\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n\tjoinCall(data = {}, ...args) {\n\t\tdata.media = this.media;\n\t\tthis.log('joinCall', [data, ...args]);\n\t\tthis.getLocalUserMedia(() => {\n\t\t\tthis.remoteMonitoring = data.monitor;\n\t\t\tthis.active = true;\n\t\t\tthis.transport.joinCall(data);\n\t\t});\n\t}\n\n\tonRemoteJoin(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tthis.log('onRemoteJoin', [data, ...args]);\n\t\tlet peerConnection = this.getPeerConnection(data.from);\n\n\t\t// needsRefresh = false\n\t\t// if peerConnection.iceConnectionState isnt 'new'\n\t\t// needsAudio = data.media.audio is true and peerConnection.remoteMedia.audio isnt true\n\t\t// needsVideo = data.media.video is true and peerConnection.remoteMedia.video isnt true\n\t\t// needsRefresh = needsAudio or needsVideo or data.media.desktop isnt peerConnection.remoteMedia.desktop\n\n\t\t// # if peerConnection.signalingState is \"have-local-offer\" or needsRefresh\n\n\t\tif (peerConnection.signalingState !== 'checking') {\n\t\t\tthis.stopPeerConnection(data.from);\n\t\t\tpeerConnection = this.getPeerConnection(data.from);\n\t\t}\n\t\tif (peerConnection.iceConnectionState !== 'new') {\n\t\t\treturn;\n\t\t}\n\t\tpeerConnection.remoteMedia = data.media;\n\t\tif (this.localStream) {\n\t\t\tpeerConnection.addStream(this.localStream);\n\t\t}\n\t\tconst onOffer = (offer) => {\n\t\t\tconst onLocalDescription = () => {\n\t\t\t\tthis.transport.sendDescription({\n\t\t\t\t\tto: data.from,\n\t\t\t\t\ttype: 'offer',\n\t\t\t\t\tts: peerConnection.createdAt,\n\t\t\t\t\tmedia: this.media,\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\tsdp: offer.sdp,\n\t\t\t\t\t\ttype: offer.type,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tpeerConnection.setLocalDescription(new RTCSessionDescription(offer), onLocalDescription, this.onError);\n\t\t};\n\n\t\tif (data.monitor === true) {\n\t\t\tpeerConnection.createOffer(onOffer, this.onError, {\n\t\t\t\tmandatory: {\n\t\t\t\t\tOfferToReceiveAudio: data.media.audio,\n\t\t\t\t\tOfferToReceiveVideo: data.media.video,\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tpeerConnection.createOffer(onOffer, this.onError);\n\t\t}\n\t}\n\n\tonRemoteOffer(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('onRemoteOffer', [data, ...args]);\n\t\tlet peerConnection = this.getPeerConnection(data.from);\n\n\t\tif (['have-local-offer', 'stable'].includes(peerConnection.signalingState) && peerConnection.createdAt < data.ts) {\n\t\t\tthis.stopPeerConnection(data.from);\n\t\t\tpeerConnection = this.getPeerConnection(data.from);\n\t\t}\n\n\t\tif (peerConnection.iceConnectionState !== 'new') {\n\t\t\treturn;\n\t\t}\n\n\t\tpeerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n\n\t\ttry {\n\t\t\tif (this.localStream) {\n\t\t\t\tpeerConnection.addStream(this.localStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\t\tconst onAnswer = (answer) => {\n\t\t\tconst onLocalDescription = () => {\n\t\t\t\tthis.transport.sendDescription({\n\t\t\t\t\tto: data.from,\n\t\t\t\t\ttype: 'answer',\n\t\t\t\t\tts: peerConnection.createdAt,\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\tsdp: answer.sdp,\n\t\t\t\t\t\ttype: answer.type,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tpeerConnection.setLocalDescription(new RTCSessionDescription(answer), onLocalDescription, this.onError);\n\t\t};\n\n\t\tpeerConnection.createAnswer(onAnswer, this.onError);\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tfrom {String}\n  \t\t\tcandidate {RTCIceCandidate JSON encoded}\n   */\n\n\tonRemoteCandidate(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tif (data.to !== this.selfId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.log('onRemoteCandidate', [data, ...args]);\n\t\tconst peerConnection = this.getPeerConnection(data.from);\n\t\tif (\n\t\t\tpeerConnection.iceConnectionState !== 'closed' &&\n\t\t\tpeerConnection.iceConnectionState !== 'failed' &&\n\t\t\tpeerConnection.iceConnectionState !== 'disconnected' &&\n\t\t\tpeerConnection.iceConnectionState !== 'completed'\n\t\t) {\n\t\t\tpeerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\n\t\t}\n\t\tdocument.querySelector('video#remoteVideo').srcObject = this.remoteItems.get()[0]?.url;\n\t}\n\n\t/*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tfrom {String}\n  \t\t\ttype {String} [offer, answer]\n  \t\t\tdescription {RTCSessionDescription JSON encoded}\n  \t\t\tts {Integer}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n\tonRemoteDescription(data, ...args) {\n\t\tif (this.active !== true) {\n\t\t\treturn;\n\t\t}\n\t\tif (data.to !== this.selfId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.log('onRemoteDescription', [data, ...args]);\n\t\tconst peerConnection = this.getPeerConnection(data.from);\n\t\tif (data.type === 'offer') {\n\t\t\tpeerConnection.remoteMedia = data.media;\n\t\t\tthis.onRemoteOffer({\n\t\t\t\tfrom: data.from,\n\t\t\t\tts: data.ts,\n\t\t\t\tdescription: data.description,\n\t\t\t});\n\t\t} else {\n\t\t\tpeerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n\t\t}\n\t}\n}\n\nconst WebRTC = new (class {\n\tconstructor() {\n\t\tthis.instancesByRoomId = {};\n\t}\n\n\tgetInstanceByRoomId(rid, visitorId = null) {\n\t\tlet enabled = false;\n\t\tif (!visitorId) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (subscription.t) {\n\t\t\t\tcase 'd':\n\t\t\t\t\tenabled = settings.get('WebRTC_Enable_Direct');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'p':\n\t\t\t\t\tenabled = settings.get('WebRTC_Enable_Private');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tenabled = settings.get('WebRTC_Enable_Channel');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'l':\n\t\t\t\t\tenabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t\t}\n\t\t} else {\n\t\t\tenabled = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\t}\n\t\tenabled = enabled && settings.get('WebRTC_Enabled');\n\t\tif (enabled === false) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.instancesByRoomId[rid] == null) {\n\t\t\tlet uid = Meteor.userId();\n\t\t\tlet autoAccept = false;\n\t\t\tif (visitorId) {\n\t\t\t\tuid = visitorId;\n\t\t\t\tautoAccept = true;\n\t\t\t}\n\t\t\tthis.instancesByRoomId[rid] = new WebRTCClass(uid, rid, autoAccept);\n\t\t}\n\t\treturn this.instancesByRoomId[rid];\n\t}\n})();\n\nMeteor.startup(function () {\n\tTracker.autorun(function () {\n\t\tif (Meteor.userId()) {\n\t\t\tNotifications.onUser(WEB_RTC_EVENTS.WEB_RTC, (type, data) => {\n\t\t\t\tif (data.room == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst webrtc = WebRTC.getInstanceByRoomId(data.room);\n\t\t\t\twebrtc.onUserStream(type, data);\n\t\t\t});\n\t\t}\n\t});\n});\n\nexport { WebRTC };\n"]},"sourceType":"module","hash":"4034696738339bf220b72a95d4c9146fb0a54afe"}
