{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/models/client/models/Roles.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/models/client/models/Roles.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/models/client/models/Roles.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/models/client/models/Roles.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/client/models/Roles.js"}},"code":"module.export({\n  Roles: function () {\n    return Roles;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar Models;\nmodule.link(\"..\", {\n  \"*\": function (v) {\n    Models = v;\n  }\n}, 2);\nvar Roles = Object.assign(new Mongo.Collection(null), {\n  /**\n   * @param {IRole['_id']} roleId\n   * @param {IRoom['_id']} scope the value for the role scope (room id)\n   * @param {any} options\n   */\n  findUsersInRole: function (roleId, scope, options) {\n    var role = this.findOne(roleId);\n    var roleScope = role && role.scope || 'Users';\n    var model = Models[roleScope];\n    return model && model.findUsersInRoles && model.findUsersInRoles(roleId, scope, options);\n  },\n\n  /**\n   * @param {string} userId\n   * @param {IRole['_id'][]} roles the list of role ids\n   * @param {IRoom['_id']} scope the value for the role scope (room id)\n   */\n  isUserInRoles: function (userId, roles, scope) {\n    var _this = this;\n\n    roles = [].concat(roles);\n    return roles.some(function (roleId) {\n      var role = _this.findOne(roleId);\n\n      var roleScope = role && role.scope || 'Users';\n      var model = Models[roleScope];\n      return model && model.isUserInRole && model.isUserInRole(userId, roleId, scope);\n    });\n  },\n  ready: new ReactiveVar(false)\n});","map":{"version":3,"sources":["app/models/client/models/Roles.js"],"names":["module","export","Roles","Mongo","link","v","ReactiveVar","Models","Object","assign","Collection","findUsersInRole","roleId","scope","options","role","findOne","roleScope","model","findUsersInRoles","isUserInRoles","userId","roles","concat","some","isUserInRole","ready"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,KAAK,EAAC,YAAU;AAAC,WAAOA,KAAP;AAAa;AAA/B,CAAd;AAAgD,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,EAAAA,KAAK,EAAC,UAASE,CAAT,EAAW;AAACF,IAAAA,KAAK,GAACE,CAAN;AAAQ;AAA3B,CAA3B,EAAwD,CAAxD;AAA2D,IAAIC,WAAJ;AAAgBN,MAAM,CAACI,IAAP,CAAY,qBAAZ,EAAkC;AAACE,EAAAA,WAAW,EAAC,UAASD,CAAT,EAAW;AAACC,IAAAA,WAAW,GAACD,CAAZ;AAAc;AAAvC,CAAlC,EAA2E,CAA3E;AAA8E,IAAIE,MAAJ;AAAWP,MAAM,CAACI,IAAP,CAAY,IAAZ,EAAiB;AAAC,OAAI,UAASC,CAAT,EAAW;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;AAA1B,CAAjB,EAA6C,CAA7C;AAK9N,IAAMH,KAAK,GAAGM,MAAM,CAACC,MAAP,CAAc,IAAIN,KAAK,CAACO,UAAV,CAAqB,IAArB,CAAd,EAA0C;AACvD;AACD;AACA;AACA;AACA;AACCC,EAAAA,eANuD,YAMvCC,MANuC,EAM/BC,KAN+B,EAMxBC,OANwB,EAMf;AACvC,QAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaJ,MAAb,CAAb;AACA,QAAMK,SAAS,GAAIF,IAAI,IAAIA,IAAI,CAACF,KAAd,IAAwB,OAA1C;AACA,QAAMK,KAAK,GAAGX,MAAM,CAACU,SAAD,CAApB;AACA,WAAOC,KAAK,IAAIA,KAAK,CAACC,gBAAf,IAAmCD,KAAK,CAACC,gBAAN,CAAuBP,MAAvB,EAA+BC,KAA/B,EAAsCC,OAAtC,CAA1C;AACA,GAXsD;;AAavD;AACD;AACA;AACA;AACA;AACCM,EAAAA,aAlBuD,YAkBzCC,MAlByC,EAkBjCC,KAlBiC,EAkB1BT,KAlB0B,EAkBnB;AAAA;;AACnCS,IAAAA,KAAK,GAAG,GAAGC,MAAH,CAAUD,KAAV,CAAR;AACA,WAAOA,KAAK,CAACE,IAAN,CAAW,UAACZ,MAAD,EAAY;AAC7B,UAAMG,IAAI,GAAG,KAAI,CAACC,OAAL,CAAaJ,MAAb,CAAb;;AACA,UAAMK,SAAS,GAAIF,IAAI,IAAIA,IAAI,CAACF,KAAd,IAAwB,OAA1C;AACA,UAAMK,KAAK,GAAGX,MAAM,CAACU,SAAD,CAApB;AACA,aAAOC,KAAK,IAAIA,KAAK,CAACO,YAAf,IAA+BP,KAAK,CAACO,YAAN,CAAmBJ,MAAnB,EAA2BT,MAA3B,EAAmCC,KAAnC,CAAtC;AACA,KALM,CAAP;AAMA,GA1BsD;AA4BvDa,EAAAA,KAAK,EAAE,IAAIpB,WAAJ,CAAgB,KAAhB;AA5BgD,CAA1C,CAAd","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport * as Models from '..';\n\nconst Roles = Object.assign(new Mongo.Collection(null), {\n\t/**\n\t * @param {IRole['_id']} roleId\n\t * @param {IRoom['_id']} scope the value for the role scope (room id)\n\t * @param {any} options\n\t */\n\tfindUsersInRole(roleId, scope, options) {\n\t\tconst role = this.findOne(roleId);\n\t\tconst roleScope = (role && role.scope) || 'Users';\n\t\tconst model = Models[roleScope];\n\t\treturn model && model.findUsersInRoles && model.findUsersInRoles(roleId, scope, options);\n\t},\n\n\t/**\n\t * @param {string} userId\n\t * @param {IRole['_id'][]} roles the list of role ids\n\t * @param {IRoom['_id']} scope the value for the role scope (room id)\n\t */\n\tisUserInRoles(userId, roles, scope) {\n\t\troles = [].concat(roles);\n\t\treturn roles.some((roleId) => {\n\t\t\tconst role = this.findOne(roleId);\n\t\t\tconst roleScope = (role && role.scope) || 'Users';\n\t\t\tconst model = Models[roleScope];\n\t\t\treturn model && model.isUserInRole && model.isUserInRole(userId, roleId, scope);\n\t\t});\n\t},\n\n\tready: new ReactiveVar(false),\n});\n\nexport { Roles };\n"]},"sourceType":"module","hash":"870d7bfb9fb93991e87430e4076962ec310632f3"}
