{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/Call/Jitsi/lib/JitsiBridge.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/Call/Jitsi/lib/JitsiBridge.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/Call/Jitsi/lib/JitsiBridge.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/room/contextualBar/Call/Jitsi/lib/JitsiBridge.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/Call/Jitsi/lib/JitsiBridge.js"}},"code":"module.export({\n  JitsiBridge: () => JitsiBridge\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n\n}, 0);\nlet JitsiMeetExternalAPI;\nmodule.link(\"./Jitsi\", {\n  JitsiMeetExternalAPI(v) {\n    JitsiMeetExternalAPI = v;\n  }\n\n}, 1);\n\nclass JitsiBridge extends Emitter {\n  constructor(_ref, heartbeat) {\n    let {\n      openNewWindow,\n      ssl,\n      domain,\n      jitsiRoomName,\n      accessToken,\n      desktopSharingChromeExtId,\n      name\n    } = _ref;\n    super();\n    this.openNewWindow = openNewWindow;\n    this.ssl = ssl;\n    this.domain = domain;\n    this.jitsiRoomName = jitsiRoomName;\n    this.accessToken = accessToken;\n    this.desktopSharingChromeExtId = desktopSharingChromeExtId;\n    this.name = name;\n    this.heartbeat = heartbeat;\n    this.window = undefined;\n    this.needsStart = false;\n  }\n\n  start(domTarget) {\n    if (!this.needsStart) {\n      return;\n    }\n\n    this.needsStart = false;\n    const heartbeatTimer = setInterval(() => this.emit('HEARTBEAT', true), this.heartbeat);\n    this.once('dispose', () => clearTimeout(heartbeatTimer));\n    const {\n      openNewWindow,\n      ssl,\n      domain,\n      jitsiRoomName,\n      accessToken,\n      desktopSharingChromeExtId,\n      name\n    } = this;\n    const protocol = ssl ? 'https://' : 'http://';\n    const configOverwrite = {\n      desktopSharingChromeExtId\n    };\n    const interfaceConfigOverwrite = {};\n\n    if (openNewWindow) {\n      const queryString = accessToken ? \"?jwt=\".concat(accessToken) : '';\n      const newWindow = window.open(\"\".concat(protocol + domain, \"/\").concat(jitsiRoomName).concat(queryString), jitsiRoomName);\n\n      if (!newWindow) {\n        return;\n      }\n\n      const timer = setInterval(() => {\n        if (newWindow.closed) {\n          this.dispose();\n        }\n      }, 1000);\n      this.once('dispose', () => clearTimeout(timer));\n      this.window = newWindow;\n      return newWindow.focus();\n    }\n\n    const width = 'auto';\n    const height = 500;\n    const api = new JitsiMeetExternalAPI(domain, jitsiRoomName, width, height, domTarget, configOverwrite, interfaceConfigOverwrite, !ssl, accessToken); // eslint-disable-line no-undef\n\n    api.executeCommand('displayName', [name]);\n    this.once('dispose', () => api.dispose());\n  }\n\n  dispose() {\n    clearInterval(this.timer);\n    this.emit('dispose', true);\n  }\n\n}","map":{"version":3,"sources":["client/views/room/contextualBar/Call/Jitsi/lib/JitsiBridge.js"],"names":["module","export","JitsiBridge","Emitter","link","v","JitsiMeetExternalAPI","constructor","heartbeat","openNewWindow","ssl","domain","jitsiRoomName","accessToken","desktopSharingChromeExtId","name","window","undefined","needsStart","start","domTarget","heartbeatTimer","setInterval","emit","once","clearTimeout","protocol","configOverwrite","interfaceConfigOverwrite","queryString","newWindow","open","timer","closed","dispose","focus","width","height","api","executeCommand","clearInterval"],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { JitsiMeetExternalAPI } from './Jitsi';\n\nexport class JitsiBridge extends Emitter {\n\tconstructor({ openNewWindow, ssl, domain, jitsiRoomName, accessToken, desktopSharingChromeExtId, name }, heartbeat) {\n\t\tsuper();\n\n\t\tthis.openNewWindow = openNewWindow;\n\t\tthis.ssl = ssl;\n\t\tthis.domain = domain;\n\t\tthis.jitsiRoomName = jitsiRoomName;\n\t\tthis.accessToken = accessToken;\n\t\tthis.desktopSharingChromeExtId = desktopSharingChromeExtId;\n\t\tthis.name = name;\n\t\tthis.heartbeat = heartbeat;\n\t\tthis.window = undefined;\n\t\tthis.needsStart = false;\n\t}\n\n\tstart(domTarget) {\n\t\tif (!this.needsStart) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.needsStart = false;\n\n\t\tconst heartbeatTimer = setInterval(() => this.emit('HEARTBEAT', true), this.heartbeat);\n\t\tthis.once('dispose', () => clearTimeout(heartbeatTimer));\n\n\t\tconst { openNewWindow, ssl, domain, jitsiRoomName, accessToken, desktopSharingChromeExtId, name } = this;\n\n\t\tconst protocol = ssl ? 'https://' : 'http://';\n\n\t\tconst configOverwrite = {\n\t\t\tdesktopSharingChromeExtId,\n\t\t};\n\n\t\tconst interfaceConfigOverwrite = {};\n\n\t\tif (openNewWindow) {\n\t\t\tconst queryString = accessToken ? `?jwt=${accessToken}` : '';\n\t\t\tconst newWindow = window.open(`${protocol + domain}/${jitsiRoomName}${queryString}`, jitsiRoomName);\n\n\t\t\tif (!newWindow) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst timer = setInterval(() => {\n\t\t\t\tif (newWindow.closed) {\n\t\t\t\t\tthis.dispose();\n\t\t\t\t}\n\t\t\t}, 1000);\n\n\t\t\tthis.once('dispose', () => clearTimeout(timer));\n\t\t\tthis.window = newWindow;\n\t\t\treturn newWindow.focus();\n\t\t}\n\n\t\tconst width = 'auto';\n\t\tconst height = 500;\n\n\t\tconst api = new JitsiMeetExternalAPI(\n\t\t\tdomain,\n\t\t\tjitsiRoomName,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tdomTarget,\n\t\t\tconfigOverwrite,\n\t\t\tinterfaceConfigOverwrite,\n\t\t\t!ssl,\n\t\t\taccessToken,\n\t\t); // eslint-disable-line no-undef\n\t\tapi.executeCommand('displayName', [name]);\n\t\tthis.once('dispose', () => api.dispose());\n\t}\n\n\tdispose() {\n\t\tclearInterval(this.timer);\n\t\tthis.emit('dispose', true);\n\t}\n}\n"]},"sourceType":"module","hash":"37fac91113cfb7d1a4455903334a580d30d3a104"}
