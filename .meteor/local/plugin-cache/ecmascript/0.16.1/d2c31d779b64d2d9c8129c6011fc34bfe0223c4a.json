{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/poly1305.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/client/poly1305-js/lib/poly1305.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/poly1305.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/imports/client/poly1305-js/lib/poly1305.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/client/poly1305-js/lib/poly1305.js"}},"code":"\"use strict\";\n\n!function (module1) {\n  const BigInteger = require('big-integer');\n\n  const crypto = require('crypto');\n\n  const Util = require('./util');\n\n  const BLOCK_SIZE = 16;\n  module.exports = class Poly1305 {\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @return {Promise<Buffer>}\r\n     */\n    static async onetimeauth(message, key) {\n      if (!Buffer.isBuffer(message)) {\n        message = Buffer.from(message);\n      }\n\n      let self = new Poly1305(key);\n      await self.update(message);\n      return await self.finish();\n    }\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @param {Buffer} tag\r\n     * @return {Promise<boolean>}\r\n     */\n\n\n    static async onetimeauth_verify(message, key, tag) {\n      if (!Buffer.isBuffer(message)) {\n        message = Buffer.from(message);\n      }\n\n      let self = new Poly1305(key);\n      await self.update(message);\n      let calc = await self.finish();\n      return crypto.timingSafeEqual(calc, tag);\n    }\n    /**\r\n     * @param {Buffer} key\r\n     */\n\n\n    constructor(key) {\n      if (typeof key === 'undefined') {\n        this.buffer = Buffer.alloc(16, 0);\n        this.h = new Uint32Array(5);\n        this.r = [0, 0, 0, 0, 0];\n        this.pad = [0, 0, 0, 0];\n        this.leftover = 0;\n        this.final = false;\n        return;\n      }\n\n      if (!Buffer.isBuffer(key)) {\n        throw new TypeError(\"Poly1305 key must be a Buffer (argument 1)\");\n      }\n\n      if (key.length !== 32) {\n        throw new Error(\"Poly1305 requires a 32-byte key\");\n      }\n\n      this.buffer = Buffer.alloc(16, 0);\n      this.r = [Util.load32_le(key.slice(0, 4)) & 0x03ffffff, Util.load32_le(key.slice(3, 7)) >>> 2 & 0x03ffff03, Util.load32_le(key.slice(6, 10)) >>> 4 & 0x03ffc0ff, Util.load32_le(key.slice(9, 13)) >>> 6 & 0x03f03fff, Util.load32_le(key.slice(12, 16)) >>> 8 & 0x000fffff];\n      this.h = new Uint32Array(5);\n      this.pad = [Util.load32_le(key.slice(16, 20)), Util.load32_le(key.slice(20, 24)), Util.load32_le(key.slice(24, 28)), Util.load32_le(key.slice(28, 32))];\n      this.leftover = 0;\n      this.final = false;\n    }\n    /**\r\n     * Inspired by PHP's hash_copy()\r\n     *\r\n     * @return {Poly1305}\r\n     */\n\n\n    clone() {\n      let clone = new Poly1305();\n      this.buffer.copy(clone.buffer, 0, 0, 16);\n      clone.r = this.r;\n\n      for (let i = 0; i < 5; i++) {\n        clone.h[i] = this.h[i];\n      }\n\n      for (let i = 0; i < 4; i++) {\n        clone.pad[i] = this.pad[i];\n      }\n\n      clone.leftover = this.leftover;\n      clone.final = this.final;\n      return clone;\n    }\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @param {number} bytes\r\n     * @return {Promise<void>}\r\n     */\n\n\n    async blocks(message, bytes) {\n      if (message.length < 16) {\n        throw new Error('Out of range exception');\n      }\n\n      let hibit = this.final ? 0 : 1 << 24;\n      let [r0, r1, r2, r3, r4] = this.r;\n      let s1 = r1 * 5;\n      let s2 = r2 * 5;\n      let s3 = r3 * 5;\n      let s4 = r4 * 5;\n      let h0 = BigInteger(this.h[0]);\n      let h1 = BigInteger(this.h[1]);\n      let h2 = BigInteger(this.h[2]);\n      let h3 = BigInteger(this.h[3]);\n      let h4 = BigInteger(this.h[4]);\n      let offset = 0;\n      let c, d0, d1, d2, d3, d4;\n\n      while (bytes >= BLOCK_SIZE) {\n        /* h += m[i] */\n        h0 = h0.add(Util.load32_le(message.slice(offset, offset + 4)) & 0x03ffffff);\n        h1 = h1.add(Util.load32_le(message.slice(offset + 3, offset + 7)) >>> 2 & 0x03ffffff);\n        h2 = h2.add(Util.load32_le(message.slice(offset + 6, offset + 10)) >>> 4 & 0x03ffffff);\n        h3 = h3.add(Util.load32_le(message.slice(offset + 9, offset + 13)) >>> 6 & 0x03ffffff);\n        h4 = h4.add(Util.load32_le(message.slice(offset + 12, offset + 16)) >>> 8 | hibit);\n        /* h *= r */\n        // d0 = ((h0 * r0) + (s4 * h1) + (s3 * h2) + (s2 * h3) + (s1 * h4));\n\n        d0 = BigInteger(h0.times(BigInteger(r0))).plus(BigInteger(s4).times(h1)).plus(BigInteger(s3).times(h2)).plus(BigInteger(s2).times(h3)).plus(BigInteger(s1).times(h4)); // d1 = ((h0 * r1) + (h1 * r0) + (s4 * h2) + (s3 * h3) + (s2 * h4));\n\n        d1 = BigInteger(h0.times(BigInteger(r1))).plus(h1.times(BigInteger(r0))).plus(BigInteger(s4).times(h2)).plus(BigInteger(s3).times(h3)).plus(BigInteger(s2).times(h4)); // d2 = ((h0 * r2) + (h1 * r1) + (h2 * r0) + (s4 * h3) + (s3 * h4));\n\n        d2 = BigInteger(h0.times(BigInteger(r2))).plus(h1.times(BigInteger(r1))).plus(h2.times(BigInteger(r0))).plus(BigInteger(s4).times(h3)).plus(BigInteger(s3).times(h4)); // d3 = ((h0 * r3) + (h1 * r2) + (h2 * r1) + (h3 * r0) + (s4 * h4));\n\n        d3 = BigInteger(h0.times(BigInteger(r3))).plus(h1.times(BigInteger(r2))).plus(h2.times(BigInteger(r1))).plus(h3.times(BigInteger(r0))).plus(BigInteger(s4).times(h4)); // d4 = ((h0 * r4) + (h1 * r3) + (h2 * r2) + (h3 * r1) + (h4 * r0));\n\n        d4 = BigInteger(h0.times(BigInteger(r4))).plus(h1.times(BigInteger(r3))).plus(h2.times(BigInteger(r2))).plus(h3.times(BigInteger(r1))).plus(h4.times(BigInteger(r0)));\n        /* (partial) h %= p */\n\n        c = d0.shiftRight(26);\n        h0 = d0.and(0x3ffffff);\n        d1 = d1.add(c);\n        c = d1.shiftRight(26);\n        h1 = d1.and(0x3ffffff);\n        d2 = d2.add(c);\n        c = d2.shiftRight(26);\n        h2 = d2.and(0x3ffffff);\n        d3 = d3.add(c);\n        c = d3.shiftRight(26);\n        h3 = d3.and(0x3ffffff);\n        d4 = d4.add(c);\n        c = d4.shiftRight(26);\n        h4 = d4.and(0x3ffffff);\n        h0 = h0.add(c.multiply(5).toJSNumber());\n        c = h0.shiftRight(26);\n        h0 = h0.and(0x3ffffff);\n        h1 = h1.add(c);\n        offset += BLOCK_SIZE;\n        bytes -= BLOCK_SIZE;\n      }\n\n      this.h[0] = h0.toJSNumber() >>> 0;\n      this.h[1] = h1.toJSNumber() >>> 0;\n      this.h[2] = h2.toJSNumber() >>> 0;\n      this.h[3] = h3.toJSNumber() >>> 0;\n      this.h[4] = h4.toJSNumber() >>> 0;\n    }\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @return {Promise<Poly1305>}\r\n     */\n\n\n    async update(message) {\n      let want;\n      let bytes = message.length;\n\n      if (this.leftover > 0) {\n        want = BLOCK_SIZE - this.leftover;\n\n        if (want > bytes) {\n          want = bytes;\n        }\n\n        message.slice(0, want).copy(this.buffer, this.leftover, 0);\n        this.leftover += want;\n\n        if (this.leftover < BLOCK_SIZE) {\n          // We still don't have enough to run this.blocks()\n          return this;\n        }\n\n        await this.blocks(this.buffer, BLOCK_SIZE);\n        this.leftover -= BLOCK_SIZE;\n        bytes -= want;\n        message = message.slice(want);\n      }\n      /* process full blocks */\n\n\n      if (bytes >= BLOCK_SIZE) {\n        want = bytes & ~(BLOCK_SIZE - 1);\n\n        if (want >= BLOCK_SIZE) {\n          await this.blocks(message.slice(0, want), want);\n          message = message.slice(want);\n          bytes = message.length;\n        }\n      }\n      /* store leftover */\n\n\n      if (bytes > 0) {\n        message.slice(0, bytes).copy(this.buffer, this.leftover, 0);\n        this.leftover += bytes;\n      }\n\n      return this;\n    }\n    /**\r\n     * @return {Promise<Buffer>}\r\n     */\n\n\n    async finish() {\n      let c, g0, g1, g2, g3, g4, h0, h1, h2, h3, h4, mask;\n\n      if (this.leftover) {\n        let i = this.leftover;\n        this.buffer[i++] = 1;\n\n        for (; i < BLOCK_SIZE; i++) {\n          this.buffer[i] = 0;\n        }\n\n        this.final = true;\n        await this.blocks(this.buffer, BLOCK_SIZE);\n      }\n\n      h0 = this.h[0];\n      h1 = this.h[1];\n      h2 = this.h[2];\n      h3 = this.h[3];\n      h4 = this.h[4];\n      c = h1 >>> 26;\n      h1 &= 0x3ffffff;\n      h2 += c;\n      c = h2 >>> 26;\n      h2 &= 0x3ffffff;\n      h3 += c;\n      c = h3 >>> 26;\n      h3 &= 0x3ffffff;\n      h4 += c;\n      c = h4 >>> 26;\n      h4 &= 0x3ffffff;\n      h0 += c * 5;\n      c = h0 >>> 26;\n      h0 &= 0x3ffffff;\n      h1 += c;\n      /* compute h + -p */\n\n      g0 = h0 + 5;\n      c = g0 >>> 26;\n      g0 &= 0x3ffffff;\n      g1 = h1 + c;\n      c = g1 >>> 26;\n      g1 &= 0x3ffffff;\n      g2 = h2 + c;\n      c = g2 >>> 26;\n      g2 &= 0x3ffffff;\n      g3 = h2 + c;\n      c = g3 >>> 26;\n      g3 &= 0x3ffffff;\n      g4 = h4 + c - (1 << 26) >>> 0;\n      /* select h if h < p, or h + -p if h >= p */\n\n      mask = (g4 >>> 31) - 1;\n      g0 &= mask;\n      g1 &= mask;\n      g2 &= mask;\n      g3 &= mask;\n      g4 &= mask;\n      mask = ~mask >>> 0;\n      h0 = h0 & mask | g0;\n      h1 = h1 & mask | g1;\n      h2 = h2 & mask | g2;\n      h3 = h3 & mask | g3;\n      h4 = h4 & mask | g4;\n      /* h = h % (2^128) */\n\n      h0 = (h0 | h1 << 26) >>> 0;\n      h1 = (h1 >>> 6 | h2 << 20) >>> 0;\n      h2 = (h2 >>> 12 | h3 << 14) >>> 0;\n      h3 = (h3 >>> 18 | h4 << 8) >>> 0;\n      [h0, c] = Util.add_overflow(h0, this.pad[0]);\n      [h1, c] = Util.add_overflow(h1, this.pad[1], c);\n      [h2, c] = Util.add_overflow(h2, this.pad[2], c);\n      [h3, c] = Util.add_overflow(h3, this.pad[3], c);\n      return Buffer.concat([Util.store32_le(h0 >>> 0), Util.store32_le(h1 >>> 0), Util.store32_le(h2 >>> 0), Util.store32_le(h3 >>> 0)]);\n    }\n\n  };\n}.call(this, module);","map":{"version":3,"sources":["imports/client/poly1305-js/lib/poly1305.js"],"names":["BigInteger","require","crypto","Util","BLOCK_SIZE","module","exports","Poly1305","onetimeauth","message","key","Buffer","isBuffer","from","self","update","finish","onetimeauth_verify","tag","calc","timingSafeEqual","constructor","buffer","alloc","h","Uint32Array","r","pad","leftover","final","TypeError","length","Error","load32_le","slice","clone","copy","i","blocks","bytes","hibit","r0","r1","r2","r3","r4","s1","s2","s3","s4","h0","h1","h2","h3","h4","offset","c","d0","d1","d2","d3","d4","add","times","plus","shiftRight","and","multiply","toJSNumber","want","g0","g1","g2","g3","g4","mask","add_overflow","concat","store32_le"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst BigInteger = require('big-integer');\r\nconst crypto = require('crypto');\r\nconst Util = require('./util');\r\n\r\nconst BLOCK_SIZE = 16;\r\n\r\nmodule.exports = class Poly1305\r\n{\r\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @return {Promise<Buffer>}\r\n     */\r\n    static async onetimeauth(message, key)\r\n    {\r\n        if (!Buffer.isBuffer(message)) {\r\n            message = Buffer.from(message);\r\n        }\r\n        let self = new Poly1305(key);\r\n        await self.update(message);\r\n        return await self.finish();\r\n    }\r\n\r\n    /**\r\n     * @param {Buffer} message\r\n     * @param {Buffer} key\r\n     * @param {Buffer} tag\r\n     * @return {Promise<boolean>}\r\n     */\r\n    static async onetimeauth_verify(message, key, tag)\r\n    {\r\n        if (!Buffer.isBuffer(message)) {\r\n            message = Buffer.from(message);\r\n        }\r\n        let self = new Poly1305(key);\r\n        await self.update(message);\r\n        let calc = await self.finish();\r\n        return crypto.timingSafeEqual(calc, tag);\r\n    }\r\n\r\n    /**\r\n     * @param {Buffer} key\r\n     */\r\n    constructor(key)\r\n    {\r\n        if (typeof (key) === 'undefined') {\r\n            this.buffer = Buffer.alloc(16, 0);\r\n            this.h = new Uint32Array(5);\r\n            this.r = [0,0,0,0,0];\r\n            this.pad = [0,0,0,0];\r\n            this.leftover = 0;\r\n            this.final = false;\r\n            return;\r\n        }\r\n        if (!Buffer.isBuffer(key)) {\r\n            throw new TypeError(\"Poly1305 key must be a Buffer (argument 1)\");\r\n        }\r\n        if (key.length !== 32) {\r\n            throw new Error(\"Poly1305 requires a 32-byte key\");\r\n        }\r\n        this.buffer = Buffer.alloc(16, 0);\r\n\r\n        this.r = [\r\n            Util.load32_le(key.slice(0, 4))           & 0x03ffffff,\r\n            (Util.load32_le(key.slice(3, 7)) >>> 2)   & 0x03ffff03,\r\n            (Util.load32_le(key.slice(6, 10)) >>> 4)  & 0x03ffc0ff,\r\n            (Util.load32_le(key.slice(9, 13)) >>> 6)  & 0x03f03fff,\r\n            (Util.load32_le(key.slice(12, 16)) >>> 8) & 0x000fffff\r\n        ];\r\n        this.h = new Uint32Array(5);\r\n        this.pad = [\r\n            Util.load32_le(key.slice(16, 20)),\r\n            Util.load32_le(key.slice(20, 24)),\r\n            Util.load32_le(key.slice(24, 28)),\r\n            Util.load32_le(key.slice(28, 32))\r\n        ];\r\n\r\n        this.leftover = 0;\r\n        this.final = false;\r\n    }\r\n\r\n    /**\r\n     * Inspired by PHP's hash_copy()\r\n     *\r\n     * @return {Poly1305}\r\n     */\r\n    clone()\r\n    {\r\n        let clone = new Poly1305();\r\n        this.buffer.copy(clone.buffer, 0, 0, 16);\r\n        clone.r = this.r;\r\n        for (let i = 0; i < 5; i++) {\r\n            clone.h[i] = this.h[i];\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            clone.pad[i] = this.pad[i];\r\n        }\r\n        clone.leftover = this.leftover;\r\n        clone.final = this.final;\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @param {number} bytes\r\n     * @return {Promise<void>}\r\n     */\r\n    async blocks(message, bytes)\r\n    {\r\n        if (message.length < 16) {\r\n            throw new Error('Out of range exception');\r\n        }\r\n\r\n        let hibit = this.final ? 0 : 1 << 24;\r\n        let [r0, r1, r2, r3, r4] = this.r;\r\n\r\n        let s1 = r1 * 5;\r\n        let s2 = r2 * 5;\r\n        let s3 = r3 * 5;\r\n        let s4 = r4 * 5;\r\n\r\n        let h0 = BigInteger(this.h[0]);\r\n        let h1 = BigInteger(this.h[1]);\r\n        let h2 = BigInteger(this.h[2]);\r\n        let h3 = BigInteger(this.h[3]);\r\n        let h4 = BigInteger(this.h[4]);\r\n\r\n        let offset = 0;\r\n        let c, d0, d1, d2, d3, d4;\r\n        while (bytes >= BLOCK_SIZE) {\r\n            /* h += m[i] */\r\n            h0 = h0.add((Util.load32_le(message.slice(offset,     offset + 4)))        & 0x03ffffff);\r\n            h1 = h1.add((Util.load32_le(message.slice(offset + 3, offset + 7)) >>> 2)  & 0x03ffffff);\r\n            h2 = h2.add((Util.load32_le(message.slice(offset + 6, offset + 10)) >>> 4) & 0x03ffffff);\r\n            h3 = h3.add((Util.load32_le(message.slice(offset + 9, offset + 13)) >>> 6) & 0x03ffffff);\r\n            h4 = h4.add((Util.load32_le(message.slice(offset + 12, offset + 16)) >>> 8) | hibit);\r\n\r\n            /* h *= r */\r\n            // d0 = ((h0 * r0) + (s4 * h1) + (s3 * h2) + (s2 * h3) + (s1 * h4));\r\n            d0 = BigInteger(h0.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h1))\r\n                .plus(BigInteger(s3).times(h2))\r\n                .plus(BigInteger(s2).times(h3))\r\n                .plus(BigInteger(s1).times(h4));\r\n\r\n            // d1 = ((h0 * r1) + (h1 * r0) + (s4 * h2) + (s3 * h3) + (s2 * h4));\r\n            d1 = BigInteger(h0.times(BigInteger(r1)))\r\n                .plus(h1.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h2))\r\n                .plus(BigInteger(s3).times(h3))\r\n                .plus(BigInteger(s2).times(h4));\r\n\r\n            // d2 = ((h0 * r2) + (h1 * r1) + (h2 * r0) + (s4 * h3) + (s3 * h4));\r\n            d2 = BigInteger(h0.times(BigInteger(r2)))\r\n                .plus(h1.times(BigInteger(r1)))\r\n                .plus(h2.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h3))\r\n                .plus(BigInteger(s3).times(h4));\r\n\r\n            // d3 = ((h0 * r3) + (h1 * r2) + (h2 * r1) + (h3 * r0) + (s4 * h4));\r\n            d3 = BigInteger(h0.times(BigInteger(r3)))\r\n                .plus(h1.times(BigInteger(r2)))\r\n                .plus(h2.times(BigInteger(r1)))\r\n                .plus(h3.times(BigInteger(r0)))\r\n                .plus(BigInteger(s4).times(h4));\r\n            // d4 = ((h0 * r4) + (h1 * r3) + (h2 * r2) + (h3 * r1) + (h4 * r0));\r\n            d4 = BigInteger(h0.times(BigInteger(r4)))\r\n                .plus(h1.times(BigInteger(r3)))\r\n                .plus(h2.times(BigInteger(r2)))\r\n                .plus(h3.times(BigInteger(r1)))\r\n                .plus(h4.times(BigInteger(r0)));\r\n\r\n            /* (partial) h %= p */\r\n            c = d0.shiftRight(26);\r\n            h0 = d0.and(0x3ffffff);\r\n            d1 = d1.add(c);\r\n            c = d1.shiftRight(26);\r\n            h1 = d1.and(0x3ffffff);\r\n            d2 = d2.add(c);\r\n            c = d2.shiftRight(26);\r\n            h2 = d2.and(0x3ffffff);\r\n            d3 = d3.add(c);\r\n            c = d3.shiftRight(26);\r\n            h3 = d3.and(0x3ffffff);\r\n            d4 = d4.add(c);\r\n            c = d4.shiftRight(26);\r\n            h4 = d4.and(0x3ffffff);\r\n            h0 = h0.add(c.multiply(5).toJSNumber());\r\n\r\n            c = h0.shiftRight(26);\r\n            h0 = h0.and(0x3ffffff);\r\n            h1 = h1.add(c);\r\n\r\n            offset += BLOCK_SIZE;\r\n            bytes -= BLOCK_SIZE;\r\n        }\r\n        this.h[0] = h0.toJSNumber() >>> 0;\r\n        this.h[1] = h1.toJSNumber() >>> 0;\r\n        this.h[2] = h2.toJSNumber() >>> 0;\r\n        this.h[3] = h3.toJSNumber() >>> 0;\r\n        this.h[4] = h4.toJSNumber() >>> 0;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Buffer} message\r\n     * @return {Promise<Poly1305>}\r\n     */\r\n    async update(message)\r\n    {\r\n        let want;\r\n        let bytes = message.length;\r\n\r\n        if (this.leftover > 0) {\r\n            want = BLOCK_SIZE - this.leftover;\r\n            if (want > bytes) {\r\n                want = bytes;\r\n            }\r\n            message.slice(0, want).copy(this.buffer, this.leftover, 0);\r\n            this.leftover += want;\r\n            if (this.leftover < BLOCK_SIZE) {\r\n                // We still don't have enough to run this.blocks()\r\n                return this;\r\n            }\r\n            await this.blocks(this.buffer, BLOCK_SIZE);\r\n            this.leftover -= BLOCK_SIZE;\r\n            bytes -= want;\r\n            message = message.slice(want);\r\n        }\r\n\r\n        /* process full blocks */\r\n        if (bytes >= BLOCK_SIZE) {\r\n            want = bytes & ~(BLOCK_SIZE - 1);\r\n            if (want >= BLOCK_SIZE) {\r\n                await this.blocks(message.slice(0, want), want);\r\n                message = message.slice(want);\r\n                bytes = message.length;\r\n            }\r\n        }\r\n\r\n        /* store leftover */\r\n        if (bytes > 0) {\r\n            message.slice(0, bytes).copy(this.buffer, this.leftover, 0);\r\n            this.leftover += bytes;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {Promise<Buffer>}\r\n     */\r\n    async finish()\r\n    {\r\n        let c, g0, g1, g2, g3, g4, h0, h1, h2, h3, h4, mask;\r\n        if (this.leftover) {\r\n            let i = this.leftover;\r\n            this.buffer[i++] = 1;\r\n            for (; i < BLOCK_SIZE; i++) {\r\n                this.buffer[i] = 0;\r\n            }\r\n            this.final = true;\r\n            await this.blocks(this.buffer, BLOCK_SIZE);\r\n        }\r\n\r\n        h0 = this.h[0];\r\n        h1 = this.h[1];\r\n        h2 = this.h[2];\r\n        h3 = this.h[3];\r\n        h4 = this.h[4];\r\n\r\n        c = h1 >>> 26;\r\n        h1 &= 0x3ffffff;\r\n        h2 += c;\r\n        c = h2 >>> 26;\r\n        h2 &= 0x3ffffff;\r\n        h3 += c;\r\n        c = h3 >>> 26;\r\n        h3 &= 0x3ffffff;\r\n        h4 += c;\r\n        c = h4 >>> 26;\r\n        h4 &= 0x3ffffff;\r\n        h0 += c * 5;\r\n        c = h0 >>> 26;\r\n        h0 &= 0x3ffffff;\r\n        h1 += c;\r\n\r\n        /* compute h + -p */\r\n        g0 = h0 + 5;\r\n        c = g0 >>> 26;\r\n        g0 &= 0x3ffffff;\r\n\r\n        g1 = h1 + c;\r\n        c = g1 >>> 26;\r\n        g1 &= 0x3ffffff;\r\n\r\n        g2 = h2 + c;\r\n        c = g2 >>> 26;\r\n        g2 &= 0x3ffffff;\r\n\r\n        g3 = h2 + c;\r\n        c = g3 >>> 26;\r\n        g3 &= 0x3ffffff;\r\n\r\n        g4 = (h4 +c - (1 << 26)) >>> 0;\r\n\r\n        /* select h if h < p, or h + -p if h >= p */\r\n        mask = (g4 >>> 31) - 1;\r\n\r\n        g0 &= mask;\r\n        g1 &= mask;\r\n        g2 &= mask;\r\n        g3 &= mask;\r\n        g4 &= mask;\r\n\r\n        mask = ~mask >>> 0;\r\n        h0 = (h0 & mask) | g0;\r\n        h1 = (h1 & mask) | g1;\r\n        h2 = (h2 & mask) | g2;\r\n        h3 = (h3 & mask) | g3;\r\n        h4 = (h4 & mask) | g4;\r\n\r\n        /* h = h % (2^128) */\r\n        h0 = ((h0) | (h1 << 26)) >>> 0;\r\n        h1 = ((h1 >>>  6) | (h2 << 20)) >>> 0;\r\n        h2 = ((h2 >>> 12) | (h3 << 14)) >>> 0;\r\n        h3 = ((h3 >>> 18) | (h4 <<  8)) >>> 0;\r\n\r\n        [h0, c] = Util.add_overflow(h0, this.pad[0]);\r\n        [h1, c] = Util.add_overflow(h1, this.pad[1], c);\r\n        [h2, c] = Util.add_overflow(h2, this.pad[2], c);\r\n        [h3, c] = Util.add_overflow(h3, this.pad[3], c);\r\n\r\n        return Buffer.concat([\r\n            Util.store32_le(h0 >>> 0),\r\n            Util.store32_le(h1 >>> 0),\r\n            Util.store32_le(h2 >>> 0),\r\n            Util.store32_le(h3 >>> 0)\r\n        ]);\r\n    }\r\n};\r\n"]},"sourceType":"module","hash":"d2c31d779b64d2d9c8129c6011fc34bfe0223c4a"}
