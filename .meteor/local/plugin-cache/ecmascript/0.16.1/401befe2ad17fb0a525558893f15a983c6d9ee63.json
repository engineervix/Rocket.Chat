{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/openRoom.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/openRoom.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/openRoom.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/ui-utils/client/lib/openRoom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/openRoom.js"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\n\nvar _toConsumableArray;\n\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\nmodule.export({\n  openRoom: function () {\n    return openRoom;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar FlowRouter;\nmodule.link(\"meteor/kadira:flow-router\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 2);\nvar Session;\nmodule.link(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 3);\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 4);\nvar appLayout;\nmodule.link(\"../../../../client/lib/appLayout\", {\n  appLayout: function (v) {\n    appLayout = v;\n  }\n}, 5);\nvar Messages, ChatSubscription;\nmodule.link(\"../../../models\", {\n  Messages: function (v) {\n    Messages = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  }\n}, 6);\nvar settings;\nmodule.link(\"../../../settings\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 7);\nvar callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks: function (v) {\n    callbacks = v;\n  }\n}, 8);\nvar callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 9);\nvar call;\nmodule.link(\"../../../../client/lib/utils/call\", {\n  call: function (v) {\n    call = v;\n  }\n}, 10);\nvar RoomManager, RoomHistoryManager;\nmodule.link(\"..\", {\n  RoomManager: function (v) {\n    RoomManager = v;\n  },\n  RoomHistoryManager: function (v) {\n    RoomHistoryManager = v;\n  }\n}, 11);\nvar NewRoomManager;\nmodule.link(\"../../../../client/lib/RoomManager\", {\n  RoomManager: function (v) {\n    NewRoomManager = v;\n  }\n}, 12);\nvar Rooms;\nmodule.link(\"../../../models/client\", {\n  Rooms: function (v) {\n    Rooms = v;\n  }\n}, 13);\nvar fireGlobalEvent;\nmodule.link(\"../../../../client/lib/utils/fireGlobalEvent\", {\n  fireGlobalEvent: function (v) {\n    fireGlobalEvent = v;\n  }\n}, 14);\nvar roomCoordinator;\nmodule.link(\"../../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator: function (v) {\n    roomCoordinator = v;\n  }\n}, 15);\nwindow.currentTracker = undefined; // cleanup session when hot reloading\n\nSession.set('openedRoom', null);\nNewRoomManager.on('changed', function (rid) {\n  Session.set('openedRoom', rid);\n  RoomManager.openedRoom = rid;\n});\n\nvar openRoom = function () {\n  function _callee2(type, name) {\n    var render,\n        _args2 = arguments;\n    return _regeneratorRuntime.async(function () {\n      function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              render = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : true;\n              window.currentTracker && window.currentTracker.stop();\n              window.currentTracker = Tracker.autorun(function () {\n                function _callee(c) {\n                  var user, _roomCoordinator$getR, room, sub, messageId, msg, message, _await$call, rid;\n\n                  return _regeneratorRuntime.async(function () {\n                    function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            user = Meteor.user();\n\n                            if (!(user && user.username == null || user == null && settings.get('Accounts_AllowAnonymousRead') === false)) {\n                              _context.next = 4;\n                              break;\n                            }\n\n                            appLayout.renderMainLayout();\n                            return _context.abrupt(\"return\");\n\n                          case 4:\n                            _context.prev = 4;\n                            _context.t0 = (_roomCoordinator$getR = roomCoordinator.getRoomDirectives(type)) === null || _roomCoordinator$getR === void 0 ? void 0 : _roomCoordinator$getR.findRoom(name);\n\n                            if (_context.t0) {\n                              _context.next = 10;\n                              break;\n                            }\n\n                            _context.next = 9;\n                            return _regeneratorRuntime.awrap(call('getRoomByTypeAndName', type, name));\n\n                          case 9:\n                            _context.t0 = _context.sent;\n\n                          case 10:\n                            room = _context.t0;\n                            Rooms.upsert({\n                              _id: room._id\n                            }, _.omit(room, '_id'));\n\n                            if (!(room._id !== name && type === 'd')) {\n                              _context.next = 15;\n                              break;\n                            }\n\n                            // Redirect old url using username to rid\n                            RoomManager.close(type + name);\n                            return _context.abrupt(\"return\", FlowRouter.go('direct', {\n                              rid: room._id\n                            }, FlowRouter.current().queryParams));\n\n                          case 15:\n                            if (!(room._id === Session.get('openedRoom') && !FlowRouter.getQueryParam('msg'))) {\n                              _context.next = 17;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\");\n\n                          case 17:\n                            RoomManager.open({\n                              typeName: type + name,\n                              rid: room._id\n                            });\n\n                            if (render) {\n                              appLayout.renderMainLayout({\n                                center: 'room'\n                              });\n                            }\n\n                            c.stop();\n\n                            if (window.currentTracker) {\n                              window.currentTracker = undefined;\n                            }\n\n                            NewRoomManager.open(room._id);\n                            Session.set('openedRoom', room._id);\n                            fireGlobalEvent('room-opened', _.omit(room, 'usernames'));\n                            Session.set('editRoomTitle', false); // KonchatNotification.removeRoomNotification(params._id)\n                            // update user's room subscription\n\n                            sub = ChatSubscription.findOne({\n                              rid: room._id\n                            });\n\n                            if (sub && sub.open === false) {\n                              callWithErrorHandling('openRoom', room._id);\n                            }\n\n                            if (!FlowRouter.getQueryParam('msg')) {\n                              _context.next = 40;\n                              break;\n                            }\n\n                            messageId = FlowRouter.getQueryParam('msg');\n                            msg = {\n                              _id: messageId,\n                              rid: room._id\n                            };\n                            _context.t1 = Messages.findOne({\n                              _id: msg._id\n                            });\n\n                            if (_context.t1) {\n                              _context.next = 35;\n                              break;\n                            }\n\n                            _context.next = 34;\n                            return _regeneratorRuntime.awrap(callWithErrorHandling('getMessages', [msg._id]));\n\n                          case 34:\n                            _context.t1 = _context.sent[0];\n\n                          case 35:\n                            message = _context.t1;\n\n                            if (!(message && (message.tmid || message.tcount))) {\n                              _context.next = 38;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", FlowRouter.setParams({\n                              tab: 'thread',\n                              context: message.tmid || message._id\n                            }));\n\n                          case 38:\n                            RoomHistoryManager.getSurroundingMessages(msg);\n                            FlowRouter.setQueryParams({\n                              msg: undefined\n                            });\n\n                          case 40:\n                            return _context.abrupt(\"return\", callbacks.run('enter-room', sub));\n\n                          case 43:\n                            _context.prev = 43;\n                            _context.t2 = _context[\"catch\"](4);\n                            c.stop();\n\n                            if (!(type === 'd')) {\n                              _context.next = 58;\n                              break;\n                            }\n\n                            _context.prev = 47;\n                            _context.next = 50;\n                            return _regeneratorRuntime.awrap(call.apply(void 0, ['createDirectMessage'].concat(_toConsumableArray(name.split(', ')))));\n\n                          case 50:\n                            _await$call = _context.sent;\n                            rid = _await$call.rid;\n                            return _context.abrupt(\"return\", FlowRouter.go('direct', {\n                              rid: rid\n                            }, FlowRouter.current().queryParams));\n\n                          case 55:\n                            _context.prev = 55;\n                            _context.t3 = _context[\"catch\"](47);\n                            console.error(_context.t3);\n\n                          case 58:\n                            Session.set('roomNotFound', {\n                              type: type,\n                              name: name,\n                              error: _context.t2\n                            });\n                            appLayout.renderMainLayout({\n                              center: 'roomNotFound'\n                            });\n\n                          case 60:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }\n\n                    return _callee$;\n                  }(), null, null, [[4, 43], [47, 55]], Promise);\n                }\n\n                return _callee;\n              }());\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }\n\n      return _callee2$;\n    }(), null, null, null, Promise);\n  }\n\n  return _callee2;\n}();","map":{"version":3,"sources":["app/ui-utils/client/lib/openRoom.js"],"names":["_regeneratorRuntime","module","link","default","v","_toConsumableArray","export","openRoom","Meteor","Tracker","FlowRouter","Session","_","appLayout","Messages","ChatSubscription","settings","callbacks","callWithErrorHandling","call","RoomManager","RoomHistoryManager","NewRoomManager","Rooms","fireGlobalEvent","roomCoordinator","window","currentTracker","undefined","set","on","rid","openedRoom","type","name","render","stop","autorun","c","user","username","get","renderMainLayout","getRoomDirectives","findRoom","room","upsert","_id","omit","close","go","current","queryParams","getQueryParam","open","typeName","center","sub","findOne","messageId","msg","message","tmid","tcount","setParams","tab","context","getSurroundingMessages","setQueryParams","run","split","console","error"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { FlowRouter } from 'meteor/kadira:flow-router';\nimport { Session } from 'meteor/session';\nimport _ from 'underscore';\n\nimport { appLayout } from '../../../../client/lib/appLayout';\nimport { Messages, ChatSubscription } from '../../../models';\nimport { settings } from '../../../settings';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { call } from '../../../../client/lib/utils/call';\nimport { RoomManager, RoomHistoryManager } from '..';\nimport { RoomManager as NewRoomManager } from '../../../../client/lib/RoomManager';\nimport { Rooms } from '../../../models/client';\nimport { fireGlobalEvent } from '../../../../client/lib/utils/fireGlobalEvent';\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\n\nwindow.currentTracker = undefined;\n\n// cleanup session when hot reloading\nSession.set('openedRoom', null);\n\nNewRoomManager.on('changed', (rid) => {\n\tSession.set('openedRoom', rid);\n\tRoomManager.openedRoom = rid;\n});\n\nexport const openRoom = async function (type, name, render = true) {\n\twindow.currentTracker && window.currentTracker.stop();\n\twindow.currentTracker = Tracker.autorun(async function (c) {\n\t\tconst user = Meteor.user();\n\t\tif ((user && user.username == null) || (user == null && settings.get('Accounts_AllowAnonymousRead') === false)) {\n\t\t\tappLayout.renderMainLayout();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst room = roomCoordinator.getRoomDirectives(type)?.findRoom(name) || (await call('getRoomByTypeAndName', type, name));\n\t\t\tRooms.upsert({ _id: room._id }, _.omit(room, '_id'));\n\n\t\t\tif (room._id !== name && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tRoomManager.close(type + name);\n\t\t\t\treturn FlowRouter.go('direct', { rid: room._id }, FlowRouter.current().queryParams);\n\t\t\t}\n\n\t\t\tif (room._id === Session.get('openedRoom') && !FlowRouter.getQueryParam('msg')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tRoomManager.open({ typeName: type + name, rid: room._id });\n\n\t\t\tif (render) {\n\t\t\t\tappLayout.renderMainLayout({ center: 'room' });\n\t\t\t}\n\n\t\t\tc.stop();\n\n\t\t\tif (window.currentTracker) {\n\t\t\t\twindow.currentTracker = undefined;\n\t\t\t}\n\n\t\t\tNewRoomManager.open(room._id);\n\t\t\tSession.set('openedRoom', room._id);\n\n\t\t\tfireGlobalEvent('room-opened', _.omit(room, 'usernames'));\n\n\t\t\tSession.set('editRoomTitle', false);\n\t\t\t// KonchatNotification.removeRoomNotification(params._id)\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && sub.open === false) {\n\t\t\t\tcallWithErrorHandling('openRoom', room._id);\n\t\t\t}\n\n\t\t\tif (FlowRouter.getQueryParam('msg')) {\n\t\t\t\tconst messageId = FlowRouter.getQueryParam('msg');\n\t\t\t\tconst msg = { _id: messageId, rid: room._id };\n\n\t\t\t\tconst message = Messages.findOne({ _id: msg._id }) || (await callWithErrorHandling('getMessages', [msg._id]))[0];\n\n\t\t\t\tif (message && (message.tmid || message.tcount)) {\n\t\t\t\t\treturn FlowRouter.setParams({ tab: 'thread', context: message.tmid || message._id });\n\t\t\t\t}\n\n\t\t\t\tRoomHistoryManager.getSurroundingMessages(msg);\n\t\t\t\tFlowRouter.setQueryParams({\n\t\t\t\t\tmsg: undefined,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn callbacks.run('enter-room', sub);\n\t\t} catch (error) {\n\t\t\tc.stop();\n\t\t\tif (type === 'd') {\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await call('createDirectMessage', ...name.split(', '));\n\t\t\t\t\treturn FlowRouter.go('direct', { rid }, FlowRouter.current().queryParams);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSession.set('roomNotFound', { type, name, error });\n\t\t\tappLayout.renderMainLayout({ center: 'roomNotFound' });\n\t\t}\n\t});\n};\n"]},"sourceType":"module","hash":"401befe2ad17fb0a525558893f15a983c6d9ee63"}
