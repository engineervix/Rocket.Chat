{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/e2e/client/helper.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/e2e/client/helper.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/e2e/client/helper.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/e2e/client/helper.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/client/helper.js"}},"code":"module.export({\n  toString: () => toString,\n  toArrayBuffer: () => toArrayBuffer,\n  joinVectorAndEcryptedData: () => joinVectorAndEcryptedData,\n  splitVectorAndEcryptedData: () => splitVectorAndEcryptedData,\n  encryptRSA: () => encryptRSA,\n  encryptAES: () => encryptAES,\n  decryptRSA: () => decryptRSA,\n  decryptAES: () => decryptAES,\n  generateAESKey: () => generateAESKey,\n  generateRSAKey: () => generateRSAKey,\n  exportJWKKey: () => exportJWKKey,\n  importRSAKey: () => importRSAKey,\n  importAESKey: () => importAESKey,\n  importRawKey: () => importRawKey,\n  deriveKey: () => deriveKey,\n  readFileAsArrayBuffer: () => readFileAsArrayBuffer,\n  generateMnemonicPhrase: () => generateMnemonicPhrase,\n  Deferred: () => Deferred\n});\nlet ByteBuffer;\nmodule.link(\"bytebuffer\", {\n  default(v) {\n    ByteBuffer = v;\n  }\n\n}, 0);\nlet getRandomFraction;\nmodule.link(\"../../../lib/random\", {\n  getRandomFraction(v) {\n    getRandomFraction = v;\n  }\n\n}, 1);\nconst StaticArrayBufferProto = new ArrayBuffer().__proto__;\n\nfunction toString(thing) {\n  if (typeof thing === 'string') {\n    return thing;\n  }\n\n  return new ByteBuffer.wrap(thing).toString('binary');\n}\n\nfunction toArrayBuffer(thing) {\n  if (thing === undefined) {\n    return undefined;\n  }\n\n  if (thing === Object(thing)) {\n    if (thing.__proto__ === StaticArrayBufferProto) {\n      return thing;\n    }\n  }\n\n  if (typeof thing !== 'string') {\n    throw new Error(\"Tried to convert a non-string of type \".concat(typeof thing, \" to an array buffer\"));\n  }\n\n  return new ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\n\nfunction joinVectorAndEcryptedData(vector, encryptedData) {\n  const cipherText = new Uint8Array(encryptedData);\n  const output = new Uint8Array(vector.length + cipherText.length);\n  output.set(vector, 0);\n  output.set(cipherText, vector.length);\n  return output;\n}\n\nfunction splitVectorAndEcryptedData(cipherText) {\n  const vector = cipherText.slice(0, 16);\n  const encryptedData = cipherText.slice(16);\n  return [vector, encryptedData];\n}\n\nasync function encryptRSA(key, data) {\n  return crypto.subtle.encrypt({\n    name: 'RSA-OAEP'\n  }, key, data);\n}\n\nasync function encryptAES(vector, key, data) {\n  return crypto.subtle.encrypt({\n    name: 'AES-CBC',\n    iv: vector\n  }, key, data);\n}\n\nasync function decryptRSA(key, data) {\n  return crypto.subtle.decrypt({\n    name: 'RSA-OAEP'\n  }, key, data);\n}\n\nasync function decryptAES(vector, key, data) {\n  return crypto.subtle.decrypt({\n    name: 'AES-CBC',\n    iv: vector\n  }, key, data);\n}\n\nasync function generateAESKey() {\n  return crypto.subtle.generateKey({\n    name: 'AES-CBC',\n    length: 128\n  }, true, ['encrypt', 'decrypt']);\n}\n\nasync function generateRSAKey() {\n  return crypto.subtle.generateKey({\n    name: 'RSA-OAEP',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {\n      name: 'SHA-256'\n    }\n  }, true, ['encrypt', 'decrypt']);\n}\n\nasync function exportJWKKey(key) {\n  return crypto.subtle.exportKey('jwk', key);\n}\n\nasync function importRSAKey(keyData) {\n  let keyUsages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['encrypt', 'decrypt'];\n  return crypto.subtle.importKey('jwk', keyData, {\n    name: 'RSA-OAEP',\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {\n      name: 'SHA-256'\n    }\n  }, true, keyUsages);\n}\n\nasync function importAESKey(keyData) {\n  let keyUsages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['encrypt', 'decrypt'];\n  return crypto.subtle.importKey('jwk', keyData, {\n    name: 'AES-CBC'\n  }, true, keyUsages);\n}\n\nasync function importRawKey(keyData) {\n  let keyUsages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['deriveKey'];\n  return crypto.subtle.importKey('raw', keyData, {\n    name: 'PBKDF2'\n  }, false, keyUsages);\n}\n\nasync function deriveKey(salt, baseKey) {\n  let keyUsages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['encrypt', 'decrypt'];\n  const iterations = 1000;\n  const hash = 'SHA-256';\n  return crypto.subtle.deriveKey({\n    name: 'PBKDF2',\n    salt,\n    iterations,\n    hash\n  }, baseKey, {\n    name: 'AES-CBC',\n    length: 256\n  }, true, keyUsages);\n}\n\nasync function readFileAsArrayBuffer(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = function (evt) {\n      resolve(evt.target.result);\n    };\n\n    reader.onerror = function (evt) {\n      reject(evt);\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n}\n\nasync function generateMnemonicPhrase(n) {\n  let sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  const {\n    default: wordList\n  } = await module.dynamicImport('./wordList');\n  const result = new Array(n);\n  let len = wordList.length;\n  const taken = new Array(len);\n\n  while (n--) {\n    const x = Math.floor(getRandomFraction() * len);\n    result[n] = wordList[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n\n  return result.join(sep);\n}\n\nclass Deferred {\n  constructor() {\n    const p = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    p.resolve = this.resolve;\n    p.reject = this.reject;\n    return p;\n  }\n\n}","map":{"version":3,"sources":["app/e2e/client/helper.js"],"names":["module","export","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptRSA","encryptAES","decryptRSA","decryptAES","generateAESKey","generateRSAKey","exportJWKKey","importRSAKey","importAESKey","importRawKey","deriveKey","readFileAsArrayBuffer","generateMnemonicPhrase","Deferred","ByteBuffer","link","default","v","getRandomFraction","StaticArrayBufferProto","ArrayBuffer","__proto__","thing","wrap","undefined","Object","Error","vector","encryptedData","cipherText","Uint8Array","output","length","set","slice","key","data","crypto","subtle","encrypt","name","iv","decrypt","generateKey","modulusLength","publicExponent","hash","exportKey","keyData","keyUsages","importKey","salt","baseKey","iterations","file","Promise","resolve","reject","reader","FileReader","onload","evt","target","result","onerror","readAsArrayBuffer","n","sep","wordList","Array","len","taken","x","Math","floor","join","constructor","p"],"mappings":"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","sourcesContent":["/* eslint-disable new-cap, no-proto */\n\nimport ByteBuffer from 'bytebuffer';\n\nimport { getRandomFraction } from '../../../lib/random';\n\nconst StaticArrayBufferProto = new ArrayBuffer().__proto__;\n\nexport function toString(thing) {\n\tif (typeof thing === 'string') {\n\t\treturn thing;\n\t}\n\treturn new ByteBuffer.wrap(thing).toString('binary');\n}\n\nexport function toArrayBuffer(thing) {\n\tif (thing === undefined) {\n\t\treturn undefined;\n\t}\n\tif (thing === Object(thing)) {\n\t\tif (thing.__proto__ === StaticArrayBufferProto) {\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tif (typeof thing !== 'string') {\n\t\tthrow new Error(`Tried to convert a non-string of type ${typeof thing} to an array buffer`);\n\t}\n\treturn new ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\n\nexport function joinVectorAndEcryptedData(vector, encryptedData) {\n\tconst cipherText = new Uint8Array(encryptedData);\n\tconst output = new Uint8Array(vector.length + cipherText.length);\n\toutput.set(vector, 0);\n\toutput.set(cipherText, vector.length);\n\treturn output;\n}\n\nexport function splitVectorAndEcryptedData(cipherText) {\n\tconst vector = cipherText.slice(0, 16);\n\tconst encryptedData = cipherText.slice(16);\n\n\treturn [vector, encryptedData];\n}\n\nexport async function encryptRSA(key, data) {\n\treturn crypto.subtle.encrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function encryptAES(vector, key, data) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function decryptRSA(key, data) {\n\treturn crypto.subtle.decrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function decryptAES(vector, key, data) {\n\treturn crypto.subtle.decrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function generateAESKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CBC', length: 128 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateRSAKey() {\n\treturn crypto.subtle.generateKey(\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\t['encrypt', 'decrypt'],\n\t);\n}\n\nexport async function exportJWKKey(key) {\n\treturn crypto.subtle.exportKey('jwk', key);\n}\n\nexport async function importRSAKey(keyData, keyUsages = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey(\n\t\t'jwk',\n\t\tkeyData,\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\tkeyUsages,\n\t);\n}\n\nexport async function importAESKey(keyData, keyUsages = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey('jwk', keyData, { name: 'AES-CBC' }, true, keyUsages);\n}\n\nexport async function importRawKey(keyData, keyUsages = ['deriveKey']) {\n\treturn crypto.subtle.importKey('raw', keyData, { name: 'PBKDF2' }, false, keyUsages);\n}\n\nexport async function deriveKey(salt, baseKey, keyUsages = ['encrypt', 'decrypt']) {\n\tconst iterations = 1000;\n\tconst hash = 'SHA-256';\n\n\treturn crypto.subtle.deriveKey({ name: 'PBKDF2', salt, iterations, hash }, baseKey, { name: 'AES-CBC', length: 256 }, true, keyUsages);\n}\n\nexport async function readFileAsArrayBuffer(file) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = function (evt) {\n\t\t\tresolve(evt.target.result);\n\t\t};\n\t\treader.onerror = function (evt) {\n\t\t\treject(evt);\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t});\n}\n\nexport async function generateMnemonicPhrase(n, sep = ' ') {\n\tconst { default: wordList } = await import('./wordList');\n\tconst result = new Array(n);\n\tlet len = wordList.length;\n\tconst taken = new Array(len);\n\n\twhile (n--) {\n\t\tconst x = Math.floor(getRandomFraction() * len);\n\t\tresult[n] = wordList[x in taken ? taken[x] : x];\n\t\ttaken[x] = --len in taken ? taken[len] : len;\n\t}\n\treturn result.join(sep);\n}\n\nexport class Deferred {\n\tconstructor() {\n\t\tconst p = new Promise((resolve, reject) => {\n\t\t\tthis.resolve = resolve;\n\t\t\tthis.reject = reject;\n\t\t});\n\n\t\tp.resolve = this.resolve;\n\t\tp.reject = this.reject;\n\n\t\treturn p;\n\t}\n}\n"]},"sourceType":"module","hash":"623f6022c21d225b06980369b90b4807eff70d38"}
