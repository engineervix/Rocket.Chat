{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/RoomActions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/teams/contextualBar/channels/RoomActions.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/RoomActions.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/views/teams/contextualBar/channels/RoomActions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/contextualBar/channels/RoomActions.js"}},"code":"const _excluded = [\"label\"];\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 0);\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 1);\nlet Box, CheckBox, Menu, Option;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  },\n\n  CheckBox(v) {\n    CheckBox = v;\n  },\n\n  Menu(v) {\n    Menu = v;\n  },\n\n  Option(v) {\n    Option = v;\n  }\n\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n\n}, 1);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  }\n\n}, 2);\nlet usePermission;\nmodule.link(\"../../../../contexts/AuthorizationContext\", {\n  usePermission(v) {\n    usePermission = v;\n  }\n\n}, 3);\nlet useSetModal;\nmodule.link(\"../../../../contexts/ModalContext\", {\n  useSetModal(v) {\n    useSetModal = v;\n  }\n\n}, 4);\nlet useToastMessageDispatch;\nmodule.link(\"../../../../contexts/ToastMessagesContext\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  }\n\n}, 5);\nlet useTranslation;\nmodule.link(\"../../../../contexts/TranslationContext\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n\n}, 6);\nlet useEndpointActionExperimental;\nmodule.link(\"../../../../hooks/useEndpointActionExperimental\", {\n  useEndpointActionExperimental(v) {\n    useEndpointActionExperimental = v;\n  }\n\n}, 7);\nlet roomCoordinator;\nmodule.link(\"../../../../lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 8);\nlet ConfirmationModal;\nmodule.link(\"./ConfirmationModal\", {\n  default(v) {\n    ConfirmationModal = v;\n  }\n\n}, 9);\n\nconst useReactModal = (Component, props) => {\n  const setModal = useSetModal();\n  return useMutableCallback(() => {\n    const handleClose = () => {\n      setModal(null);\n    };\n\n    setModal(() => /*#__PURE__*/React.createElement(Component, _extends({\n      onClose: handleClose\n    }, props)));\n  });\n};\n\nconst RoomActions = _ref => {\n  let {\n    room,\n    reload\n  } = _ref;\n  const t = useTranslation();\n  const rid = room._id;\n  const type = room.t;\n  const dispatchToastMessage = useToastMessageDispatch();\n  const canDeleteTeamChannel = usePermission(type === 'c' ? 'delete-c' : 'delete-p', rid);\n  const canEditTeamChannel = usePermission('edit-team-channel', rid);\n  const canRemoveTeamChannel = usePermission('remove-team-channel', rid);\n  const updateRoomEndpoint = useEndpointActionExperimental('POST', 'teams.updateRoom');\n  const removeRoomEndpoint = useEndpointActionExperimental('POST', 'teams.removeRoom', t('Room_has_been_removed'));\n  const deleteRoomEndpoint = useEndpointActionExperimental('POST', room.t === 'c' ? 'channels.delete' : 'groups.delete', t('Room_has_been_deleted'));\n  const RemoveFromTeamAction = useReactModal(ConfirmationModal, {\n    onConfirmAction: async () => {\n      try {\n        await removeRoomEndpoint({\n          teamId: room.teamId,\n          roomId: room._id\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n\n      reload();\n    },\n    labelButton: t('Remove'),\n    content: /*#__PURE__*/React.createElement(Box, {\n      is: \"span\",\n      size: \"14px\"\n    }, t('Team_Remove_from_team_modal_content', {\n      teamName: roomCoordinator.getRoomName(room.t, room)\n    }))\n  });\n  const DeleteChannelAction = useReactModal(ConfirmationModal, {\n    onConfirmAction: async () => {\n      try {\n        await deleteRoomEndpoint({\n          roomId: room._id\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n\n      reload();\n    },\n    labelButton: t('Delete'),\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n      is: \"span\",\n      size: \"14px\",\n      color: \"danger-500\",\n      fontWeight: \"600\"\n    }, t('Team_Delete_Channel_modal_content_danger')), /*#__PURE__*/React.createElement(Box, {\n      is: \"span\",\n      size: \"14px\"\n    }, ' ', t('Team_Delete_Channel_modal_content')))\n  });\n  const menuOptions = useMemo(() => {\n    const AutoJoinAction = async () => {\n      try {\n        await updateRoomEndpoint({\n          roomId: rid,\n          isDefault: !room.teamDefault\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      }\n\n      reload();\n    };\n\n    return [canEditTeamChannel && {\n      label: {\n        label: t('Team_Auto-join'),\n        icon: type === 'c' ? 'hash' : 'hashtag-lock'\n      },\n      action: AutoJoinAction\n    }, canRemoveTeamChannel && {\n      label: {\n        label: t('Team_Remove_from_team'),\n        icon: 'cross'\n      },\n      action: RemoveFromTeamAction\n    }, canDeleteTeamChannel && {\n      label: {\n        label: t('Delete'),\n        icon: 'trash'\n      },\n      action: DeleteChannelAction\n    }].filter(Boolean);\n  }, [DeleteChannelAction, RemoveFromTeamAction, rid, type, room.teamDefault, t, updateRoomEndpoint, reload, dispatchToastMessage, canDeleteTeamChannel, canRemoveTeamChannel, canEditTeamChannel]);\n  return /*#__PURE__*/React.createElement(Menu, {\n    flexShrink: 0,\n    key: \"menu\",\n    tiny: true,\n    renderItem: _ref2 => {\n      let {\n        label: {\n          label,\n          icon\n        }\n      } = _ref2,\n          props = _objectWithoutProperties(_ref2, _excluded);\n\n      return icon.match(/hash/) ? /*#__PURE__*/React.createElement(Option, _extends({}, props, {\n        label: label,\n        icon: icon\n      }), /*#__PURE__*/React.createElement(CheckBox, {\n        checked: room.teamDefault\n      })) : /*#__PURE__*/React.createElement(Box, {\n        color: \"danger-600\"\n      }, /*#__PURE__*/React.createElement(Option, _extends({}, props, {\n        label: label,\n        icon: icon\n      })));\n    },\n    options: (canEditTeamChannel || canRemoveTeamChannel || canDeleteTeamChannel) && menuOptions\n  });\n};\n\nmodule.exportDefault(RoomActions);","map":{"version":3,"sources":["client/views/teams/contextualBar/channels/RoomActions.js"],"names":["_objectWithoutProperties","module","link","default","v","_extends","Box","CheckBox","Menu","Option","useMutableCallback","React","useMemo","usePermission","useSetModal","useToastMessageDispatch","useTranslation","useEndpointActionExperimental","roomCoordinator","ConfirmationModal","useReactModal","Component","props","setModal","handleClose","RoomActions","room","reload","t","rid","_id","type","dispatchToastMessage","canDeleteTeamChannel","canEditTeamChannel","canRemoveTeamChannel","updateRoomEndpoint","removeRoomEndpoint","deleteRoomEndpoint","RemoveFromTeamAction","onConfirmAction","teamId","roomId","error","message","labelButton","content","teamName","getRoomName","DeleteChannelAction","menuOptions","AutoJoinAction","isDefault","teamDefault","label","icon","action","filter","Boolean","match","exportDefault"],"mappings":"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","sourcesContent":["import { Box, CheckBox, Menu, Option } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport React, { useMemo } from 'react';\n\nimport { usePermission } from '../../../../contexts/AuthorizationContext';\nimport { useSetModal } from '../../../../contexts/ModalContext';\nimport { useToastMessageDispatch } from '../../../../contexts/ToastMessagesContext';\nimport { useTranslation } from '../../../../contexts/TranslationContext';\nimport { useEndpointActionExperimental } from '../../../../hooks/useEndpointActionExperimental';\nimport { roomCoordinator } from '../../../../lib/rooms/roomCoordinator';\nimport ConfirmationModal from './ConfirmationModal';\n\nconst useReactModal = (Component, props) => {\n\tconst setModal = useSetModal();\n\n\treturn useMutableCallback(() => {\n\t\tconst handleClose = () => {\n\t\t\tsetModal(null);\n\t\t};\n\n\t\tsetModal(() => <Component onClose={handleClose} {...props} />);\n\t});\n};\n\nconst RoomActions = ({ room, reload }) => {\n\tconst t = useTranslation();\n\tconst rid = room._id;\n\tconst type = room.t;\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst canDeleteTeamChannel = usePermission(type === 'c' ? 'delete-c' : 'delete-p', rid);\n\tconst canEditTeamChannel = usePermission('edit-team-channel', rid);\n\tconst canRemoveTeamChannel = usePermission('remove-team-channel', rid);\n\n\tconst updateRoomEndpoint = useEndpointActionExperimental('POST', 'teams.updateRoom');\n\tconst removeRoomEndpoint = useEndpointActionExperimental('POST', 'teams.removeRoom', t('Room_has_been_removed'));\n\tconst deleteRoomEndpoint = useEndpointActionExperimental(\n\t\t'POST',\n\t\troom.t === 'c' ? 'channels.delete' : 'groups.delete',\n\t\tt('Room_has_been_deleted'),\n\t);\n\n\tconst RemoveFromTeamAction = useReactModal(ConfirmationModal, {\n\t\tonConfirmAction: async () => {\n\t\t\ttry {\n\t\t\t\tawait removeRoomEndpoint({ teamId: room.teamId, roomId: room._id });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treload();\n\t\t},\n\t\tlabelButton: t('Remove'),\n\t\tcontent: (\n\t\t\t<Box is='span' size='14px'>\n\t\t\t\t{t('Team_Remove_from_team_modal_content', {\n\t\t\t\t\tteamName: roomCoordinator.getRoomName(room.t, room),\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t),\n\t});\n\n\tconst DeleteChannelAction = useReactModal(ConfirmationModal, {\n\t\tonConfirmAction: async () => {\n\t\t\ttry {\n\t\t\t\tawait deleteRoomEndpoint({ roomId: room._id });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treload();\n\t\t},\n\t\tlabelButton: t('Delete'),\n\t\tcontent: (\n\t\t\t<>\n\t\t\t\t<Box is='span' size='14px' color='danger-500' fontWeight='600'>\n\t\t\t\t\t{t('Team_Delete_Channel_modal_content_danger')}\n\t\t\t\t</Box>\n\t\t\t\t<Box is='span' size='14px'>\n\t\t\t\t\t{' '}\n\t\t\t\t\t{t('Team_Delete_Channel_modal_content')}\n\t\t\t\t</Box>\n\t\t\t</>\n\t\t),\n\t});\n\n\tconst menuOptions = useMemo(() => {\n\t\tconst AutoJoinAction = async () => {\n\t\t\ttry {\n\t\t\t\tawait updateRoomEndpoint({\n\t\t\t\t\troomId: rid,\n\t\t\t\t\tisDefault: !room.teamDefault,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\n\t\t\treload();\n\t\t};\n\n\t\treturn [\n\t\t\tcanEditTeamChannel && {\n\t\t\t\tlabel: {\n\t\t\t\t\tlabel: t('Team_Auto-join'),\n\t\t\t\t\ticon: type === 'c' ? 'hash' : 'hashtag-lock',\n\t\t\t\t},\n\t\t\t\taction: AutoJoinAction,\n\t\t\t},\n\t\t\tcanRemoveTeamChannel && {\n\t\t\t\tlabel: {\n\t\t\t\t\tlabel: t('Team_Remove_from_team'),\n\t\t\t\t\ticon: 'cross',\n\t\t\t\t},\n\t\t\t\taction: RemoveFromTeamAction,\n\t\t\t},\n\t\t\tcanDeleteTeamChannel && {\n\t\t\t\tlabel: {\n\t\t\t\t\tlabel: t('Delete'),\n\t\t\t\t\ticon: 'trash',\n\t\t\t\t},\n\t\t\t\taction: DeleteChannelAction,\n\t\t\t},\n\t\t].filter(Boolean);\n\t}, [\n\t\tDeleteChannelAction,\n\t\tRemoveFromTeamAction,\n\t\trid,\n\t\ttype,\n\t\troom.teamDefault,\n\t\tt,\n\t\tupdateRoomEndpoint,\n\t\treload,\n\t\tdispatchToastMessage,\n\t\tcanDeleteTeamChannel,\n\t\tcanRemoveTeamChannel,\n\t\tcanEditTeamChannel,\n\t]);\n\n\treturn (\n\t\t<Menu\n\t\t\tflexShrink={0}\n\t\t\tkey='menu'\n\t\t\ttiny\n\t\t\trenderItem={({ label: { label, icon }, ...props }) =>\n\t\t\t\ticon.match(/hash/) ? (\n\t\t\t\t\t<Option {...props} label={label} icon={icon}>\n\t\t\t\t\t\t<CheckBox checked={room.teamDefault} />\n\t\t\t\t\t</Option>\n\t\t\t\t) : (\n\t\t\t\t\t<Box color='danger-600'>\n\t\t\t\t\t\t<Option {...props} label={label} icon={icon} />\n\t\t\t\t\t</Box>\n\t\t\t\t)\n\t\t\t}\n\t\t\toptions={(canEditTeamChannel || canRemoveTeamChannel || canDeleteTeamChannel) && menuOptions}\n\t\t/>\n\t);\n};\n\nexport default RoomActions;\n"]},"sourceType":"module","hash":"3a31d269b09e6725ad942c78e843958e15eeb395"}
