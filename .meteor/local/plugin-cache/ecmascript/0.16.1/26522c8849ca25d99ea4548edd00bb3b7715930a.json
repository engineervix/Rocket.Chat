{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomAutoComplete/RoomAutoComplete.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/RoomAutoComplete/RoomAutoComplete.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomAutoComplete/RoomAutoComplete.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/client/components/RoomAutoComplete/RoomAutoComplete.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/RoomAutoComplete/RoomAutoComplete.js"}},"code":"const _excluded = [\"value\", \"label\"];\n\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 2);\nlet AutoComplete, Option, Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  AutoComplete(v) {\n    AutoComplete = v;\n  },\n\n  Option(v) {\n    Option = v;\n  },\n\n  Box(v) {\n    Box = v;\n  }\n\n}, 0);\nlet React, memo, useMemo, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  memo(v) {\n    memo = v;\n  },\n\n  useMemo(v) {\n    useMemo = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 1);\nlet useEndpointData;\nmodule.link(\"../../hooks/useEndpointData\", {\n  useEndpointData(v) {\n    useEndpointData = v;\n  }\n\n}, 2);\nlet RoomAvatar;\nmodule.link(\"../avatar/RoomAvatar\", {\n  default(v) {\n    RoomAvatar = v;\n  }\n\n}, 3);\nlet Avatar;\nmodule.link(\"./Avatar\", {\n  default(v) {\n    Avatar = v;\n  }\n\n}, 4);\n\nconst query = function () {\n  let term = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    selector: JSON.stringify({\n      name: term\n    })\n  };\n};\n\nconst RoomAutoComplete = props => {\n  const [filter, setFilter] = useState('');\n  const {\n    value: data\n  } = useEndpointData('rooms.autocomplete.channelAndPrivate', useMemo(() => query(filter), [filter]));\n  const options = useMemo(() => data && data.items.map(_ref => {\n    let {\n      name,\n      _id,\n      avatarETag,\n      t\n    } = _ref;\n    return {\n      value: _id,\n      label: {\n        name,\n        avatarETag,\n        type: t\n      }\n    };\n  }) || [], [data]);\n  return /*#__PURE__*/React.createElement(AutoComplete, _extends({}, props, {\n    filter: filter,\n    setFilter: setFilter,\n    renderSelected: _ref2 => {\n      let {\n        value,\n        label\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n        margin: \"none\",\n        mi: \"x2\"\n      }, /*#__PURE__*/React.createElement(RoomAvatar, {\n        size: \"x20\",\n        room: _objectSpread({\n          type: (label === null || label === void 0 ? void 0 : label.type) || 'c',\n          _id: value\n        }, label)\n      }), ' '), /*#__PURE__*/React.createElement(Box, {\n        margin: \"none\",\n        mi: \"x2\"\n      }, label === null || label === void 0 ? void 0 : label.name));\n    },\n    renderItem: _ref3 => {\n      let {\n        value,\n        label\n      } = _ref3,\n          props = _objectWithoutProperties(_ref3, _excluded);\n\n      return /*#__PURE__*/React.createElement(Option, _extends({\n        key: value\n      }, props, {\n        label: label.name,\n        avatar: /*#__PURE__*/React.createElement(Avatar, _extends({\n          value: value\n        }, label))\n      }));\n    },\n    options: options\n  }));\n};\n\nmodule.exportDefault( /*#__PURE__*/memo(RoomAutoComplete));","map":{"version":3,"sources":["client/components/RoomAutoComplete/RoomAutoComplete.js"],"names":["_extends","module","link","default","v","_objectWithoutProperties","_objectSpread","AutoComplete","Option","Box","React","memo","useMemo","useState","useEndpointData","RoomAvatar","Avatar","query","term","selector","JSON","stringify","name","RoomAutoComplete","props","filter","setFilter","value","data","options","items","map","_id","avatarETag","t","label","type","exportDefault"],"mappings":"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","sourcesContent":["import { AutoComplete, Option, Box } from '@rocket.chat/fuselage';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useEndpointData } from '../../hooks/useEndpointData';\nimport RoomAvatar from '../avatar/RoomAvatar';\nimport Avatar from './Avatar';\n\nconst query = (term = '') => ({ selector: JSON.stringify({ name: term }) });\n\nconst RoomAutoComplete = (props) => {\n\tconst [filter, setFilter] = useState('');\n\tconst { value: data } = useEndpointData(\n\t\t'rooms.autocomplete.channelAndPrivate',\n\t\tuseMemo(() => query(filter), [filter]),\n\t);\n\tconst options = useMemo(\n\t\t() =>\n\t\t\t(data &&\n\t\t\t\tdata.items.map(({ name, _id, avatarETag, t }) => ({\n\t\t\t\t\tvalue: _id,\n\t\t\t\t\tlabel: { name, avatarETag, type: t },\n\t\t\t\t}))) ||\n\t\t\t[],\n\t\t[data],\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\t{...props}\n\t\t\tfilter={filter}\n\t\t\tsetFilter={setFilter}\n\t\t\trenderSelected={({ value, label }) => (\n\t\t\t\t<>\n\t\t\t\t\t<Box margin='none' mi='x2'>\n\t\t\t\t\t\t<RoomAvatar size='x20' room={{ type: label?.type || 'c', _id: value, ...label }} />{' '}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box margin='none' mi='x2'>\n\t\t\t\t\t\t{label?.name}\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\trenderItem={({ value, label, ...props }) => (\n\t\t\t\t<Option key={value} {...props} label={label.name} avatar={<Avatar value={value} {...label} />} />\n\t\t\t)}\n\t\t\toptions={options}\n\t\t/>\n\t);\n};\n\nexport default memo(RoomAutoComplete);\n"]},"sourceType":"module","hash":"26522c8849ca25d99ea4548edd00bb3b7715930a"}
