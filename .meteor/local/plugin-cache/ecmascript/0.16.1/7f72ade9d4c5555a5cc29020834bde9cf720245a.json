{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/notifications/client/lib/Notifications.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/notifications/client/lib/Notifications.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/notifications/client/lib/Notifications.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/notifications/client/lib/Notifications.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/notifications/client/lib/Notifications.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 1);\nmodule.link(\"./Presence\");\n\nclass Notifications {\n  constructor() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.logged = Meteor.userId() !== null;\n    this.loginCb = [];\n    Tracker.autorun(() => {\n      if (Meteor.userId() !== null && this.logged === false) {\n        this.loginCb.forEach(cb => cb());\n      }\n\n      this.logged = Meteor.userId() !== null;\n    });\n    this.debug = false;\n    this.streamAll = new Meteor.Streamer('notify-all');\n    this.streamLogged = new Meteor.Streamer('notify-logged');\n    this.streamRoom = new Meteor.Streamer('notify-room');\n    this.streamRoomUsers = new Meteor.Streamer('notify-room-users');\n    this.streamUser = new Meteor.Streamer('notify-user');\n\n    if (this.debug === true) {\n      this.onAll(function () {\n        return console.log('RocketChat.Notifications: onAll', args);\n      });\n      this.onUser(function () {\n        return console.log('RocketChat.Notifications: onAll', args);\n      });\n    }\n  }\n\n  onLogin(cb) {\n    this.loginCb.push(cb);\n\n    if (this.logged) {\n      return cb();\n    }\n  }\n\n  notifyRoom(room, eventName) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    if (this.debug === true) {\n      console.log('RocketChat.Notifications: notifyRoom', [room, eventName, ...args]);\n    }\n\n    args.unshift(\"\".concat(room, \"/\").concat(eventName));\n    return this.streamRoom.emit.apply(this.streamRoom, args);\n  }\n\n  notifyUser(userId, eventName) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      args[_key3 - 2] = arguments[_key3];\n    }\n\n    if (this.debug === true) {\n      console.log('RocketChat.Notifications: notifyUser', [userId, eventName, ...args]);\n    }\n\n    args.unshift(\"\".concat(userId, \"/\").concat(eventName));\n    return this.streamUser.emit.apply(this.streamUser, args);\n  }\n\n  notifyUsersOfRoom(room, eventName) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      args[_key4 - 2] = arguments[_key4];\n    }\n\n    if (this.debug === true) {\n      console.log('RocketChat.Notifications: notifyUsersOfRoom', [room, eventName, ...args]);\n    }\n\n    args.unshift(\"\".concat(room, \"/\").concat(eventName));\n    return this.streamRoomUsers.emit.apply(this.streamRoomUsers, args);\n  }\n\n  onAll(eventName, callback) {\n    return this.streamAll.on(eventName, callback);\n  }\n\n  onLogged(eventName, callback) {\n    return this.onLogin(() => this.streamLogged.on(eventName, callback));\n  }\n\n  onRoom(room, eventName, callback) {\n    if (this.debug === true) {\n      this.streamRoom.on(room, function () {\n        return console.log(\"RocketChat.Notifications: onRoom \".concat(room), [room, eventName, callback]);\n      });\n    }\n\n    return this.streamRoom.on(\"\".concat(room, \"/\").concat(eventName), callback);\n  }\n\n  async onUser(eventName, callback) {\n    let visitorId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    await this.streamUser.on(\"\".concat(Meteor.userId() || visitorId, \"/\").concat(eventName), callback);\n    return () => this.unUser(eventName, callback, visitorId);\n  }\n\n  unAll(callback) {\n    return this.streamAll.removeListener('notify', callback);\n  }\n\n  unLogged(callback) {\n    return this.streamLogged.removeListener('notify', callback);\n  }\n\n  unRoom(room, eventName, callback) {\n    return this.streamRoom.removeListener(\"\".concat(room, \"/\").concat(eventName), callback);\n  }\n\n  unUser(eventName, callback) {\n    let visitorId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return this.streamUser.removeListener(\"\".concat(Meteor.userId() || visitorId, \"/\").concat(eventName), callback);\n  }\n\n}\n\nmodule.exportDefault(new Notifications());","map":{"version":3,"sources":["app/notifications/client/lib/Notifications.js"],"names":["Meteor","module","link","v","Tracker","Notifications","constructor","args","logged","userId","loginCb","autorun","forEach","cb","debug","streamAll","Streamer","streamLogged","streamRoom","streamRoomUsers","streamUser","onAll","console","log","onUser","onLogin","push","notifyRoom","room","eventName","unshift","emit","apply","notifyUser","notifyUsersOfRoom","callback","on","onLogged","onRoom","visitorId","unUser","unAll","removeListener","unLogged","unRoom","exportDefault"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport './Presence';\n\nclass Notifications {\n\tconstructor(...args) {\n\t\tthis.logged = Meteor.userId() !== null;\n\t\tthis.loginCb = [];\n\t\tTracker.autorun(() => {\n\t\t\tif (Meteor.userId() !== null && this.logged === false) {\n\t\t\t\tthis.loginCb.forEach((cb) => cb());\n\t\t\t}\n\t\t\tthis.logged = Meteor.userId() !== null;\n\t\t});\n\t\tthis.debug = false;\n\t\tthis.streamAll = new Meteor.Streamer('notify-all');\n\t\tthis.streamLogged = new Meteor.Streamer('notify-logged');\n\t\tthis.streamRoom = new Meteor.Streamer('notify-room');\n\t\tthis.streamRoomUsers = new Meteor.Streamer('notify-room-users');\n\t\tthis.streamUser = new Meteor.Streamer('notify-user');\n\n\t\tif (this.debug === true) {\n\t\t\tthis.onAll(function () {\n\t\t\t\treturn console.log('RocketChat.Notifications: onAll', args);\n\t\t\t});\n\t\t\tthis.onUser(function () {\n\t\t\t\treturn console.log('RocketChat.Notifications: onAll', args);\n\t\t\t});\n\t\t}\n\t}\n\n\tonLogin(cb) {\n\t\tthis.loginCb.push(cb);\n\t\tif (this.logged) {\n\t\t\treturn cb();\n\t\t}\n\t}\n\n\tnotifyRoom(room, eventName, ...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log('RocketChat.Notifications: notifyRoom', [room, eventName, ...args]);\n\t\t}\n\t\targs.unshift(`${room}/${eventName}`);\n\t\treturn this.streamRoom.emit.apply(this.streamRoom, args);\n\t}\n\n\tnotifyUser(userId, eventName, ...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log('RocketChat.Notifications: notifyUser', [userId, eventName, ...args]);\n\t\t}\n\t\targs.unshift(`${userId}/${eventName}`);\n\t\treturn this.streamUser.emit.apply(this.streamUser, args);\n\t}\n\n\tnotifyUsersOfRoom(room, eventName, ...args) {\n\t\tif (this.debug === true) {\n\t\t\tconsole.log('RocketChat.Notifications: notifyUsersOfRoom', [room, eventName, ...args]);\n\t\t}\n\t\targs.unshift(`${room}/${eventName}`);\n\t\treturn this.streamRoomUsers.emit.apply(this.streamRoomUsers, args);\n\t}\n\n\tonAll(eventName, callback) {\n\t\treturn this.streamAll.on(eventName, callback);\n\t}\n\n\tonLogged(eventName, callback) {\n\t\treturn this.onLogin(() => this.streamLogged.on(eventName, callback));\n\t}\n\n\tonRoom(room, eventName, callback) {\n\t\tif (this.debug === true) {\n\t\t\tthis.streamRoom.on(room, function () {\n\t\t\t\treturn console.log(`RocketChat.Notifications: onRoom ${room}`, [room, eventName, callback]);\n\t\t\t});\n\t\t}\n\t\treturn this.streamRoom.on(`${room}/${eventName}`, callback);\n\t}\n\n\tasync onUser(eventName, callback, visitorId = null) {\n\t\tawait this.streamUser.on(`${Meteor.userId() || visitorId}/${eventName}`, callback);\n\t\treturn () => this.unUser(eventName, callback, visitorId);\n\t}\n\n\tunAll(callback) {\n\t\treturn this.streamAll.removeListener('notify', callback);\n\t}\n\n\tunLogged(callback) {\n\t\treturn this.streamLogged.removeListener('notify', callback);\n\t}\n\n\tunRoom(room, eventName, callback) {\n\t\treturn this.streamRoom.removeListener(`${room}/${eventName}`, callback);\n\t}\n\n\tunUser(eventName, callback, visitorId = null) {\n\t\treturn this.streamUser.removeListener(`${Meteor.userId() || visitorId}/${eventName}`, callback);\n\t}\n}\n\nexport default new Notifications();\n"]},"sourceType":"module","hash":"7f72ade9d4c5555a5cc29020834bde9cf720245a"}
