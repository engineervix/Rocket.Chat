{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/2fa/client/TOTPLDAP.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/2fa/client/TOTPLDAP.js","filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/2fa/client/TOTPLDAP.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","root":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/carlosrodrigues/Desktop/work/rocketchat/Rocket.Chat/app/2fa/client/TOTPLDAP.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/2fa/client/TOTPLDAP.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nmodule.link(\"../../../client/startup/ldap\");\nlet reportError;\nmodule.link(\"../../../client/lib/2fa/utils\", {\n  reportError(v) {\n    reportError = v;\n  }\n\n}, 2);\nlet overrideLoginMethod;\nmodule.link(\"../../../client/lib/2fa/overrideLoginMethod\", {\n  overrideLoginMethod(v) {\n    overrideLoginMethod = v;\n  }\n\n}, 3);\n\nMeteor.loginWithLDAPAndTOTP = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Pull username and password\n  const username = args.shift();\n  const ldapPass = args.shift(); // Check if last argument is a function. if it is, pop it off and set callback to it\n\n  const callback = typeof args[args.length - 1] === 'function' ? args.pop() : null; // The last argument before the callback is the totp code\n\n  const code = args.pop(); // if args still holds options item, grab it\n\n  const ldapOptions = args.length > 0 ? args.shift() : {}; // Set up loginRequest object\n\n  const loginRequest = {\n    ldap: true,\n    username,\n    ldapPass,\n    ldapOptions\n  };\n  Accounts.callLoginMethod({\n    methodArguments: [{\n      totp: {\n        login: loginRequest,\n        code\n      }\n    }],\n\n    userCallback(error) {\n      if (error) {\n        reportError(error, callback);\n      } else {\n        callback && callback();\n      }\n    }\n\n  });\n};\n\nconst {\n  loginWithLDAP\n} = Meteor;\n\nMeteor.loginWithLDAP = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  const callback = typeof args[args.length - 1] === 'function' ? args.pop() : null;\n  overrideLoginMethod(loginWithLDAP, args, callback, Meteor.loginWithLDAPAndTOTP, args[0]);\n};","map":{"version":3,"sources":["app/2fa/client/TOTPLDAP.js"],"names":["Meteor","module","link","v","Accounts","reportError","overrideLoginMethod","loginWithLDAPAndTOTP","args","username","shift","ldapPass","callback","length","pop","code","ldapOptions","loginRequest","ldap","callLoginMethod","methodArguments","totp","login","userCallback","error","loginWithLDAP"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,QAAJ;AAAaH,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACE,EAAAA,QAAQ,CAACD,CAAD,EAAG;AAACC,IAAAA,QAAQ,GAACD,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;AAAgEF,MAAM,CAACC,IAAP,CAAY,8BAAZ;AAA4C,IAAIG,WAAJ;AAAgBJ,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACG,EAAAA,WAAW,CAACF,CAAD,EAAG;AAACE,IAAAA,WAAW,GAACF,CAAZ;AAAc;;AAA9B,CAA5C,EAA4E,CAA5E;AAA+E,IAAIG,mBAAJ;AAAwBL,MAAM,CAACC,IAAP,CAAY,6CAAZ,EAA0D;AAACI,EAAAA,mBAAmB,CAACH,CAAD,EAAG;AAACG,IAAAA,mBAAmB,GAACH,CAApB;AAAsB;;AAA9C,CAA1D,EAA0G,CAA1G;;AAOhTH,MAAM,CAACO,oBAAP,GAA8B,YAAmB;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAChD;AACA,QAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,EAAjB;AACA,QAAMC,QAAQ,GAAGH,IAAI,CAACE,KAAL,EAAjB,CAHgD,CAKhD;;AACA,QAAME,QAAQ,GAAG,OAAOJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAX,KAAiC,UAAjC,GAA8CL,IAAI,CAACM,GAAL,EAA9C,GAA2D,IAA5E,CANgD,CAOhD;;AACA,QAAMC,IAAI,GAAGP,IAAI,CAACM,GAAL,EAAb,CARgD,CAUhD;;AACA,QAAME,WAAW,GAAGR,IAAI,CAACK,MAAL,GAAc,CAAd,GAAkBL,IAAI,CAACE,KAAL,EAAlB,GAAiC,EAArD,CAXgD,CAahD;;AACA,QAAMO,YAAY,GAAG;AACpBC,IAAAA,IAAI,EAAE,IADc;AAEpBT,IAAAA,QAFoB;AAGpBE,IAAAA,QAHoB;AAIpBK,IAAAA;AAJoB,GAArB;AAOAZ,EAAAA,QAAQ,CAACe,eAAT,CAAyB;AACxBC,IAAAA,eAAe,EAAE,CAChB;AACCC,MAAAA,IAAI,EAAE;AACLC,QAAAA,KAAK,EAAEL,YADF;AAELF,QAAAA;AAFK;AADP,KADgB,CADO;;AASxBQ,IAAAA,YAAY,CAACC,KAAD,EAAQ;AACnB,UAAIA,KAAJ,EAAW;AACVnB,QAAAA,WAAW,CAACmB,KAAD,EAAQZ,QAAR,CAAX;AACA,OAFD,MAEO;AACNA,QAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACA;AACD;;AAfuB,GAAzB;AAiBA,CAtCD;;AAwCA,MAAM;AAAEa,EAAAA;AAAF,IAAoBzB,MAA1B;;AAEAA,MAAM,CAACyB,aAAP,GAAuB,YAAmB;AAAA,qCAANjB,IAAM;AAANA,IAAAA,IAAM;AAAA;;AACzC,QAAMI,QAAQ,GAAG,OAAOJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAX,KAAiC,UAAjC,GAA8CL,IAAI,CAACM,GAAL,EAA9C,GAA2D,IAA5E;AAEAR,EAAAA,mBAAmB,CAACmB,aAAD,EAAgBjB,IAAhB,EAAsBI,QAAtB,EAAgCZ,MAAM,CAACO,oBAAvC,EAA6DC,IAAI,CAAC,CAAD,CAAjE,CAAnB;AACA,CAJD","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport '../../../client/startup/ldap';\nimport { reportError } from '../../../client/lib/2fa/utils';\nimport { overrideLoginMethod } from '../../../client/lib/2fa/overrideLoginMethod';\n\nMeteor.loginWithLDAPAndTOTP = function (...args) {\n\t// Pull username and password\n\tconst username = args.shift();\n\tconst ldapPass = args.shift();\n\n\t// Check if last argument is a function. if it is, pop it off and set callback to it\n\tconst callback = typeof args[args.length - 1] === 'function' ? args.pop() : null;\n\t// The last argument before the callback is the totp code\n\tconst code = args.pop();\n\n\t// if args still holds options item, grab it\n\tconst ldapOptions = args.length > 0 ? args.shift() : {};\n\n\t// Set up loginRequest object\n\tconst loginRequest = {\n\t\tldap: true,\n\t\tusername,\n\t\tldapPass,\n\t\tldapOptions,\n\t};\n\n\tAccounts.callLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: loginRequest,\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuserCallback(error) {\n\t\t\tif (error) {\n\t\t\t\treportError(error, callback);\n\t\t\t} else {\n\t\t\t\tcallback && callback();\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst { loginWithLDAP } = Meteor;\n\nMeteor.loginWithLDAP = function (...args) {\n\tconst callback = typeof args[args.length - 1] === 'function' ? args.pop() : null;\n\n\toverrideLoginMethod(loginWithLDAP, args, callback, Meteor.loginWithLDAPAndTOTP, args[0]);\n};\n"]},"sourceType":"module","hash":"649148cd534739cd9b00697de4a631312ebf90da"}
